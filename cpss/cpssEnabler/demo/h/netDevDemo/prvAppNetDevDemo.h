/*******************************************************************************
*              (c), Copyright 2019, Marvell International Ltd.                 *
* THIS CODE IS A REFERENCE CODE FOR MARVELL SWITCH PRODUCTS.  IT IS PROVIDED   *
* "AS IS" WITH NO WARRANTIES, EXPRESSED, IMPLIED OR OTHERWISE, REGARDING ITS   *
* ACCURACY, COMPLETENESS OR PERFORMANCE.                                       *
* CUSTOMERS ARE FREE TO MODIFY IT AND USE IT ONLY IN THEIR PRODUCTION          *
* SOFTWARE RELEASES WITH MARVELL SWITCH CHIPSETS.                              *
*******************************************************************************/
/**
********************************************************************************
* @file prvAppNetDevDemo.h
*
* @brief App demo ... header file.
*
* @version   1
********************************************************************************
*/
#ifndef __prvAppNetDevDemoh
#define __prvAppNetDevDemoh

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <cpss/common/cpssTypes.h>
#include <cpss/common/cpssHwInit/cpssHwInit.h>

/**
* @internal appDemoNetDevDemo function
* @endinternal
*
* @brief    Configure the switch to trap packet to CPU.
*           CPSS Netdev Linux driver will process trapped packets from the queue and
*           forward them to Linux kernel network stack.
*           Generate file with list of MAC address per port in format "XX:XX:XX:XX:XX:XX".
*           MAC is generated by macPrefix[3] + random[2] + portNum[1].
*           Configurations - per portNum:
*            1. Create vlan id = portnum
*            2. Add port to vlan with egress untagged
*            3. Port pvid = vlan id
*            4. Enable ip control to trap (ipcntl, arp bc ... ) :
*            5. Add FDB entry -
*               Rule:   port MAC DA + vlan id
*               Action: da route trap to cpu + egress queue number
*
* @note   APPLICABLE DEVICES:      Falcon
*
* @param[in] fileNameStr           - Pathname for MAC list generated file
* @param[in] macPrefix             - MAC bytes 1-3 in format "XX:XX:XX".
* @param[in] cpuQueueNum           - RX queue number to use (APPLICABLE RANGES : 0..7)
*
* @retval GT_OK                    - on success
* @retval GT_BAD_PARAM             - on wrong parameters
* @retval GT_NOT_APPLICABLE_DEVICE - on not applicable device
* @retval GT_HW_ERROR              - on hardware error
* @retval GT_FAIL                  - otherwise
*/
GT_STATUS appDemoNetDevDemo
(
    GT_U8  fileNameStr[50],
    GT_U8  macPrefix[10],
    GT_U8  cpuQueueNum
);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* __prvAppNetDevDemoh */

