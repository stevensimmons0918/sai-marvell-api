spawn gdb /local/store/cpss_regression/tmp/px/appDemo
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.3) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /local/store/cpss_regression/tmp/px/appDemo...done.
(gdb) set width 512
(gdb) set height 0
(gdb) info types
All defined types:

File /local/store/cpss_regression/tmp/px/version_info.c:
typedef char;

File /usr/include/libio.h:
struct _IO_FILE;
typedef void _IO_lock_t;
struct _IO_marker;

File /usr/include/linux/hdlc/ioctl.h:
typedef struct {
    unsigned int interval;
    unsigned int timeout;
} cisco_proto;
typedef struct {
    unsigned int t391;
    unsigned int t392;
    unsigned int n391;
    unsigned int n392;
    unsigned int n393;
    unsigned short lmi;
    unsigned short dce;
} fr_proto;
typedef struct {
    unsigned int dlci;
} fr_proto_pvc;
typedef struct {
    unsigned int dlci;
    char master[16];
} fr_proto_pvc_info;
typedef struct {
    unsigned short encoding;
    unsigned short parity;
} raw_hdlc_proto;
typedef struct {
    unsigned int clock_rate;
    unsigned int clock_type;
    unsigned short loopback;
} sync_serial_settings;
typedef struct {
    unsigned int clock_rate;
    unsigned int clock_type;
    unsigned short loopback;
    unsigned int slot_map;
} te1_settings;

File /usr/include/linux/if.h:
struct if_settings;
struct ifmap;
struct ifreq;

File /usr/include/locale.h:
struct lconv;

File /usr/include/netdb.h:
struct addrinfo;

File /usr/include/netinet/in.h:
struct in_addr;
typedef unsigned int in_addr_t;
typedef unsigned short in_port_t;
struct sockaddr_in;

File /usr/include/pthread.h:
typedef struct {
    struct {...} __cancel_jmp_buf[1];
    void *__pad[4];
} __pthread_unwind_buf_t;

File /usr/include/setjmp.h:
struct __jmp_buf_tag;
typedef struct __jmp_buf_tag [1] jmp_buf;

File /usr/include/signal.h:
typedef void (*)(int) __sighandler_t;

File /usr/include/stdint.h:
typedef short int16_t;
typedef int int32_t;
typedef signed char int8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long uint64_t;
typedef unsigned char uint8_t;
typedef unsigned long uintptr_t;

File /usr/include/stdio.h:
typedef struct _IO_FILE FILE;
typedef long off_t;
typedef struct __va_list_tag [1] va_list;

File /usr/include/time.h:
typedef long clock_t;
typedef long time_t;
struct timespec;
struct tm;

File /usr/include/unistd.h:
typedef unsigned int socklen_t;

File /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:
struct __pthread_internal_list;
typedef struct __pthread_internal_list __pthread_list_t;
struct __pthread_mutex_s;
union pthread_attr_t;
typedef union {
    struct {...} __data;
    char __size[48];
    long long __align;
} pthread_cond_t;
typedef union {
    char __size[4];
    int __align;
} pthread_condattr_t;
typedef union {
    struct __pthread_mutex_s __data;
    char __size[40];
    long __align;
} pthread_mutex_t;
typedef union {
    char __size[4];
    int __align;
} pthread_mutexattr_t;
typedef unsigned long pthread_t;

File /usr/include/x86_64-linux-gnu/bits/semaphore.h:
typedef union {
    char __size[32];
    long __align;
} sem_t;

File /usr/include/x86_64-linux-gnu/bits/setjmp.h:
typedef long [8] __jmp_buf;

File /usr/include/x86_64-linux-gnu/bits/sigaction.h:
struct sigaction;

File /usr/include/x86_64-linux-gnu/bits/siginfo.h:
typedef long __sigchld_clock_t;
typedef struct {
    int si_signo;
    int si_errno;
    int si_code;
    union {...} _sifields;
} siginfo_t;
union sigval;
typedef union sigval sigval_t;

File /usr/include/x86_64-linux-gnu/bits/sigset.h:
typedef struct {
    unsigned long __val[16];
} __sigset_t;

File /usr/include/x86_64-linux-gnu/bits/sockaddr.h:
typedef unsigned short sa_family_t;

File /usr/include/x86_64-linux-gnu/bits/socket.h:
struct linger;
struct sockaddr;
typedef unsigned int socklen_t;

File /usr/include/x86_64-linux-gnu/bits/socket_type.h:
enum __socket_type;

File /usr/include/x86_64-linux-gnu/bits/stat.h:
struct stat;

File /usr/include/x86_64-linux-gnu/bits/termios.h:
typedef unsigned char cc_t;
typedef unsigned int speed_t;
typedef unsigned int tcflag_t;
struct termios;

File /usr/include/x86_64-linux-gnu/bits/time.h:
struct timeval;

File /usr/include/x86_64-linux-gnu/bits/types.h:
typedef long __blkcnt_t;
typedef long __blksize_t;
typedef long __clock_t;
typedef unsigned long __dev_t;
typedef unsigned int __gid_t;
typedef unsigned long __ino_t;
typedef int __key_t;
typedef unsigned int __mode_t;
typedef unsigned long __nlink_t;
typedef long __off64_t;
typedef long __off_t;
typedef int __pid_t;
typedef unsigned int __socklen_t;
typedef long __ssize_t;
typedef long __suseconds_t;
typedef long __syscall_slong_t;
typedef long __time_t;
typedef unsigned int __uid_t;

File /usr/include/x86_64-linux-gnu/sys/mman.h:
typedef long off_t;

File /usr/include/x86_64-linux-gnu/sys/select.h:
typedef long __fd_mask;
typedef struct {
    __fd_mask fds_bits[16];
} fd_set;

File /usr/include/x86_64-linux-gnu/sys/times.h:
struct tms;

File /usr/include/x86_64-linux-gnu/sys/types.h:
typedef short int16_t;
typedef int int32_t;
typedef signed char int8_t;
typedef int key_t;
typedef long off_t;
typedef int pid_t;
typedef long ssize_t;

File /usr/include/x86_64-linux-gnu/sys/un.h:
struct sockaddr_un;

File /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h:
typedef struct __va_list_tag [1] __gnuc_va_list;
typedef struct __va_list_tag [1] va_list;

File /usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h:
typedef long ptrdiff_t;
typedef unsigned long size_t;

File <built-in>:
struct __va_list_tag;

File common/h/../src/cpss/common/labServices/port/gop/src/port/serdes/comPhy/mcesdApiTypes.h:
typedef MCESD_STATUS (*)(MCESD_DEV_PTR, MCESD_U16, MCESD_U16 *) FMCESD_GET_PIN_CFG;
typedef MCESD_STATUS (*)(MCESD_DEV_PTR, MCESD_U32, MCESD_U32 *) FMCESD_READ_REG;
typedef MCESD_STATUS (*)(MCESD_DEV_PTR, MCESD_U16, MCESD_U16) FMCESD_SET_PIN_CFG;
typedef MCESD_STATUS (*)(MCESD_DEV_PTR, MCESD_U32) FMCESD_WAIT_FUNC;
typedef MCESD_STATUS (*)(MCESD_DEV_PTR, MCESD_U32, MCESD_U32) FMCESD_WRITE_REG;
typedef enum {MCESD_FALSE, MCESD_TRUE} MCESD_BOOL;
typedef struct _MCESD_DEV MCESD_DEV;
typedef MCESD_DEV * MCESD_DEV_PTR;
typedef void * MCESD_PVOID;
typedef unsigned int MCESD_STATUS;
typedef unsigned short MCESD_U16;
typedef unsigned int MCESD_U32;
typedef unsigned char MCESD_U8;
struct _MCESD_DEV;

File common/h/cpss/common/config/cpssGenCfg.h:
typedef struct {
    CPSS_PP_DEVICE_TYPE devType;
    GT_U8 revision;
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
    CPSS_PP_SUB_FAMILY_TYPE_ENT devSubFamily;
    GT_U32 maxPortNum;
    GT_U32 numOfVirtPorts;
    CPSS_PORTS_BMP_STC existingPorts;
    CPSS_GEN_CFG_HW_DEV_NUM_MODE_ENT hwDevNumMode;
    CPSS_NET_CPU_PORT_MODE_ENT cpuPortMode;
    GT_U32 numOfLedInfPerPortGroup;
    GT_U32 supportedSipBmp[1];
} CPSS_GEN_CFG_DEV_INFO_STC;
typedef enum {CPSS_GEN_CFG_HW_DEV_NUM_MODE_SINGLE_E, CPSS_GEN_CFG_HW_DEV_NUM_MODE_DUAL_E} CPSS_GEN_CFG_HW_DEV_NUM_MODE_ENT;
typedef enum {CPSS_GEN_SIP_LEGACY_E, CPSS_GEN_SIP_5_E, CPSS_GEN_SIP_5_10_E, CPSS_GEN_SIP_5_15_E, CPSS_GEN_SIP_5_16_E, CPSS_GEN_SIP_5_20_E, CPSS_GEN_SIP_5_25_E, CPSS_GEN_SIP_6_E, CPSS_GEN_SIP_6_10_E, CPSS_GEN_SIP_6_15_E, CPSS_GEN_SIP_6_20_E, CPSS_GEN_SIP_6_30_E, CPSS_GEN_SIP_MAX_NUM_E} CPSS_GEN_SIP_ENT;

File common/h/cpss/common/config/private/prvCpssCommonRegs.h:
typedef struct {
    struct {...} DFXServerUnitsDeviceSpecificRegs;
    struct {...} DFXServerUnits;
    GT_U32 dfxClientBookmark;
    GT_U32 dfxClientBookmarkType;
    GT_U32 dfxClientBookmarkSize;
    struct {...} DFXClientUnits;
    GT_U32 dfxRamBookmark;
    GT_U32 dfxRamBookmarkType;
    GT_U32 dfxRamBookmarkSize;
    struct {...} DFXRam;
    struct {...} DFX_XSB;
    struct {...} sip6_tile_DFXServerUnits[4];
    struct {...} sip6_chiplet_DFXServerUnits[16];
    GT_U32 sip6_dfxRamBookmark;
    GT_U32 sip6_dfxRamBookmarkType;
    GT_U32 sip6_dfxRamBookmarkSize;
    struct {...} sip6_tile_DFXClientUnits[4];
    struct {...} sip6_chiplet_DFXClientUnits[16];
    struct {...} sip6_tile_DFXRam[4];
    struct {...} sip6_chiplet_DFXRam[16];
} PRV_CPSS_RESET_AND_INIT_CTRL_REGS_ADDR_STC;

File common/h/cpss/common/config/private/prvCpssConfigTypes.h:
typedef enum {CPSS_UNDEFINED_DEVICE_E, CPSS_CH1_E, CPSS_CH1_DIAMOND_E, CPSS_CH2_E = 4, CPSS_CH3_E = 8, CPSS_XCAT_E = 16, CPSS_LION_E = 32, CPSS_XCAT2_E = 64, CPSS_LION2_E = 128, CPSS_PUMA_E = 256, CPSS_PUMA3_E = 512, CPSS_BOBCAT2_E = 2048, CPSS_XCAT3_E = 4096, CPSS_BOBCAT3_E = 8192, CPSS_CAELUM_E = 16384, CPSS_ALDRIN_E = 32768, CPSS_AC3X_E = 65536, CPSS_ALDRIN2_E = 131072, CPSS_FALCON_E = 262144, CPSS_PIPE_E = 1048576, CPSS_AC5P_E = 2097152, CPSS_AC5X_E = 4194304, CPSS_AC5_E = 8388608, 
    CPSS_HARRIER_E = 16777216, CPSS_IRONMAN_E = 33554432, CPSS_PP_FAMILY_BIT_LAST_E} CPSS_PP_FAMILY_BIT_ENT;
typedef struct {
    PRV_CPSS_PP_HA_CONFIG_INFO_STC *cpssPpHaDevData[128];
    GT_BOOL prvCpssAfterDbRelease;
    RE_INITIALZATION_DEV_INFO_STC reInitializationDbPtr[128];
    GT_U32 prvMiiDevNum;
    GT_BOOL cpssPpInitCalled;
    GT_BOOL supportDualDeviceId;
} PRV_CPSS_GEN_GLOBAL_DATA_STC;
typedef struct {
    GT_SW_DEV_NUM devNum;
    GT_U32 functionsSupportedBmp;
    CPSS_PP_DEVICE_TYPE devType;
    GT_U8 revision;
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
    CPSS_PP_SUB_FAMILY_TYPE_ENT devSubFamily;
    CPSS_PP_FAMILY_BIT_ENT appDevFamily;
    GT_U32 numOfPorts;
    GT_U32 numOfVirtPorts;
    CPSS_PORTS_BMP_STC existingPorts;
    GT_U32 baseCoreClock;
    GT_U32 coreClock;
    GT_U32 hwIfSupportedBmp;
    GT_HW_DEV_NUM hwDevNum;
    PRV_CPSS_INTERRUPT_CTRL_STC intCtrl;
    GT_BOOL configInitAfterHwResetDone;
    CPSS_SYS_HA_MODE_ENT ppHAState;
    CPSS_HW_DRIVER_STC *smiMasters[8][4];
    CPSS_HW_DRIVER_STC *xsmiMasters[8][16];
    CPSS_HW_DRIVER_STC *i2cMasters[4];
    PRV_CPSS_SMI_BUS_TYPE_ENT smiMuxState[4];
    PRV_CPSS_PORT_INFO_ARRAY_STC *phyPortInfoArray;
    PRV_CPSS_PHY_INFO_STC phyInfo;
    GT_BOOL useIsr;
    PRV_CPSS_GEN_PP_PORT_GROUPS_INFO_STC portGroupsInfo;
    CPSS_NET_CPU_PORT_MODE_ENT cpuPortMode;
    GT_U32 netifSdmaPortGroupId;
    GT_U32 maxIterationsOfBusyWait;
    GT_U32 maxIterationsOfSmiWait;
    GT_BOOL hitlessWriteMethodEnable;
    PRV_CPSS_GEN_TM_DB_STC tmInfo;
    GT_BOOL noTraffic2CPU;
    GT_U32 supportedSipArr[1];
    PRV_CPSS_GEN_PP_MULTI_PIPES_INFO_STC multiPipe;
    CPSS_PORTS_BMP_STC *portEgfForceStatusBitmapPtr;
    PRV_CPSS_RESET_AND_INIT_CTRL_REGS_ADDR_STC resetAndInitControllerRegsAddr;
    PRV_CPSS_DIAG_STC diagInfo;
    PRV_CPSS_PP_HW_INFO_STC hwInfo;
    GT_U32 isGmDevice;
    GT_U32 isWmDevice;
    GT_BOOL lockLowLevelApi;
    GT_BOOL preemptionSupported;
} PRV_CPSS_GEN_PP_CONFIG_STC;
typedef struct {
    GT_U32 numOfPipes;
    GT_U32 numOfPortsPerPipe;
    GT_U32 numOfTiles;
    GT_U32 numOfPipesPerTile;
    GT_U32 tileOffset;
    GT_U32 mirroredTilesBmp;
} PRV_CPSS_GEN_PP_MULTI_PIPES_INFO_STC;
typedef struct {
    GT_BOOL isMultiPortGroupDevice;
    GT_U32 numOfPortGroups;
    GT_U32 activePortGroupsBmp;
    GT_U32 firstActivePortGroup;
    GT_U32 lastActivePortGroup;
    GT_U32 cpuPortPortGroupId;
    GT_U32 loopbackPortGroupId;
    GT_U32 auqPortGroupIdLastServed;
    GT_U32 fuqPortGroupIdLastServed;
    GT_U32 secureBreachNextPortGroupToServe;
    GT_U32 ptpNextPortGroupToServe;
    GT_U32 ptpIngressEgressNextPortGroupToServe[2][2];
    struct {...} sharedTablesIllegalAccess;
    GT_U32 phaViolationCapturedNextPortGroupToServe;
    PRV_CPSS_DXCH_UNIT_ENT cncUploadNextCncUnitInPortGroupToServe[8];
} PRV_CPSS_GEN_PP_PORT_GROUPS_INFO_STC;
typedef struct {
    GT_BOOL tmDevIsInitilized;
    GT_BOOL tmLibIsInitilized;
    GT_VOID_PTR tmHandle;
    PRV_CPSS_TM_DEVS_ENT prvCpssTmDevId;
    GT_U8 BapMapping[1];
    GT_BOOL pfcTmGluePfcIsInitialized;
    void *pfcTmGluePfcDevInfoPtr;
} PRV_CPSS_GEN_TM_DB_STC;
typedef struct {
    CPSS_PP_DEVICE_TYPE deviceId;
    GT_U8 revision;
} PRV_CPSS_PP_HA_CONFIG_INFO_STC;
typedef struct {
    struct {...} dfxServer;
    struct {...} mgCam;
} PRV_CPSS_PP_HW_INFO_STC;
typedef unsigned int PRV_CPSS_TM_DEVS_ENT;
typedef struct {
    GT_UINTPTR busBaseAddr;
    GT_BOOL deviceDidHwReset;
    GT_BOOL deviceNeedNetIfInit;
    GT_BOOL dmaInfoValid;
    PRV_CPSS_DMA_RE_INIT_INFO_STC dmaInfo;
} RE_INITIALZATION_DEV_INFO_STC;

File common/h/cpss/common/config/private/prvCpssGenIntDefs.h:
typedef enum {PRV_CPSS_AUQ_STATE_ALL_FULL_E, PRV_CPSS_AUQ_STATE_ONE_EMPTY_E, PRV_CPSS_AUQ_STATE_ALL_EMPTY_E} PRV_CPSS_AUQ_STATE_ENT;
typedef struct {
    GT_BOOL needToCheckSecondaryAuQueue;
    GT_BOOL auqRewind;
    GT_BOOL activated;
    GT_BOOL needWaWaitForReTriggering;
    GT_BOOL notReady;
    GT_U32 activeSecondaryAuqIndex;
    PRV_CPSS_AUQ_STATE_ENT secondaryState;
    PRV_CPSS_AUQ_STATE_ENT primaryState;
} PRV_CPSS_AU_DESC_CTRL_FOR_DEAD_LOCK_STC;
typedef struct {
    GT_UINTPTR blockAddr;
    GT_U32 blockSize;
    GT_U32 currDescIdx;
    GT_U32 unreadCncCounters;
    GT_U32 mgUnitId;
} PRV_CPSS_AU_DESC_CTRL_STC;
typedef struct {
    GT_U32 word0;
    GT_U32 word1;
    GT_U32 word2;
    GT_U32 word3;
} PRV_CPSS_AU_DESC_STC;
typedef struct {
    PRV_CPSS_RX_DESC_LIST_STC rxDescList[128];
    PRV_CPSS_TX_DESC_LIST_STC txDescList[128];
    PRV_CPSS_AU_DESC_CTRL_STC auDescCtrl[8];
    PRV_CPSS_AU_DESC_CTRL_STC fuDescCtrl[8];
    PRV_CPSS_AU_DESC_CTRL_STC cnc23_fuDescCtrl[8];
    PRV_CPSS_AU_DESC_CTRL_STC secondaryAuDescCtrl[8];
    PRV_CPSS_AU_DESC_CTRL_FOR_DEAD_LOCK_STC auqDeadLockWa[8];
    GT_U32 activeAuqIndex[8];
    PRV_CPSS_AU_DESC_CTRL_STC au1DescCtrl[8];
    PRV_CPSS_AU_DESC_CTRL_STC secondaryAu1DescCtrl[8];
    struct {...} txGeneratorPacketIdDb;
    GT_BOOL use_sharedCncDescCtrl;
    PRV_CPSS_SHARED_CNC_IN_PORT_GROUPS_CTRL_STC sharedCncDescCtrl[8];
} PRV_CPSS_INTERRUPT_CTRL_STC;
typedef struct {
    void *swRxDescBlock;
    PRV_CPSS_SW_RX_DESC_STC *next2Return;
    PRV_CPSS_SW_RX_DESC_STC *next2Receive;
    GT_U32 freeDescNum;
    GT_U32 maxDescNum;
    GT_U32 headerOffset;
    GT_BOOL forbidQEn;
} PRV_CPSS_RX_DESC_LIST_STC;
typedef struct {
    volatile GT_U32 word1;
    volatile GT_U32 word2;
    volatile GT_U32 buffPointer;
    volatile GT_U32 nextDescPointer;
} PRV_CPSS_RX_DESC_STC;
typedef struct {
    GT_U32 mgPortGroupId;
    GT_U32 currCncDescIdxInTrigger;
    GT_U32 *isMyCncUploadTriggeredBmpArr;
    GT_U32 numBitsInBmp;
    GT_PORT_GROUPS_BMP otherSharedPortGroupsOnMyMgUnit;
    GT_U32 savedCncDescEntriesBeforeRewind;
    struct {...} perMgUnit;
} PRV_CPSS_SHARED_CNC_IN_PORT_GROUPS_CTRL_STC;
typedef struct PRV_CPSS_SW_RX_DESC_STCT PRV_CPSS_SW_RX_DESC_STC;
struct PRV_CPSS_SW_RX_DESC_STCT;
typedef struct PRV_CPSS_SW_TX_DESC_STCT PRV_CPSS_SW_TX_DESC_STC;
struct PRV_CPSS_SW_TX_DESC_STCT;
typedef struct {
    void *swTxDescBlock;
    CPSS_BM_POOL_ID poolId;
    PRV_CPSS_SW_TX_DESC_STC *next2Free;
    PRV_CPSS_SW_TX_DESC_STC *next2Feed;
    GT_U32 freeDescNum;
    GT_U32 maxDescNum;
    GT_BOOL freeCpssBuff;
    GT_U32 actualBuffSize;
    PRV_CPSS_TX_DESC_STC *firstDescPtr;
    PRV_CPSS_TX_DESC_STC *freeDescPtr;
    PRV_CPSS_TX_DESC_STC *scratchPadPtr;
    GT_U32 *revPacketIdDb;
    GT_BOOL userQueueEnabled;
    GT_U32 shortBuffers_number;
    GT_U8 *shortBuffers_arr;
} PRV_CPSS_TX_DESC_LIST_STC;
typedef struct {
    volatile GT_U32 word1;
    volatile GT_U32 word2;
    volatile GT_U32 buffPointer;
    volatile GT_U32 nextDescPointer;
} PRV_CPSS_TX_DESC_STC;

File common/h/cpss/common/cos/cpssCosTypes.h:
typedef enum {CPSS_DP_GREEN_E, CPSS_DP_YELLOW_E, CPSS_DP_RED_E, CPSS_DP_LAST_E} CPSS_DP_LEVEL_ENT;

File common/h/cpss/common/cpssHwInit/cpssCommonLedCtrl.h:
typedef enum {CPSS_LED_BLINK_DURATION_0_E, CPSS_LED_BLINK_DURATION_1_E, CPSS_LED_BLINK_DURATION_2_E, CPSS_LED_BLINK_DURATION_3_E, CPSS_LED_BLINK_DURATION_4_E, CPSS_LED_BLINK_DURATION_5_E, CPSS_LED_BLINK_DURATION_6_E, CPSS_LED_BLINK_DURATION_7_E} CPSS_LED_BLINK_DURATION_ENT;
typedef enum {CPSS_LED_BLINK_DUTY_CYCLE_0_E, CPSS_LED_BLINK_DUTY_CYCLE_1_E, CPSS_LED_BLINK_DUTY_CYCLE_2_E, CPSS_LED_BLINK_DUTY_CYCLE_3_E} CPSS_LED_BLINK_DUTY_CYCLE_ENT;
typedef enum {CPSS_LED_BLINK_SELECT_0_E, CPSS_LED_BLINK_SELECT_1_E} CPSS_LED_BLINK_SELECT_ENT;
typedef enum {CPSS_LED_CLOCK_OUT_FREQUENCY_500_E, CPSS_LED_CLOCK_OUT_FREQUENCY_1000_E, CPSS_LED_CLOCK_OUT_FREQUENCY_2000_E, CPSS_LED_CLOCK_OUT_FREQUENCY_3000_E} CPSS_LED_CLOCK_OUT_FREQUENCY_ENT;
typedef struct CPSS_LED_GROUP_CONF_STCT CPSS_LED_GROUP_CONF_STC;
struct CPSS_LED_GROUP_CONF_STCT;
typedef enum {CPSS_LED_ORDER_MODE_BY_PORT_E, CPSS_LED_ORDER_MODE_BY_CLASS_E} CPSS_LED_ORDER_MODE_ENT;
typedef enum {CPSS_LED_PULSE_STRETCH_0_NO_E, CPSS_LED_PULSE_STRETCH_1_E, CPSS_LED_PULSE_STRETCH_2_E, CPSS_LED_PULSE_STRETCH_3_E, CPSS_LED_PULSE_STRETCH_4_E, CPSS_LED_PULSE_STRETCH_5_E, CPSS_LED_PULSE_STRETCH_6_E, CPSS_LED_PULSE_STRETCH_7_E} CPSS_LED_PULSE_STRETCH_ENT;

File common/h/cpss/common/cpssHwInit/cpssHwInit.h:
typedef struct {
    GT_U8 *auDescBlock;
    GT_U32 auDescBlockSize;
} CPSS_AUQ_CFG_STC;
typedef struct {
    GT_U8 *dmaDescBlock;
    GT_U32 dmaDescBlockSize;
} CPSS_DMA_QUEUE_CFG_STC;
typedef enum {CPSS_HW_PP_INIT_STAGE_INIT_DURING_RESET_E, CPSS_HW_PP_INIT_STAGE_EEPROM_DONE_INT_MEM_DONE_E, CPSS_HW_PP_INIT_STAGE_EEPROM_NOT_DONE_INT_MEM_DONE_E, CPSS_HW_PP_INIT_STAGE_FULLY_FUNC_E} CPSS_HW_PP_INIT_STAGE_ENT;
typedef enum {CPSS_HW_PP_RESET_SKIP_TYPE_REGISTER_E, CPSS_HW_PP_RESET_SKIP_TYPE_TABLE_E, CPSS_HW_PP_RESET_SKIP_TYPE_EEPROM_E, CPSS_HW_PP_RESET_SKIP_TYPE_PEX_E, CPSS_HW_PP_RESET_SKIP_TYPE_LINK_LOSS_E, CPSS_HW_PP_RESET_SKIP_TYPE_CHIPLETS_E, CPSS_HW_PP_RESET_SKIP_TYPE_POE_E, CPSS_HW_PP_RESET_SKIP_TYPE_ALL_E, CPSS_HW_PP_RESET_SKIP_TYPE_ALL_EXCLUDE_PEX_E} CPSS_HW_PP_RESET_SKIP_TYPE_ENT;
typedef struct {
    CPSS_MULTI_NET_IF_RX_SDMA_QUEUE_STC rxSdmaQueuesConfig[16][8];
    CPSS_MULTI_NET_IF_TX_SDMA_QUEUE_STC txSdmaQueuesConfig[16][8];
} CPSS_MULTI_NET_IF_CFG_STC;
typedef struct {
    CPSS_RX_BUFF_ALLOC_METHOD_ENT buffAllocMethod;
    GT_U32 numOfRxDesc;
    GT_U32 numOfRxBuff;
    GT_U32 buffSize;
    GT_U32 buffHeaderOffset;
    GT_BOOL buffersInCachedMem;
    GT_U32 *descMemPtr;
    GT_U32 descMemSize;
    union {...} memData;
} CPSS_MULTI_NET_IF_RX_SDMA_QUEUE_STC;
typedef struct {
    CPSS_TX_SDMA_QUEUE_MODE_ENT queueMode;
    CPSS_TX_BUFF_ALLOC_METHOD_ENT buffAndDescAllocMethod;
    GT_U32 numOfTxDesc;
    GT_U32 numOfTxBuff;
    GT_U32 buffSize;
    union {...} memData;
} CPSS_MULTI_NET_IF_TX_SDMA_QUEUE_STC;
typedef struct {
    GT_U32 *txDescBlock;
    GT_U32 txDescBlockSize;
    GT_U32 *rxDescBlock;
    GT_U32 rxDescBlockSize;
    CPSS_RX_BUF_INFO_STC rxBufInfo;
} CPSS_NET_IF_CFG_STC;
typedef enum {CPSS_CHANNEL_PCI_E, CPSS_CHANNEL_SMI_E, CPSS_CHANNEL_TWSI_E, CPSS_CHANNEL_PEX_E, CPSS_CHANNEL_PEX_MBUS_E, CPSS_CHANNEL_PEX_EAGLE_E, CPSS_CHANNEL_PEX_FALCON_Z_E, CPSS_CHANNEL_PEX_KERNEL_E, CPSS_CHANNEL_LAST_E} CPSS_PP_INTERFACE_CHANNEL_ENT;
typedef enum {CPSS_RX_BUFF_DYNAMIC_ALLOC_E, CPSS_RX_BUFF_STATIC_ALLOC_E, CPSS_RX_BUFF_NO_ALLOC_E} CPSS_RX_BUFF_ALLOC_METHOD_ENT;
typedef GT_U8 *(*)(GT_U32, GT_U32) CPSS_RX_BUFF_MALLOC_FUNC;
typedef struct {
    CPSS_RX_BUFF_ALLOC_METHOD_ENT allocMethod;
    GT_U32 bufferPercentage[8];
    GT_U32 rxBufSize;
    GT_U32 headerOffset;
    GT_BOOL buffersInCachedMem;
    union {...} buffData;
} CPSS_RX_BUF_INFO_STC;
typedef enum {CPSS_SYS_HA_MODE_ACTIVE_E, CPSS_SYS_HA_MODE_STANDBY_E} CPSS_SYS_HA_MODE_ENT;
typedef enum {CPSS_TX_BUFF_DYNAMIC_ALLOC_E, CPSS_TX_BUFF_STATIC_ALLOC_E} CPSS_TX_BUFF_ALLOC_METHOD_ENT;
typedef GT_U8 *(*)(GT_U32, GT_U32) CPSS_TX_BUFF_MALLOC_FUNC;
typedef enum {CPSS_TX_SDMA_QUEUE_MODE_NORMAL_E, CPSS_TX_SDMA_QUEUE_MODE_PACKET_GENERATOR_E} CPSS_TX_SDMA_QUEUE_MODE_ENT;

File common/h/cpss/common/cpssHwInit/private/prvCpssHwInit.h:
typedef struct bkmark PRV_CPSS_BOOKMARK_STC;
typedef struct {
    CPSS_NET_IF_CFG_STC netIfCfg;
    CPSS_AUQ_CFG_STC auqCfg;
    GT_BOOL fuqUseSeparate;
    CPSS_AUQ_CFG_STC fuqCfg;
    PRV_CPSS_AU_DESC_CTRL_STC auqInternalInfo[8];
    PRV_CPSS_AU_DESC_CTRL_STC fuqInternalInfo[8];
    PRV_CPSS_AU_DESC_CTRL_STC cnc23FuqInternalInfo[8];
    PRV_CPSS_AU_DESC_CTRL_STC secondaryAuqInternalInfo[8];
    PRV_CPSS_RE_INIT_RX_DESC_INFO_STC rxDescInfo[128];
    PRV_CPSS_AU_DESC_CTRL_STC auq1InternalInfo[8];
    PRV_CPSS_AU_DESC_CTRL_STC secondaryAuq1InternalInfo[8];
    PRV_CPSS_AU_DESC_CTRL_FOR_DEAD_LOCK_STC auqDeadLockWa[8];
    GT_U32 activeAuqIndex[8];
} PRV_CPSS_DMA_RE_INIT_INFO_STC;
typedef enum {PRV_CPSS_DXCH_UNIT___NOT_VALID___E, PRV_CPSS_DXCH_UNIT_TTI_E, PRV_CPSS_DXCH_UNIT_PCL_E, PRV_CPSS_DXCH_UNIT_L2I_E, PRV_CPSS_DXCH_UNIT_FDB_E, PRV_CPSS_DXCH_UNIT_EQ_E, PRV_CPSS_DXCH_UNIT_LPM_E, PRV_CPSS_DXCH_UNIT_EGF_EFT_E, PRV_CPSS_DXCH_UNIT_EGF_QAG_E, PRV_CPSS_DXCH_UNIT_EGF_SHT_E, PRV_CPSS_DXCH_UNIT_HA_E, PRV_CPSS_DXCH_UNIT_ETS_E, PRV_CPSS_DXCH_UNIT_MLL_E, PRV_CPSS_DXCH_UNIT_IPLR_E, PRV_CPSS_DXCH_UNIT_EPLR_E, PRV_CPSS_DXCH_UNIT_IPVX_E, PRV_CPSS_DXCH_UNIT_IOAM_E, PRV_CPSS_DXCH_UNIT_EOAM_E, 
    PRV_CPSS_DXCH_UNIT_TCAM_E, PRV_CPSS_DXCH_UNIT_RXDMA_E, PRV_CPSS_DXCH_UNIT_EPCL_E, PRV_CPSS_DXCH_UNIT_TM_FCU_E, PRV_CPSS_DXCH_UNIT_TM_DROP_E, PRV_CPSS_DXCH_UNIT_TM_QMAP_E, PRV_CPSS_DXCH_UNIT_TM_E, PRV_CPSS_DXCH_UNIT_GOP_E, PRV_CPSS_DXCH_UNIT_MIB_E, PRV_CPSS_DXCH_UNIT_SERDES_E, PRV_CPSS_DXCH_UNIT_ERMRK_E, PRV_CPSS_DXCH_UNIT_BM_E, PRV_CPSS_DXCH_UNIT_TM_INGRESS_GLUE_E, PRV_CPSS_DXCH_UNIT_TM_EGRESS_GLUE_E, PRV_CPSS_DXCH_UNIT_ETH_TXFIFO_E, PRV_CPSS_DXCH_UNIT_ILKN_TXFIFO_E, PRV_CPSS_DXCH_UNIT_ILKN_E, 
    PRV_CPSS_DXCH_UNIT_LMS0_0_E, PRV_CPSS_DXCH_UNIT_LMS0_1_E, PRV_CPSS_DXCH_UNIT_LMS0_2_E, PRV_CPSS_DXCH_UNIT_LMS0_3_E, PRV_CPSS_DXCH_UNIT_TX_FIFO_E, PRV_CPSS_DXCH_UNIT_BMA_E, PRV_CPSS_DXCH_UNIT_CNC_0_E, PRV_CPSS_DXCH_UNIT_CNC_1_E, PRV_CPSS_DXCH_UNIT_TXQ_QUEUE_E, PRV_CPSS_DXCH_UNIT_TXQ_LL_E, PRV_CPSS_DXCH_UNIT_TXQ_PFC_E, PRV_CPSS_DXCH_UNIT_TXQ_QCN_E, PRV_CPSS_DXCH_UNIT_TXQ_DQ_E, PRV_CPSS_DXCH_UNIT_DFX_SERVER_E, PRV_CPSS_DXCH_UNIT_MPPM_E, PRV_CPSS_DXCH_UNIT_LMS1_0_E, PRV_CPSS_DXCH_UNIT_LMS1_1_E, 
    PRV_CPSS_DXCH_UNIT_LMS1_2_E, PRV_CPSS_DXCH_UNIT_LMS1_3_E, PRV_CPSS_DXCH_UNIT_LMS2_0_E, PRV_CPSS_DXCH_UNIT_LMS2_1_E, PRV_CPSS_DXCH_UNIT_LMS2_2_E, PRV_CPSS_DXCH_UNIT_LMS2_3_E, PRV_CPSS_DXCH_UNIT_MPPM_1_E, PRV_CPSS_DXCH_UNIT_CTU_0_E, PRV_CPSS_DXCH_UNIT_CTU_1_E, PRV_CPSS_DXCH_UNIT_TXQ_SHT_E, PRV_CPSS_DXCH_UNIT_TXQ_EGR0_E, PRV_CPSS_DXCH_UNIT_TXQ_EGR1_E, PRV_CPSS_DXCH_UNIT_TXQ_DIST_E, PRV_CPSS_DXCH_UNIT_IPLR_1_E, PRV_CPSS_DXCH_UNIT_TXDMA_E, PRV_CPSS_DXCH_UNIT_MG_E, PRV_CPSS_DXCH_UNIT_TCC_IPCL_E, 
    PRV_CPSS_DXCH_UNIT_TCC_IPVX_E, PRV_CPSS_DXCH_UNIT_TCC_IPCL_1_E, PRV_CPSS_DXCH_UNIT___LAST_USED_AS_DIRECT_INDEX____E, PRV_CPSS_DXCH_UNIT_CNM_RFU_E, PRV_CPSS_DXCH_UNIT_CNM_MPP_RFU_E, PRV_CPSS_DXCH_UNIT_CNM_AAC_E, PRV_CPSS_DXCH_UNIT_CNM_RUNIT_E, PRV_CPSS_DXCH_UNIT_SMI_0_E, PRV_CPSS_DXCH_UNIT_SMI_1_E, PRV_CPSS_DXCH_UNIT_SMI_2_E, PRV_CPSS_DXCH_UNIT_SMI_3_E, PRV_CPSS_DXCH_UNIT_LED_0_E, PRV_CPSS_DXCH_UNIT_LED_1_E, PRV_CPSS_DXCH_UNIT_LED_2_E, PRV_CPSS_DXCH_UNIT_LED_3_E, PRV_CPSS_DXCH_UNIT_LED_4_E, 
    PRV_CPSS_DXCH_UNIT_LED_5_E, PRV_CPSS_DXCH_UNIT_RXDMA1_E, PRV_CPSS_DXCH_UNIT_TXDMA1_E, PRV_CPSS_DXCH_UNIT_TX_FIFO1_E, PRV_CPSS_DXCH_UNIT_ETH_TXFIFO1_E, PRV_CPSS_DXCH_UNIT_RXDMA_GLUE_E, PRV_CPSS_DXCH_UNIT_TXDMA_GLUE_E, PRV_CPSS_DXCH_UNIT_RXDMA2_E, PRV_CPSS_DXCH_UNIT_RXDMA3_E, PRV_CPSS_DXCH_UNIT_RXDMA4_E, PRV_CPSS_DXCH_UNIT_RXDMA5_E, PRV_CPSS_DXCH_UNIT_RXDMA6_E, PRV_CPSS_DXCH_UNIT_RXDMA7_E, PRV_CPSS_DXCH_UNIT_TXDMA2_E, PRV_CPSS_DXCH_UNIT_TXDMA3_E, PRV_CPSS_DXCH_UNIT_TXDMA4_E, PRV_CPSS_DXCH_UNIT_TXDMA5_E, 
    PRV_CPSS_DXCH_UNIT_TXDMA6_E, PRV_CPSS_DXCH_UNIT_TXDMA7_E, PRV_CPSS_DXCH_UNIT_TX_FIFO2_E, PRV_CPSS_DXCH_UNIT_TX_FIFO3_E, PRV_CPSS_DXCH_UNIT_TX_FIFO4_E, PRV_CPSS_DXCH_UNIT_TX_FIFO5_E, PRV_CPSS_DXCH_UNIT_TX_FIFO6_E, PRV_CPSS_DXCH_UNIT_TX_FIFO7_E, PRV_CPSS_DXCH_UNIT_TXQ_DQ1_E, PRV_CPSS_DXCH_UNIT_TXQ_DQ2_E, PRV_CPSS_DXCH_UNIT_TXQ_DQ3_E, PRV_CPSS_DXCH_UNIT_TXQ_DQ4_E, PRV_CPSS_DXCH_UNIT_TXQ_DQ5_E, PRV_CPSS_DXCH_UNIT_MIB1_E, PRV_CPSS_DXCH_UNIT_GOP1_E, PRV_CPSS_DXCH_UNIT_TAI_E, PRV_CPSS_DXCH_UNIT_TAI1_E, 
    PRV_CPSS_DXCH_UNIT_TAI2_E, PRV_CPSS_DXCH_UNIT_TAI3_E, PRV_CPSS_DXCH_UNIT_TAI4_E, PRV_CPSS_DXCH_UNIT_EGF_SHT_1_E, PRV_CPSS_DXCH_UNIT_TTI_1_E, PRV_CPSS_DXCH_UNIT_IPCL_1_E, PRV_CPSS_DXCH_UNIT_L2I_1_E, PRV_CPSS_DXCH_UNIT_IPVX_1_E, PRV_CPSS_DXCH_UNIT_IPLR_0_1_E, PRV_CPSS_DXCH_UNIT_IPLR_1_1_E, PRV_CPSS_DXCH_UNIT_IOAM_1_E, PRV_CPSS_DXCH_UNIT_MLL_1_E, PRV_CPSS_DXCH_UNIT_EQ_1_E, PRV_CPSS_DXCH_UNIT_EGF_EFT_1_E, PRV_CPSS_DXCH_UNIT_CNC_0_1_E, PRV_CPSS_DXCH_UNIT_CNC_1_1_E, PRV_CPSS_DXCH_UNIT_SERDES_1_E, 
    PRV_CPSS_DXCH_UNIT_HA_1_E, PRV_CPSS_DXCH_UNIT_ERMRK_1_E, PRV_CPSS_DXCH_UNIT_EPCL_1_E, PRV_CPSS_DXCH_UNIT_EPLR_1_E, PRV_CPSS_DXCH_UNIT_EOAM_1_E, PRV_CPSS_DXCH_UNIT_RX_DMA_GLUE_1_E, PRV_CPSS_DXCH_UNIT_POE_E, PRV_CPSS_DXCH_UNIT_TXQ_BMX_E, PRV_CPSS_DXCH_UNIT_LPM_1_E, PRV_CPSS_DXCH_UNIT_IA_E, PRV_CPSS_DXCH_UNIT_IA_1_E, PRV_CPSS_DXCH_UNIT_EREP_E, PRV_CPSS_DXCH_UNIT_EREP_1_E, PRV_CPSS_DXCH_UNIT_PREQ_E, PRV_CPSS_DXCH_UNIT_PREQ_1_E, PRV_CPSS_DXCH_UNIT_PHA_E, PRV_CPSS_DXCH_UNIT_PHA_1_E, PRV_CPSS_PX_UNIT_PHA_E, 
    PRV_CPSS_PX_UNIT_PCP_E, PRV_CPSS_PX_UNIT_MCFC_E, PRV_CPSS_DXCH_UNIT_SHM_E, PRV_CPSS_DXCH_UNIT_MG_0_1_E, PRV_CPSS_DXCH_UNIT_MG_0_2_E, PRV_CPSS_DXCH_UNIT_MG_0_3_E, PRV_CPSS_DXCH_UNIT_MG_1_0_E, PRV_CPSS_DXCH_UNIT_MG_1_1_E, PRV_CPSS_DXCH_UNIT_MG_1_2_E, PRV_CPSS_DXCH_UNIT_MG_1_3_E, PRV_CPSS_DXCH_UNIT_BMA_1_E, PRV_CPSS_DXCH_UNIT_EGF_QAG_1_E, PRV_CPSS_DXCH_UNIT_TXQ_PSI_E, PRV_CPSS_DXCH_UNIT_TXQ_PDX_E, PRV_CPSS_DXCH_UNIT_TXQ_PDX_PAC_0_E, PRV_CPSS_DXCH_UNIT_TXQ_PDX_PAC_1_E, PRV_CPSS_DXCH_UNIT_TXQ_PFCC_E, 
    PRV_CPSS_DXCH_UNIT_EM_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_PDS0_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_PDS1_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_PDS2_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_PDS3_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_PDS0_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_PDS1_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_PDS2_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_PDS3_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_SDQ0_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_SDQ1_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_SDQ2_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_SDQ3_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_SDQ0_E, 
    PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_SDQ1_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_SDQ2_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_SDQ3_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_QFC0_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_QFC1_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_QFC2_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE0_QFC3_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_QFC0_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_QFC1_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_QFC2_E, PRV_CPSS_DXCH_UNIT_TXQ_PIPE1_QFC3_E, PRV_CPSS_DXCH_UNIT_TAI_SLAVE_PIPE0_TAI0_E, PRV_CPSS_DXCH_UNIT_TAI_SLAVE_PIPE0_TAI1_E, 
    PRV_CPSS_DXCH_UNIT_TAI_SLAVE_PIPE1_TAI0_E, PRV_CPSS_DXCH_UNIT_TAI_SLAVE_PIPE1_TAI1_E, PRV_CPSS_DXCH_UNIT_TXQ_TAI_SLAVE_PIPE0_TAI0_E, PRV_CPSS_DXCH_UNIT_TXQ_TAI_SLAVE_PIPE0_TAI1_E, PRV_CPSS_DXCH_UNIT_TXQ_TAI_SLAVE_PIPE1_TAI0_E, PRV_CPSS_DXCH_UNIT_TXQ_TAI_SLAVE_PIPE1_TAI1_E, PRV_CPSS_DXCH_UNIT_PB_CENTER_BLK_E, PRV_CPSS_DXCH_UNIT_PB_COUNTER_E, PRV_CPSS_DXCH_UNIT_PB_SMB_WRITE_ARBITER_E, PRV_CPSS_DXCH_UNIT_PB_SMB_WRITE_ARBITER_1_E, PRV_CPSS_DXCH_UNIT_PB_SMB_WRITE_ARBITER_2_E, 
    PRV_CPSS_DXCH_UNIT_PB_SMB_WRITE_ARBITER_3_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_WRITE_0_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_CELL_READ_0_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_CELL_READ_1_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_READ_0_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_READ_1_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_WRITE_1_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_WRITE_2_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_WRITE_3_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_CELL_READ_2_E, 
    PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_CELL_READ_3_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_READ_2_E, PRV_CPSS_DXCH_UNIT_PB_GPC_GRP_PACKET_READ_3_E, PRV_CPSS_DXCH_UNIT_PB_NEXT_POINTER_MEMO_0_E, PRV_CPSS_DXCH_UNIT_PB_NEXT_POINTER_MEMO_1_E, PRV_CPSS_DXCH_UNIT_PB_NEXT_POINTER_MEMO_2_E, PRV_CPSS_DXCH_UNIT_PB_SHARED_MEMO_BUF_0_0_E, PRV_CPSS_DXCH_UNIT_PB_SHARED_MEMO_BUF_0_1_E, PRV_CPSS_DXCH_UNIT_PB_SHARED_MEMO_BUF_1_0_E, PRV_CPSS_DXCH_UNIT_PB_SHARED_MEMO_BUF_1_1_E, PRV_CPSS_DXCH_UNIT_PB_SHARED_MEMO_BUF_2_0_E, 
    PRV_CPSS_DXCH_UNIT_PB_SHARED_MEMO_BUF_2_1_E, PRV_CPSS_DXCH_UNIT_PCA_BRG_0_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_I_0_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_E_0_E, PRV_CPSS_DXCH_UNIT_PCA_SFF_0_E, PRV_CPSS_DXCH_UNIT_PCA_LMU_0_E, PRV_CPSS_DXCH_UNIT_PCA_CTSU_0_E, PRV_CPSS_DXCH_UNIT_PCA_BRG_1_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_I_1_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_E_1_E, PRV_CPSS_DXCH_UNIT_PCA_SFF_1_E, PRV_CPSS_DXCH_UNIT_PCA_LMU_1_E, PRV_CPSS_DXCH_UNIT_PCA_CTSU_1_E, PRV_CPSS_DXCH_UNIT_PCA_BRG_2_E, 
    PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_I_2_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_E_2_E, PRV_CPSS_DXCH_UNIT_PCA_SFF_2_E, PRV_CPSS_DXCH_UNIT_PCA_LMU_2_E, PRV_CPSS_DXCH_UNIT_PCA_CTSU_2_E, PRV_CPSS_DXCH_UNIT_PCA_BRG_3_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_I_3_E, PRV_CPSS_DXCH_UNIT_PCA_PZ_ARBITER_E_3_E, PRV_CPSS_DXCH_UNIT_PCA_SFF_3_E, PRV_CPSS_DXCH_UNIT_PCA_LMU_3_E, PRV_CPSS_DXCH_UNIT_PCA_CTSU_3_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_163_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_164_0_E, 
    PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_163_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_164_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_163_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_164_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_163_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_164_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_163_2_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_164_2_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_163_2_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_164_2_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_163_3_E, 
    PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_I_164_3_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_163_3_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EXT_E_164_3_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_163_I_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_163_E_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_164_I_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_164_E_0_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_163_I_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_163_E_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_164_I_1_E, PRV_CPSS_DXCH_UNIT_PCA_MACSEC_EIP_164_E_1_E, 
    PRV_CPSS_DXCH_UNIT_BASE_RAVEN_0_E, PRV_CPSS_DXCH_UNIT_BASE_RAVEN_1_E, PRV_CPSS_DXCH_UNIT_BASE_RAVEN_2_E, PRV_CPSS_DXCH_UNIT_BASE_RAVEN_3_E, PRV_CPSS_DXCH_UNIT_RAVEN_0_TAI0_E, PRV_CPSS_DXCH_UNIT_RAVEN_0_TAI1_E, PRV_CPSS_DXCH_UNIT_RAVEN_1_TAI0_E, PRV_CPSS_DXCH_UNIT_RAVEN_1_TAI1_E, PRV_CPSS_DXCH_UNIT_RAVEN_2_TAI0_E, PRV_CPSS_DXCH_UNIT_RAVEN_2_TAI1_E, PRV_CPSS_DXCH_UNIT_RAVEN_3_TAI0_E, PRV_CPSS_DXCH_UNIT_RAVEN_3_TAI1_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_0_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_1_E, 
    PRV_CPSS_DXCH_UNIT_EAGLE_D2D_2_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_3_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_4_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_5_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_6_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_7_E, PRV_CPSS_DXCH_UNIT_EAGLE_D2D_CP_IN_RAVEN_E, PRV_CPSS_DXCH_UNIT_MAC_400G_0_E, PRV_CPSS_DXCH_UNIT_MAC_400G_1_E, PRV_CPSS_DXCH_UNIT_MAC_400G_2_E, PRV_CPSS_DXCH_UNIT_MAC_400G_3_E, PRV_CPSS_DXCH_UNIT_PCS_400G_0_E, PRV_CPSS_DXCH_UNIT_PCS_400G_1_E, PRV_CPSS_DXCH_UNIT_PCS_400G_2_E, 
    PRV_CPSS_DXCH_UNIT_PCS_400G_3_E, PRV_CPSS_DXCH_UNIT_MAC_CPU_0_E, PRV_CPSS_DXCH_UNIT_PCS_CPU_0_E, PRV_CPSS_DXCH_UNIT_LED_CPU_0_E, PRV_CPSS_DXCH_UNIT_CNC_2_E, PRV_CPSS_DXCH_UNIT_CNC_3_E, PRV_CPSS_DXCH_UNIT_PPU_E, PRV_CPSS_DXCH_UNIT_MIF_400G_0_E, PRV_CPSS_DXCH_UNIT_MIF_400G_1_E, PRV_CPSS_DXCH_UNIT_MIF_400G_2_E, PRV_CPSS_DXCH_UNIT_MIF_400G_3_E, PRV_CPSS_DXCH_UNIT_MIF_USX_0_E, PRV_CPSS_DXCH_UNIT_MIF_USX_1_E, PRV_CPSS_DXCH_UNIT_MIF_USX_2_E, PRV_CPSS_DXCH_UNIT_MIF_CPU_0_E, PRV_CPSS_DXCH_UNIT_ANP_400G_0_E, 
    PRV_CPSS_DXCH_UNIT_ANP_400G_1_E, PRV_CPSS_DXCH_UNIT_ANP_400G_2_E, PRV_CPSS_DXCH_UNIT_ANP_400G_3_E, PRV_CPSS_DXCH_UNIT_ANP_USX_0_E, PRV_CPSS_DXCH_UNIT_ANP_USX_1_E, PRV_CPSS_DXCH_UNIT_ANP_USX_2_E, PRV_CPSS_DXCH_UNIT_ANP_USX_3_E, PRV_CPSS_DXCH_UNIT_ANP_USX_4_E, PRV_CPSS_DXCH_UNIT_ANP_USX_5_E, PRV_CPSS_DXCH_UNIT_ANP_CPU_0_E, PRV_CPSS_DXCH_UNIT_ANP_CPU_1_E, PRV_CPSS_DXCH_UNIT_MTI_USX_0_MAC_0_E, PRV_CPSS_DXCH_UNIT_MTI_USX_1_MAC_0_E, PRV_CPSS_DXCH_UNIT_MTI_USX_2_MAC_0_E, PRV_CPSS_DXCH_UNIT_MTI_USX_0_MAC_1_E, 
    PRV_CPSS_DXCH_UNIT_MTI_USX_1_MAC_1_E, PRV_CPSS_DXCH_UNIT_MTI_USX_2_MAC_1_E, PRV_CPSS_DXCH_UNIT_MTI_USX_0_PCS_0_E, PRV_CPSS_DXCH_UNIT_MTI_USX_1_PCS_0_E, PRV_CPSS_DXCH_UNIT_MTI_USX_2_PCS_0_E, PRV_CPSS_DXCH_UNIT_MTI_USX_0_PCS_1_E, PRV_CPSS_DXCH_UNIT_MTI_USX_1_PCS_1_E, PRV_CPSS_DXCH_UNIT_MTI_USX_2_PCS_1_E, PRV_CPSS_DXCH_UNIT_L2I_TAI0_E, PRV_CPSS_DXCH_UNIT_L2I_TAI1_E, PRV_CPSS_DXCH_UNIT_TTI_TAI0_E, PRV_CPSS_DXCH_UNIT_TTI_TAI1_E, PRV_CPSS_DXCH_UNIT_TXQS_TAI0_E, PRV_CPSS_DXCH_UNIT_TXQS_TAI1_E, 
    PRV_CPSS_DXCH_UNIT_TXQS1_TAI0_E, PRV_CPSS_DXCH_UNIT_TXQS1_TAI1_E, PRV_CPSS_DXCH_UNIT_PHA_TAI0_E, PRV_CPSS_DXCH_UNIT_PHA_TAI1_E, PRV_CPSS_DXCH_UNIT_EPCL_HA_TAI0_E, PRV_CPSS_DXCH_UNIT_EPCL_HA_TAI1_E, PRV_CPSS_DXCH_UNIT_CPU_PORT_TAI0_E, PRV_CPSS_DXCH_UNIT_CPU_PORT_TAI1_E, PRV_CPSS_DXCH_UNIT_400G0_TAI0_E, PRV_CPSS_DXCH_UNIT_400G0_TAI1_E, PRV_CPSS_DXCH_UNIT_400G1_TAI0_E, PRV_CPSS_DXCH_UNIT_400G1_TAI1_E, PRV_CPSS_DXCH_UNIT_400G2_TAI0_E, PRV_CPSS_DXCH_UNIT_400G2_TAI1_E, PRV_CPSS_DXCH_UNIT_400G3_TAI0_E, 
    PRV_CPSS_DXCH_UNIT_400G3_TAI1_E, PRV_CPSS_DXCH_UNIT_USX0_TAI0_E, PRV_CPSS_DXCH_UNIT_USX0_TAI1_E, PRV_CPSS_DXCH_UNIT_USX1_TAI0_E, PRV_CPSS_DXCH_UNIT_USX1_TAI1_E, PRV_CPSS_DXCH_UNIT_PCA2_TAI0_E, PRV_CPSS_DXCH_UNIT_PCA2_TAI1_E, PRV_CPSS_DXCH_UNIT_PCA3_TAI0_E, PRV_CPSS_DXCH_UNIT_PCA3_TAI1_E, PRV_CPSS_DXCH_UNIT_PCA0_TAI0_E, PRV_CPSS_DXCH_UNIT_PCA0_TAI1_E, PRV_CPSS_DXCH_UNIT_PCA1_TAI0_E, PRV_CPSS_DXCH_UNIT_PCA1_TAI1_E, PRV_CPSS_DXCH_UNIT_MAC_CPUM_TAI0_E, PRV_CPSS_DXCH_UNIT_MAC_CPUM_TAI1_E, 
    PRV_CPSS_DXCH_UNIT_MAC_CPUC_TAI0_E, PRV_CPSS_DXCH_UNIT_MAC_CPUC_TAI1_E, PRV_CPSS_DXCH_UNIT_100G_TAI0_E, PRV_CPSS_DXCH_UNIT_100G_TAI1_E, PRV_CPSS_DXCH_UNIT_USX2_0_TAI0_E, PRV_CPSS_DXCH_UNIT_USX2_0_TAI1_E, PRV_CPSS_DXCH_UNIT_USX2_1_TAI0_E, PRV_CPSS_DXCH_UNIT_USX2_1_TAI1_E, PRV_CPSS_DXCH_UNIT_MAC_CPU_1_E, PRV_CPSS_DXCH_UNIT_PCS_CPU_1_E, PRV_CPSS_DXCH_UNIT_SDW0_0_E, PRV_CPSS_DXCH_UNIT_SDW1_0_E, PRV_CPSS_DXCH_UNIT_SDW0_1_E, PRV_CPSS_DXCH_UNIT_SDW1_1_E, PRV_CPSS_DXCH_UNIT_SDW0_2_E, 
    PRV_CPSS_DXCH_UNIT_SDW1_2_E, PRV_CPSS_DXCH_UNIT_SDW0_3_E, PRV_CPSS_DXCH_UNIT_SDW1_3_E, PRV_CPSS_DXCH_UNIT_SDW0_E, PRV_CPSS_DXCH_UNIT_SDW1_E, PRV_CPSS_DXCH_UNIT_SDW2_E, PRV_CPSS_DXCH_UNIT_SDW3_E, PRV_CPSS_DXCH_UNIT_SDW4_E, PRV_CPSS_DXCH_UNIT_HBU_E, PRV_CPSS_DXCH_UNIT_HBU_1_E, PRV_CPSS_DXCH_UNIT_SMU_E, PRV_CPSS_DXCH_UNIT_LAST____IN_TILE_0____E, PRV_CPSS_DXCH_UNIT_IN_TILE_1_BASE_E, PRV_CPSS_DXCH_UNIT_IN_TILE_2_BASE_E = 818, PRV_CPSS_DXCH_UNIT_IN_TILE_3_BASE_E = 1227, 
    PRV_CPSS_DXCH_UNIT_IN_TILE_3_LAST_E = 1635, PRV_CPSS_DXCH_UNIT___DUMMY_PLACE_HOLDER___E, PRV_CPSS_DXCH_UNIT_LAST_E} PRV_CPSS_DXCH_UNIT_ENT;
typedef enum {PRV_CPSS_GEN_REG_DB_KIND_LEGACY_E, PRV_CPSS_GEN_REG_DB_KIND_SIP5_E, PRV_CPSS_GEN_REG_DB_KIND_DFX_E} PRV_CPSS_GEN_REG_DB_KIND_ENT;
typedef enum {PRV_CPSS_PP_PRE_PHASE1_INIT_MODE_DEFAULT_INIT_E, PRV_CPSS_PP_PRE_PHASE1_INIT_MODE_NO_PP_INIT_E} PRV_CPSS_PP_PRE_PHASE1_INIT_MODE_ENT;
typedef struct {
    void *rxDescBlock;
    GT_U32 totalDescNum;
    GT_U32 next2ReturnOffset;
    GT_U32 next2ReceiveOffset;
    GT_U32 freeDescNum;
    GT_U32 headerOffset;
    GT_BOOL forbidQEn;
} PRV_CPSS_RE_INIT_RX_DESC_INFO_STC;
typedef enum {PRV_CPSS_SUBUNIT_GOP_TAI_E, PRV_CPSS_SUBUNIT_GOP_PTP_E, PRV_CPSS_SUBUNIT_GOP_FCA_E, PRV_CPSS_SUBUNIT_GOP_PR_E, PRV_CPSS_SUBUNIT_GOP_CG_E} PRV_CPSS_SUBUNIT_ENT;
struct bkmark;

File common/h/cpss/common/cpssHwInit/private/prvCpssHwRegisters.h:
typedef GT_BOOL (*)(GT_SW_DEV_NUM, GT_U32, GT_U32, GT_PORT_GROUPS_BMP *, GT_BOOL *, PRV_CPSS_DUPLICATED_ADDITIONAL_ADDRESSES_INFO_STC *, GT_BOOL *) PRV_CPSS_DUPLICATED_ADDITIONAL_ADDRESSES_GET_FUNC;
typedef struct {
    GT_U32 numOfAdditionalAddresses;
    GT_U32 additionalAddressesArr[32];
    GT_BOOL originalAddressIsNotValid;
    GT_BOOL use_portGroupsArr;
    GT_U32 portGroupsArr[32];
    GT_BOOL use_originalAddressPortGroup;
    GT_U32 originalAddressPortGroup;
    GT_BOOL skipPortGroupsBmpMask;
} PRV_CPSS_DUPLICATED_ADDITIONAL_ADDRESSES_INFO_STC;

File common/h/cpss/common/cpssTypes.h:
typedef struct {
    GT_U32 TPID;
    GT_U32 E_PCP;
    GT_U32 E_DEI;
    GT_U32 Ingress_E_CID_base;
    GT_U32 Direction;
    GT_U32 Upstream_Specific;
    GT_U32 GRP;
    GT_U32 E_CID_base;
    GT_U32 Ingress_E_CID_ext;
    GT_U32 E_CID_ext;
} CPSS_802_1BR_ETAG_STC;
typedef struct {
    GT_U32 TPID;
    GT_U32 PCP;
    GT_U32 DEI;
    GT_U32 VID;
} CPSS_802_1Q_VLAN_TAG_STC;
typedef enum {CPSS_ADJUST_OPERATION_ADD_E, CPSS_ADJUST_OPERATION_SUBSTRUCT_E} CPSS_ADJUST_OPERATION_ENT;
typedef enum {CPSS_DIRECTION_INGRESS_E, CPSS_DIRECTION_EGRESS_E, CPSS_DIRECTION_BOTH_E} CPSS_DIRECTION_ENT;
typedef struct {
    GT_U32 busNo;
    GT_U32 devSel;
    GT_U32 funcNo;
} CPSS_HW_ADDR_STC;
typedef struct {
    GT_HW_DEV_NUM hwDevNum;
    GT_PORT_NUM portNum;
} CPSS_INTERFACE_DEV_PORT_STC;
typedef struct {
    CPSS_INTERFACE_TYPE_ENT type;
    struct {...} devPort;
    GT_TRUNK_ID trunkId;
    GT_U16 vidx;
    GT_U16 vlanId;
    GT_HW_DEV_NUM hwDevNum;
    GT_U16 fabricVidx;
    GT_U32 index;
} CPSS_INTERFACE_INFO_STC;
typedef enum {CPSS_INTERFACE_PORT_E, CPSS_INTERFACE_TRUNK_E, CPSS_INTERFACE_VIDX_E, CPSS_INTERFACE_VID_E, CPSS_INTERFACE_DEVICE_E, CPSS_INTERFACE_FABRIC_VIDX_E, CPSS_INTERFACE_INDEX_E} CPSS_INTERFACE_TYPE_ENT;
typedef enum {CPSS_IP_PROTOCOL_IPV4_E, CPSS_IP_PROTOCOL_IPV6_E, CPSS_IP_PROTOCOL_IPV4V6_E, CPSS_IP_PROTOCOL_FCOE_E, CPSS_IP_PROTOCOL_ALL_E} CPSS_IP_PROTOCOL_STACK_ENT;
typedef struct {
    GT_U32 ports[32];
} CPSS_PORTS_BMP_STC;
typedef unsigned int CPSS_PP_DEVICE_TYPE;
typedef enum {CPSS_PP_FAMILY_START_EXMX_E, CPSS_PP_FAMILY_TWISTC_E, CPSS_PP_FAMILY_TWISTD_E, CPSS_PP_FAMILY_SAMBA_E, CPSS_PP_FAMILY_TIGER_E, CPSS_PP_FAMILY_END_EXMX_E, CPSS_PP_FAMILY_START_DXSAL_E, CPSS_PP_FAMILY_SALSA_E, CPSS_PP_FAMILY_END_DXSAL_E, CPSS_PP_FAMILY_START_DXCH_E, CPSS_PP_FAMILY_CHEETAH_E, CPSS_PP_FAMILY_CHEETAH2_E, CPSS_PP_FAMILY_CHEETAH3_E, CPSS_PP_FAMILY_DXCH_XCAT_E, CPSS_PP_FAMILY_DXCH_XCAT3_E, CPSS_PP_FAMILY_DXCH_AC5_E, CPSS_PP_FAMILY_DXCH_LION_E, CPSS_PP_FAMILY_DXCH_XCAT2_E, 
    CPSS_PP_FAMILY_DXCH_LION2_E, CPSS_PP_FAMILY_DXCH_LION3_E, CPSS_PP_FAMILY_DXCH_BOBCAT2_E, CPSS_PP_FAMILY_DXCH_BOBCAT3_E, CPSS_PP_FAMILY_DXCH_ALDRIN_E, CPSS_PP_FAMILY_DXCH_AC3X_E, CPSS_PP_FAMILY_DXCH_ALDRIN2_E, CPSS_PP_FAMILY_DXCH_FALCON_E, CPSS_PP_FAMILY_DXCH_AC5P_E, CPSS_PP_FAMILY_DXCH_AC5X_E, CPSS_PP_FAMILY_DXCH_HARRIER_E, CPSS_PP_FAMILY_DXCH_IRONMAN_E, CPSS_PP_FAMILY_END_DXCH_E, CPSS_PP_FAMILY_START_EXMXPM_E, CPSS_PP_FAMILY_PUMA_E, CPSS_PP_FAMILY_PUMA3_E, CPSS_PP_FAMILY_END_EXMXPM_E, 
    CPSS_PX_FAMILY_START_E, CPSS_PX_FAMILY_PIPE_E, CPSS_PX_FAMILY_END_E, CPSS_PP_FAMILY_LAST_E, CPSS_MAX_FAMILY = 2147483647} CPSS_PP_FAMILY_TYPE_ENT;
typedef enum {CPSS_PP_SUB_FAMILY_NONE_E, CPSS_PP_SUB_FAMILY_BOBCAT2_BOBK_E, CPSS_MAX_SUB_FAMILY, CPSS_BAD_SUB_FAMILY = 2147483647} CPSS_PP_SUB_FAMILY_TYPE_ENT;
typedef unsigned int CPSS_PX_PORTS_BMP;
typedef struct {
    GT_PHYSICAL_PORT_NUM port;
    GT_HW_DEV_NUM hwDevice;
} CPSS_TRUNK_MEMBER_STC;
typedef struct {
    GT_U8 arEther[6];
} GT_ETHERADDR;
typedef struct {
    GT_U8 fcid[3];
} GT_FCID;
typedef unsigned int GT_HW_DEV_NUM;
typedef union {
    GT_U32 u32Ip;
    GT_U8 arIP[4];
} GT_IPADDR;
typedef union {
    GT_U32 u32Ip[4];
    GT_U8 arIP[16];
} GT_IPV6ADDR;
typedef union {
    GT_IPV6ADDR ipv6Addr;
    GT_IPADDR ipv4Addr;
} GT_IP_ADDR_TYPE_UNT;
typedef unsigned int GT_PHYSICAL_PORT_NUM;
typedef unsigned int GT_PORT_GROUPS_BMP;
typedef unsigned int GT_PORT_NUM;
typedef unsigned int GT_SW_DEV_NUM;
typedef unsigned short GT_TRUNK_ID;

File common/h/cpss/common/diag/cpssCommonDiag.h:
typedef enum {CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_UNKNOWN_E, CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_NONE_E, CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_DROP_OR_RESEND_E, CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_HW_CORRECTION_E, CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_SW_CORRECTION_E, CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_REBOOT_CHIP_E, CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_SCRUB_E} CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_ENT;
typedef enum {CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_TILE_E, CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_CHIPLET_E} CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_ENT;
typedef struct {
    CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_ENT dfxInstanceType;
    GT_U32 dfxInstanceIndex;
} CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_STC;
typedef enum {CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_PARITY_E, CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_SINGLE_ECC_E, CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_MULTIPLE_ECC_E, CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_SINGLE_AND_MULTIPLE_ECC_E} CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_ENT;
typedef enum {CPSS_DIAG_DATA_INTEGRITY_ERROR_INJECT_MODE_SINGLE_E, CPSS_DIAG_DATA_INTEGRITY_ERROR_INJECT_MODE_MULTIPLE_E} CPSS_DIAG_DATA_INTEGRITY_ERROR_INJECT_MODE_ENT;
typedef struct {
    GT_U32 dfxPipeId;
    GT_U32 dfxClientId;
    GT_U32 dfxMemoryId;
    CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_STC dfxInstance;
} CPSS_DIAG_DATA_INTEGRITY_MEMORY_LOCATION_STC;
typedef enum {CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_UNKNOWN_E, CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_CONFIGURATION_E, CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_DATA_E, CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_STATE_E} CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_ENT;
typedef enum {CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_NONE_E, CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_ECC_E, CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_PARITY_E} CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_ENT;
typedef struct {
    GT_U32 portGroupId;
    GT_U32 mppmId;
    GT_U32 bankId;
} CPSS_DIAG_DATA_INTEGRITY_MPPM_MEMORY_LOCATION_STC;
typedef enum {CPSS_DIAG_PP_REG_INTERNAL_E, CPSS_DIAG_PP_REG_PCI_CFG_E} CPSS_DIAG_PP_REG_TYPE_ENT;
typedef enum {CPSS_DIAG_TEST_RANDOM_E, CPSS_DIAG_TEST_INCREMENTAL_E, CPSS_DIAG_TEST_BIT_TOGGLE_E, CPSS_DIAG_TEST_AA_55_E} CPSS_DIAG_TEST_PROFILE_ENT;

File common/h/cpss/common/diag/cpssDiagPacketGenerator.h:
typedef enum {CPSS_DIAG_PG_IF_SIZE_1_BYTE_E, CPSS_DIAG_PG_IF_SIZE_8_BYTES_E, CPSS_DIAG_PG_IF_SIZE_16_BYTES_E, CPSS_DIAG_PG_IF_SIZE_32_BYTES_E, CPSS_DIAG_PG_IF_SIZE_64_BYTES_E, CPSS_DIAG_PG_IF_SIZE_DEFAULT_E = 255, CPSS_DIAG_PG_IF_SIZE_NOT_APPLICABLE_E = 65535} CPSS_DIAG_PG_IF_SIZE_ENT;
typedef enum {CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_1_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_256_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_512_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_1K_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_4K_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_64K_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_1M_E, CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_16M_E} CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_ENT;
typedef enum {CPSS_DIAG_PG_PACKET_LENGTH_CONSTANT_E, CPSS_DIAG_PG_PACKET_LENGTH_RANDOM_E} CPSS_DIAG_PG_PACKET_LENGTH_TYPE_ENT;
typedef enum {CPSS_DIAG_PG_PACKET_PAYLOAD_CYCLIC_E, CPSS_DIAG_PG_PACKET_PAYLOAD_RANDOM_E, CPSS_DIAG_PG_PACKET_PAYLOAD_CONSTANT_E} CPSS_DIAG_PG_PACKET_PAYLOAD_TYPE_ENT;
typedef enum {CPSS_DIAG_PG_TRANSMIT_CONTINUES_E, CPSS_DIAG_PG_TRANSMIT_SINGLE_BURST_E} CPSS_DIAG_PG_TRANSMIT_MODE_ENT;

File common/h/cpss/common/diag/private/prvCpssCommonDiag.h:
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DFX_CLIENT_REG_READ_FUNC;
typedef enum {PRV_CPSS_DFX_DIAG_BIST_STATUS_NOT_READY_E, PRV_CPSS_DFX_DIAG_BIST_STATUS_PASS_E, PRV_CPSS_DFX_DIAG_BIST_STATUS_FAIL_E} PRV_CPSS_DFX_DIAG_BIST_STATUS_ENT;
typedef struct {
    GT_U32 key;
    GT_U32 memType;
    CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_ENT protectionType;
    CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_ENT externalProtectionType;
    GT_U32 causePortGroupId;
    GT_U32 firstTableDataBit;
    GT_U32 lastTableDataBit;
    GT_U32 hwTableName;
    GT_U32 startAddress;
    GT_U32 logicalBlockSize;
    GT_U32 logicalBlockAddressSteps;
    GT_U32 addressIncrement;
    GT_U32 firstTableLine;
    GT_U32 lastTableLine;
    CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_ENT memUsageType;
    CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_ENT correctionMethod;
} PRV_CPSS_DFX_DIAG_DATA_INTEGRITY_MAP_DB_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32) PRV_CPSS_DFX_MEMORY_PIPE_ID_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DFX_MEMORY_REG_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32) PRV_CPSS_DFX_MEMORY_REG_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32 *) PRV_CPSS_DFX_PIPES_BMP_GET_FUNC;
typedef GT_BOOL (*)(GT_U8, GT_U32, GT_U32) PRV_CPSS_DIAG_CHECK_REG_EXIST_FUNC;
typedef struct {
    GT_U32 dfxUnitClientIdx;
    GT_U32 dfxServerRegisterOffset;
    GT_U32 dfxXsbSelect;
    GT_U32 dfxXsbNumber;
    GT_U32 dfxXsbRegOffset;
    GT_U32 dfxClientSelect;
    GT_U32 dfxClientRegisterOffset;
    GT_U32 dfxClientMemoryNumber;
    GT_U32 dfxClientMemoryRegisterOffset;
} PRV_CPSS_DIAG_DATA_INTEGRITY_DFX_ADDR_STC;
typedef struct {
    GT_U32 dfxPipeIndex;
    GT_U32 dfxClientIndex;
} PRV_CPSS_DIAG_DATA_INTEGRITY_DFX_FIRST_STAGE_MAPPING_DATA_STC;
typedef enum {PRV_CPSS_DIAG_REGS_NUM_ONLY_SEARCH_E, PRV_CPSS_DIAG_REGS_ADDR_SEARCH_E, PRV_CPSS_DIAG_REGS_DATA_SEARCH_E, PRV_CPSS_DIAG_REGS_DATA_RESET_AND_INIT_CTRL_SEARCH_E, PRV_CPSS_DIAG_REGS_ADDR_RESET_AND_INIT_CTRL_SEARCH_E} PRV_CPSS_DIAG_REGS_SEARCH_TYPE_ENT;
typedef struct {
    GT_U32 dfxMcAccessGetPipe;
    GT_U32 dfxMcAccessGetClient;
    PRV_CPSS_DFX_MEMORY_PIPE_ID_SET_FUNC dfxMemoryPipeIdSetFunc;
    PRV_CPSS_DFX_MEMORY_REG_WRITE_FUNC dfxMemoryWriteFunc;
    PRV_CPSS_DFX_MEMORY_REG_READ_FUNC dfxMemoryRegReadFunc;
    PRV_CPSS_DFX_CLIENT_REG_READ_FUNC dfxClientReadRegFunc;
    PRV_CPSS_DFX_PIPES_BMP_GET_FUNC dfxPipesBmpGetFunc;
    CPSS_DIAG_DATA_INTEGRITY_DFX_INSTANCE_STC dfxMultiInstanceData;
} PRV_CPSS_DIAG_STC;

File common/h/cpss/common/labServices/port/gop/common/configElementDb/mvCfgElementDb.h:
typedef struct {
    MV_OP_PARAMS *cfgSeq;
    GT_U8 cfgSeqSize;
} MV_CFG_SEQ;
typedef struct {
    const MV_OP_PARAMS *cfgSeq;
    GT_U8 cfgSeqSize;
} MV_MAC_PCS_CFG_SEQ;
typedef const MV_MAC_PCS_CFG_SEQ * MV_MAC_PCS_CFG_SEQ_PTR;
typedef struct {
    GT_U16 unitId;
    GT_U32 regOffset;
    GT_U32 operData;
    GT_U32 mask;
} MV_OP_PARAMS;
typedef struct {
    GT_U16 indexOffset;
    GT_U32 regOffset;
    GT_U32 data;
    GT_U32 mask;
} MV_WRITE_OP_PARAMS;

File common/h/cpss/common/labServices/port/gop/common/siliconIf/mvSiliconIf.h:
typedef int GT_REG_DATA;
typedef unsigned int GT_UOPT;
typedef unsigned int GT_UREG_DATA;
typedef struct _HWS_DEVICE_INFO HWS_DEVICE_INFO;
typedef struct {
    MV_OS_EXACT_DELAY_FUNC osExactDelayPtr;
    MV_OS_MICRO_DELAY_FUNC osMicroDelayPtr;
    MV_OS_TIME_WK_AFTER_FUNC osTimerWkPtr;
    MV_OS_MEM_SET_FUNC osMemSetPtr;
    MV_OS_FREE_FUNC osFreePtr;
    MV_OS_MALLOC_FUNC osMallocPtr;
    MV_SYS_DEVICE_INFO sysDeviceInfo;
    MV_SERDES_REF_CLOCK_GET serdesRefClockGet;
    MV_SERDES_REG_ACCESS_GET serdesRegGetAccess;
    MV_SERDES_REG_ACCESS_SET serdesRegSetAccess;
    MV_SERVER_REG_ACCESS_GET serverRegGetAccess;
    MV_SERVER_REG_ACCESS_SET serverRegSetAccess;
    MV_OS_MEM_COPY_FUNC osMemCopyPtr;
    MV_OS_STR_CAT_FUNC osStrCatPtr;
    MV_SERVER_REG_FIELD_ACCESS_SET serverRegFieldSetAccess;
    MV_SERVER_REG_FIELD_ACCESS_GET serverRegFieldGetAccess;
    MV_TIMER_GET timerGet;
    MV_REG_ACCESS_GET registerGetAccess;
    MV_REG_ACCESS_SET registerSetAccess;
    void *extFunctionStcPtr;
    MV_CORE_CLOCK_GET coreClockGetPtr;
} HWS_OS_FUNC_PTR;
typedef struct {
    GT_U32 baseAddr;
    GT_U32 regOffset;
} HWS_UNIT_INFO;
typedef GT_STATUS (*)(GT_U8, GT_U32 *, GT_U32 *) MV_CORE_CLOCK_GET;
typedef struct {
    GT_U32 phase_tvalBefore_tvSec[10];
    GT_U32 phase_tvalBefore_tvUsec[10];
    GT_U8 phase_contextSwitchedBack;
    GT_U32 phase_edgeDetectin_Sec;
    GT_U32 phase_edgeDetectin_Usec;
    GT_U8 phase_edgeDetectin_Flag;
    GT_32 phase_tmpTimeout;
    GT_32 phase_firstEO[10];
    GT_U32 phase_pCalTimeNano[10];
    GT_U32 phase_pCalTimeSec[10];
    GT_BOOL phase_enable[10];
    GT_BOOL phase_breakLoop[10];
    GT_BOOL phase_breakLoopTotal;
    GT_BOOL phase_breakLoopInd;
    MV_HWS_SERDES_AUTO_TUNE_RESULTS_UNT phase_tuneRes[10];
    GT_BOOL initFlag;
} MV_HWS_AVAGO_PORT_MANAGER_EDGE_DETECT_STC;
typedef struct {
    GT_U32 phase_CurrentDelaySize;
    GT_U32 *phase_CurrentDelayPtr;
    GT_U32 phase_InOutI;
    GT_U8 phase_InOutKk;
    GT_BOOL phase_continueExecute;
    GT_U32 phase_Best_LF[10];
    GT_U32 phase_Best_eye[10];
    GT_U32 phase_Best_dly[10];
    int phase_LF1_Arr[10];
    GT_U8 subPhase;
    GT_BOOL parametersInitialized;
    GT_BOOL waitForCoreReady;
} MV_HWS_AVAGO_PORT_MANAGER_ENHANCE_TUNE_STC;
typedef struct {
    GT_BOOL coreStatusReady[10];
    GT_BOOL parametersInitialized;
} MV_HWS_AVAGO_PORT_MANAGER_ONE_SHOT_TUNE_STC;
typedef struct {
    MV_HWS_AVAGO_PORT_MANAGER_EDGE_DETECT_STC *edgeDetectStcPtr;
    MV_HWS_AVAGO_PORT_MANAGER_ENHANCE_TUNE_STC *enhanceTuneStcPtr;
    MV_HWS_AVAGO_PORT_MANAGER_ONE_SHOT_TUNE_STC *oneShotTuneStcPtr;
} MV_HWS_AVAGO_PORT_MANAGER_STC;
typedef MV_HWS_AVAGO_PORT_MANAGER_STC * MV_HWS_AVAGO_PORT_MANAGER_STC_PTR;
typedef struct {
    GT_U32 serdesNumber;
    GT_U32 *serdesToAvagoMapPtr;
    GT_U32 spicoNumber;
    GT_U32 *avagoToSerdesMapPtr;
    GT_BOOL cpllInitDoneStatusArr[3];
    MV_HWS_CPLL_OUTPUT_FREQUENCY cpllCurrentOutFreqArr[3];
    GT_BOOL serdesVosOverride;
    MV_HWS_SBUS_ADDR_TO_SERDES_NUM_FUNC_PTR sbusAddrToSerdesFuncPtr;
    GT_U32 ctleBiasOverride[3];
    GT_U32 ctleBiasValue[3];
    GT_U8 ctleBiasLanesNum;
    GT_U16 ctleBiasMacNum;
} MV_HWS_AVAGO_SERDES_INFO_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD) MV_HWS_CLOCK_SELECT_CFG_FUNC_PTR;
typedef enum {HOST2HWS_LEGACY_MODE, HOST2SERVICE_CPU_IPC_CONNECTION, LAST_HOST2HWS_CONNECTION_TYPE} MV_HWS_CONNECTION_TYPE;
typedef GT_U32 (*)(GT_U8, GT_U32 *, GT_U32 *) MV_HWS_CORE_CLOCK_GET_FUNC_PTR;
typedef struct {
    MV_HWS_PORT_RESET_FUNC_PTR devPortResetFunc;
    MV_HWS_PORT_AUTO_TUNE_SET_EXT_FUNC_PTR portAutoTuneSetExtFunc;
    MV_SYS_DEVICE_INFO deviceInfoFunc;
    MV_HWS_PORT_INIT_FUNC_PTR devApPortinitFunc;
    MV_HWS_CORE_CLOCK_GET_FUNC_PTR coreClockGetFunc;
    MV_HWS_PORT_PARAMS_GET_LANES_FUNC_PTR portParamsGetLanesFunc;
    MV_HWS_SERDES_REF_CLOCK_GET_FUNC_PTR serdesRefClockGetFunc;
    MV_HWS_PORT_INIT_FUNC_PTR devPortinitFunc;
    MV_HWS_CLOCK_SELECT_CFG_FUNC_PTR clkSelCfgGetFunc;
    MV_HWS_PORT_AUTO_TUNE_SET_WA_FUNC_PTR portAutoTuneSetWaFunc;
    MV_HWS_PORT_EXT_MODE_CFG_FUNC_PTR portExtModeCfgFunc;
    MV_HWS_PORT_FIX_ALIGN90_FUNC_PTR portFixAlign90Func;
    MV_HWS_PORT_LB_SET_WA_FUNC_PTR portLbSetWaFunc;
    MV_HWS_PORT_AUTO_TUNE_STOP_FUNC_PTR portAutoTuneStopFunc;
    MV_HWS_PORT_EXT_MODE_CFG_GET_FUNC_PTR portExtModeCfgGetFunc;
    MV_HWS_PORT_PARAMS_SET_FUNC_PTR portParamsSetFunc;
    MV_HWS_PORT_PARAMS_INDEX_GET_FUNC_PTR portParamsIndexGetFunc;
    MV_HWS_REDUNDANCY_VECTOR_GET_FUNC_PTR redundVectorGetFunc;
    MV_HWS_PCS_MARK_MODE_FUNC_PTR pcsMarkModeFunc;
    MV_HWS_PORT_ANP_START_FUNC_PTR devPortAnpStartFunc;
    MV_HWS_PORT_ACCESS_CHECK_FUNC_PTR devPortAccessCheckFunc;
} MV_HWS_DEV_FUNC_PTRS;
typedef enum {Lion2A0, Lion2B0, HooperA0, BobcatA0, Alleycat3A0, BobK, Aldrin, Bobcat3, Pipe, Aldrin2, Raven, Falcon, AC5P, AC5, AC5X, Harrier, LAST_SIL_TYPE} MV_HWS_DEV_TYPE;
typedef struct {
    GT_U8 devNum;
    GT_U32 portGroup;
    GT_U32 elementNum;
} MV_HWS_ELEMENTS_ARRAY;
typedef struct {
    GT_U8 phase;
    GT_U8 phaseFinished;
} MV_HWS_ENHANCE_TUNE_LITE_PHASE_PARAMS;
typedef struct {
    GT_U32 ciderUnit;
    GT_U32 ciderIndexInUnit;
    GT_U32 expressChannelId;
    GT_U32 preemptionChannelId;
} MV_HWS_HAWK_CONVERT_STC;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL) MV_HWS_PCS_MARK_MODE_FUNC_PTR;
typedef MV_HWS_PER_SERDES_INFO_STC * MV_HWS_PER_SERDES_INFO_PTR;
typedef struct {
    struct _HWS_DEVICE_INFO *hostDevInfo;
    GT_U32 serdesNum;
    GT_U32 internalLane;
    MV_HWS_SERDES_TYPE serdesType;
    union {...} serdesData;
} MV_HWS_PER_SERDES_INFO_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL *) MV_HWS_PORT_ACCESS_CHECK_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_AP_CFG *) MV_HWS_PORT_ANP_START_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_AUTO_TUNE_MODE, GT_U32, void *) MV_HWS_PORT_AUTO_TUNE_SET_EXT_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_U32 *) MV_HWS_PORT_AUTO_TUNE_SET_WA_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL, GT_BOOL) MV_HWS_PORT_AUTO_TUNE_STOP_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL) MV_HWS_PORT_EXT_MODE_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL *) MV_HWS_PORT_EXT_MODE_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD) MV_HWS_PORT_FIX_ALIGN90_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_INIT_INPUT_PARAMS *) MV_HWS_PORT_INIT_FUNC_PTR;
typedef struct MV_HWS_PORT_INIT_PARAMS_STC MV_HWS_PORT_INIT_PARAMS;
struct MV_HWS_PORT_INIT_PARAMS_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_U32, GT_U32 *) MV_HWS_PORT_LB_SET_WA_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_INIT_PARAMS *) MV_HWS_PORT_PARAMS_GET_LANES_FUNC_PTR;
typedef GT_U32 (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD) MV_HWS_PORT_PARAMS_INDEX_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD) MV_HWS_PORT_PARAMS_SET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_ACTION) MV_HWS_PORT_RESET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *) MV_HWS_REDUNDANCY_VECTOR_GET_FUNC_PTR;
typedef int (*)(unsigned char, GT_U32 *, unsigned int) MV_HWS_SBUS_ADDR_TO_SERDES_NUM_FUNC_PTR;
typedef struct {
    GT_U32 numOfSerdeses;
    MV_HWS_PER_SERDES_INFO_STC *serdesesDb;
} MV_HWS_SERDES_INFO_STC;
typedef GT_U32 (*)(GT_U8, GT_U32 *) MV_HWS_SERDES_REF_CLOCK_GET_FUNC_PTR;
typedef enum {GEMAC_UNIT, XLGMAC_UNIT, HGLMAC_UNIT, XPCS_UNIT, MMPCS_UNIT, CG_UNIT, INTLKN_UNIT, INTLKN_RF_UNIT, SERDES_UNIT, SERDES_PHY_UNIT, ETI_UNIT, ETI_ILKN_RF_UNIT, D_UNIT, CGPCS_UNIT, CG_RS_FEC_UNIT, PTP_UNIT, D2D_EAGLE_UNIT, D2D_RAVEN_UNIT, RAVEN_BASE_UNIT, MTI_MAC400_UNIT, MTI_MAC100_UNIT, MTI_PCS25_UNIT, MTI_PCS50_UNIT, MTI_PCS100_UNIT, MTI_PCS200_UNIT, MTI_PCS400_UNIT, MTI_LOW_SP_PCS_UNIT, MTI_EXT_UNIT, MTI_RSFEC_UNIT, RAVEN_MSDB_UNIT, RAVEN_MPFS_UNIT, RAVEN_TSU_UNIT, RAVEN_STATISTICS_UNIT, 
    MTI_CPU_MAC_UNIT, MTI_CPU_PCS_UNIT, MTI_CPU_EXT_UNIT, RAVEN_MTI_CPU_MPFS_UNIT, RAVEN_DFX_UNIT, MIF_400_UNIT, MIF_400_BR_UNIT, MIF_400_SEG_UNIT, MIF_USX_UNIT, MIF_CPU_UNIT, ANP_400_UNIT, AN_400_UNIT, ANP_USX_UNIT, AN_USX_UNIT, ANP_USX_O_UNIT, ANP_CPU_UNIT, AN_CPU_UNIT, MTI_USX_MAC_UNIT, MTI_USX_EXT_UNIT, MTI_USX_PCS_UNIT, MTI_USX_LPCS_UNIT, MTI_USX_RSFEC_UNIT, MTI_USX_MULTIPLEXER_UNIT, MTI_CPU_RSFEC_UNIT, MTI_CPU_SGPCS_UNIT, MTI_RSFEC_STATISTICS_UNIT, MTI_USX_RSFEC_STATISTICS_UNIT, 
    LAST_UNIT} MV_HWS_UNITS_ID;
typedef enum {Raven_0, Raven_1, Raven_2, Raven_3, Raven_4, Raven_5, Raven_6, Raven_7, Raven_8, Raven_9, Raven_10, Raven_11, Raven_12, Raven_13, Raven_14, Raven_15, Eagle_0, Eagle_1, Eagle_2, Eagle_3, All} MV_HWS_UNIT_NUM;
typedef struct {
    GT_U32 ilkn0MacCfg0;
    GT_U32 ilkn0ChFcCfg0;
    GT_U32 ilkn0MacCfg2;
    GT_U32 ilkn0MacCfg3;
    GT_U32 ilkn0MacCfg4;
    GT_U32 ilkn0MacCfg6;
    GT_U32 ilkn0ChFcCfg1;
    GT_U32 ilkn0PcsCfg0;
    GT_U32 ilkn0PcsCfg1;
    GT_U32 ilkn0En;
    GT_U32 ilkn0StatEn;
} MV_INTLKN_REG;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32) MV_OS_EXACT_DELAY_FUNC;
typedef void (*)(void * const) MV_OS_FREE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL) MV_OS_HW_TRACE_ENABLE_FUNC;
typedef void *(*)(GT_U32) MV_OS_MALLOC_FUNC;
typedef void (*)(void *, const void *, GT_U32) MV_OS_MEM_COPY_FUNC;
typedef void *(*)(void *, int, GT_U32) MV_OS_MEM_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32) MV_OS_MICRO_DELAY_FUNC;
typedef GT_CHAR *(*)(GT_CHAR *, const GT_CHAR *) MV_OS_STR_CAT_FUNC;
typedef GT_STATUS (*)(GT_U32) MV_OS_TIME_WK_AFTER_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *, GT_U32) MV_REG_ACCESS_GET;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32) MV_REG_ACCESS_SET;
typedef GT_U32 (*)(GT_U8, MV_HWS_REF_CLOCK_SUP_VAL *) MV_SERDES_REF_CLOCK_GET;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_U8, GT_UOPT, GT_UREG_DATA, GT_UREG_DATA *, GT_UREG_DATA) MV_SERDES_REG_ACCESS_GET;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_U8, GT_UOPT, GT_UREG_DATA, GT_UREG_DATA, GT_UREG_DATA) MV_SERDES_REG_ACCESS_SET;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *) MV_SERVER_REG_ACCESS_GET;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32) MV_SERVER_REG_ACCESS_SET;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) MV_SERVER_REG_FIELD_ACCESS_GET;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32) MV_SERVER_REG_FIELD_ACCESS_SET;
typedef MV_INTLKN_REG *(*)(GT_U8, GT_U32, GT_U32) MV_SIL_ILKN_REG_DB_GET;
typedef GT_STATUS (*)(GT_U8, GT_U32 *, GT_U32 *) MV_SYS_DEVICE_INFO;
typedef GT_STATUS (*)(GT_U32 *, GT_U32 *) MV_TIMER_GET;
struct _HWS_DEVICE_INFO;

File common/h/cpss/common/labServices/port/gop/common/siliconIf/siliconAddress.h:
typedef struct {
    GT_U16 regOffset;
    GT_U16 offsetFormula;
    GT_U8 fieldStart;
    GT_U8 fieldLen;
} MV_HWS_REG_ADDR_FIELD_STC;
enum falconRegs;
enum lion2Regs;
enum puma3Regs;
enum sdwRegs;

File common/h/cpss/common/labServices/port/gop/port/mac/cgMac/mvHwsCgMacDb.h:
typedef enum {CGMAC_UNRESET_SEQ, CGMAC_RESET_SEQ, CGMAC_MODE_SEQ, CGMAC_LPBK_NORMAL_SEQ, CGMAC_LPBK_TX2RX_SEQ, CGMAC_XLGMAC_LPBK_NORMAL_SEQ, CGMAC_XLGMAC_LPBK_RX2TX_SEQ, CGMAC_XLGMAC_LPBK_TX2RX_SEQ, CGMAC_MODE_1_LANE_SEQ, CGMAC_MODE_2_LANE_SEQ, CGMAC_MODE_4_LANE_SEQ, CGMAC_POWER_DOWN_1_LANE_SEQ, CGMAC_POWER_DOWN_2_LANE_SEQ, CGMAC_POWER_DOWN_4_LANE_SEQ, CGMAC_FC_DISABLE_SEQ, CGMAC_FC_BOTH_SEQ, CGMAC_FC_RX_ONLY_SEQ, CGMAC_FC_TX_ONLY_SEQ, CGMAC_MODE_4_LANE_UPDATE_SEQ, 
    MV_MAC_CG_LAST_SEQ} MV_HWS_CG_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mac/d2dMac/mvHwsD2dMacIf.h:
typedef struct {
    GT_U32 rxPayloadType;
    GT_U32 rxBadCntMask;
} MV_HWS_D2D_FRAME_CHECKER_CONFIG_STC;
typedef struct {
    GT_U32 txFrameRepeatCount;
    GT_U32 txFrameTableCount;
    GT_U32 txFrameTableStartPointer;
    GT_U32 txPayloadType;
} MV_HWS_D2D_FRAME_GEN_CONFIG_STC;
typedef struct {
    GT_U32 frameRepeatCnt;
    GT_U32 idleWord;
    GT_U32 frameCommand;
    GT_U32 frameLengthMax;
    GT_U32 frameLengthMin;
    GT_U32 framePayload;
    GT_U32 frameHeader[7];
} MV_HWS_D2D_FRAME_TABLE_CONFIG_STC;

File common/h/cpss/common/labServices/port/gop/port/mac/geMac/mvHwsGeMacDb.h:
typedef enum {GEMAC_UNRESET_SEQ, GEMAC_RESET_SEQ, GEMAC_X_MODE_SEQ, GEMAC_SG_MODE_SEQ, GEMAC_LPBK_NORMAL_SEQ, GEMAC_LPBK_RX2TX_SEQ, GEMAC_LPBK_TX2RX_SEQ, GEMAC_NET_X_MODE_SEQ, GEMAC_NET_SG_MODE_SEQ, GEMAC_FC_DISABLE_SEQ, GEMAC_FC_BOTH_SEQ, GEMAC_FC_RX_ONLY_SEQ, GEMAC_FC_TX_ONLY_SEQ, GEMAC_X_MODE_UPDATE_SEQ, GEMAC_NET_X_MODE_UPDATE_SEQ, MV_MAC_LAST_SEQ} MV_HWS_GE_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mac/hglMac/mvHwsHglMacDb.h:
typedef enum {HGLMAC_MODE_SEQ, MV_MAC_HGL_LAST_SEQ} MV_HWS_HGL_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mac/ilknMac/mvHwsIlknMacDb.h:
typedef enum {INTLKN_MAC_UNRESET_SEQ, INTLKN_MAC_RESET_SEQ, INTLKN_MAC_MODE_12_LANES_SEQ, INTLKN_MAC_MODE_16_LANES_SEQ, INTLKN_MAC_MODE_24_LANES_SEQ, INTLKN_MAC_LPBK_NORMAL_SEQ, INTLKN_MAC_LPBK_TX2RX_SEQ, INTLKN_MAC_MODE_4_LANES_SEQ, INTLKN_MAC_MODE_8_LANES_SEQ, MV_MAC_INTKLN_LAST_SEQ} MV_HWS_INTKLN_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mac/mvHwsMacIf.h:
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_U32 *) MV_HWS_MAC_ACTIVE_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_U32, GT_U32, GT_U32, MV_HWS_PORT_CRC_MODE, MV_HWS_PORT_CRC_MODE) MV_HWS_MAC_CLEAR_CHANNEL_CFG;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_FLOW_CONTROL_ENT) MV_HWS_MAC_FC_STATE_CFG_FUNC_PTR;
typedef struct {
    MV_HWS_MAC_RESET_FUNC_PTR macRestFunc;
    MV_HWS_MAC_MODE_CFG_FUNC_PTR macModeCfgFunc;
    MV_HWS_MAC_LB_CFG_FUNC_PTR macLbCfgFunc;
    MV_HWS_MAC_LB_GET_FUNC_PTR macLbStatusGetFunc;
    MV_HWS_MAC_LINK_GET_FUNC_PTR macLinkGetFunc;
    MV_HWS_MAC_TYPE_GET_FUNC_PTR macTypeGetFunc;
    MV_HWS_MAC_ACTIVE_STATUS_FUNC_PTR macActiveStatusFunc;
    MV_HWS_MAC_CLEAR_CHANNEL_CFG macClearChannelCfgFunc;
    MV_HWS_MAC_FC_STATE_CFG_FUNC_PTR macFcStateCfgFunc;
    MV_HWS_MAC_PORT_ENABLE_FUNC_PTR macPortEnableFunc;
    MV_HWS_MAC_PORT_ENABLE_GET_FUNC_PTR macPortEnableGetFunc;
} MV_HWS_MAC_FUNC_PTRS;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_LB_TYPE) MV_HWS_MAC_LB_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_LB_TYPE *) MV_HWS_MAC_LB_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL *) MV_HWS_MAC_LINK_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_ATTRIBUTES_INPUT_PARAMS *) MV_HWS_MAC_MODE_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL) MV_HWS_MAC_PORT_ENABLE_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL *) MV_HWS_MAC_PORT_ENABLE_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_RESET) MV_HWS_MAC_RESET_FUNC_PTR;
typedef char *(*)(void) MV_HWS_MAC_TYPE_GET_FUNC_PTR;

File common/h/cpss/common/labServices/port/gop/port/mac/tcamMac/mvHwsTcamMacDb.h:
typedef enum {TCAMMAC_UNRESET_SEQ, TCAMMAC_RESET_SEQ, TCAMMAC_MODE_SEQ, MV_MAC_TCAM_LAST_SEQ} MV_HWS_TCAM_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mac/xgMac/mvHwsXgMacDb.h:
typedef enum {XGMAC_MODE_SEQ, MV_MAC_XG_LAST_SEQ} MV_HWS_XG_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mac/xlgMac/mvHwsXlgMacDb.h:
typedef enum {XLGMAC_UNRESET_SEQ, XLGMAC_RESET_SEQ, XLGMAC_MODE_1_Lane_SEQ, XLGMAC_MODE_2_Lane_SEQ, XLGMAC_MODE_4_Lane_SEQ, XLGMAC_LPBK_NORMAL_SEQ, XLGMAC_LPBK_RX2TX_SEQ, XLGMAC_LPBK_TX2RX_SEQ, XLGMAC_FC_DISABLE_SEQ, XLGMAC_FC_BOTH_SEQ, XLGMAC_FC_RX_ONLY_SEQ, XLGMAC_FC_TX_ONLY_SEQ, XLGMAC_POWER_DOWN_SEQ, XLGMAC_MODE_1_Lane_25G_SEQ, XLGMAC_MODE_2_Lane_50G_SEQ, XLGMAC_MODE_1_Lane_25G_RS_FEC_SEQ, XLGMAC_MODE_2_Lane_50G_RS_FEC_SEQ, XLGMAC_MODE_4_Lane_MLG_SEQ, XLGMAC_RESET_4_Lane_MLG_SEQ, 
    XLGMAC_UNRESET_4_Lane_MLG_SEQ, XLGMAC_POWER_DOWN_4_Lane_MLG_SEQ, XLGMAC_MODE_1_Lane_UPDATE_SEQ, XLGMAC_MODE_2_Lane_UPDATE_SEQ, XLGMAC_MODE_4_Lane_UPDATE_SEQ, XLGMAC_MODE_2_Lane_FULL_UPDATE_SEQ, MV_MAC_XLG_LAST_SEQ} MV_HWS_XLG_MAC_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/mvHwsIpcDefs.h:
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 anResBit;
} MV_HWS_IPC_AN_RES_BIT_INFO_STC;
typedef enum {MV_HWS_IPC_PORT_AP_ENABLE_MSG, MV_HWS_IPC_PORT_AP_DISABLE_MSG, MV_HWS_IPC_PORT_AP_SYS_CFG_VALID_MSG, MV_HWS_IPC_PORT_AP_CFG_GET_MSG, MV_HWS_IPC_PORT_AP_STATUS_MSG, MV_HWS_IPC_PORT_AP_STATS_MSG, MV_HWS_IPC_PORT_AP_STATS_RESET_MSG, MV_HWS_IPC_PORT_AP_INTROP_GET_MSG, MV_HWS_IPC_PORT_AP_INTROP_SET_MSG, MV_HWS_IPC_PORT_AP_DEBUG_GET_MSG, MV_HWS_IPC_PORT_PARAMS_MSG, MV_HWS_IPC_PORT_AVAGO_SERDES_INIT_MSG, MV_HWS_IPC_PORT_AVAGO_GUI_SET_MSG, MV_HWS_IPC_PORT_AVAGO_SERDES_RESET_DATA_MSG, 
    MV_HWS_IPC_VOS_OVERRIDE_PARAMS_DATA_MSG, MV_HWS_IPC_VOS_OVERRIDE_MODE_SET_MSG, MV_HWS_IPC_NOOP_MSG, MV_HWS_IPC_PORT_INIT_MSG, MV_HWS_IPC_PORT_RESET_MSG, MV_HWS_IPC_PORT_RESET_EXT_MSG, MV_HWS_IPC_HWS_LOG_GET_MSG, MV_HWS_IPC_PORT_AUTO_TUNE_SET_EXT_MSG, MV_HWS_IPC_PORT_AUTO_TUNE_STOP_MSG, MV_HWS_IPC_PORT_AUTO_TUNE_STATE_CHK_MSG, MV_HWS_IPC_PORT_LINK_STATUS_GET_MSG, MV_HWS_IPC_PORT_FEC_CONFIG_GET_MSG, MV_HWS_IPC_PORT_TX_ENABLE_GET_MSG, MV_HWS_IPC_PORT_SERDES_RESET_MSG, MV_HWS_IPC_PORT_POLARITY_SET_MSG, 
    MV_HWS_IPC_PORT_FEC_CONFIG_MSG, MV_HWS_IPC_PORT_TX_ENABLE_MSG, MV_HWS_IPC_PORT_SIGNAL_DETECT_GET_MSG, MV_HWS_IPC_PORT_CDR_LOCK_STATUS_GET_MSG, MV_HWS_IPC_PORT_LOOPBACK_SET_MSG, MV_HWS_IPC_PORT_LOOPBACK_STATUS_GET_MSG, MV_HWS_IPC_PORT_PPM_SET_MSG, MV_HWS_IPC_PORT_PPM_GET_MSG, MV_HWS_IPC_PORT_IF_GET_MSG, MV_HWS_IPC_PORT_SERDES_MANUAL_RX_CONFIG_MSG, MV_HWS_IPC_PORT_SERDES_MANUAL_TX_CONFIG_MSG, MV_HWS_IPC_PORT_PCS_ACTIVE_STATUS_GET_CONFIG_MSG, MV_HWS_IPC_PORT_FC_STATE_SET_MSG, 
    MV_HWS_IPC_PORT_ENABLE_CTRL_SET_MSG, MV_HWS_IPC_PORT_ENABLE_CTRL_GET_MSG, MV_HWS_IPC_PORT_SERDES_RX_PARAMETERS_OFFSET_CONFIG_MSG, MV_HWS_IPC_PORT_SERDES_RX_CONFIG_OVERRIDE_MSG, MV_HWS_IPC_PORT_ADAPTIVE_CTLE_ENABLE_MSG, MV_HWS_IPC_NON_AP_PORT_IS_LINK_UP_MSG, MV_HWS_IPC_PORT_LINK_BINDING_SET_MSG, MV_HWS_IPC_PORT_LINK_BINDING_REGISTER_AP_MSG, MV_HWS_IPC_PORT_OPERATION_MSG, MV_HWS_IPC_PORT_SERDES_TX_CONFIG_MSG, MV_HWS_IPC_PORT_SERDES_RX_CONFIG_MSG, MV_HWS_IPC_PORT_AP_ENABLE_WAIT_ACK_MSG, 
    MV_HWS_IPC_AN_RES_BIT_SET_MSG, MV_HWS_IPC_LAST_CTRL_MSG_TYPE} MV_HWS_IPC_CTRL_MSG_DEF_TYPE;
typedef struct {
    GT_U8 devNum;
    GT_U8 ctrlMsgType;
    GT_U8 msgQueueId;
    GT_U8 msgLength;
    MV_HWS_IPC_MSG_API_PARAMS msgData;
} MV_HWS_IPC_CTRL_MSG_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U16 phyPairNum;
    GT_8 enable;
    GT_U8 portMode;
} MV_HWS_IPC_LINK_BINDING_STRUCT;
typedef struct {
    GT_U32 fwBaseAddr;
    GT_U32 logBaseAddr;
    GT_U32 logCountAddr;
    GT_U32 logPointerAddr;
    GT_U32 logResetAddr;
} MV_HWS_IPC_LOG_GET;
typedef union {
    GT_U8 ctrlData[56];
    MV_HWS_IPC_PORT_GENERAL_STRUCT portGeneral;
    MV_HWS_IPC_PORT_PARMAS_DATA_STRUCT portParams;
    MV_HWS_IPC_PORT_INIT_DATA_STRUCT portInit;
    MV_HWS_IPC_PORT_RESET_DATA_STRUCT portReset;
    MV_HWS_IPC_PORT_AUTO_TUNE_SET_EXT_DATA_STRUCT portAutoTuneSetExt;
    MV_HWS_IPC_PORT_INFO_STRUCT portLinkStatus;
    MV_HWS_IPC_PORT_AUTO_TUNE_STOP_DATA_STRUCT portAutoTuneStop;
    MV_HWS_IPC_PORT_INFO_STRUCT portAutoTuneStateChk;
    MV_HWS_IPC_PORT_INFO_STRUCT portTxEnableGet;
    MV_HWS_IPC_PORT_INFO_STRUCT portFecConfigGet;
    MV_HWS_IPC_PORT_POLARITY_SET_DATA_STRUCT portPolaritySet;
    MV_HWS_IPC_PORT_TX_ENABLE_DATA_STRUCT portTxEnableData;
    MV_HWS_IPC_PORT_INFO_STRUCT portSignalDetectGet;
    MV_HWS_IPC_PORT_INFO_STRUCT portCdrLockStatus;
    MV_HWS_IPC_PORT_FEC_CONFIG_DATA_STRUCT portFecConfig;
    MV_HWS_IPC_PORT_LOOPBACK_SET_DATA_STRUCT portLoopbackSet;
    MV_HWS_IPC_PORT_LOOPBACK_GET_DATA_STRUCT portLoopbackGet;
    MV_HWS_IPC_PORT_PPM_SET_DATA_STRUCT portPPMSet;
    MV_HWS_IPC_PORT_INFO_STRUCT portPPMGet;
    MV_HWS_IPC_PORT_IF_GET_DATA_STRUCT portInterfaceGet;
    MV_HWS_IPC_PORT_SERDES_MANUAL_RX_CONFIG_DATA_STRUCT serdesManualRxConfig;
    MV_HWS_IPC_PORT_SERDES_MANUAL_TX_CONFIG_DATA_STRUCT serdesManualTxConfig;
    MV_HWS_IPC_PORT_PCS_ACTIVE_STATUS_GET_DATA_STRUCT portPcsActiveStatus;
    MV_HWS_IPC_PORT_FLOW_CONTROL_SET_DATA_STRUCT portFcStateSet;
    MV_HWS_IPC_PORT_AP_DATA_STRUCT apConfig;
    MV_HWS_IPC_PORT_INFO_STRUCT apSysConfig;
    MV_HWS_IPC_PORT_INFO_STRUCT apEnableWaitAck;
    MV_HWS_IPC_PORT_INFO_STRUCT apStatusGet;
    MV_HWS_IPC_PORT_INFO_STRUCT apStatsGet;
    MV_HWS_IPC_PORT_INFO_STRUCT apStatsReset;
    MV_HWS_IPC_PORT_INFO_STRUCT apIntropGet;
    MV_HWS_IPC_PORT_AP_INTROP_STRUCT apIntropSet;
    MV_HWS_IPC_PORT_INFO_STRUCT logGet;
    MV_HWS_IPC_PORT_INFO_STRUCT avagoAddrGet;
    MV_HWS_IPC_PORT_AVAGO_GUI_STRUCT avagoGuiSet;
    MV_HWS_IPC_NOOP_DATA_STRUCT noop;
    MV_HWS_IPC_PORT_INFO_STRUCT avagoAaplInit;
    MV_HWS_IPC_VOS_OVERRIDE_PARAMS vosOverrideParams;
    MV_HWS_IPC_VOS_OVERRIDE_MODE_STRUCT vosOverrideModeSet;
    MV_HWS_IPC_PORT_ENABLE_CTRL_DATA_STRUCT portEnableCtrlSet;
    MV_HWS_IPC_PORT_SERDES_TX_OFFSETS_STC portSerdesTxParametersOffsetConfig;
    MV_HWS_IPC_PORT_SERDES_RX_CONFIG_OVERRIDE_STC portSerdesRxConfigOverride;
    MV_HWS_IPC_PORT_ADAPTIVE_CTLE_ENABLE_STC adaptCtlePortEnable;
    MV_HWS_IPC_NON_AP_PORT_IS_LINK_UP_STC nonApPortIsLinkUp;
    MV_HWS_IPC_LINK_BINDING_STRUCT portLinkBinding;
    MV_HWS_IPC_PORT_OPERATION_STRUCT portOperation;
    MV_HWS_IPC_PORT_SERDES_TX_CONFIG_STC serdesTxConfig;
    MV_HWS_IPC_PORT_SERDES_RX_CONFIG_STC serdesRxConfig;
    MV_HWS_IPC_AN_RES_BIT_INFO_STC anResBitSet;
} MV_HWS_IPC_MSG_API_PARAMS;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U8 isLinkUp;
    GT_U8 trainLf[8];
    GT_U8 enhTrainDelay[8];
    GT_U8 serdesList[8];
    GT_U8 numOfSerdeses;
} MV_HWS_IPC_NON_AP_PORT_IS_LINK_UP_STC;
typedef struct {
    GT_U32 data;
} MV_HWS_IPC_NOOP_DATA_STRUCT;
typedef struct {
    GT_U32 data;
} MV_HWS_IPC_NOOP_REPLY;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U8 enable;
} MV_HWS_IPC_PORT_ADAPTIVE_CTLE_ENABLE_STC;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 advMode;
    GT_U32 options;
    GT_U16 polarityVector;
    GT_U8 laneNum;
    GT_U8 pcsNum;
    GT_U8 macNum;
    GT_U8 refClockSrcParams;
} MV_HWS_IPC_PORT_AP_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U16 attrBitMask;
    GT_U16 txDisDuration;
    GT_U16 abilityDuration;
    GT_U16 abilityMaxInterval;
    GT_U16 abilityFailMaxInterval;
    GT_U16 apLinkDuration;
    GT_U16 apLinkMaxInterval;
    GT_U16 pdLinkDuration;
    GT_U16 pdLinkMaxInterval;
    GT_U16 anPam4LinkMaxInterval;
} MV_HWS_IPC_PORT_AP_INTROP_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 portTuningMode;
    GT_U32 optAlgoMask;
} MV_HWS_IPC_PORT_AUTO_TUNE_SET_EXT_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 stopRx;
    GT_U32 stopTx;
} MV_HWS_IPC_PORT_AUTO_TUNE_STOP_DATA_STRUCT;
typedef struct {
    GT_U32 cpuId;
    GT_U32 state;
} MV_HWS_IPC_PORT_AVAGO_GUI_STRUCT;
typedef struct {
    GT_U32 portEnableCtrl;
} MV_HWS_IPC_PORT_ENABLE_CTRL_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 portFecType;
} MV_HWS_IPC_PORT_FEC_CONFIG_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 fcState;
} MV_HWS_IPC_PORT_FLOW_CONTROL_SET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U8 portMiscData[40];
} MV_HWS_IPC_PORT_GENERAL_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
} MV_HWS_IPC_PORT_IF_GET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
} MV_HWS_IPC_PORT_INFO_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 lbPort;
    GT_U32 refClock;
    GT_U32 refClockSource;
} MV_HWS_IPC_PORT_INIT_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 lpPlace;
} MV_HWS_IPC_PORT_LOOPBACK_GET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 lpPlace;
    GT_U32 lbType;
} MV_HWS_IPC_PORT_LOOPBACK_SET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portOperation;
    GT_U32 portData[4];
} MV_HWS_IPC_PORT_OPERATION_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portStandard;
    GT_U32 portMacType;
    GT_U32 portMacNumber;
    GT_U32 portPcsType;
    GT_U32 portPcsNumber;
    GT_U32 portFecMode;
    GT_U32 serdesSpeed;
    GT_U8 firstLaneNum;
    GT_U8 numOfActLanes;
    GT_U8 activeLanesList[10];
    GT_U32 serdesMediaType;
    GT_U32 serdes10BitStatus;
} MV_HWS_IPC_PORT_PARMAS_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
} MV_HWS_IPC_PORT_PCS_ACTIVE_STATUS_GET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_32 txInvMask;
    GT_32 rxInvMask;
} MV_HWS_IPC_PORT_POLARITY_SET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 portPPM;
} MV_HWS_IPC_PORT_PPM_SET_DATA_STRUCT;
typedef struct {
    GT_U32 ifNum;
    GT_U32 capability;
    GT_U32 options;
} MV_HWS_IPC_PORT_REPLY_AP_CFG_GET;
typedef struct {
    GT_U16 txDisDuration;
    GT_U16 abilityDuration;
    GT_U16 abilityMaxInterval;
    GT_U16 abilityFailMaxInterval;
    GT_U16 apLinkDuration;
    GT_U16 apLinkMaxInterval;
    GT_U16 pdLinkDuration;
    GT_U16 pdLinkMaxInterval;
    GT_U16 anPam4LinkMaxInterval;
} MV_HWS_IPC_PORT_REPLY_AP_INTROP_GET;
typedef struct {
    GT_U16 txDisCnt;
    GT_U16 abilityCnt;
    GT_U16 abilitySuccessCnt;
    GT_U16 linkFailCnt;
    GT_U16 linkSuccessCnt;
    GT_U32 hcdResoultionTime;
    GT_U32 linkUpTime;
} MV_HWS_IPC_PORT_REPLY_AP_STATS_GET;
typedef struct {
    GT_U16 state;
    GT_U16 status;
    GT_U16 laneNum;
    GT_U16 ARMSmStatus;
    GT_U32 hcdStatus;
} MV_HWS_IPC_PORT_REPLY_AP_STATUS_GET;
typedef struct {
    GT_U32 rxTune;
    GT_U32 txTune;
} MV_HWS_IPC_PORT_REPLY_AUTO_TUNE_STATE_CHK;
typedef struct {
    GT_U32 size;
    GT_U32 addr;
} MV_HWS_IPC_PORT_REPLY_AVAGO_AAPL_GET;
typedef struct {
    GT_U32 portIf;
} MV_HWS_IPC_PORT_REPLY_IF_GET;
typedef struct {
    GT_U32 lbType;
} MV_HWS_IPC_PORT_REPLY_LOOPBACK_STATUS_GET;
typedef struct {
    GT_U32 status[10];
} MV_HWS_IPC_PORT_REPLY_PER_SERDES_STATUS_GET;
typedef struct {
    GT_U32 portPpm;
} MV_HWS_IPC_PORT_REPLY_PPM_GET;
typedef struct {
    GT_U32 results;
} MV_HWS_IPC_PORT_REPLY_RESULT;
typedef struct {
    GT_U32 status;
} MV_HWS_IPC_PORT_REPLY_STATUS_GET;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 action;
} MV_HWS_IPC_PORT_RESET_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U32 serdesNum;
    GT_U32 serdesType;
    GT_U32 portTuningMode;
    GT_U32 sqlch;
    GT_U32 ffeRes;
    GT_U32 ffeCap;
    GT_U32 dfeEn;
    GT_U32 alig;
} MV_HWS_IPC_PORT_SERDES_MANUAL_RX_CONFIG_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U32 serdesNum;
    GT_U32 serdesType;
    MV_HWS_SERDES_TX_CONFIG_DATA_UNT manTxTuneStc;
} MV_HWS_IPC_PORT_SERDES_MANUAL_TX_CONFIG_DATA_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    MV_HWS_MAN_TUNE_CTLE_CONFIG_OVERRIDE rxCfg;
} MV_HWS_IPC_PORT_SERDES_RX_CONFIG_OVERRIDE_STC;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U16 serdesSpeed;
    GT_U16 serdesLane;
    GT_U32 serdesType;
    MV_HWS_SERDES_RX_OVERRIDE_CONFIG_DATA_UNT rxCfg;
} MV_HWS_IPC_PORT_SERDES_RX_CONFIG_STC;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U16 serdesSpeed;
    GT_U16 serdesLane;
    GT_U32 serdesType;
    MV_HWS_SERDES_TX_OVERRIDE_CONFIG_DATA_UNT txCfg;
} MV_HWS_IPC_PORT_SERDES_TX_CONFIG_STC;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 serdesSpeed;
    GT_U8 serdesLane;
    GT_U16 offsets;
} MV_HWS_IPC_PORT_SERDES_TX_OFFSETS_STC;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 enable;
} MV_HWS_IPC_PORT_TX_ENABLE_DATA_STRUCT;
typedef struct {
    GT_U32 txOffsetBaseAddr;
    GT_U32 txOffsetSize;
} MV_HWS_IPC_PORT_TX_OFFSETS_INFO_STRUCT;
typedef union {
    GT_U8 resultData[40];
    MV_HWS_IPC_PORT_REPLY_AUTO_TUNE_STATE_CHK portAutoTuneStateChk;
    MV_HWS_IPC_PORT_REPLY_STATUS_GET portStatusGet;
    MV_HWS_IPC_PORT_REPLY_RESULT portReplyGet;
    MV_HWS_IPC_PORT_REPLY_PER_SERDES_STATUS_GET portSerdesTxEnableGet;
    MV_HWS_IPC_PORT_REPLY_LOOPBACK_STATUS_GET portLoopbackStatusGet;
    MV_HWS_IPC_PORT_REPLY_PPM_GET portPpmGet;
    MV_HWS_IPC_PORT_REPLY_IF_GET portIfGet;
    MV_HWS_IPC_PORT_REPLY_PER_SERDES_STATUS_GET portSerdesSignalDetectGet;
    MV_HWS_IPC_PORT_REPLY_PER_SERDES_STATUS_GET portSerdesCdrLockStatusGet;
    MV_HWS_IPC_PORT_REPLY_AP_CFG_GET portApCfgGet;
    MV_HWS_IPC_PORT_REPLY_AP_STATUS_GET portApStatusGet;
    MV_HWS_IPC_PORT_REPLY_AP_STATS_GET portApStatsGet;
    MV_HWS_IPC_PORT_REPLY_AP_INTROP_GET portApIntropGet;
    MV_HWS_IPC_LOG_GET logGet;
    MV_HWS_IPC_NOOP_REPLY noopReply;
    MV_HWS_IPC_PORT_REPLY_AVAGO_AAPL_GET portAvagoAaplGet;
    MV_HWS_IPC_PORT_ENABLE_CTRL_DATA_STRUCT portEnableCtrlGet;
    MV_HWS_IPC_PORT_TX_OFFSETS_INFO_STRUCT portSerdesTxParametersOffsetInfoCfg;
} MV_HWS_IPC_REPLY_MSG_DATA_TYPE;
typedef struct {
    GT_U32 returnCode;
    GT_U32 replyTo;
    MV_HWS_IPC_REPLY_MSG_DATA_TYPE readData;
} MV_HWS_IPC_REPLY_MSG_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 vosOverrideMode;
} MV_HWS_IPC_VOS_OVERRIDE_MODE_STRUCT;
typedef struct {
    GT_U16 portGroup;
    GT_U16 phyPortNum;
    GT_U32 portMode;
    GT_U32 vosOverrideParamsBufferPtr[8];
    GT_U32 vosOverrideParamsBufferIdx;
    GT_U32 vosOverrideParamsBufferLength;
} MV_HWS_IPC_VOS_OVERRIDE_PARAMS;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortAnp.h:
typedef struct {
    MV_HWS_ANP_PORT_COUNTERS portConters;
    MV_HWS_ANP_PORT_SM portSm;
} MV_HWS_ANP_INFO_STC;
typedef struct {
    GT_U8 interopLinkTimer;
} MV_HWS_ANP_MISC_PARAM_STC;
typedef struct {
    GT_U32 anRestartCounter;
    GT_U32 dspLockFailCounter;
    GT_U32 linkFailCounter;
    GT_U32 txTrainDuration;
    GT_U32 txTrainFailCounter;
    GT_U32 txTrainTimeoutCounter;
    GT_U32 txTrainOkCounter;
    GT_U32 rxInitOk;
    GT_U32 rxInitTimeOut;
    GT_U32 rxTrainFailed;
    GT_U32 rxTrainOk;
    GT_U32 rxTrainTimeOut;
    GT_U32 rxTrainDuration;
} MV_HWS_ANP_PORT_COUNTERS;
typedef struct {
    MV_HWS_ANP_SD_MUX_STC anpSdMuxDb[4][14];
    MV_HWS_AP_CFG *anpPortParamPtr[128];
    GT_BOOL *anpSkipResetPtr[128];
    GT_U32 *anpCmdIntLineIdxPtr[128];
    MV_HWS_ANP_MISC_PARAM_STC *anpPortMiscParamDbPtr[128];
} MV_HWS_ANP_PORT_DATA_STC;
typedef struct {
    GT_U32 chSmState;
    GT_U32 txSmState;
    GT_U32 rxSmState;
} MV_HWS_ANP_PORT_SM;
typedef struct {
    GT_U32 hwSerdesIdx;
    GT_U32 outSerdesIdx;
} MV_HWS_ANP_SD_MUX_STC;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortApInitIf.h:
typedef struct {
    GT_U32 apLaneNum;
    GT_U32 modesVector;
    GT_BOOL fcPause;
    GT_BOOL fcAsmDir;
    GT_BOOL fecSup;
    GT_BOOL fecReq;
    GT_BOOL nonceDis;
    MV_HWS_REF_CLOCK_CFG refClockCfg;
    GT_U16 polarityVector;
    GT_U32 fecAdvanceAbil;
    GT_U32 fecAdvanceReq;
    GT_U32 ctleBiasValue;
    GT_U8 specialSpeeds;
    GT_U32 extraOperation;
    GT_BOOL skipRes;
} MV_HWS_AP_CFG;
typedef enum {MV_HWS_AP_DEBUG_LOG_OUTPUT_TERMINAL_E, MV_HWS_AP_DEBUG_LOG_OUTPUT_CPSS_LOG_E, MV_HWS_AP_DEBUG_LOG_OUTPUT_CPSS_OS_LOG_E, MV_HWS_AP_DEBUG_LOG_OUTPUT_LAST_E} MV_HWS_AP_DEBUG_LOG_OUTPUT_ENT;
typedef struct {
    GT_U16 attrBitMask;
    GT_U16 txDisDuration;
    GT_U16 abilityDuration;
    GT_U16 abilityMaxInterval;
    GT_U16 abilityFailMaxInterval;
    GT_U16 apLinkDuration;
    GT_U16 apLinkMaxInterval;
    GT_U16 pdLinkDuration;
    GT_U16 pdLinkMaxInterval;
    GT_U16 anPam4LinkMaxInterval;
} MV_HWS_AP_PORT_INTROP;
typedef struct {
    GT_U16 txDisCnt;
    GT_U16 abilityCnt;
    GT_U16 abilitySuccessCnt;
    GT_U16 linkFailCnt;
    GT_U16 linkSuccessCnt;
    GT_U32 hcdResoultionTime;
    GT_U32 linkUpTime;
    GT_U32 rxTrainDuration;
} MV_HWS_AP_PORT_STATS;
typedef struct {
    GT_U32 preApPortNum;
    GT_U32 apLaneNum;
    GT_U32 postApPortNum;
    MV_HWS_PORT_STANDARD postApPortMode;
    MV_HWS_HCD_INFO hcdResult;
    GT_U32 smState;
    GT_U32 smStatus;
    GT_U32 arbStatus;
} MV_HWS_AP_PORT_STATUS;
typedef struct {
    GT_U32 fwBaseAddr;
    GT_U32 fwLogBaseAddr;
    GT_U32 fwLogCountAddr;
    GT_U32 fwLogPointerAddr;
    GT_U32 fwLogResetAddr;
} MV_HWS_FW_LOG;
typedef struct {
    GT_BOOL hcdFound;
    GT_U32 hcdLinkStatus;
    GT_U32 hcdResult;
    GT_U32 hcdPcsLockStatus;
    GT_BOOL hcdFecEn;
    GT_BOOL hcdFcRxPauseEn;
    GT_BOOL hcdFcTxPauseEn;
    GT_U32 hcdFecType;
    GT_U32 hcdMisc;
} MV_HWS_HCD_INFO;
typedef struct {
    MV_HWS_REF_CLOCK_SUP_VAL refClockFreq;
    MV_HWS_REF_CLOCK_SOURCE refClockSource;
    GT_U8 cpllOutFreq;
    GT_BOOL isValid;
} MV_HWS_REF_CLOCK_CFG;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortCfgIf.h:
typedef enum {HWS_1Byte_CRC, HWS_2Bytes_CRC, HWS_3Bytes_CRC, HWS_4Bytes_CRC} MV_HWS_PORT_CRC_MODE;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortCtrlApLogDefs.h:
typedef struct {
    GT_U32 timestamp;
    char info[60];
} MV_HWS_LOG_ENTRY;
typedef struct {
    GT_U32 timestamp;
    GT_U32 info;
} MV_HWS_PORT_CTRL_LOG_ENTRY;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortInitIf.h:
typedef enum {MV_HWS_25MHzIN, MV_HWS_156MHz_IN, MV_HWS_MAX_INPUT_FREQUENCY} MV_HWS_CPLL_INPUT_FREQUENCY;
typedef enum {CPLL0, CPLL1, CPLL2, MV_HWS_MAX_CPLL_NUMBER} MV_HWS_CPLL_NUMBER;
typedef enum {MV_HWS_156MHz_OUT, MV_HWS_78MHz_OUT, MV_HWS_200MHz_OUT, MV_HWS_312MHz_OUT, MV_HWS_161MHz_OUT, MV_HWS_164MHz_OUT, MV_HWS_MAX_OUTPUT_FREQUENCY} MV_HWS_CPLL_OUTPUT_FREQUENCY;
typedef enum {MV_HWS_ANA_GRP0, MV_HWS_ANA_GRP1, MV_HWS_CPLL, MV_HWS_RCVR_CLK_IN, MV_HWS_MAX_INPUT_SRC_CLOCK} MV_HWS_INPUT_SRC_CLOCK;
typedef enum {PORT_POWER_DOWN, PORT_RESET, PORT_PARTIAL_POWER_DOWN} MV_HWS_PORT_ACTION;
typedef struct {
    GT_BOOL preemptionEnable;
    MV_HWS_PORT_SPEED_ENT portSpeed;
} MV_HWS_PORT_ATTRIBUTES_INPUT_PARAMS;
typedef struct {
    GT_BOOL lbPort;
    MV_HWS_REF_CLOCK_SUP_VAL refClock;
    MV_HWS_REF_CLOCK_SOURCE refClockSource;
    MV_HWS_PORT_FEC_MODE portFecMode;
    MV_HWS_PORT_SPEED_ENT portSpeed;
    GT_BOOL isPreemptionEnabled;
    GT_BOOL apEnabled;
    GT_BOOL autoNegEnabled;
} MV_HWS_PORT_INIT_INPUT_PARAMS;
typedef struct {
    GT_BOOL enableSerdesMuxing;
    GT_U8 serdesLanes[10];
} MV_HWS_PORT_SERDES_TO_MAC_MUX;
typedef enum {_100Base_FX, SGMII, _1000Base_X, SGMII2_5, QSGMII, _10GBase_KX4, _10GBase_KX2, _10GBase_KR, _20GBase_KR2, _40GBase_KR, _100GBase_KR10, HGL, RHGL, CHGL, RXAUI, _20GBase_KX4, _10GBase_SR_LR, _20GBase_SR_LR2, _40GBase_SR_LR, _12_1GBase_KR, XLHGL_KR4, HGL16G, HGS, HGS4, _100GBase_SR10, CHGL_LR12, TCAM, INTLKN_12Lanes_6_25G, INTLKN_16Lanes_6_25G, INTLKN_24Lanes_6_25G, INTLKN_12Lanes_10_3125G, INTLKN_16Lanes_10_3125G, INTLKN_12Lanes_12_5G, INTLKN_16Lanes_12_5G, INTLKN_16Lanes_3_125G, 
    INTLKN_24Lanes_3_125G, CHGL11_LR12, INTLKN_4Lanes_3_125G, INTLKN_8Lanes_3_125G, INTLKN_4Lanes_6_25G, INTLKN_8Lanes_6_25G, _2_5GBase_QX, _5GBase_DQX, _5GBase_HX, _12GBaseR, _5_625GBaseR, _48GBaseR4, _12GBase_SR, _48GBase_SR4, _5GBaseR, _22GBase_SR, _24GBase_KR2, _12_5GBase_KR, _25GBase_KR2, _50GBase_KR4, _25GBase_KR, _50GBase_KR2, _100GBase_KR4, _25GBase_SR, _50GBase_SR2, _100GBase_SR4, _100GBase_MLG, _107GBase_KR4, _25GBase_KR_C, _50GBase_KR2_C, _40GBase_KR2, _29_09GBase_SR4, _40GBase_CR4, 
    _25GBase_CR, _50GBase_CR2, _100GBase_CR4, _25GBase_KR_S, _25GBase_CR_S, _25GBase_CR_C, _50GBase_CR2_C, _50GBase_KR, _100GBase_KR2, _200GBase_KR4, _200GBase_KR8, _400GBase_KR8, _102GBase_KR4, _52_5GBase_KR2, _40GBase_KR4, _26_7GBase_KR, _40GBase_SR_LR4, _50GBase_CR, _100GBase_CR2, _200GBase_CR4, _200GBase_CR8, _400GBase_CR8, _200GBase_SR_LR4, _200GBase_SR_LR8, _400GBase_SR_LR8, _50GBase_SR_LR, _100GBase_SR_LR2, _20GBase_KR, _106GBase_KR4, _2_5G_SXGMII, _5G_SXGMII, _10G_SXGMII, _5G_DXGMII, _10G_DXGMII, 
    _20G_DXGMII, _5G_QUSGMII, _10G_QXGMII, _20G_QXGMII, _10G_OUSGMII, _20G_OXGMII, _42GBase_KR4, _53GBase_KR2, _424GBase_KR8, _2500Base_X, _212GBase_KR4, _106GBase_KR2, _102GBase_KR2, NON_SUP_MODE, LAST_PORT_MODE = 115} MV_HWS_PORT_STANDARD;
typedef enum {PRIMARY_LINE_SRC, SECONDARY_LINE_SRC} MV_HWS_REF_CLOCK_SOURCE;
typedef enum {MHz_156, MHz_78, MHz_25, MHz_125, MHz_312, MHz_164} MV_HWS_REF_CLOCK_SUP_VAL;
typedef enum {RESET, UNRESET, POWER_DOWN, PARTIAL_POWER_DOWN} MV_HWS_RESET;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortMiscIf.h:
typedef enum {TUNE_PASS, TUNE_FAIL, TUNE_NOT_COMPLITED, TUNE_READY, TUNE_NOT_READY, TUNE_RESET} MV_HWS_AUTO_TUNE_STATUS;
typedef struct {
    MV_HWS_AUTO_TUNE_STATUS rxTune;
    MV_HWS_AUTO_TUNE_STATUS txTune;
} MV_HWS_AUTO_TUNE_STATUS_RES;
typedef struct {
    MV_HWS_SERDES_SPEED serdesSpeed;
    MV_HWS_MAN_TUNE_AVAGO_16NM_TX_CONFIG_DATA txTuneData;
    MV_HWS_MAN_TUNE_AVAGO_16NM_RX_CONFIG_DATA rxTuneData;
} MV_HWS_AVAGO_16NM_TXRX_TUNE_PARAMS;
typedef struct {
    GT_U32 sqleuch;
    GT_U32 DC;
    GT_U32 LF;
    GT_U32 HF;
    GT_U32 BW;
    GT_U32 EO;
    GT_32 DFE[13];
    GT_U8 gainshape1;
    GT_U8 gainshape2;
    GT_BOOL shortChannelEn;
    GT_U8 dfeGAIN;
    GT_U8 dfeGAIN2;
    MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA avagoStc;
    GT_32 rxffe_pre2;
    GT_32 rxffe_pre1;
    GT_32 rxffe_post1;
    GT_32 rxffe_bflf;
    GT_32 rxffe_bfhf;
    GT_32 rxffe_datarate;
    GT_32 rxffe_minPre1;
    GT_32 rxffe_maxPre1;
    GT_32 rxffe_minPre2;
    GT_32 rxffe_maxPre2;
    GT_U32 minLf;
    GT_U32 maxLf;
    GT_U32 minHf;
    GT_U32 maxHf;
    GT_U32 vernier_upper_odd_dly;
    GT_U32 vernier_upper_even_dly;
    GT_U32 vernier_middle_odd_dly;
    GT_U32 vernier_middle_even_dly;
    GT_U32 vernier_lower_odd_dly;
    GT_U32 vernier_lower_even_dly;
    GT_U32 vernier_test_odd_dly;
    GT_U32 vernier_test_even_dly;
    GT_U32 vernier_edge_odd_dly;
    GT_U32 vernier_edge_even_dly;
    GT_U32 vernier_tap_dly;
    GT_U32 pam4EyesArr[6];
    GT_U8 termination;
    GT_32 rxffe_minPost;
    GT_32 rxffe_maxPost;
    GT_U32 coldEnvelope;
    GT_U32 hotEnvelope;
} MV_HWS_AVAGO_AUTO_TUNE_RESULTS;
typedef struct {
    GT_U8 dcGain;
    GT_U8 lowFrequency;
    GT_U8 highFrequency;
    GT_U8 bandWidth;
    GT_U8 gainShape1;
    GT_U8 gainShape2;
    GT_U8 minLf;
    GT_U8 maxLf;
    GT_U8 minHf;
    GT_U8 maxHf;
    GT_8 bfLf;
    GT_8 bfHf;
    GT_8 minPre1;
    GT_8 maxPre1;
    GT_8 minPre2;
    GT_8 maxPre2;
    GT_8 minPost;
    GT_8 maxPost;
    GT_U16 squelch;
    GT_U8 shortChannelEn;
    GT_U8 termination;
    GT_U8 coldEnvelope;
    GT_U8 hotEnvelope;
} MV_HWS_AVAGO_RX_OVERRIDE_CONFIG_DATA;
typedef struct {
    GT_U8 valid;
    GT_U8 interconnectProfile;
    MV_HWS_AVAGO_TX_OVERRIDE_CONFIG_DATA txData;
    MV_HWS_AVAGO_RX_OVERRIDE_CONFIG_DATA rxData;
} MV_HWS_AVAGO_TXRX_OVERRIDE_CONFIG_DATA;
typedef struct {
    MV_HWS_SERDES_SPEED serdesSpeed;
    MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA txParams;
    MV_HWS_MAN_TUNE_AVAGO_RX_CONFIG_DATA rxParams;
} MV_HWS_AVAGO_TXRX_TUNE_PARAMS;
typedef struct _MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA MV_HWS_AVAGO_TX_OVERRIDE_CONFIG_DATA;
typedef struct {
    GT_BOOL calDone;
    GT_U32 txImpCal;
    GT_U32 rxImpCal;
    GT_U32 ProcessCal;
    GT_U32 speedPll;
    GT_U32 sellvTxClk;
    GT_U32 sellvTxData;
    GT_U32 sellvTxIntp;
    GT_U32 sellvTxDrv;
    GT_U32 sellvTxDig;
    GT_U32 sellvRxSample;
    GT_BOOL ffeDone;
    GT_32 ffeCal[8];
} MV_HWS_CALIBRATION_RESULTS;
typedef struct {
    MV_HWS_MAN_TUNE_COMPHY_C112G_TX_CONFIG_DATA txComphyC112G;
    MV_HWS_MAN_TUNE_COMPHY_C112G_RX_CONFIG_DATA rxComphyC112G;
    GT_U8 eo;
    GT_U32 align90AnaReg;
    GT_16 align90;
    GT_U16 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[40];
} MV_HWS_COMPHY_C112G_AUTO_TUNE_RESULTS;
typedef struct {
    MV_HWS_MAN_TUNE_COMPHY_C12G_TX_CONFIG_DATA txComphyC12GP41P2V;
    MV_HWS_MAN_TUNE_COMPHY_C12GP41P2V_RX_CONFIG_DATA rxComphyC12GP41P2V;
    GT_U8 eo;
    GT_U16 align90;
    GT_U16 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[12];
    GT_U8 ffeSettingForce;
    GT_U8 adaptedResSel;
    GT_U8 adaptedCapSel;
    GT_U8 analogPre;
    GT_U8 analogPeak;
    GT_U8 analogPost;
} MV_HWS_COMPHY_C12GP41P2V_AUTO_TUNE_RESULTS;
typedef struct {
    MV_HWS_MAN_TUNE_COMPHY_C28G_TX_CONFIG_DATA txComphyC28GP4;
    MV_HWS_MAN_TUNE_COMPHY_C28GP4_RX_CONFIG_DATA rxComphyC28GP4;
    GT_U8 eo;
    GT_U16 align90;
    GT_U16 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[25];
} MV_HWS_COMPHY_C28GP4_AUTO_TUNE_RESULTS;
typedef struct {
    GT_U32 localCtlePresetDefault;
    GT_U32 localCtlePresetRes1;
    GT_U32 localCtlePresetCap1;
    GT_U32 localCtlePresetRes2_O;
    GT_U32 localCtlePresetRes2_E;
    GT_U32 localCtlePresetCap2_O;
    GT_U32 localCtlePresetCap2_E;
    GT_U32 localCtlePresetPhase;
    GT_U32 txLocalPreset;
    GT_U32 remotePresetRequestType;
} MV_HWS_COMPHY_C28GP4_PRESET_OVERRIDE;
typedef struct {
    MV_HWS_MAN_TUNE_COMPHY_C56G_TX_CONFIG_DATA txComphyC56G;
    MV_HWS_MAN_TUNE_COMPHY_C56G_RX_CONFIG_DATA rxComphyC56G;
    GT_U8 eo;
    GT_U16 align90;
    GT_U16 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[26];
} MV_HWS_COMPHY_C56G_AUTO_TUNE_RESULTS;
typedef struct {
    GT_U32 ffeR;
    GT_U32 ffeC;
    GT_U32 sampler;
    GT_U32 sqleuch;
    GT_U32 txAmp;
    GT_32 txEmph0;
    GT_32 txEmph1;
    GT_U32 align90;
    GT_32 dfeVals[6];
    GT_U32 txAmpAdj;
    GT_U32 txAmpShft;
    GT_U32 txEmph0En;
    GT_U32 txEmph1En;
    GT_U32 slewRate;
    GT_BOOL slewCtrlEn;
} MV_HWS_COMPHY_H_AUTO_TUNE_RESULTS;
typedef struct {
    GT_U8 etlMinDelay;
    GT_U8 etlMaxDelay;
    GT_U8 etlEnableOverride;
} MV_HWS_ETL_CONFIG_DATA;
typedef struct {
    GT_U32 numReceivedBlocks;
    GT_U32 numReceivedBlocksNoError;
    GT_U32 numReceivedBlocksCorrectedError;
    GT_U32 numReceivedBlocksUncorrectedError;
    GT_U32 numReceivedCorrectedErrorBits;
    GT_U32 numReceivedUncorrectedErrorBits;
    GT_U32 blocksCorrectedError[4];
    GT_U32 blocksUncorrectedError[4];
} MV_HWS_FCFEC_COUNTERS_STC;
typedef struct {
    GT_U8 lowFrequency;
    GT_U8 highFrequency;
    GT_U8 bandWidth;
    GT_U8 dcGain;
    GT_U8 gainShape1;
    GT_U8 gainShape2;
    GT_U8 ffeFix;
    GT_U8 shortChannelEn;
    GT_8 bfLf;
    GT_8 bfHf;
    GT_U8 minLf;
    GT_U8 maxLf;
    GT_U8 minHf;
    GT_U8 maxHf;
    GT_8 minPre1;
    GT_8 maxPre1;
    GT_8 minPre2;
    GT_8 maxPre2;
    GT_8 minPost;
    GT_8 maxPost;
    GT_U16 squelch;
    GT_U8 iCalEffort;
    GT_U8 pCalEffort;
    GT_U8 dfeDataRate;
    GT_U8 dfeCommon;
    GT_U16 int11d;
    GT_U16 int17d;
    GT_U8 termination;
    GT_16 pre1PosGradient;
    GT_16 pre1NegGradient;
    GT_16 pre2PosGradient;
    GT_16 pre2NegGradient;
    GT_16 hfPosGradient;
    GT_16 hfNegGradient;
    GT_U8 agcTargetLow;
    GT_U8 agcTargetHigh;
    GT_U8 coldEnvelope;
    GT_U8 hotEnvelope;
} MV_HWS_MAN_TUNE_AVAGO_16NM_RX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA MV_HWS_MAN_TUNE_AVAGO_16NM_TX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_AVAGO_RX_CONFIG_DATA MV_HWS_MAN_TUNE_AVAGO_RX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA;
typedef struct {
    GT_U32 current1Sel;
    GT_U32 rl1Sel;
    GT_U32 rl1Extra;
    GT_U32 res1Sel;
    GT_U32 cap1Sel;
    GT_U32 cl1Ctrl;
    GT_U32 enMidFreq;
    GT_U32 cs1Mid;
    GT_U32 rs1Mid;
    GT_U32 rfCtrl;
    GT_U32 rl1TiaSel;
    GT_U32 rl1TiaExtra;
    GT_U32 hpfRSel1st;
    GT_U32 current1TiaSel;
    GT_U32 rl2Tune;
    GT_U32 rl2Sel;
    GT_U32 rs2Sel;
    GT_U32 current2Sel;
    GT_U32 cap2Sel;
    GT_U32 hpfRsel2nd;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_U8 squelch;
} MV_HWS_MAN_TUNE_COMPHY_C112G_RX_CONFIG_DATA;
typedef struct {
    GT_8 pre2;
    GT_8 pre;
    GT_8 main;
    GT_8 post;
} MV_HWS_MAN_TUNE_COMPHY_C112G_TX_CONFIG_DATA;
typedef struct {
    GT_U8 resSel;
    GT_U8 resShift;
    GT_U8 capSel;
    GT_U8 selmufi;
    GT_U8 selmuff;
    GT_U8 selmupi;
    GT_U8 selmupf;
    GT_16 squelch;
} MV_HWS_MAN_TUNE_COMPHY_C12GP41P2V_RX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_COMPHY_TX_CONFIG_DATA MV_HWS_MAN_TUNE_COMPHY_C12GP41P2V_TX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_COMPHY_C12G_TX_CONFIG_DATA MV_HWS_MAN_TUNE_COMPHY_C12G_TX_CONFIG_DATA;
typedef struct {
    GT_U32 dataRate;
    GT_U32 res1Sel;
    GT_U32 res2Sel;
    GT_U32 cap1Sel;
    GT_U32 cap2Sel;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_U32 midpointLargeThresKLane;
    GT_U32 midpointSmallThresKLane;
    GT_U32 midpointLargeThresCLane;
    GT_U32 midpointSmallThresCLane;
    GT_U32 dfeResF0aHighThresInitLane;
    GT_U32 dfeResF0aHighThresEndLane;
    GT_16 squelch;
} MV_HWS_MAN_TUNE_COMPHY_C28GP4_RX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_COMPHY_C28G_TX_ONFIG_DATA MV_HWS_MAN_TUNE_COMPHY_C28G_TX_CONFIG_DATA;
typedef struct {
    GT_U32 cur1Sel;
    GT_U32 rl1Sel;
    GT_U32 rl1Extra;
    GT_U32 res1Sel;
    GT_U32 cap1Sel;
    GT_U32 enMidfreq;
    GT_U32 cs1Mid;
    GT_U32 rs1Mid;
    GT_U32 cur2Sel;
    GT_U32 rl2Sel;
    GT_U32 rl2TuneG;
    GT_U32 res2Sel;
    GT_U32 cap2Sel;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_16 squelch;
} MV_HWS_MAN_TUNE_COMPHY_C56G_RX_CONFIG_DATA;
typedef struct {
    GT_8 pre2;
    GT_8 pre;
    GT_8 main;
    GT_8 post;
    GT_8 usr;
} MV_HWS_MAN_TUNE_COMPHY_C56G_TX_CONFIG_DATA;
typedef struct {
    GT_U32 sqlch;
    GT_U32 ffeRes;
    GT_U32 ffeCap;
    GT_BOOL dfeEn;
    GT_U32 alig;
    MV_HWS_PORT_MAN_TUNE_MODE portTuningMode;
} MV_HWS_MAN_TUNE_COMPHY_H_RX_CONFIG_DATA;
typedef struct {
    GT_U32 txAmp;
    GT_U32 txAmpAdj;
    GT_32 txEmph0;
    GT_32 txEmph1;
    GT_U32 txAmpShft;
    GT_U32 txEmphEn;
    GT_U32 slewRate;
    GT_U32 slewCtrlEn;
} MV_HWS_MAN_TUNE_COMPHY_H_TX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_COMPHY_TX_CONFIG_DATA MV_HWS_MAN_TUNE_COMPHY_TX_CONFIG_DATA;
typedef struct _MV_HWS_MAN_TUNE_AVAGO_RX_CONFIG_DATA MV_HWS_MAN_TUNE_CTLE_CONFIG_DATA;
typedef struct {
    GT_U32 serdesSpeed;
    MV_HWS_MAN_TUNE_CTLE_CONFIG_DATA ctleParams;
    MV_HWS_ETL_CONFIG_DATA etlParams;
    GT_U16 fieldOverrideBmp;
} MV_HWS_MAN_TUNE_CTLE_CONFIG_OVERRIDE;
typedef enum {RxTrainingOnly = 1, TRxTuneCfg, TRxTuneStart, TRxTuneStatus, TRxTuneStatusNonBlocking, TRxTuneStop, RxTrainingAdative, RxTrainingStopAdative, RxTrainingWaitForFinish, RxTrainingVsr, FixedCtleTraining, RxStatusNonBlocking} MV_HWS_PORT_AUTO_TUNE_MODE;
typedef enum {MV_HWS_PORT_FLOW_CONTROL_DISABLE_E, MV_HWS_PORT_FLOW_CONTROL_RX_TX_E, MV_HWS_PORT_FLOW_CONTROL_RX_ONLY_E, MV_HWS_PORT_FLOW_CONTROL_TX_ONLY_E} MV_HWS_PORT_FLOW_CONTROL_ENT;
typedef enum {DISABLE_LB, RX_2_TX_LB, TX_2_RX_LB, TX_2_RX_DIGITAL_LB} MV_HWS_PORT_LB_TYPE;
typedef enum {StaticLongReach, StaticShortReach} MV_HWS_PORT_MAN_TUNE_MODE;
typedef enum {INIT = 1, PRESET, PRESET_NA = 65535} MV_HWS_PORT_PRESET_CMD;
typedef enum {MV_HWS_PORT_SERDES_OPERATION_PRECODING_E = 1, MV_HWS_PORT_SERDES_OPERATION_DFE_COMMON_E, MV_HWS_PORT_SERDES_OPERATION_CALC_LEVEL3_E = 4, MV_HWS_PORT_SERDES_OPERATION_RESET_RXTX_E = 8, MV_HWS_PORT_SERDES_OPERATION_RES_CAP_SEL_TUNING_E = 16, MV_HWS_PORT_SERDES_OPERATION_RX_TRAIN_E = 32, MV_HWS_PORT_SERDES_OPERATION_IS_FIBER_E = 64} MV_HWS_PORT_SERDES_OPERATION_MODE_ENT;
typedef struct {
    GT_U32 rsfecAligned;
    GT_U32 hiBer;
    GT_U32 alignDone;
    GT_U32 lpcsAnDone;
    GT_U32 lpcsRxSync;
    GT_U32 lpcsLinkStatus;
    GT_U32 hiSer;
    GT_U32 degradeSer;
    GT_U32 alignLock;
    GT_U32 linkStatus;
    GT_U32 linkOk;
    GT_U32 phyLos;
    GT_U32 rxRemFault;
    GT_U32 rxLocFault;
    GT_U32 fault;
    GT_U32 pcsReceiveLink;
    GT_U32 devicePresent;
    GT_U32 transmitFault;
    GT_U32 receiveFault;
    GT_U32 berCounter;
    GT_U32 errorBlockCounter;
} MV_HWS_PORT_STATUS_STC;
typedef enum {NORMAL_MODE, TEST_MODE} MV_HWS_PORT_TEST_GEN_ACTION;
typedef enum {TEST_GEN_PRBS7, TEST_GEN_PRBS23, TEST_GEN_CJPAT, TEST_GEN_CRPAT, TEST_GEN_KRPAT, TEST_GEN_Normal, TEST_GEN_PRBS31} MV_HWS_PORT_TEST_GEN_PATTERN;
typedef enum {Neg_3_TAPS, Neg_2_TAPS, Neg_1_TAPS, ZERO_TAPS, POS_1_TAPS, POS_2_TAPS, POS_3_TAPS} MV_HWS_PPM_VALUE;
typedef struct {
    GT_U64 correctedFecCodeword;
    GT_U64 uncorrectedFecCodeword;
    GT_U64 correctFecCodeword;
    GT_U32 symbolError[4];
    GT_U64 total_cw_received;
} MV_HWS_RSFEC_COUNTERS_STC;
typedef struct {
    GT_U32 fecAlignStatus;
    GT_U32 ampsLock;
    GT_U32 highSer;
    GT_U32 symbolError[16];
} MV_HWS_RSFEC_STATUS_STC;
typedef union {
    MV_HWS_COMPHY_H_AUTO_TUNE_RESULTS comphyHResults;
    MV_HWS_AVAGO_AUTO_TUNE_RESULTS avagoResults;
    MV_HWS_COMPHY_C12GP41P2V_AUTO_TUNE_RESULTS comphyC12GP41P2VResults;
    MV_HWS_COMPHY_C28GP4_AUTO_TUNE_RESULTS comphyC28GP4Results;
    MV_HWS_COMPHY_C112G_AUTO_TUNE_RESULTS comphyC112GResults;
    MV_HWS_COMPHY_C56G_AUTO_TUNE_RESULTS comphyC56GResults;
} MV_HWS_SERDES_AUTO_TUNE_RESULTS_UNT;
typedef union {
    MV_HWS_COMPHY_C28GP4_PRESET_OVERRIDE comphyC28GP4PresetOverride;
} MV_HWS_SERDES_PRESET_OVERRIDE_UNT;
typedef union {
    MV_HWS_MAN_TUNE_COMPHY_H_RX_CONFIG_DATA rxComphyH;
    MV_HWS_MAN_TUNE_AVAGO_RX_CONFIG_DATA rxAvago;
    MV_HWS_MAN_TUNE_AVAGO_16NM_RX_CONFIG_DATA rxAvago16nm;
    MV_HWS_MAN_TUNE_COMPHY_C12GP41P2V_RX_CONFIG_DATA rxComphyC12GP41P2V;
    MV_HWS_MAN_TUNE_COMPHY_C28GP4_RX_CONFIG_DATA rxComphyC28GP4;
    MV_HWS_MAN_TUNE_COMPHY_C112G_RX_CONFIG_DATA rxComphyC112G;
    MV_HWS_MAN_TUNE_COMPHY_C56G_RX_CONFIG_DATA rxComphyC56G;
} MV_HWS_SERDES_RX_CONFIG_DATA_UNT;
typedef union {
    MV_HWS_AVAGO_RX_OVERRIDE_CONFIG_DATA rxAvago;
    MV_HWS_MAN_TUNE_COMPHY_C12GP41P2V_RX_CONFIG_DATA rxComphyC12GP41P2V;
} MV_HWS_SERDES_RX_OVERRIDE_CONFIG_DATA_UNT;
typedef struct {
    MV_HWS_PORT_PRESET_CMD presetCmdVal;
    GT_BOOL eyeCheckEnVal;
    GT_U32 gen1TrainAmp;
    GT_U32 gen1TrainEmph0;
    GT_U32 gen1TrainEmph1;
    GT_BOOL gen1AmpAdj;
    GT_U32 initialAmp;
    GT_U32 initialEmph0;
    GT_U32 initialEmph1;
    GT_U32 presetAmp;
    GT_U32 presetEmph0;
    GT_U32 presetEmph1;
} MV_HWS_SERDES_TUNING_PARAMS;
typedef struct {
    MV_HWS_SERDES_SPEED serdesSpeed;
    MV_HWS_SERDES_TX_CONFIG_DATA_UNT txParams;
    MV_HWS_SERDES_RX_CONFIG_DATA_UNT rxParams;
} MV_HWS_SERDES_TXRX_TUNE_PARAMS;
typedef union {
    MV_HWS_MAN_TUNE_COMPHY_H_TX_CONFIG_DATA txComphyH;
    MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA txAvago;
    MV_HWS_MAN_TUNE_COMPHY_C12G_TX_CONFIG_DATA txComphyC12GP41P2V;
    MV_HWS_MAN_TUNE_COMPHY_C28G_TX_CONFIG_DATA txComphyC28GP4;
    MV_HWS_MAN_TUNE_COMPHY_C112G_TX_CONFIG_DATA txComphyC112G;
    MV_HWS_MAN_TUNE_COMPHY_C56G_TX_CONFIG_DATA txComphyC56G;
} MV_HWS_SERDES_TX_CONFIG_DATA_UNT;
typedef union {
    MV_HWS_AVAGO_TX_OVERRIDE_CONFIG_DATA txAvago;
    MV_HWS_MAN_TUNE_COMPHY_C12GP41P2V_TX_CONFIG_DATA txComphyC12GP41P2V;
} MV_HWS_SERDES_TX_OVERRIDE_CONFIG_DATA_UNT;
typedef struct {
    GT_U32 totalErrors;
    GT_U32 goodFrames;
    GT_U32 checkerLock;
} MV_HWS_TEST_GEN_STATUS;
typedef struct {
    GT_U32 txAmp;
    GT_U32 txEmph0;
    GT_U32 txEmph1;
} MV_HWS_TX_TUNE_PARAMS;
typedef enum {HWS_MAC, HWS_PCS, HWS_PMA, HWS_MPF} MV_HWS_UNIT;
struct _MV_HWS_MAN_TUNE_AVAGO_RX_CONFIG_DATA;
struct _MV_HWS_MAN_TUNE_AVAGO_TX_CONFIG_DATA;
struct _MV_HWS_MAN_TUNE_COMPHY_C12G_TX_CONFIG_DATA;
struct _MV_HWS_MAN_TUNE_COMPHY_C28G_TX_ONFIG_DATA;
struct _MV_HWS_MAN_TUNE_COMPHY_TX_CONFIG_DATA;

File common/h/cpss/common/labServices/port/gop/port/mvHwsPortTypes.h:
typedef enum {FEC_NA, FEC_OFF, FC_FEC, RS_FEC = 4, RS_FEC_544_514 = 8} MV_HWS_PORT_FEC_MODE;
typedef enum {MAC_NA, GEMAC_X, GEMAC_SG, XGMAC, XLGMAC, HGLMAC, CGMAC, INTLKN_MAC, TCAM_MAC, GEMAC_NET_X, GEMAC_NET_SG, QSGMII_MAC, D2D_MAC, MTI_MAC_100, MTI_MAC_400, MTI_CPU_MAC, MTI_USX_MAC, MTI_MAC_100_BR, LAST_MAC} MV_HWS_PORT_MAC_TYPE;
typedef enum {PCS_NA, GPCS, XPCS, MMPCS, HGLPCS, CGPCS, INTLKN_PCS, TCAM_PCS, GPCS_NET, QSGMII_PCS, D2D_PCS, MTI_PCS_50, MTI_PCS_100, MTI_PCS_200, MTI_PCS_400, MTI_PCS_LOW_SPEED, MTI_CPU_PCS, MTI_USX_PCS, MTI_USX_PCS_LOW_SPEED, MTI_PCS_25, MTI_CPU_SGPCS, LAST_PCS} MV_HWS_PORT_PCS_TYPE;
typedef enum {MV_HWS_PORT_SPEED_NA_E, MV_HWS_PORT_SPEED_10M_E = 10, MV_HWS_PORT_SPEED_100M_E = 100, MV_HWS_PORT_SPEED_1G_E = 1000, MV_HWS_PORT_SPEED_2_5G_E = 2500, MV_HWS_PORT_SPEED_5G_E = 5000, MV_HWS_PORT_SPEED_10G_E = 10000, MV_HWS_PORT_SPEED_20G_E = 20000, MV_HWS_PORT_SPEED_25G_E = 25000, MV_HWS_PORT_SPEED_40G_E = 40000, MV_HWS_PORT_SPEED_50G_E = 50000, MV_HWS_PORT_SPEED_100G_E = 100000, MV_HWS_PORT_SPEED_200G_E = 200000, MV_HWS_PORT_SPEED_400G_E = 400000} MV_HWS_PORT_SPEED_ENT;
typedef enum {_156dot25Mhz, _78Mhz, _25Mhz, _125Mhz, _312_5Mhz, _164_24Mhz} MV_HWS_REF_CLOCK;
typedef enum {PRIMARY, SECONDARY} MV_HWS_REF_CLOCK_SRC;
typedef enum {_10BIT_ON, _10BIT_OFF, _10BIT_NA, _20BIT_ON, _40BIT_ON, _80BIT_ON} MV_HWS_SERDES_BUS_WIDTH_ENT;
typedef struct {
    MV_HWS_SERDES_TYPE serdesType;
    MV_HWS_SERDES_SPEED baudRate;
    MV_HWS_REF_CLOCK refClock;
    MV_HWS_REF_CLOCK_SRC refClockSource;
    MV_HWS_SERDES_MEDIA media;
    MV_HWS_SERDES_BUS_WIDTH_ENT busWidth;
    MV_HWS_SERDES_ENCODING_TYPE encoding;
    GT_BOOL opticalMode;
} MV_HWS_SERDES_CONFIG_STC;
typedef enum {SERDES_DUMP_INTERNAL_REGISTERS, SERDES_DUMP_EXTERNAL_REGISTERS, SERDES_DUMP_PINS, SERDES_DUMP_SELECTED_FIELDS_0} MV_HWS_SERDES_DUMP_TYPE_ENT;
typedef enum {SERDES_ENCODING_NA, SERDES_ENCODING_NRZ, SERDES_ENCODING_PAM4, SERDES_ENCODING_LAST} MV_HWS_SERDES_ENCODING_TYPE;
typedef enum {XAUI_MEDIA, RXAUI_MEDIA} MV_HWS_SERDES_MEDIA;
typedef struct {
    GT_BOOL polarityInvert;
    GT_BOOL grayEnable;
    GT_BOOL precodeEnable;
    GT_BOOL swizzleEnable;
} MV_HWS_SERDES_RX_DATAPATH_CONFIG_STC;
typedef enum {SPEED_NA, _1_25G, _3_125G, _3_33G, _3_75G, _4_25G, _5G, _6_25G, _7_5G, _10_3125G, _11_25G, _11_5625G, _12_5G, _10_9375G, _12_1875G, _5_625G, _5_15625G, _12_8906G, _20_625G, _25_78125G, _27_5G, _28_05G, _26_5625G, _28_28125G, _26_5625G_PAM4, _28_125G_PAM4, _26_25G, _27_1G, _10_3125G_SR_LR, _25_78125G_SR_LR, _26_5625G_PAM4_SR_LR, _27_34375G, _10G, _2_578125, _1_25G_SR_LR, _26_5625G_SR_LR, _27_1875_PAM4, LAST_MV_HWS_SERDES_SPEED} MV_HWS_SERDES_SPEED;
typedef enum {COM_PHY_H, COM_PHY_H_REV2, COM_PHY_28NM, AVAGO, AVAGO_16NM, D2D_PHY_GW16, COM_PHY_C12GP41P2V, COM_PHY_C28GP4X2, COM_PHY_C28GP4X1, COM_PHY_C28GP4X4, COM_PHY_C112GX4, COM_PHY_N5XC56GP5X4, SERDES_LAST} MV_HWS_SERDES_TYPE;

File common/h/cpss/common/labServices/port/gop/port/pcs/cgPcs/mvHwsCgPcsDb.h:
typedef enum {CGPCS_RESET_SEQ, CGPCS_UNRESET_SEQ, CGPCS_MODE_MISC_SEQ, CGPCS_MODE_10_LANE_SEQ, CGPCS_MODE_12_LANE_SEQ, CGPCS_LPBK_NORMAL_SEQ, CGPCS_LPBK_TX2RX_SEQ, CGPCS_MODE_1_LANE_0_SEQ, CGPCS_MODE_1_LANE_1_SEQ, CGPCS_MODE_1_LANE_2_SEQ, CGPCS_MODE_1_LANE_3_SEQ, CGPCS_MODE_4_LANE_SEQ, CGPCS_RS_FEC_4_LANE_SEQ, CGPCS_RESET_1_LANE_0_SEQ, CGPCS_RESET_1_LANE_1_SEQ, CGPCS_RESET_1_LANE_2_SEQ, CGPCS_RESET_1_LANE_3_SEQ, CGPCS_RESET_4_LANE_SEQ, CGPCS_UNRESET_1_LANE_0_SEQ, CGPCS_UNRESET_1_LANE_1_SEQ, 
    CGPCS_UNRESET_1_LANE_2_SEQ, CGPCS_UNRESET_1_LANE_3_SEQ, CGPCS_UNRESET_4_LANE_SEQ, CGPCS_POWER_DOWN_1_LANE_0_SEQ, CGPCS_POWER_DOWN_1_LANE_1_SEQ, CGPCS_POWER_DOWN_1_LANE_2_SEQ, CGPCS_POWER_DOWN_1_LANE_3_SEQ, CGPCS_POWER_DOWN_4_LANE_SEQ, CGPCS_REDUCED_POWER_DOWN_1_LANE_0_SEQ, CGPCS_REDUCED_POWER_DOWN_1_LANE_1_SEQ, CGPCS_REDUCED_POWER_DOWN_1_LANE_2_SEQ, CGPCS_REDUCED_POWER_DOWN_1_LANE_3_SEQ, CGPCS_MODE_4_LANE_MLG_SEQ, CGPCS_RESET_4_LANE_MLG_SEQ, CGPCS_POWER_DOWN_4_LANE_MLG_SEQ, 
    CGPCS_UNRESET_4_LANE_MLG_SEQ, CGPCS_START_SEND_FAULT_SEQ, CGPCS_STOP_SEND_FAULT_SEQ, CGPCS_UNRESET_4_LANE_UPDATE_SEQ, MV_CGPCS_LAST_SEQ} MV_HWS_CGPCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/pcs/gPcs/mvHwsGPcsDb.h:
typedef enum {GPCS_RESET_SEQ, GPCS_UNRESET_SEQ, GPCS_LPBK_NORMAL_SEQ, GPCS_LPBK_TX2RX_SEQ, GPCS_GEN_PRBS7_SEQ, GPCS_GEN_NORMAL_SEQ, MV_GPCS_LAST_SEQ} MV_HWS_GPCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/pcs/hglPcs/mvHwsHglPcsDb.h:
typedef enum {HGLPCS_MODE_MISC_SEQ, HGLPCS_MODE_4_LANE_SEQ, HGLPCS_MODE_6_LANE_SEQ, MV_HGLPCS_LAST_SEQ} MV_HWS_HGLPCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/pcs/ilknPcs/mvHwsIlknPcsDb.h:
typedef enum {ILKNPCS_RESET_SEQ, ILKNPCS_UNRESET_SEQ, ILKNPCS_MODE_MISC_SEQ, ILKNPCS_MODE_12_LANE_SEQ, ILKNPCS_MODE_16_LANE_SEQ, ILKNPCS_MODE_24_LANE_SEQ, ILKNPCS_MODE_4_LANE_SEQ, ILKNPCS_MODE_8_LANE_SEQ, MV_ILKNPCS_LAST_SEQ} MV_HWS_ILKNPCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/pcs/mmPcs/mvHwsMMPcsDb.h:
typedef enum {MMPCS_RESET_SEQ, MMPCS_UNRESET_SEQ, MMPCS_MODE_1_LANE_SEQ, MMPCS_MODE_2_LANE_SEQ, MMPCS_MODE_4_LANE_SEQ, MMPCS_LPBK_NORMAL_SEQ, MMPCS_LPBK_RX2TX_SEQ, MMPCS_LPBK_TX2RX_SEQ, MMPCS_GEN_NORMAL_SEQ, MMPCS_GEN_KRPAT_SEQ, MMPCS_FABRIC_MODE_1_LANE_SEQ, MMPCS_FABRIC_MODE_2_LANE_SEQ, MMPCS_FABRIC_MODE_4_LANE_SEQ, MMPCS_RESET_1_LANE_SEQ, MMPCS_RESET_2_LANE_SEQ, MMPCS_RESET_4_LANE_SEQ, MMPCS_UNRESET_1_LANE_SEQ, MMPCS_UNRESET_2_LANE_SEQ, MMPCS_UNRESET_4_LANE_SEQ, MMPCS_FABRIC_RESET_2_LANE_SEQ, 
    MMPCS_FABRIC_RESET_4_LANE_SEQ, MMPCS_FABRIC_UNRESET_2_LANE_SEQ, MMPCS_FABRIC_UNRESET_4_LANE_SEQ, MMPCS_GOP_REV3_UNRESET_1_LANE_SEQ, MMPCS_GOP_REV3_UNRESET_2_LANE_SEQ, MMPCS_GOP_REV3_UNRESET_4_LANE_SEQ, MMPCS_POWER_DOWN_2_LANE_SEQ, MMPCS_POWER_DOWN_4_LANE_SEQ, MMPCS_FABRIC_POWER_DOWN_2_LANE_SEQ, MMPCS_MODE_1_LANE_25G_SEQ, MMPCS_MODE_4_LANE_50G_SEQ, MMPCS_RESET_1_LANE_25G_SEQ, MMPCS_RESET_4_LANE_50G_SEQ, MMPCS_POWER_DOWN_1_LANE_25G_SEQ, MMPCS_POWER_DOWN_4_LANE_50G_SEQ, MMPCS_UNRESET_1_LANE_25G_SEQ, 
    MMPCS_START_SEND_FAULT_MULTI_LANE_SEQ, MMPCS_STOP_SEND_FAULT_MULTI_LANE_SEQ, MMPCS_STOP_SEND_FAULT_MULTI_LANE_RS_FEC_SEQ, MMPCS_UNRESET_1_LANE_26_7G_SEQ, MMPCS_MODE_2_LANE_0_50G_NO_FEC_SEQ, MMPCS_MODE_2_LANE_2_50G_NO_FEC_SEQ, MMPCS_MODE_2_LANE_0_50G_RS_FEC_SEQ, MMPCS_MODE_2_LANE_2_50G_RS_FEC_SEQ, MMPCS_POWER_DOWN_2_LANE_0_50G_SEQ, MMPCS_POWER_DOWN_2_LANE_2_50G_SEQ, MMPCS_REDUCED_POWER_DOWN_2_LANE_0_SEQ, MMPCS_REDUCED_POWER_DOWN_2_LANE_2_SEQ, MMPCS_RESET_2_LANE_0_SEQ, MMPCS_RESET_2_LANE_2_SEQ, 
    MMPCS_UNRESET_2_LANE_0_SEQ, MMPCS_UNRESET_2_LANE_2_SEQ, MMPCS_UNRESET_1_LANE_UPDATE_SEQ, MMPCS_UNRESET_2_LANE_UPDATE_SEQ, MMPCS_FABRIC_UNRESET_2_LANE_UPDATE_SEQ, MV_MM_PCS_LAST_SEQ} MV_HWS_MM_PCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/pcs/mvHwsPcsIf.h:
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *) MV_HWS_PCS_ACTIVE_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL *) MV_HWS_PCS_ALIGN_LOCK_GET_BOX;
typedef struct {
    GT_BOOL inbandAnEnable;
    GT_BOOL flowCtrlPauseAdvertiseEnable;
    GT_BOOL flowCtrlAsmAdvertiseEnable;
    GT_BOOL byPassEnable;
} MV_HWS_PCS_AUTONEG_1G_SGMII;
typedef GT_STATUS (*)(GT_U8, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PCS_AUTONEG_1G_SGMII *) MV_HWS_PCS_AUTONEG_1G_SGMII_SET_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL *) MV_HWS_PCS_CHECK_GEAR_BOX;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32) MV_HWS_PCS_EXT_PLL_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_FEC_MODE) MV_HWS_PCS_FEC_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_FEC_MODE *) MV_HWS_PCS_FEC_CFG_GET_FUNC_PTR;
typedef struct {
    MV_HWS_PCS_RESET_FUNC_PTR pcsResetFunc;
    MV_HWS_PCS_MODE_CFG_FUNC_PTR pcsModeCfgFunc;
    MV_HWS_PCS_ALIGN_LOCK_GET_BOX pcsAlignLockGetFunc;
    MV_HWS_PCS_LINK_STATUS_GET_FUNC_PTR pcsLinkStatusGetFunc;
    MV_HWS_PCS_TYPE_GET_FUNC_PTR pcsTypeGetFunc;
    MV_HWS_PCS_TEST_GEN_FUNC_PTR pcsTestGenFunc;
    MV_HWS_PCS_TEST_GEN_STATUS_FUNC_PTR pcsTestGenStatusFunc;
    MV_HWS_PCS_RX_RESET_FUNC_PTR pcsRxResetFunc;
    MV_HWS_PCS_SIGNAL_DETECT_MASK_SET_FUNC_PTR pcsSignalDetectMaskEn;
    MV_HWS_PCS_ACTIVE_STATUS_FUNC_PTR pcsActiveStatusGetFunc;
    MV_HWS_PCS_EXT_PLL_CFG_FUNC_PTR pcsExtPllCfgFunc;
    MV_HWS_PCS_LB_CFG_FUNC_PTR pcsLbCfgFunc;
    MV_HWS_PCS_LB_CFG_GET_FUNC_PTR pcsLbCfgGetFunc;
    MV_HWS_PCS_CHECK_GEAR_BOX pcsCheckGearBoxFunc;
    MV_HWS_PCS_SEND_LOCAL_FAULT_SET_FUNC_PTR pcsSendLocalFaultSetFunc;
    MV_HWS_PCS_FEC_CFG_FUNC_PTR pcsFecCfgFunc;
    MV_HWS_PCS_FEC_CFG_GET_FUNC_PTR pcsFecCfgGetFunc;
    MV_HWS_PCS_SEND_FAULT_SET_PTR pcsSendFaultSetFunc;
    MV_HWS_PCS_AUTONEG_1G_SGMII_SET_PTR pcsAutoNeg1GSgmiiFunc;
} MV_HWS_PCS_FUNC_PTRS;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_LB_TYPE) MV_HWS_PCS_LB_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_LB_TYPE *) MV_HWS_PCS_LB_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_BOOL *) MV_HWS_PCS_LINK_STATUS_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_ATTRIBUTES_INPUT_PARAMS *) MV_HWS_PCS_MODE_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_RESET) MV_HWS_PCS_RESET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_RESET) MV_HWS_PCS_RX_RESET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL) MV_HWS_PCS_SEND_FAULT_SET_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, GT_BOOL) MV_HWS_PCS_SEND_LOCAL_FAULT_SET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_BOOL) MV_HWS_PCS_SIGNAL_DETECT_MASK_SET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_TEST_GEN_PATTERN) MV_HWS_PCS_TEST_GEN_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_TEST_GEN_PATTERN, MV_HWS_TEST_GEN_STATUS *) MV_HWS_PCS_TEST_GEN_STATUS_FUNC_PTR;
typedef char *(*)(void) MV_HWS_PCS_TYPE_GET_FUNC_PTR;

File common/h/cpss/common/labServices/port/gop/port/pcs/tcamPcs/mvHwsTcamPcsDb.h:
typedef enum {TCAMPCS_RESET_SEQ, TCAMPCS_UNRESET_SEQ, TCAMPCS_MODE_MISC_SEQ, MV_TCAMPCS_LAST_SEQ} MV_HWS_TCAMPCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/pcs/xPcs/mvHwsXPcsDb.h:
typedef enum {XPCS_RESET_SEQ, XPCS_UNRESET_SEQ, XPCS_MODE_MISC_SEQ, XPCS_MODE_1_LANE_SEQ, XPCS_MODE_2_LANE_SEQ, XPCS_MODE_4_LANE_SEQ, XPCS_LPBK_NORMAL_SEQ, XPCS_LPBK_RX2TX_SEQ, XPCS_LPBK_TX2RX_SEQ, XPCS_GEN_PRBS7_SEQ, XPCS_GEN_PRBS23_SEQ, XPCS_GEN_CJPAT_SEQ, XPCS_GEN_CRPAT_SEQ, XPCS_GEN_NORMAL_SEQ, MV_XPCS_LAST_SEQ} MV_HWS_XPCS_SUB_SEQ;

File common/h/cpss/common/labServices/port/gop/port/private/mvHwsPortApCoCpuIf.h:
typedef void (*)(GT_U32 **, GT_U32 *) MV_HWS_GET_Z80_CODE_FUNC_PTR;

File common/h/cpss/common/labServices/port/gop/port/private/mvHwsPortApInitIfPrv.h:
typedef struct {
    unsigned char timerName;
    unsigned char isActive;
    unsigned short period;
} MV_HWS_AP_TIMER_INFO;
typedef struct {
    unsigned int checkCounter;
    unsigned int apPortControl[12];
    unsigned int apPortStatus[12];
    MV_HWS_AP_TIMER_INFO apTimerList[12];
    unsigned int apPortActiveLanes[12];
    unsigned char minVersion;
    unsigned char fwVersion;
    unsigned char buff[2];
    unsigned int portResolutionMask;
    unsigned int portInitMask;
    unsigned int reserved;
    unsigned int flag;
    unsigned int debug[6];
    unsigned int portDebug[12];
} MV_HWS_GLOBALS;

File common/h/cpss/common/labServices/port/gop/port/private/mvPortModeElementsPrv.h:
typedef MV_HWS_SINGLE_PORT_STC * MV_HWS_DEVICE_PORTS_ELEMENTS;
typedef struct {
    const MV_HWS_PORT_INIT_PARAMS *supModesCatalog;
    MV_HWS_PORT_INIT_PARAMS *legacySupModesCatalog;
    MV_HWS_PORT_FEC_MODE *perModeFecList;
    MV_HWS_PORT_INIT_PARAMS curPortParams;
} MV_HWS_SINGLE_PORT_STC;

File common/h/cpss/common/labServices/port/gop/port/serdes/avago/mvAvagoIf.h:
typedef enum {HWS_SERDES_HAL_RXCLK_VERNIER_APPLY, HWS_SERDES_HAL_TXEQ_FFE_APPLY, HWS_SERDES_HAL_DATA_CHANNEL_APPLY, HWS_SERDES_HAL_TEST_CHANNEL_APPLY, HWS_SERDES_HAL_RXEQ_FFE_APPLY, HWS_SERDES_HAL_RXEQ_CTLE_APPLY, HWS_SERDES_HAL_RXEQ_DFE_APPLY} MV_HWS_AVAGO_SERDES_HAL_FUNC_TYPES;
typedef enum {HWS_SERDES_GLOBAL_TUNE_PARAMS, HWS_SERDES_M4_TUNE_PARAMS, HWS_SERDES_RXCLK_SELECT, HWS_SERDES_TXEQ_FFE, HWS_SERDES_RXEQ_CTLE, HWS_SERDES_RXEQ_DFE, HWS_SERDES_RXEQ_FFE, HWS_SERDES_DATA_CHANNEL_INPUTS, HWS_SERDES_DATA_CHANNEL_OFFSET, HWS_SERDES_DATA_CHANNEL_CAL, HWS_SERDES_TEST_CHANNEL_INPUTS, HWS_SERDES_TEST_CHANNEL_OFFSET, HWS_SERDES_TEST_CHANNEL_CAL, HWS_SERDES_PAM4_EYE, HWS_SERDES_PAM4_LEVELS, HWS_SERDES_GRADIENT_INPUTS, HWS_SERDES_DATA_CHANNEL_CAL_DELTA, HWS_SERDES_CLK_VERNIER_CAL, 
    HWS_SERDES_TEMPERATURE, HWS_SERDES_ENVELOPE_CONFIG, HWS_SERDES_KR_TRAINING_CONFIG, HWS_SERDES_PLL_GAIN} MV_HWS_AVAGO_SERDES_HAL_TYPES;
typedef struct {
    GT_U8 revision;
    GT_U8 avgBlockLines;
    GT_U8 minVal;
    GT_U8 baseVal;
    GT_U8 bitsPerSds;
} MV_HWS_AVG_BLOCK;
typedef enum {IGNORE_RX_TRAINING, ONE_SHOT_DFE_TUNING, START_CONTINUE_ADAPTIVE_TUNING, STOP_CONTINUE_ADAPTIVE_TUNING, ONE_SHOT_DFE_VSR_TUNING} MV_HWS_RX_TRAINING_MODES;
typedef enum {IGNORE_TX_TRAINING, START_TRAINING, STOP_TRAINING} MV_HWS_TX_TRAINING_MODES;

File common/h/cpss/common/labServices/port/gop/port/serdes/comPhy/mvComphyIf.h:
typedef struct {
    GT_U32 regOffset;
    GT_U8 fieldStart;
    GT_U8 fieldLen;
} MV_HWS_COMPHY_REG_FIELD_STC;
typedef struct _MV_HWS_COMPHY_SERDES_DATA MV_HWS_COMPHY_SERDES_DATA;
struct _MV_HWS_COMPHY_SERDES_DATA;

File common/h/cpss/common/labServices/port/gop/port/serdes/mvHwsSerdesIf.h:
typedef struct {
    GT_U32 startAlign90;
    GT_U32 rxTrainingCfg;
    GT_U32 osDeltaMax;
    GT_U32 adaptedFfeR;
    GT_U32 adaptedFfeC;
} MV_HWS_ALIGN90_PARAMS;
typedef enum {HWS_D2D_DIRECTION_MODE_BOTH_E, HWS_D2D_DIRECTION_MODE_RX_E, HWS_D2D_DIRECTION_MODE_TX_E} MV_HWS_D2D_DIRECTION_MODE_ENT;
typedef struct {
    MV_HWS_D2D_DIRECTION_MODE_ENT direction;
    MV_HWS_PORT_FEC_MODE fecMode;
    GT_BOOL userDefPatternEnabled;
    GT_U32 userDefPattern[4];
    MV_HWS_SERDES_TX_PATTERN serdesPattern;
    MV_HWS_SERDES_TEST_GEN_MODE mode;
    MV_HWS_PORT_TEST_GEN_PATTERN portPattern;
} MV_HWS_D2D_PRBS_CONFIG_STC;
typedef struct {
    GT_U32 bestVal;
    GT_U32 positiveVal;
    GT_U32 negativeVal;
} MV_HWS_SAMPLER_RESULTS;
typedef enum {RX_DIRECTION, TX_DIRECTION} MV_HWS_SERDES_DIRECTION;
typedef struct {
    GT_U32 horizontalEye;
    GT_U32 verticalEye;
    GT_U32 eomMechanism;
    GT_U32 rowSize;
    GT_U32 *lowerMatrix;
    GT_U32 *upperMatrix;
} MV_HWS_SERDES_EOM_RES;
typedef enum {SERDES_NORMAL, SERDES_TEST} MV_HWS_SERDES_TEST_GEN_MODE;
typedef struct {
    GT_U32 errorsCntr;
    GT_U64 txFramesCntr;
    GT_U32 lockStatus;
} MV_HWS_SERDES_TEST_GEN_STATUS;
typedef enum {_1T, _2T, _4T, _5T, _8T, _10T, PRBS7, PRBS9, PRBS15, PRBS23, PRBS31, DFETraining, Other, PRBS11, PRBS13, LAST_SERDES_TX_PATTERN} MV_HWS_SERDES_TX_PATTERN;

File common/h/cpss/common/labServices/port/gop/port/serdes/mvHwsSerdesPrvIf.h:
typedef enum {SERDES_SD_RESET_SEQ, SERDES_SD_UNRESET_SEQ, SERDES_RF_RESET_SEQ, SERDES_RF_UNRESET_SEQ, SERDES_SYNCE_RESET_SEQ, SERDES_SYNCE_UNRESET_SEQ, SERDES_SERDES_POWER_UP_CTRL_SEQ, SERDES_SERDES_POWER_DOWN_CTRL_SEQ, SERDES_SERDES_RXINT_UP_SEQ, SERDES_SERDES_RXINT_DOWN_SEQ, SERDES_SERDES_WAIT_PLL_SEQ, SERDES_SPEED_1_25G_SEQ, SERDES_SPEED_3_125G_SEQ, SERDES_SPEED_3_75G_SEQ, SERDES_SPEED_4_25G_SEQ, SERDES_SPEED_5G_SEQ, SERDES_SPEED_6_25G_SEQ, SERDES_SPEED_7_5G_SEQ, SERDES_SPEED_10_3125G_SEQ, 
    SERDES_SD_LPBK_NORMAL_SEQ, SERDES_SD_ANA_TX_2_RX_SEQ, SERDES_SD_DIG_TX_2_RX_SEQ, SERDES_SD_DIG_RX_2_TX_SEQ, SERDES_PT_AFTER_PATTERN_NORMAL_SEQ, SERDES_PT_AFTER_PATTERN_TEST_SEQ, SERDES_RX_TRAINING_ENABLE_SEQ, SERDES_RX_TRAINING_DISABLE_SEQ, SERDES_TX_TRAINING_ENABLE_SEQ, SERDES_TX_TRAINING_DISABLE_SEQ, SERDES_SPEED_12_5G_SEQ, SERDES_SPEED_3_3G_SEQ, SERDES_SPEED_11_5625G_SEQ, SERDES_SERDES_PARTIAL_POWER_DOWN_SEQ, SERDES_SERDES_PARTIAL_POWER_UP_SEQ, SERDES_SPEED_11_25G_SEQ, SERDES_CORE_RESET_SEQ, 
    SERDES_CORE_UNRESET_SEQ, SERDES_FFE_TABLE_LR_SEQ, SERDES_FFE_TABLE_SR_SEQ, SERDES_SPEED_10_9375G_SEQ, SERDES_SPEED_12_1875G_SEQ, SERDES_SPEED_5_625G_SEQ, SERDES_SPEED_5_15625G_SEQ, MV_SERDES_LAST_SEQ} MV_HWS_COM_PHY_H_SUB_SEQ;
typedef enum {DFE_DISABLE, DFE_ENABLE, DFE_FREEZE, DFE_FORCE, DFE_STOP_ADAPTIVE, DFE_START_ADAPTIVE, DFE_ICAL, DFE_PCAL, DFE_ICAL_VSR, DFE_ICAL_BYPASS_CTLE, DFE_START_ADAPTIVE_FIXED_FFE, DFE_PCAL_FIXED_FFE} MV_HWS_DFE_MODE;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT *, GT_UOPT) MV_HWS_SERDES_ARRAY_HALT_DFE_TUNE_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UOPT *, GT_BOOL, MV_HWS_SERDES_CONFIG_STC *) MV_HWS_SERDES_ARRAY_POWER_CNTRL_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, GT_BOOL) MV_HWS_SERDES_AUTO_TUNE_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_AUTO_TUNE_RESULTS_UNT *) MV_HWS_SERDES_AUTO_TUNE_RESULT_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, GT_BOOL) MV_HWS_SERDES_AUTO_TUNE_RXTX_START_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_AUTO_TUNE_STATUS *, MV_HWS_AUTO_TUNE_STATUS *) MV_HWS_SERDES_AUTO_TUNE_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT) MV_HWS_SERDES_AUX_COUNTER_START_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_CALIBRATION_RESULTS *) MV_HWS_SERDES_CALIBRATION_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_SPEED, MV_HWS_SERDES_RX_CONFIG_DATA_UNT *) MV_HWS_SERDES_DB_RX_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_SPEED, MV_HWS_SERDES_TX_CONFIG_DATA_UNT *) MV_HWS_SERDES_DB_TX_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_DFE_MODE, GT_REG_DATA *) MV_HWS_SERDES_DFE_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UREG_DATA *) MV_HWS_SERDES_DFE_OPTI_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL *, GT_REG_DATA *, GT_REG_DATA *, GT_REG_DATA *) MV_HWS_SERDES_DFE_STATUS_EXT_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL *, GT_32 *) MV_HWS_SERDES_DFE_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_RESET) MV_HWS_SERDES_DIGITAL_RESET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_U16 *) MV_HWS_SERDES_DRO_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_DUMP_TYPE_ENT, GT_BOOL, GT_U32 *) MV_HWS_SERDES_DUMP_INFO_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, MV_HWS_SERDES_ENCODING_TYPE *, MV_HWS_SERDES_ENCODING_TYPE *) MV_HWS_SERDES_ENCODING_TYPE_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UREG_DATA, MV_HWS_SERDES_EOM_RES *) MV_HWS_SERDES_EOM_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UOPT, MV_HWS_SERDES_DIRECTION) MV_HWS_SERDES_ERROR_INJECT_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UREG_DATA, GT_UREG_DATA, GT_UREG_DATA) MV_HWS_SERDES_FFE_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_ALIGN90_PARAMS *) MV_HWS_SERDES_FIX_AL90_START_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_AUTO_TUNE_STATUS *) MV_HWS_SERDES_FIX_AL90_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_ALIGN90_PARAMS *, GT_BOOL) MV_HWS_SERDES_FIX_AL90_STOP_FUNC_PTR;
typedef struct {
    MV_HWS_SERDES_ARRAY_POWER_CNTRL_FUNC_PTR serdesArrayPowerCntrlFunc;
    MV_HWS_SERDES_POWER_CNTRL_FUNC_PTR serdesPowerCntrlFunc;
    MV_HWS_SERDES_MANUAL_TX_CFG_FUNC_PTR serdesManualTxCfgFunc;
    MV_HWS_SERDES_MANUAL_RX_CFG_FUNC_PTR serdesManualRxCfgFunc;
    MV_HWS_SERDES_PPM_CFG_FUNC_PTR serdesPpmCfgFunc;
    MV_HWS_SERDES_PPM_GET_FUNC_PTR serdesPpmGetFunc;
    MV_HWS_SERDES_TYPE_GET_FUNC_PTR serdesTypeGetFunc;
    MV_HWS_SERDES_EOM_GET_FUNC_PTR serdesEomGetFunc;
    MV_HWS_SERDES_AUTO_TUNE_CFG_FUNC_PTR serdesAutoTuneCfgFunc;
    MV_HWS_SERDES_GEN_BOOL_FUNC_PTR serdesRxAutoTuneStartFunc;
    MV_HWS_SERDES_GEN_BOOL_FUNC_PTR serdesTxAutoTuneStartFunc;
    MV_HWS_SERDES_AUTO_TUNE_RXTX_START_FUNC_PTR serdesAutoTuneStartFunc;
    MV_HWS_SERDES_AUTO_TUNE_RESULT_FUNC_PTR serdesAutoTuneResultFunc;
    MV_HWS_SERDES_AUTO_TUNE_STATUS_FUNC_PTR serdesAutoTuneStatusFunc;
    MV_HWS_SERDES_RESET_FUNC_PTR serdesResetFunc;
    MV_HWS_SERDES_DFE_CFG_FUNC_PTR serdesDfeCfgFunc;
    MV_HWS_SERDES_DFE_STATUS_EXT_FUNC_PTR serdesDfeStatusExtFunc;
    MV_HWS_SERDES_POLARITY_CFG_FUNC_PTR serdesPolarityCfgFunc;
    MV_HWS_SERDES_POLARITY_CFG_GET_FUNC_PTR serdesPolarityCfgGetFunc;
    MV_HWS_SERDES_DFE_OPTI_FUNC_PTR serdesDfeOptiFunc;
    MV_HWS_SERDES_FFE_CFG_FUNC_PTR serdesFfeCfgFunc;
    MV_HWS_SERDES_CALIBRATION_STATUS_FUNC_PTR serdesCalibrationStatusFunc;
    MV_HWS_SERDES_GEN_BOOL_FUNC_PTR serdesTxEnableFunc;
    MV_HWS_SERDES_TX_IF_SELECT_GET_FUNC_PTR serdesTxIfSelectGetFunc;
    MV_HWS_SERDES_SQLCH_CFG_FUNC_PTR serdesSqlchCfgFunc;
    MV_HWS_SERDES_GEN_BOOL_FUNC_PTR serdesAcTermCfgFunc;
    MV_HWS_SERDES_RESET_EXT_FUNC_PTR serdesResetExtFunc;
    MV_HWS_SERDES_SEQ_GET_FUNC_PTR serdesSeqGetFunc;
    MV_HWS_SERDES_SHORT_CORE_RESET_FUNC_PTR serdesCoreReset;
    MV_HWS_SERDES_GEN_FUNC_PTR serdesAutoTuneStopFunc;
    MV_HWS_SERDES_GEN_FUNC_PTR serdesDfeCheckFunc;
    MV_HWS_SERDES_SPEED_GET_FUNC_PTR serdesSpeedGetFunc;
    MV_HWS_SERDES_MANUAL_RX_CFG_GET_FUNC_PTR serdesManualRxCfgGetFunc;
    MV_HWS_SERDES_MANUAL_TX_CFG_GET_FUNC_PTR serdesManualTxCfgGetFunc;
    MV_HWS_SERDES_GEN_BOOL_GET_FUNC_PTR serdesSignalDetectGetFunc;
    MV_HWS_SERDES_GEN_BOOL_GET_FUNC_PTR serdesCdrLockStatusGetFunc;
    MV_HWS_SERDES_POWER_CNTRL_FUNC_PTR serdesApPowerCntrlFunc;
    MV_HWS_SERDES_LOW_POWER_MODE_ENABLE_FUNC_PTR serdesLowPowerModeEnableFunc;
    MV_HWS_SERDES_OPERATION_FUNC_PTR serdesOperFunc;
    MV_HWS_SERDES_TEMPERATURE_GET_FUNC_PTR serdesTemperatureFunc;
    MV_HWS_SERDES_ENCODING_TYPE_GET_FUNC_PTR serdesEncodingTypeGetFunc;
    MV_HWS_SERDES_RX_DATAPATH_CONFIG_GET_FUNC_PTR serdesRxDatapathConfigGetFunc;
    MV_HWS_SERDES_RX_PLL_LOCK_GET_FUNC_PTR serdesRxPllLockGetFunc;
    MV_HWS_SERDES_DRO_GET_FUNC_PTR serdesDroGetFunc;
    MV_HWS_SERDES_TX_ENABLE_GET_FUNC_PTR serdesTxEnableGetFunc;
    MV_HWS_SERDES_TX_IF_SELECT_FUNC_PTR serdesTxIfSelectFunc;
    MV_HWS_SERDES_DIGITAL_RESET_FUNC_PTR serdesDigitalReset;
    MV_HWS_SERDES_AUTO_TUNE_STATUS_FUNC_PTR serdesAutoTuneStatusShortFunc;
    MV_HWS_SERDES_ARRAY_HALT_DFE_TUNE_FUNC_PTR serdesArrayHaltDfeTuneFunc;
    MV_HWS_SERDES_SEQ_SET_FUNC_PTR serdesSeqSetFunc;
    MV_HWS_SERDES_GEN_BOOL_FUNC_PTR serdesSqDetectCfgFunc;
    MV_HWS_SERDES_DFE_STATUS_FUNC_PTR serdesDfeStatusFunc;
    MV_HWS_SERDES_LB_CFG_FUNC_PTR serdesLoopbackCfgFunc;
    MV_HWS_SERDES_LB_GET_FUNC_PTR serdesLoopbackGetFunc;
    MV_HWS_SERDES_TEST_GEN_FUNC_PTR serdesTestGenFunc;
    MV_HWS_SERDES_TEST_GEN_GET_FUNC_PTR serdesTestGenGetFunc;
    MV_HWS_SERDES_TEST_GEN_STATUS_FUNC_PTR serdesTestGenStatusFunc;
    MV_HWS_SERDES_AUX_COUNTER_START_FUNC_PTR serdesAuxCounterStartFunc;
    MV_HWS_SERDES_FIX_AL90_START_FUNC_PTR serdesFixAlign90Start;
    MV_HWS_SERDES_FIX_AL90_STOP_FUNC_PTR serdesFixAlign90Stop;
    MV_HWS_SERDES_FIX_AL90_STATUS_FUNC_PTR serdesFixAlign90Status;
    MV_HWS_SERDES_SCAN_SAMPLER_FUNC_PTR serdesScanSamplerFunc;
    MV_HWS_SERDES_PARTIAL_POWER_STATUS_FUNC_PTR serdesPartialPowerStatusGetFunc;
    MV_HWS_SERDES_PARTIAL_POWER_DOWN_FUNC_PTR serdesPartialPowerDownFunc;
    MV_HWS_SERDES_FW_DOWNLOAD_FUNC_PTR serdesFirmwareDownloadFunc;
    MV_HWS_SERDES_DB_TX_CFG_GET_FUNC_PTR serdesDbTxCfgGetFunc;
    MV_HWS_SERDES_DB_RX_CFG_GET_FUNC_PTR serdesDbRxCfgGetFunc;
    MV_HWS_SERDES_DUMP_INFO_FUNC_PTR serdesDumpInfoFunc;
    MV_HWS_SERDES_PMD_LOG_GET_FUNC_PTR serdesPMDLogGetFunc;
    MV_HWS_SERDES_ERROR_INJECT_FUNC_PTR serdesErrorInjectFunc;
    MV_HWS_SERDES_PRESET_OVERRIDE_SET_FUNC_PTR serdesPresetOverrideSetFunc;
    MV_HWS_SERDES_PRESET_OVERRIDE_GET_FUNC_PTR serdesPresetOverrideGetFunc;
} MV_HWS_SERDES_FUNC_PTRS;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT *, GT_U8, GT_U8) MV_HWS_SERDES_FW_DOWNLOAD_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL) MV_HWS_SERDES_GEN_BOOL_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL *) MV_HWS_SERDES_GEN_BOOL_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT) MV_HWS_SERDES_GEN_FUNC_PTR;
typedef enum {SERDES_LP_DISABLE, SERDES_LP_AN_TX_RX, SERDES_LP_DIG_TX_RX, SERDES_LP_DIG_RX_TX} MV_HWS_SERDES_LB;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_LB) MV_HWS_SERDES_LB_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_LB *) MV_HWS_SERDES_LB_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL) MV_HWS_SERDES_LOW_POWER_MODE_ENABLE_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_RX_CONFIG_DATA_UNT *) MV_HWS_SERDES_MANUAL_RX_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_RX_CONFIG_DATA_UNT *) MV_HWS_SERDES_MANUAL_RX_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_TX_CONFIG_DATA_UNT *) MV_HWS_SERDES_MANUAL_TX_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_TX_CONFIG_DATA_UNT *) MV_HWS_SERDES_MANUAL_TX_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_SERDES_OPERATION_MODE_ENT, GT_U32 *, GT_U32 *) MV_HWS_SERDES_OPERATION_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, GT_BOOL) MV_HWS_SERDES_PARTIAL_POWER_DOWN_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL *, GT_BOOL *) MV_HWS_SERDES_PARTIAL_POWER_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *, GT_CHAR *, GT_U32) MV_HWS_SERDES_PMD_LOG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, GT_BOOL) MV_HWS_SERDES_POLARITY_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL *, GT_BOOL *) MV_HWS_SERDES_POLARITY_CFG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, MV_HWS_SERDES_CONFIG_STC *) MV_HWS_SERDES_POWER_CNTRL_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_PPM_VALUE) MV_HWS_SERDES_PPM_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_PPM_VALUE *) MV_HWS_SERDES_PPM_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, MV_HWS_SERDES_PRESET_OVERRIDE_UNT *) MV_HWS_SERDES_PRESET_OVERRIDE_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, MV_HWS_SERDES_PRESET_OVERRIDE_UNT *) MV_HWS_SERDES_PRESET_OVERRIDE_SET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, GT_BOOL, GT_BOOL, GT_BOOL) MV_HWS_SERDES_RESET_EXT_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL, GT_BOOL, GT_BOOL) MV_HWS_SERDES_RESET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, MV_HWS_SERDES_RX_DATAPATH_CONFIG_STC *) MV_HWS_SERDES_RX_DATAPATH_CONFIG_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL *) MV_HWS_SERDES_RX_PLL_LOCK_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, MV_HWS_SAMPLER_RESULTS *) MV_HWS_SERDES_SCAN_SAMPLER_FUNC_PTR;
typedef GT_STATUS (*)(MV_HWS_COM_PHY_H_SUB_SEQ, MV_OP_PARAMS *, GT_UOPT) MV_HWS_SERDES_SEQ_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_BOOL, MV_HWS_COM_PHY_H_SUB_SEQ, MV_OP_PARAMS *, GT_UOPT) MV_HWS_SERDES_SEQ_SET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_RESET) MV_HWS_SERDES_SHORT_CORE_RESET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_SPEED *) MV_HWS_SERDES_SPEED_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UREG_DATA) MV_HWS_SERDES_SQLCH_CFG_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_32 *) MV_HWS_SERDES_TEMPERATURE_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_TX_PATTERN, MV_HWS_SERDES_TEST_GEN_MODE) MV_HWS_SERDES_TEST_GEN_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_TX_PATTERN *, MV_HWS_SERDES_TEST_GEN_MODE *) MV_HWS_SERDES_TEST_GEN_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, MV_HWS_SERDES_TX_PATTERN, GT_BOOL, MV_HWS_SERDES_TEST_GEN_STATUS *) MV_HWS_SERDES_TEST_GEN_STATUS_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_BOOL *) MV_HWS_SERDES_TX_ENABLE_GET_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UREG_DATA) MV_HWS_SERDES_TX_IF_SELECT_FUNC_PTR;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, GT_UOPT, GT_UREG_DATA *) MV_HWS_SERDES_TX_IF_SELECT_GET_FUNC_PTR;
typedef char *(*)(void) MV_HWS_SERDES_TYPE_GET_FUNC_PTR;

File common/h/cpss/common/labServices/port/gop/port/silicon/ac5p/regDb/mvHwsRsfecUnits.h:
typedef enum {RSFEC_UNIT_RSFEC_CONTROL_P0_BYPASS_CORRECTION_E, RSFEC_UNIT_RSFEC_CONTROL_P0_BYPASS_ERROR_INDICATION_E, RSFEC_UNIT_RSFEC_CONTROL_P0_DEGRADE_ENABLE_E, RSFEC_UNIT_RSFEC_CONTROL_P0_AM16_COPY_DIS_E, RSFEC_UNIT_RSFEC_CONTROL_P0_KP_ENABLE_E, RSFEC_UNIT_RSFEC_CONTROL_P0_TC_PAD_VALUE_E, RSFEC_UNIT_RSFEC_CONTROL_P0_TC_PAD_ALTER_E, RSFEC_UNIT_RSFEC_STATUS_P0_BYPASS_CORRECTION_ABILITY_E, RSFEC_UNIT_RSFEC_STATUS_P0_BYPASS_INDICATION_ABILITY_E, RSFEC_UNIT_RSFEC_STATUS_P0_HIGH_SER_E, 
    RSFEC_UNIT_RSFEC_STATUS_P0_DEGRADE_SER_ABILITY_E, RSFEC_UNIT_RSFEC_STATUS_P0_DEGRADE_SER_E, RSFEC_UNIT_RSFEC_STATUS_P0_RX_AM_SF2_E, RSFEC_UNIT_RSFEC_STATUS_P0_RX_AM_SF1_E, RSFEC_UNIT_RSFEC_STATUS_P0_RX_AM_SF0_E, RSFEC_UNIT_RSFEC_STATUS_P0_AMPS_LOCK_E, RSFEC_UNIT_RSFEC_STATUS_P0_FEC_ALIGN_STATUS_E, RSFEC_UNIT_RSFEC_CCW_LO_P0_RSFEC_CCW_LO_E, RSFEC_UNIT_RSFEC_CCW_HI_P0_RSFEC_CCW_HI_E, RSFEC_UNIT_RSFEC_NCCW_LO_P0_RSFEC_NCCW_LO_E, RSFEC_UNIT_RSFEC_NCCW_HI_P0_RSFEC_NCCW_HI_E, 
    RSFEC_UNIT_RSFEC_LANE_MAP_P0_RSFEC_LANE_MAP_E, RSFEC_UNIT_RSFEC_DEC_THRESH_P0_RSFEC_DEC_THRESH_E, RSFEC_UNIT_HISER_CW_HISER_CW_E, RSFEC_UNIT_HISER_THRESH_HISER_THRESH_E, RSFEC_UNIT_HISER_TIME_HISER_TIME_E, RSFEC_UNIT_DEGRADE_SET_CW_DEGRADE_SET_CW_E, RSFEC_UNIT_DEGRADE_SET_CW_HI_DEGRADE_SET_CW_HI_E, RSFEC_UNIT_DEGRADE_SET_THRESH_DEGRADE_SET_THRESH_E, RSFEC_UNIT_DEGRADE_SET_THRESH_HI_DEGRADE_SET_THRESH_HI_E, RSFEC_UNIT_DEGRADE_CLEAR_CW_DEGRADE_CLEAR_CW_E, 
    RSFEC_UNIT_DEGRADE_CLEAR_CW_HI_DEGRADE_CLEAR_CW_HI_E, RSFEC_UNIT_DEGRADE_CLEAR_THRESH_DEGRADE_CLEAR_THRESH_E, RSFEC_UNIT_DEGRADE_CLEAR_THRESH_HI_DEGRADE_CLEAR_THRESH_HI_E, RSFEC_UNIT_VENDOR_VL0_0_UM0_E, RSFEC_UNIT_VENDOR_VL0_0_UM1_E, RSFEC_UNIT_VENDOR_VL0_1_UM2_E, RSFEC_UNIT_VENDOR_VL1_0_UM0_E, RSFEC_UNIT_VENDOR_VL1_0_UM1_E, RSFEC_UNIT_VENDOR_VL1_1_UM2_E, RSFEC_UNIT_VENDOR_VL2_0_UM0_E, RSFEC_UNIT_VENDOR_VL2_0_UM1_E, RSFEC_UNIT_VENDOR_VL2_1_UM2_E, RSFEC_UNIT_VENDOR_VL3_0_UM0_E, 
    RSFEC_UNIT_VENDOR_VL3_0_UM1_E, RSFEC_UNIT_VENDOR_VL3_1_UM2_E, RSFEC_UNIT_VENDOR_VL4_0_UM0_E, RSFEC_UNIT_VENDOR_VL4_0_UM1_E, RSFEC_UNIT_VENDOR_VL4_1_UM2_E, RSFEC_UNIT_VENDOR_VL5_0_UM0_E, RSFEC_UNIT_VENDOR_VL5_0_UM1_E, RSFEC_UNIT_VENDOR_VL5_1_UM2_E, RSFEC_UNIT_VENDOR_VL6_0_UM0_E, RSFEC_UNIT_VENDOR_VL6_0_UM1_E, RSFEC_UNIT_VENDOR_VL6_1_UM2_E, RSFEC_UNIT_VENDOR_VL7_0_UM0_E, RSFEC_UNIT_VENDOR_VL7_0_UM1_E, RSFEC_UNIT_VENDOR_VL7_1_UM2_E, RSFEC_UNIT_VENDOR_VL8_0_UM0_E, RSFEC_UNIT_VENDOR_VL8_0_UM1_E, 
    RSFEC_UNIT_VENDOR_VL8_1_UM2_E, RSFEC_UNIT_VENDOR_VL9_0_UM0_E, RSFEC_UNIT_VENDOR_VL9_0_UM1_E, RSFEC_UNIT_VENDOR_VL9_1_UM2_E, RSFEC_UNIT_VENDOR_VL10_0_UM0_E, RSFEC_UNIT_VENDOR_VL10_0_UM1_E, RSFEC_UNIT_VENDOR_VL10_1_UM2_E, RSFEC_UNIT_VENDOR_VL11_0_UM0_E, RSFEC_UNIT_VENDOR_VL11_0_UM1_E, RSFEC_UNIT_VENDOR_VL11_1_UM2_E, RSFEC_UNIT_VENDOR_VL12_0_UM0_E, RSFEC_UNIT_VENDOR_VL12_0_UM1_E, RSFEC_UNIT_VENDOR_VL12_1_UM2_E, RSFEC_UNIT_VENDOR_VL13_0_UM0_E, RSFEC_UNIT_VENDOR_VL13_0_UM1_E, 
    RSFEC_UNIT_VENDOR_VL13_1_UM2_E, RSFEC_UNIT_VENDOR_VL14_0_UM0_E, RSFEC_UNIT_VENDOR_VL14_0_UM1_E, RSFEC_UNIT_VENDOR_VL14_1_UM2_E, RSFEC_UNIT_VENDOR_VL15_0_UM0_E, RSFEC_UNIT_VENDOR_VL15_0_UM1_E, RSFEC_UNIT_VENDOR_VL15_1_UM2_E, RSFEC_UNIT_RSFEC_SYMBLERR0_LO_SYMBLERR0_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR0_HI_SYMBLERR0_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR1_LO_SYMBLERR1_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR1_HI_SYMBLERR1_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR2_LO_SYMBLERR2_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR2_HI_SYMBLERR2_HI_E, 
    RSFEC_UNIT_RSFEC_SYMBLERR3_LO_SYMBLERR3_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR3_HI_SYMBLERR3_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR4_LO_SYMBLERR4_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR4_HI_SYMBLERR4_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR5_LO_SYMBLERR5_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR5_HI_SYMBLERR5_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR6_LO_SYMBLERR6_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR6_HI_SYMBLERR6_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR7_LO_SYMBLERR7_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR7_HI_SYMBLERR7_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR8_LO_SYMBLERR8_LO_E, 
    RSFEC_UNIT_RSFEC_SYMBLERR8_HI_SYMBLERR8_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR9_LO_SYMBLERR9_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR9_HI_SYMBLERR9_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR10_LO_SYMBLERR10_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR10_HI_SYMBLERR10_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR11_LO_SYMBLERR11_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR11_HI_SYMBLERR11_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR12_LO_SYMBLERR12_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR12_HI_SYMBLERR12_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR13_LO_SYMBLERR13_LO_E, 
    RSFEC_UNIT_RSFEC_SYMBLERR13_HI_SYMBLERR13_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR14_LO_SYMBLERR14_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR14_HI_SYMBLERR14_HI_E, RSFEC_UNIT_RSFEC_SYMBLERR15_LO_SYMBLERR15_LO_E, RSFEC_UNIT_RSFEC_SYMBLERR15_HI_SYMBLERR15_HI_E, RSFEC_UNIT_RSFEC_VENDOR_INFO1_VENDOR_AMPS_LOCK_E, RSFEC_UNIT_RSFEC_VENDOR_INFO1_VENDOR_ALIGN_STATUS_LH_E, RSFEC_UNIT_RSFEC_VENDOR_INFO1_VENDOR_MARKER_CHECK_RESTART_E, RSFEC_UNIT_RSFEC_VENDOR_INFO1_VENDOR_ALIGN_STATUS_LL_E, 
    RSFEC_UNIT_RSFEC_VENDOR_INFO2_VENDOR_AMPS_LOCK_LANES_E, RSFEC_UNIT_RSFEC_VENDOR_REVISION_REVISION_E, RSFEC_UNIT_RSFEC_VENDOR_ALIGN_STATUS_RSFEC_VENDOR_ALIGN_STATUS_E, RSFEC_REGISTER_LAST_E} MV_HWS_RSFEC_UNIT_FIELDS_E;

File common/h/cpss/common/networkIf/cpssGenNetIfTypes.h:
typedef enum {CPSS_NET_CPU_PORT_MODE_SDMA_E, CPSS_NET_CPU_PORT_MODE_MII_E, CPSS_NET_CPU_PORT_MODE_NONE_E} CPSS_NET_CPU_PORT_MODE_ENT;
typedef struct {
    GT_U32 counterArray[128];
} CPSS_NET_SDMA_RX_ERROR_COUNTERS_STC;

File common/h/cpss/common/phy/cpssGenPhySmi.h:
typedef enum {CPSS_PHY_SMI_INTERFACE_0_E, CPSS_PHY_SMI_INTERFACE_1_E, CPSS_PHY_SMI_INTERFACE_2_E, CPSS_PHY_SMI_INTERFACE_3_E, CPSS_PHY_SMI_INTERFACE_MAX_E, CPSS_PHY_SMI_INTERFACE_INVALID_E = -1} CPSS_PHY_SMI_INTERFACE_ENT;
typedef enum {CPSS_PHY_SMI_MDC_DIVISION_FACTOR_8_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_16_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_32_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_64_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_128_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_256_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_512_E, CPSS_PHY_SMI_MDC_DIVISION_FACTOR_MAX_E} CPSS_PHY_SMI_MDC_DIVISION_FACTOR_ENT;
typedef enum {CPSS_PHY_XSMI_INTERFACE_0_E, CPSS_PHY_XSMI_INTERFACE_1_E, CPSS_PHY_XSMI_INTERFACE_2_E, CPSS_PHY_XSMI_INTERFACE_3_E, CPSS_PHY_XSMI_INTERFACE_4_E, CPSS_PHY_XSMI_INTERFACE_5_E, CPSS_PHY_XSMI_INTERFACE_6_E, CPSS_PHY_XSMI_INTERFACE_7_E, CPSS_PHY_XSMI_INTERFACE_8_E, CPSS_PHY_XSMI_INTERFACE_9_E, CPSS_PHY_XSMI_INTERFACE_10_E, CPSS_PHY_XSMI_INTERFACE_11_E, CPSS_PHY_XSMI_INTERFACE_12_E, CPSS_PHY_XSMI_INTERFACE_13_E, CPSS_PHY_XSMI_INTERFACE_14_E, CPSS_PHY_XSMI_INTERFACE_15_E, 
    CPSS_PHY_XSMI_INTERFACE_MAX_E} CPSS_PHY_XSMI_INTERFACE_ENT;
typedef struct {
    CPSS_VCT_PHY_READ_PHY_REGISTER_FUN cpssPhyRegisterRead;
    CPSS_VCT_PHY_WRITE_PHY_REGISTER_FUN cpssPhyRegisterWrite;
    CPSS_VCT_PHY_AUTONEG_SET_FUN cpssPhyAutoNegotiationSet;
    CPSS_VCT_PHY_AUTONEG_GET_FUN cpssPhyAutoNegotiationGet;
} CPSS_VCT_GEN_BIND_FUNC_STC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL *) CPSS_VCT_PHY_AUTONEG_GET_FUN;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL) CPSS_VCT_PHY_AUTONEG_SET_FUN;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_U8, GT_U16 *) CPSS_VCT_PHY_READ_PHY_REGISTER_FUN;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_U8, GT_U16) CPSS_VCT_PHY_WRITE_PHY_REGISTER_FUN;

File common/h/cpss/common/phy/private/prvCpssPhy.h:
typedef struct {
    CPSS_VCT_GEN_BIND_FUNC_STC genVctBindFunc;
    PRV_CPSS_SMI_GEN_BIND_FUNC_STC genSmiBindFunc;
    PRV_CPSS_XSMI_GEN_BIND_FUNC_STC genXSmiBindFunc;
} PRV_CPSS_PHY_INFO_STC;
typedef struct {
    GT_U16 smiInterface;
    GT_U16 smiPortAddr;
    GT_U32 portGroupHostingSmiInterface;
} PRV_CPSS_PHY_PORT_SMI_IF_INFO_STC;
typedef enum {PRV_CPSS_SMI_BUS_TYPE_SMI_E, PRV_CPSS_SMI_BUS_TYPE_XSMI_E} PRV_CPSS_SMI_BUS_TYPE_ENT;
typedef struct {
    PRV_CPSS_SMI_PHY_MNG_REGISTERS_ADDR_GET_FUN cpssPhySmiRegsAddrGet;
} PRV_CPSS_SMI_GEN_BIND_FUNC_STC;
typedef GT_STATUS (*)(GT_U8, CPSS_PHY_SMI_INTERFACE_ENT, GT_U32 *) PRV_CPSS_SMI_PHY_MNG_REGISTERS_ADDR_GET_FUN;
typedef struct {
    PRV_CPSS_XSMI_PHY_MNG_REGISTERS_ADDR_GET_FUN cpssPhyXSmiRegsAddrGet;
} PRV_CPSS_XSMI_GEN_BIND_FUNC_STC;
typedef GT_STATUS (*)(GT_U8, CPSS_PHY_XSMI_INTERFACE_ENT, GT_U32 *, GT_U32 *) PRV_CPSS_XSMI_PHY_MNG_REGISTERS_ADDR_GET_FUN;

File common/h/cpss/common/port/cpssPortCtrl.h:
typedef struct {
    GT_U32 anRestartCounter;
    GT_U32 dspLockFailCounter;
    GT_U32 linkFailCounter;
    GT_U32 txTrainDuration;
    GT_U32 txTrainFailCounter;
    GT_U32 txTrainTimeoutCounter;
    GT_U32 txTrainOkCounter;
    GT_U32 rxInitOk;
    GT_U32 rxInitTimeOut;
    GT_U32 rxTrainFailed;
    GT_U32 rxTrainOk;
    GT_U32 rxTrainTimeOut;
    GT_U32 chSmState;
    GT_U32 txSmState;
    GT_U32 rxSmState;
} CPSS_ANP_INFO_STC;
typedef struct {
    GT_U32 numReceivedBlocks;
    GT_U32 numReceivedBlocksNoError;
    GT_U32 numReceivedBlocksCorrectedError;
    GT_U32 numReceivedBlocksUncorrectedError;
    GT_U32 numReceivedCorrectedErrorBits;
    GT_U32 numReceivedUncorrectedErrorBits;
    GT_U32 blocksCorrectedError[4];
    GT_U32 blocksUncorrectedError[4];
} CPSS_FCFEC_COUNTERS_STC;
typedef enum {CPSS_PORT_AP_FLOW_CONTROL_SYMMETRIC_E, CPSS_PORT_AP_FLOW_CONTROL_ASYMMETRIC_E} CPSS_PORT_AP_FLOW_CONTROL_ENT;
typedef struct {
    GT_BOOL fcPause;
    CPSS_PORT_AP_FLOW_CONTROL_ENT fcAsmDir;
    GT_BOOL fecSupported;
    GT_BOOL fecRequired;
    GT_BOOL noneceDisable;
    GT_U32 laneNum;
    CPSS_PORT_MODE_SPEED_STC modesAdvertiseArr[10];
    CPSS_PORT_FEC_MODE_ENT fecAbilityArr[10];
    CPSS_PORT_FEC_MODE_ENT fecRequestedArr[10];
} CPSS_PORT_AP_PARAMS_STC;
typedef struct {
    GT_U16 squelch;
    GT_U8 lowFrequency;
    GT_U8 highFrequency;
    GT_U8 dcGain;
    GT_U8 bandWidth;
    GT_U8 etlMinDelay;
    GT_U8 etlMaxDelay;
    GT_BOOL etlEnable;
    GT_U16 fieldOverrideBmp;
    CPSS_PORT_SERDES_SPEED_ENT serdesSpeed;
} CPSS_PORT_AP_SERDES_RX_CONFIG_STC;
typedef struct {
    GT_8 txAmpOffset;
    GT_8 txEmph0Offset;
    GT_8 txEmph1Offset;
    GT_BOOL reqInit;
    CPSS_PORT_INTERFACE_MODE_ENT ifMode;
    CPSS_PORT_SPEED_ENT speed;
} CPSS_PORT_AP_SERDES_TX_OFFSETS_STC;
typedef struct {
    GT_U32 postApPortNum;
    CPSS_PORT_MODE_SPEED_STC portMode;
    GT_BOOL hcdFound;
    GT_BOOL fecEnabled;
    GT_BOOL fcRxPauseEn;
    GT_BOOL fcTxPauseEn;
    CPSS_PORT_FEC_MODE_ENT fecType;
} CPSS_PORT_AP_STATUS_STC;
typedef struct {
    GT_BOOL portLinkUp;
    CPSS_PORT_SPEED_ENT portSpeed;
    CPSS_PORT_DUPLEX_ENT portDuplexity;
} CPSS_PORT_ATTRIBUTES_STC;
typedef struct {
    GT_U32 sqlch;
    GT_U32 DC;
    GT_U32 LF;
    GT_U32 HF;
    GT_U32 BW;
    GT_U32 EO;
    GT_32 DFE[13];
    GT_U32 gainshape1;
    GT_U32 gainshape2;
    GT_U32 shortChannelEn;
    GT_U32 dfeGAIN;
    GT_U32 dfeGAIN2;
    GT_32 BFLF;
    GT_32 BFHF;
    GT_U32 minLf;
    GT_U32 maxLf;
    GT_U32 minHf;
    GT_U32 maxHf;
    GT_32 minPre1;
    GT_32 maxPre1;
    GT_32 minPre2;
    GT_32 maxPre2;
    GT_32 minPost;
    GT_32 maxPost;
    GT_32 pre1;
    GT_32 pre2;
    GT_32 post1;
    GT_32 pam4EyesArr[6];
    CPSS_SERDES_TERMINATION termination;
    GT_U32 coldEnvelope;
    GT_U32 hotEnvelope;
} CPSS_PORT_AVAGO_SERDES_RX_CONFIG_STC;
typedef struct {
    GT_U32 atten;
    GT_32 post;
    GT_32 pre;
    GT_32 pre2;
    GT_32 pre3;
} CPSS_PORT_AVAGO_SERDES_TX_CONFIG_STC;
typedef struct {
    GT_U32 current1Sel;
    GT_U32 rl1Sel;
    GT_U32 rl1Extra;
    GT_U32 res1Sel;
    GT_U32 cap1Sel;
    GT_U32 cl1Ctrl;
    GT_U32 enMidFreq;
    GT_U32 cs1Mid;
    GT_U32 rs1Mid;
    GT_U32 rfCtrl;
    GT_U32 rl1TiaSel;
    GT_U32 rl1TiaExtra;
    GT_U32 hpfRSel1st;
    GT_U32 current1TiaSel;
    GT_U32 rl2Tune;
    GT_U32 rl2Sel;
    GT_U32 rs2Sel;
    GT_U32 current2Sel;
    GT_U32 cap2Sel;
    GT_U32 hpfRsel2nd;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_U32 squelch;
    GT_U32 align90AnaReg;
    GT_32 align90;
    GT_U32 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[40];
    GT_U32 EO;
} CPSS_PORT_COMPHY_C112G_RX_CONFIG_STC;
typedef struct {
    GT_32 pre2;
    GT_32 pre;
    GT_32 main;
    GT_32 post;
} CPSS_PORT_COMPHY_C112G_TX_CONFIG_STC;
typedef struct {
    GT_U32 resSel;
    GT_U32 resShift;
    GT_U32 capSel;
    GT_U8 ffeSettingForce;
    GT_U8 adaptedResSel;
    GT_U8 adaptedCapSel;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_32 squelch;
    GT_U32 align90;
    GT_U32 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[12];
    GT_U32 EO;
} CPSS_PORT_COMPHY_C12GP41P2V_RX_CONFIG_STC;
typedef struct {
    GT_U32 pre;
    GT_U32 peak;
    GT_U32 post;
} CPSS_PORT_COMPHY_C12G_TX_CONFIG_STC;
typedef struct {
    GT_U32 dataRate;
    GT_U32 res1Sel;
    GT_U32 res2Sel;
    GT_U32 cap1Sel;
    GT_U32 cap2Sel;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_U32 midpointLargeThresKLane;
    GT_U32 midpointSmallThresKLane;
    GT_U32 midpointLargeThresCLane;
    GT_U32 midpointSmallThresCLane;
    GT_U32 dfeResF0aHighThresInitLane;
    GT_U32 dfeResF0aHighThresEndLane;
    GT_32 squelch;
    GT_U32 align90;
    GT_U32 sampler;
    GT_U32 slewRateCtrl0;
    GT_U32 slewRateCtrl1;
    GT_32 dfe[25];
    GT_U32 EO;
} CPSS_PORT_COMPHY_C28GP4_RX_CONFIG_STC;
typedef struct {
    GT_U32 pre;
    GT_U32 peak;
    GT_U32 post;
} CPSS_PORT_COMPHY_C28G_TX_CONFIG_STC;
typedef struct {
    GT_U32 cur1Sel;
    GT_U32 rl1Sel;
    GT_U32 rl1Extra;
    GT_U32 res1Sel;
    GT_U32 cap1Sel;
    GT_U32 enMidfreq;
    GT_U32 cs1Mid;
    GT_U32 rs1Mid;
    GT_U32 cur2Sel;
    GT_U32 rl2Sel;
    GT_U32 rl2TuneG;
    GT_U32 res2Sel;
    GT_U32 cap2Sel;
    GT_U32 selmufi;
    GT_U32 selmuff;
    GT_U32 selmupi;
    GT_U32 selmupf;
    GT_32 squelch;
    GT_32 dfe[26];
} CPSS_PORT_COMPHY_C56G_RX_CONFIG_STC;
typedef struct {
    GT_32 pre2;
    GT_32 pre;
    GT_32 main;
    GT_32 post;
    GT_BOOL usr;
} CPSS_PORT_COMPHY_C56G_TX_CONFIG_STC;
typedef struct {
    GT_U32 dcGain;
    GT_U32 bandWidth;
    GT_U32 dfe;
    GT_U32 ffeR;
    GT_U32 ffeC;
    GT_U32 sampler;
    GT_U32 sqlch;
    GT_U32 align90;
    GT_U32 ffeS;
    GT_32 dfeValsArray[6];
} CPSS_PORT_COMPHY_SERDES_RX_CONFIG_STC;
typedef struct {
    GT_U32 txAmp;
    GT_BOOL txAmpAdjEn;
    GT_32 emph0;
    GT_32 emph1;
    GT_BOOL txAmpShft;
    GT_BOOL txEmphEn;
    GT_BOOL txEmphEn1;
    GT_U32 txAmpAdj;
    GT_BOOL slewCtrlEn;
    GT_U32 slewRate;
} CPSS_PORT_COMPHY_SERDES_TX_CONFIG_STC;
typedef enum {CPSS_PORT_DIRECTION_RX_E, CPSS_PORT_DIRECTION_TX_E, CPSS_PORT_DIRECTION_BOTH_E} CPSS_PORT_DIRECTION_ENT;
typedef enum {CPSS_PORT_FULL_DUPLEX_E, CPSS_PORT_HALF_DUPLEX_E} CPSS_PORT_DUPLEX_ENT;
typedef enum {CPSS_PORT_FEC_MODE_ENABLED_E, CPSS_PORT_FEC_MODE_DISABLED_E, CPSS_PORT_RS_FEC_MODE_ENABLED_E, CPSS_PORT_BOTH_FEC_MODE_ENABLED_E, CPSS_PORT_RS_FEC_544_514_MODE_ENABLED_E, CPSS_PORT_FEC_MODE_LAST_E} CPSS_PORT_FEC_MODE_ENT;
typedef enum {CPSS_PORT_FLOW_CONTROL_DISABLE_E, CPSS_PORT_FLOW_CONTROL_RX_TX_E, CPSS_PORT_FLOW_CONTROL_RX_ONLY_E, CPSS_PORT_FLOW_CONTROL_TX_ONLY_E} CPSS_PORT_FLOW_CONTROL_ENT;
typedef enum {CPSS_PORT_INTERFACE_MODE_REDUCED_10BIT_E, CPSS_PORT_INTERFACE_MODE_REDUCED_GMII_E, CPSS_PORT_INTERFACE_MODE_MII_E, CPSS_PORT_INTERFACE_MODE_SGMII_E, CPSS_PORT_INTERFACE_MODE_XGMII_E, CPSS_PORT_INTERFACE_MODE_MGMII_E, CPSS_PORT_INTERFACE_MODE_1000BASE_X_E, CPSS_PORT_INTERFACE_MODE_GMII_E, CPSS_PORT_INTERFACE_MODE_MII_PHY_E, CPSS_PORT_INTERFACE_MODE_QX_E, CPSS_PORT_INTERFACE_MODE_HX_E, CPSS_PORT_INTERFACE_MODE_RXAUI_E, CPSS_PORT_INTERFACE_MODE_100BASE_FX_E, CPSS_PORT_INTERFACE_MODE_QSGMII_E, 
    CPSS_PORT_INTERFACE_MODE_XLG_E, CPSS_PORT_INTERFACE_MODE_LOCAL_XGMII_E, CPSS_PORT_INTERFACE_MODE_NO_SERDES_PORT_E = 15, CPSS_PORT_INTERFACE_MODE_KR_E, CPSS_PORT_INTERFACE_MODE_HGL_E, CPSS_PORT_INTERFACE_MODE_CHGL_12_E, CPSS_PORT_INTERFACE_MODE_ILKN12_E, CPSS_PORT_INTERFACE_MODE_SR_LR_E, CPSS_PORT_INTERFACE_MODE_ILKN16_E, CPSS_PORT_INTERFACE_MODE_ILKN24_E, CPSS_PORT_INTERFACE_MODE_ILKN4_E, CPSS_PORT_INTERFACE_MODE_ILKN8_E, CPSS_PORT_INTERFACE_MODE_XHGS_E, CPSS_PORT_INTERFACE_MODE_XHGS_SR_E, 
    CPSS_PORT_INTERFACE_MODE_KR2_E, CPSS_PORT_INTERFACE_MODE_KR4_E, CPSS_PORT_INTERFACE_MODE_SR_LR2_E, CPSS_PORT_INTERFACE_MODE_SR_LR4_E, CPSS_PORT_INTERFACE_MODE_MLG_40G_10G_40G_10G_E, CPSS_PORT_INTERFACE_MODE_KR_C_E, CPSS_PORT_INTERFACE_MODE_CR_C_E, CPSS_PORT_INTERFACE_MODE_KR2_C_E, CPSS_PORT_INTERFACE_MODE_CR2_C_E, CPSS_PORT_INTERFACE_MODE_CR_E, CPSS_PORT_INTERFACE_MODE_CR2_E, CPSS_PORT_INTERFACE_MODE_CR4_E, CPSS_PORT_INTERFACE_MODE_KR_S_E, CPSS_PORT_INTERFACE_MODE_CR_S_E, 
    CPSS_PORT_INTERFACE_MODE_KR8_E, CPSS_PORT_INTERFACE_MODE_CR8_E, CPSS_PORT_INTERFACE_MODE_SR_LR8_E, CPSS_PORT_INTERFACE_MODE_USX_2_5G_SXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_5G_SXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_10G_SXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_5G_DXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_10G_DXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_20G_DXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_QUSGMII_E, CPSS_PORT_INTERFACE_MODE_USX_10G_QXGMII_E, CPSS_PORT_INTERFACE_MODE_USX_20G_QXGMII_E, 
    CPSS_PORT_INTERFACE_MODE_USX_OUSGMII_E, CPSS_PORT_INTERFACE_MODE_USX_20G_OXGMII_E, CPSS_PORT_INTERFACE_MODE_2500BASE_X_E, CPSS_PORT_INTERFACE_MODE_REMOTE_E, CPSS_PORT_INTERFACE_MODE_NA_E, CPSS_PORT_INTERFACE_MODE_NA_HCD_E = 255} CPSS_PORT_INTERFACE_MODE_ENT;
typedef struct {
    GT_BOOL isPortRxPause;
    GT_BOOL isPortTxPause;
    GT_BOOL isPortBackPres;
    GT_BOOL isPortBufFull;
    GT_BOOL isPortSyncFail;
    GT_BOOL isPortHiErrorRate;
    GT_BOOL isPortAnDone;
    GT_BOOL isPortFatalError;
} CPSS_PORT_MAC_STATUS_STC;
typedef struct {
    GT_U8 serdesLanes[10];
} CPSS_PORT_MAC_TO_SERDES_STC;
typedef enum {CPSS_PORT_MAC_TYPE_NOT_EXISTS_E, CPSS_PORT_MAC_TYPE_FE_E, CPSS_PORT_MAC_TYPE_GE_E, CPSS_PORT_MAC_TYPE_XG_E, CPSS_PORT_MAC_TYPE_XLG_E, CPSS_PORT_MAC_TYPE_HGL_E, CPSS_PORT_MAC_TYPE_CG_E, CPSS_PORT_MAC_TYPE_ILKN_E, CPSS_PORT_MAC_TYPE_MTI_100_E, CPSS_PORT_MAC_TYPE_MTI_400_E, CPSS_PORT_MAC_TYPE_MTI_CPU_E, CPSS_PORT_MAC_TYPE_MTI_USX_E, CPSS_PORT_MAC_TYPE_NOT_APPLICABLE_E, CPSS_PORT_MAC_TYPE_LAST_E = 12} CPSS_PORT_MAC_TYPE_ENT;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT ifMode;
    CPSS_PORT_SPEED_ENT speed;
} CPSS_PORT_MODE_SPEED_STC;
typedef enum {CPSS_PORT_PA_BW_MODE_REGULAR_E, CPSS_PORT_PA_BW_EXT_MODE_1_E, CPSS_PORT_PA_BW_EXT_MODE_2_E, CPSS_PORT_PA_BW_EXT_MODE_3_E, CPSS_PORT_PA_BW_EXT_MODE_4_E, CPSS_PORT_PA_BW_EXT_MODE_5_E, CPSS_PORT_PA_BW_EXT_MODE_6_E, CPSS_PORT_PA_BW_EXT_MODE_7_E, CPSS_PORT_PA_BW_EXT_MODE_8_E, CPSS_PORT_PA_BW_MODE_LAST_E} CPSS_PORT_PA_BW_MODE_ENT;
typedef enum {CPSS_PORT_PCS_LOOPBACK_DISABLE_E, CPSS_PORT_PCS_LOOPBACK_TX2RX_E, CPSS_PORT_PCS_LOOPBACK_RX2TX_E} CPSS_PORT_PCS_LOOPBACK_MODE_ENT;
typedef enum {CPSS_PORT_PCS_RESET_MODE_RX_E, CPSS_PORT_PCS_RESET_MODE_TX_E, CPSS_PORT_PCS_RESET_MODE_ALL_E} CPSS_PORT_PCS_RESET_MODE_ENT;
typedef enum {CPSS_PORT_PERIODIC_FLOW_CONTROL_DISABLE_E, CPSS_PORT_PERIODIC_FLOW_CONTROL_XON_XOFF_E, CPSS_PORT_PERIODIC_FLOW_CONTROL_XON_ONLY_E, CPSS_PORT_PERIODIC_FLOW_CONTROL_XOFF_ONLY_E} CPSS_PORT_PERIODIC_FLOW_CONTROL_TYPE_ENT;
typedef enum {CPSS_PORT_REF_CLOCK_SOURCE_PRIMARY_E, CPSS_PORT_REF_CLOCK_SOURCE_SECONDARY_E, CPSS_PORT_REF_CLOCK_SOURCE_LAST_E} CPSS_PORT_REF_CLOCK_SOURCE_ENT;
typedef enum {CPSS_PORT_RX_FC_PROFILE_1_E, CPSS_PORT_RX_FC_PROFILE_2_E, CPSS_PORT_RX_FC_PROFILE_3_E, CPSS_PORT_RX_FC_PROFILE_4_E, CPSS_PORT_RX_FC_PROFILE_5_E, CPSS_PORT_RX_FC_PROFILE_6_E, CPSS_PORT_RX_FC_PROFILE_7_E, CPSS_PORT_RX_FC_PROFILE_8_E} CPSS_PORT_RX_FC_PROFILE_SET_ENT;
typedef enum {CPSS_PORT_SERDES_AUTO_TUNE_MODE_TX_TRAINING_CFG_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_TX_TRAINING_START_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_TX_TRAINING_STATUS_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_RX_TRAINING_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_TRAINING_STOP_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_ADAPTIVE_RX_TRAINING_START_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_ADAPTIVE_RX_TRAINING_STOP_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENHANCE_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_EDGE_DETECT_E, 
    CPSS_PORT_SERDES_AUTO_TUNE_MODE_RX_TRAINING_WAIT_FOR_FINISH_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_RX_TRAINING_VSR_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_FIXED_CTLE_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_TX_TRAINING_STOP_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_RX_TRAINING_STOP_E, CPSS_PORT_SERDES_AUTO_TUNE_MODE_LAST_E} CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENT;
typedef enum {CPSS_PORT_SERDES_AUTO_TUNE_PASS_E, CPSS_PORT_SERDES_AUTO_TUNE_FAIL_E, CPSS_PORT_SERDES_AUTO_TUNE_NOT_COMPLITED_E} CPSS_PORT_SERDES_AUTO_TUNE_STATUS_ENT;
typedef enum {CPSS_PORT_SERDES_LOOPBACK_DISABLE_E, CPSS_PORT_SERDES_LOOPBACK_ANALOG_TX2RX_E, CPSS_PORT_SERDES_LOOPBACK_DIGITAL_TX2RX_E, CPSS_PORT_SERDES_LOOPBACK_DIGITAL_RX2TX_E, CPSS_PORT_SERDES_LOOPBACK_MAX_E} CPSS_PORT_SERDES_LOOPBACK_MODE_ENT;
typedef struct {
    CPSS_PORT_SERDES_TYPE_ENT type;
    CPSS_PORT_SERDES_RX_CONFIG_UNT rxTune;
} CPSS_PORT_SERDES_RX_CONFIG_STC;
typedef union {
    CPSS_PORT_COMPHY_SERDES_RX_CONFIG_STC comphy;
    CPSS_PORT_COMPHY_C12GP41P2V_RX_CONFIG_STC comphy_C12G;
    CPSS_PORT_COMPHY_C28GP4_RX_CONFIG_STC comphy_C28G;
    CPSS_PORT_COMPHY_C56G_RX_CONFIG_STC comphy_C56G;
    CPSS_PORT_COMPHY_C112G_RX_CONFIG_STC comphy_C112G;
    CPSS_PORT_AVAGO_SERDES_RX_CONFIG_STC avago;
} CPSS_PORT_SERDES_RX_CONFIG_UNT;
typedef enum {CPSS_PORT_SERDES_SPEED_1_25_E, CPSS_PORT_SERDES_SPEED_3_125_E, CPSS_PORT_SERDES_SPEED_3_75_E, CPSS_PORT_SERDES_SPEED_6_25_E, CPSS_PORT_SERDES_SPEED_5_E, CPSS_PORT_SERDES_SPEED_4_25_E, CPSS_PORT_SERDES_SPEED_2_5_E, CPSS_PORT_SERDES_SPEED_5_156_E, CPSS_PORT_SERDES_SPEED_10_3125_E, CPSS_PORT_SERDES_SPEED_3_333_E, CPSS_PORT_SERDES_SPEED_12_5_E, CPSS_PORT_SERDES_SPEED_7_5_E, CPSS_PORT_SERDES_SPEED_11_25_E, CPSS_PORT_SERDES_SPEED_11_5625_E, CPSS_PORT_SERDES_SPEED_10_9375_E, 
    CPSS_PORT_SERDES_SPEED_12_1875_E, CPSS_PORT_SERDES_SPEED_5_625_E, CPSS_PORT_SERDES_SPEED_12_8906_E, CPSS_PORT_SERDES_SPEED_20_625_E, CPSS_PORT_SERDES_SPEED_25_78125_E, CPSS_PORT_SERDES_SPEED_27_5_E, CPSS_PORT_SERDES_SPEED_28_05_E, CPSS_PORT_SERDES_SPEED_26_25_E, CPSS_PORT_SERDES_SPEED_27_1_E, CPSS_PORT_SERDES_SPEED_NA_E} CPSS_PORT_SERDES_SPEED_ENT;
typedef struct {
    CPSS_PORT_SERDES_TYPE_ENT type;
    CPSS_PORT_SERDES_TX_CONFIG_UNT txTune;
    CPSS_PORT_SERDES_RX_CONFIG_UNT rxTune;
} CPSS_PORT_SERDES_TUNE_STC;
typedef struct {
    CPSS_PORT_SERDES_TYPE_ENT type;
    CPSS_PORT_SERDES_TX_CONFIG_UNT txTune;
    CPSS_PORT_SERDES_RX_CONFIG_UNT rxTune;
} * CPSS_PORT_SERDES_TUNE_STC_PTR;
typedef struct {
    CPSS_PORT_SERDES_TYPE_ENT type;
    CPSS_PORT_SERDES_TX_CONFIG_UNT txTune;
} CPSS_PORT_SERDES_TX_CONFIG_STC;
typedef union {
    CPSS_PORT_COMPHY_SERDES_TX_CONFIG_STC comphy;
    CPSS_PORT_COMPHY_C12G_TX_CONFIG_STC comphy_C12G;
    CPSS_PORT_COMPHY_C28G_TX_CONFIG_STC comphy_C28G;
    CPSS_PORT_COMPHY_C56G_TX_CONFIG_STC comphy_C56G;
    CPSS_PORT_COMPHY_C112G_TX_CONFIG_STC comphy_C112G;
    CPSS_PORT_AVAGO_SERDES_TX_CONFIG_STC avago;
} CPSS_PORT_SERDES_TX_CONFIG_UNT;
typedef enum {CPSS_PORT_SERDES_COMPHY_H_E, CPSS_PORT_SERDES_AVAGO_E, CPSS_PORT_SERDES_COMPHY_C12G_E, CPSS_PORT_SERDES_COMPHY_C28G_E, CPSS_PORT_SERDES_COMPHY_C112G_E, CPSS_PORT_SERDES_COMPHY_C56G_E, CPSS_PORT_SERDES_TYPE_LAST_E} CPSS_PORT_SERDES_TYPE_ENT;
typedef enum {CPSS_PORT_SPEED_10_E, CPSS_PORT_SPEED_100_E, CPSS_PORT_SPEED_1000_E, CPSS_PORT_SPEED_10000_E, CPSS_PORT_SPEED_12000_E, CPSS_PORT_SPEED_2500_E, CPSS_PORT_SPEED_5000_E, CPSS_PORT_SPEED_13600_E, CPSS_PORT_SPEED_20000_E, CPSS_PORT_SPEED_40000_E, CPSS_PORT_SPEED_16000_E, CPSS_PORT_SPEED_15000_E, CPSS_PORT_SPEED_75000_E, CPSS_PORT_SPEED_100G_E, CPSS_PORT_SPEED_50000_E, CPSS_PORT_SPEED_140G_E, CPSS_PORT_SPEED_11800_E, CPSS_PORT_SPEED_47200_E, CPSS_PORT_SPEED_22000_E, CPSS_PORT_SPEED_23600_E, 
    CPSS_PORT_SPEED_12500_E, CPSS_PORT_SPEED_25000_E, CPSS_PORT_SPEED_107G_E, CPSS_PORT_SPEED_29090_E, CPSS_PORT_SPEED_200G_E, CPSS_PORT_SPEED_400G_E, CPSS_PORT_SPEED_102G_E, CPSS_PORT_SPEED_52500_E, CPSS_PORT_SPEED_26700_E, CPSS_PORT_SPEED_106G_E, CPSS_PORT_SPEED_42000_E, CPSS_PORT_SPEED_53000_E, CPSS_PORT_SPEED_424G_E, CPSS_PORT_SPEED_212G_E, CPSS_PORT_SPEED_REMOTE_E, CPSS_PORT_SPEED_NA_E, CPSS_PORT_SPEED_NA_HCD_E = 255} CPSS_PORT_SPEED_ENT;
typedef enum {CPSS_PORT_XGMII_LAN_E, CPSS_PORT_XGMII_WAN_E, CPSS_PORT_XGMII_FIXED_E} CPSS_PORT_XGMII_MODE_ENT;
typedef enum {CPSS_PORT_XG_FIXED_IPG_8_BYTES_E, CPSS_PORT_XG_FIXED_IPG_12_BYTES_E} CPSS_PORT_XG_FIXED_IPG_ENT;
typedef struct {
    GT_U64 correctedFecCodeword;
    GT_U64 uncorrectedFecCodeword;
    GT_U64 correctFecCodeword;
    GT_U32 symbolError[4];
    GT_U64 total_cw_received;
} CPSS_RSFEC_COUNTERS_STC;
typedef enum {CPSS_SERDES_TERMINATION_GND, CPSS_SERDES_TERMINATION_VDD, CPSS_SERDES_TERMINATION_FLOATING} CPSS_SERDES_TERMINATION;

File common/h/cpss/common/port/cpssPortManager.h:
typedef enum {CPSS_PM_AP_LANE_SERDES_SPEED_10000_E, CPSS_PM_AP_LANE_SERDES_SPEED_25000_E, CPSS_PM_AP_LANE_SERDES_SPEED_PAM4_E, CPSS_PM_AP_LANE_SERDES_SPEED_NONE_E} CPSS_PM_AP_LANE_SERDES_SPEED;
typedef struct {
    GT_U32 validApLaneParamsBitMask;
    CPSS_PORT_SERDES_TX_CONFIG_STC txParams;
    CPSS_PORT_SERDES_RX_CONFIG_STC rxParams;
    GT_U8 etlMinDelay;
    GT_U8 etlMaxDelay;
} CPSS_PM_AP_MODE_LANE_PARAM_STC;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT ifMode;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_FEC_MODE_ENT fecSupported;
    CPSS_PORT_FEC_MODE_ENT fecRequested;
} CPSS_PM_AP_PORT_ADV_STC;
typedef struct {
    GT_U32 validAttrsBitMask;
    GT_BOOL nonceDisable;
    GT_BOOL fcPause;
    CPSS_PORT_AP_FLOW_CONTROL_ENT fcAsmDir;
    GT_U32 negotiationLaneNum;
    CPSS_PM_AP_MODE_LANE_PARAM_STC overrideLaneParams[3][8];
    CPSS_PORT_MANAGER_LKB_CONFIG_STC linkBinding;
    GT_U32 portExtraOperation;
    CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_ENT interconnectProfile;
    GT_BOOL skipRes;
    CPSS_PORT_MANAGER_AP_PARALLEL_DETECT_STC parallelDetect;
} CPSS_PM_AP_PORT_ATTR_STC;
typedef struct {
    GT_U32 numOfModes;
    CPSS_PM_AP_PORT_ADV_STC modesArr[10];
    CPSS_PM_AP_PORT_ATTR_STC apAttrs;
} CPSS_PM_AP_PORT_PARAMS_STC;
typedef struct {
    GT_U8 minLF;
    GT_U8 maxLF;
} CPSS_PM_ET_OVERRIDE_CFG_STC;
typedef enum {CPSS_PM_MAC_PREEMPTION_METHOD_NORMAL_E, CPSS_PM_MAC_PREEMPTION_METHOD_HIGH_PRIORITY_E} CPSS_PM_MAC_PREEMPTION_METHOD_ENT;
typedef enum {CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_64_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_128_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_192_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_256_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_320_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_384_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_448_BYTE_E, CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_512_BYTE_E} CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_ENT;
typedef struct {
    CPSS_PM_MAC_PREEMPTION_TYPE_ENT type;
    CPSS_PM_MAC_PREEMPTION_MIN_FRAG_SIZE_ENT minFragSize;
    CPSS_PM_MAC_PREEMPTION_METHOD_ENT preemptionMethod;
} CPSS_PM_MAC_PREEMPTION_PARAMS_STC;
typedef enum {CPSS_PM_MAC_PREEMPTION_DISABLED_E, CPSS_PM_MAC_PREEMPTION_ENABLED_AGGREGATED_E, CPSS_PM_MAC_PREEMPTION_ENABLED_SEPARATED_E} CPSS_PM_MAC_PREEMPTION_TYPE_ENT;
typedef struct {
    GT_U32 validLaneParamsBitMask;
    GT_U16 globalLaneNum;
    CPSS_PORT_SERDES_TX_CONFIG_STC txParams;
    CPSS_PORT_SERDES_RX_CONFIG_STC rxParams;
} CPSS_PM_MODE_LANE_PARAM_STC;
typedef struct {
    GT_U32 validAttrsBitMask;
    CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENT trainMode;
    GT_BOOL adaptRxTrainSupp;
    GT_BOOL edgeDetectSupported;
    CPSS_PORT_MANAGER_LOOPBACK_CONFIG_STC loopback;
    CPSS_PM_ET_OVERRIDE_CFG_STC etOverride;
    CPSS_PORT_FEC_MODE_ENT fecMode;
    CPSS_PORT_MANAGER_CALIBRATION_MODE_STC calibrationMode;
    CPSS_PORT_MANAGER_UNMASK_EVENTS_MODE_ENT unMaskEventsMode;
    CPSS_PORT_PA_BW_MODE_ENT bwMode;
    CPSS_PORT_MANAGER_LKB_CONFIG_STC linkBinding;
    GT_U32 portExtraOperation;
    CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_ENT interconnectProfile;
    CPSS_PM_MAC_PREEMPTION_PARAMS_STC preemptionParams;
    CPSS_PORT_MANAGER_SGMII_AUTO_NEGOTIATION_STC autoNegotiation;
    GT_BOOL pmOverFw;
} CPSS_PM_PORT_ATTR_STC;
typedef struct {
    CPSS_PORT_MANAGER_PORT_TYPE_ENT portType;
    GT_U32 magic;
    CPSS_PM_PORT_PARAMS_TYPE_UNT portParamsType;
} CPSS_PM_PORT_PARAMS_STC;
typedef union {
    CPSS_PM_PORT_REG_PARAMS_STC regPort;
    CPSS_PM_AP_PORT_PARAMS_STC apPort;
} CPSS_PM_PORT_PARAMS_TYPE_UNT;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT ifMode;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PM_MODE_LANE_PARAM_STC laneParams[8];
    CPSS_PM_PORT_ATTR_STC portAttributes;
} CPSS_PM_PORT_REG_PARAMS_STC;
typedef enum {CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_32_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_33_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_34_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_35_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_36_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_37_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_38_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_39_E, CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_LAST_E} CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_ENT;
typedef struct {
    GT_U8 restartMaxNum;
    GT_BOOL enable;
    GT_U8 restartCnt;
    CPSS_PORT_MANAGER_PARALLEL_DETECT_STATUS_ENT status;
} CPSS_PORT_MANAGER_AP_PARALLEL_DETECT_STC;
typedef struct {
    CPSS_PORT_MANAGER_CALIBRATION_TYPE_ENT calibrationType;
    CPSS_PORT_MANAGER_CONFIDENCE_DATA_CONFIG_STC confidenceCfg;
} CPSS_PORT_MANAGER_CALIBRATION_MODE_STC;
typedef enum {CPSS_PORT_MANAGER_DEFAULT_CALIBRATION_TYPE_E, CPSS_PORT_MANAGER_OPTICAL_CALIBRATION_TYPE_E, CPSS_PORT_MANAGER_CALIBRATION_TYPE_LAST_E} CPSS_PORT_MANAGER_CALIBRATION_TYPE_ENT;
typedef struct {
    GT_U32 lfMinThreshold;
    GT_U32 lfMaxThreshold;
    GT_U32 hfMinThreshold;
    GT_U32 hfMaxThreshold;
    GT_U32 eoMinThreshold;
    GT_U32 eoMaxThreshold;
    GT_U32 confidenceEnableBitMap;
    GT_U32 calibrationTimeOutSec;
} CPSS_PORT_MANAGER_CONFIDENCE_DATA_CONFIG_STC;
typedef enum {CPSS_PORT_MANAGER_EVENT_CREATE_E, CPSS_PORT_MANAGER_EVENT_DELETE_E, CPSS_PORT_MANAGER_EVENT_ENABLE_E, CPSS_PORT_MANAGER_EVENT_DISABLE_E, CPSS_PORT_MANAGER_EVENT_INIT_E, CPSS_PORT_MANAGER_EVENT_LOW_LEVEL_STATUS_CHANGED_E, CPSS_PORT_MANAGER_EVENT_MAC_LEVEL_STATUS_CHANGED_E, CPSS_PORT_MANAGER_EVENT_PORT_AP_HCD_FOUND_E, CPSS_PORT_MANAGER_EVENT_CREATE_AND_DISABLE_E, CPSS_PORT_MANAGER_EVENT_REMOTE_FAULT_TX_CHANGE_E, CPSS_PORT_MANAGER_EVENT_PORT_AP_DISABLE_E, CPSS_PORT_MANAGER_EVENT_PORT_DEBUG_E, 
    CPSS_PORT_MANAGER_EVENT_PORT_AP_RESTART_E, CPSS_PORT_MANAGER_EVENT_PORT_NO_DEBUG_E, CPSS_PORT_MANAGER_EVENT_CREATE_AND_FORCE_LINK_DOWN_E, CPSS_PORT_MANAGER_EVENT_FORCE_LINK_DOWN_E, CPSS_PORT_MANAGER_EVENT_UNFORCE_LINK_DOWN_E, CPSS_PORT_MANAGER_EVENT_PORT_AP_PARALLEL_DETECT_E, CPSS_PORT_MANAGER_EVENT_TYPE_LAST_E} CPSS_PORT_MANAGER_EVENT_ENT;
typedef enum {CPSS_PORT_MANAGER_FAILURE_NONE_E, CPSS_PORT_MANAGER_FAILURE_SIGNAL_STABILITY_FAILED_E, CPSS_PORT_MANAGER_FAILURE_TRAINING_FAILED_E, CPSS_PORT_MANAGER_FAILURE_ALIGNMENT_TIMER_EXPIRED_E, CPSS_PORT_MANAGER_FAILURE_CONFIDENCE_INTERVAL_TIMER_EXPIRED_E, CPSS_PORT_MANAGER_FAILURE_CREATE_PORT_FAILED_E, CPSS_PORT_MANAGER_FAILURE_LAST_E} CPSS_PORT_MANAGER_FAILURE_ENT;
typedef struct {
    GT_U32 globalParamsBitmapType;
    CPSS_PORT_MANAGER_SIGNAL_DETECT_CONFIG_STC signalDetectDbCfg;
    GT_BOOL propHighSpeedPortEnabled;
    CPSS_SERDES_TERMINATION rxTermination;
    CPSS_PORT_MANAGER_AN_RESOLUTION_BIT_ENT anResolutionBit_40G;
} CPSS_PORT_MANAGER_GLOBAL_PARAMS_STC;
typedef enum {CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_DEFAULT_E, CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_1_E, CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_2_E, CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_LAST_E} CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_ENT;
typedef struct {
    GT_BOOL enabled;
    GT_PHYSICAL_PORT_NUM pairPortNum;
} CPSS_PORT_MANAGER_LKB_CONFIG_STC;
typedef struct {
    CPSS_PORT_MANAGER_LOOPBACK_TYPE_ENT loopbackType;
    union {...} loopbackMode;
    GT_BOOL enableRegularTrafic;
} CPSS_PORT_MANAGER_LOOPBACK_CONFIG_STC;
typedef enum {CPSS_PORT_MANAGER_LOOPBACK_TYPE_MAC_E, CPSS_PORT_MANAGER_LOOPBACK_TYPE_SERDES_E, CPSS_PORT_MANAGER_LOOPBACK_TYPE_LAST_E} CPSS_PORT_MANAGER_LOOPBACK_TYPE_ENT;
typedef enum {CPSS_PORT_MANAGER_NO_PARALLEL_DETECT_E, CPSS_PORT_MANAGER_PARALLEL_DETECT_IN_PROGRESS_E, CPSS_PORT_MANAGER_PARALLEL_DETECT_AN37_CHECK_E, CPSS_PORT_MANAGER_PARALLEL_DETECT_SUCCESS_E, CPSS_PORT_MANAGER_PARALLEL_DETECT_FAIL_E, CPSS_PORT_MANAGER_PARALLEL_DETECT_STATUS_LAST_E} CPSS_PORT_MANAGER_PARALLEL_DETECT_STATUS_ENT;
typedef enum {CPSS_PORT_MANAGER_PORT_TYPE_REGULAR_E, CPSS_PORT_MANAGER_PORT_TYPE_802_3AP_E, CPSS_PORT_MANAGER_PORT_TYPE_LAST_E} CPSS_PORT_MANAGER_PORT_TYPE_ENT;
typedef enum {CPSS_PORT_MANAGER_RESET_E, CPSS_PORT_MANAGER_IN_PROGRESS_E, CPSS_PORT_MANAGER_DONE_E} CPSS_PORT_MANAGER_PROGRESS_TYPE_ENT;
typedef struct {
    GT_BOOL inbandEnable;
    GT_BOOL duplexEnable;
    GT_BOOL speedEnable;
    GT_BOOL byPassEnable;
    GT_BOOL flowCtrlEnable;
    GT_BOOL flowCtrlPauseAdvertiseEnable;
    GT_BOOL flowCtrlAsmAdvertiseEnable;
} CPSS_PORT_MANAGER_SGMII_AUTO_NEGOTIATION_STC;
typedef struct {
    GT_U32 sdChangeInterval;
    GT_U32 sdChangeMinWindowSize;
    GT_U32 sdCheckTimeExpired;
} CPSS_PORT_MANAGER_SIGNAL_DETECT_CONFIG_STC;
typedef enum {CPSS_PORT_MANAGER_STATE_RESET_E, CPSS_PORT_MANAGER_STATE_LINK_DOWN_E, CPSS_PORT_MANAGER_STATE_INIT_IN_PROGRESS_E, CPSS_PORT_MANAGER_STATE_LINK_UP_E, CPSS_PORT_MANAGER_STATE_MAC_LINK_DOWN_E, CPSS_PORT_MANAGER_STATE_FAILURE_E, CPSS_PORT_MANAGER_STATE_DEBUG_E, CPSS_PORT_MANAGER_STATE_FORCE_LINK_DOWN_E, CPSS_PORT_MANAGER_STATE_LAST_E} CPSS_PORT_MANAGER_STATE_ENT;
typedef struct {
    GT_U32 rxTrainingTime;
    GT_U32 alignLockTime;
    GT_U32 linkUpTime;
    GT_U32 linkFailToSignalTime;
    GT_U32 linkFailCnt;
    GT_U32 linkOkCnt;
    GT_U32 alignLockFailCnt;
    GT_U32 trainingFailCnt;
} CPSS_PORT_MANAGER_STATISTICS_STC;
typedef struct {
    CPSS_PORT_MANAGER_STATE_ENT portState;
    GT_BOOL portUnderOperDisable;
    CPSS_PORT_MANAGER_FAILURE_ENT failure;
    CPSS_PORT_INTERFACE_MODE_ENT ifMode;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_FEC_MODE_ENT fecType;
    GT_BOOL remoteFaultConfig;
} CPSS_PORT_MANAGER_STATUS_STC;
typedef struct {
    CPSS_PORT_MANAGER_EVENT_ENT portEvent;
} CPSS_PORT_MANAGER_STC;
typedef enum {CPSS_PORT_MANAGER_UNMASK_MAC_LOW_LEVEL_EVENTS_ENABLE_MODE_E, CPSS_PORT_MANAGER_UNMASK_MAC_LOW_LEVEL_EVENTS_DISABLE_MODE_E, CPSS_PORT_MANAGER_UNMASK_MAC_LEVEL_EVENTS_DISABLE_MODE_E, CPSS_PORT_MANAGER_UNMASK_LOW_LEVEL_EVENTS_DISABLE_MODE_E, CPSS_PORT_MANAGER_UNMASK_EVENTS_MODE_LAST_E} CPSS_PORT_MANAGER_UNMASK_EVENTS_MODE_ENT;
typedef struct {
    GT_U32 updateParamsBitmapType;
    CPSS_PORT_PA_BW_MODE_ENT bwMode;
} CPSS_PORT_MANAGER_UPDATE_PARAMS_STC;

File common/h/cpss/common/port/cpssPortStat.h:
typedef struct {
    GT_U32 outUcFrames;
    GT_U32 outMcFrames;
    GT_U32 outBcFrames;
    GT_U32 brgEgrFilterDisc;
    GT_U32 txqFilterDisc;
    GT_U32 outCtrlFrames;
    GT_U32 egrFrwDropFrames;
    GT_U32 mcFifo3_0DropPkts;
    GT_U32 mcFifo7_4DropPkts;
    GT_U32 mcFifoDropPkts;
    GT_U32 mcFilterDropPkts;
} CPSS_PORT_EGRESS_CNTR_STC;
typedef enum {CPSS_EGRESS_CNT_PORT_E = 1, CPSS_EGRESS_CNT_VLAN_E, CPSS_EGRESS_CNT_TC_E = 4, CPSS_EGRESS_CNT_DP_E = 8, CPSS_EGRESS_CNT_ANY_E = 0, CPSS_EGRESS_CNT_PORT_VLAN_E = 3, CPSS_EGRESS_CNT_PORT_TC_E = 5, CPSS_EGRESS_CNT_PORT_DP_E = 9, CPSS_EGRESS_CNT_VLAN_TC_E = 6, CPSS_EGRESS_CNT_VLAN_DP_E = 10, CPSS_EGRESS_CNT_TC_DP_E = 12, CPSS_EGRESS_CNT_PORT_VLAN_TC_E = 7, CPSS_EGRESS_CNT_PORT_VLAN_DP_E = 11, CPSS_EGRESS_CNT_VLAN_TC_DP_E = 14, CPSS_EGRESS_CNT_PORT_TC_DP_E = 13, 
    CPSS_EGRESS_CNT_ALL_E = 15} CPSS_PORT_EGRESS_CNT_MODE_ENT;
typedef struct {
    GT_U64 ifOutOctets;
    GT_U64 ifOutMulticastPkts;
    GT_U64 ifOutErrors;
    GT_U64 ifOutUcastPkts;
    GT_U64 ifOutBroadcastPkts;
    GT_U64 ifInOctets;
    GT_U64 ifInErrors;
    GT_U64 ifInBroadcastPkts;
    GT_U64 ifInMulticastPkts;
    GT_U64 ifInUcastPkts;
    GT_U64 aFramesTransmittedOK;
    GT_U64 aFramesReceivedOK;
    GT_U64 aFrameCheckSequenceErrors;
    GT_U64 aMACControlFramesTransmitted;
    GT_U64 aMACControlFramesReceived;
    GT_U64 aPAUSEMACCtrlFramesTransmitted;
    GT_U64 aPAUSEMACCtrlFramesReceived;
    GT_U64 aCBFCPAUSEFramesTransmitted_0;
    GT_U64 aCBFCPAUSEFramesTransmitted_1;
    GT_U64 aCBFCPAUSEFramesTransmitted_2;
    GT_U64 aCBFCPAUSEFramesTransmitted_3;
    GT_U64 aCBFCPAUSEFramesTransmitted_4;
    GT_U64 aCBFCPAUSEFramesTransmitted_5;
    GT_U64 aCBFCPAUSEFramesTransmitted_6;
    GT_U64 aCBFCPAUSEFramesTransmitted_7;
    GT_U64 aCBFCPAUSEFramesReceived_0;
    GT_U64 aCBFCPAUSEFramesReceived_1;
    GT_U64 aCBFCPAUSEFramesReceived_2;
    GT_U64 aCBFCPAUSEFramesReceived_3;
    GT_U64 aCBFCPAUSEFramesReceived_4;
    GT_U64 aCBFCPAUSEFramesReceived_5;
    GT_U64 aCBFCPAUSEFramesReceived_6;
    GT_U64 aCBFCPAUSEFramesReceived_7;
    GT_U64 etherStatsOctets;
    GT_U64 etherStatsUndersizePkts;
    GT_U64 etherStatsOversizePkts;
    GT_U64 etherStatsJabbers;
    GT_U64 etherStatsDropEvents;
    GT_U64 etherStatsFragments;
    GT_U64 etherStatsPkts;
    GT_U64 etherStatsPkts64Octets;
    GT_U64 etherStatsPkts65to127Octets;
    GT_U64 etherStatsPkts128to255Octets;
    GT_U64 etherStatsPkts256to511Octets;
    GT_U64 etherStatsPkts512to1023Octets;
    GT_U64 etherStatsPkts1024to1518Octets;
    GT_U64 etherStatsPkts1519toMaxOctets;
    GT_U64 aAlignmentErrors;
    GT_U64 aFrameTooLongErrors;
    GT_U64 aInRangeLengthErrors;
    GT_U64 VLANTransmittedOK;
    GT_U64 VLANRecievedOK;
} CPSS_PORT_MAC_CG_COUNTER_SET_STC;
typedef enum {CPSS_GOOD_OCTETS_RCV_E, CPSS_BAD_OCTETS_RCV_E, CPSS_MAC_TRANSMIT_ERR_E, CPSS_GOOD_PKTS_RCV_E, CPSS_BAD_PKTS_RCV_E, CPSS_BRDC_PKTS_RCV_E, CPSS_MC_PKTS_RCV_E, CPSS_PKTS_64_OCTETS_E, CPSS_PKTS_65TO127_OCTETS_E, CPSS_PKTS_128TO255_OCTETS_E, CPSS_PKTS_256TO511_OCTETS_E, CPSS_PKTS_512TO1023_OCTETS_E, CPSS_PKTS_1024TOMAX_OCTETS_E, CPSS_GOOD_OCTETS_SENT_E, CPSS_GOOD_PKTS_SENT_E, CPSS_EXCESSIVE_COLLISIONS_E, CPSS_MC_PKTS_SENT_E, CPSS_BRDC_PKTS_SENT_E, CPSS_UNRECOG_MAC_CNTR_RCV_E, CPSS_FC_SENT_E, 
    CPSS_GOOD_FC_RCV_E, CPSS_DROP_EVENTS_E, CPSS_UNDERSIZE_PKTS_E, CPSS_FRAGMENTS_PKTS_E, CPSS_OVERSIZE_PKTS_E, CPSS_JABBER_PKTS_E, CPSS_MAC_RCV_ERROR_E, CPSS_BAD_CRC_E, CPSS_COLLISIONS_E, CPSS_LATE_COLLISIONS_E, CPSS_BadFC_RCV_E, CPSS_GOOD_UC_PKTS_RCV_E, CPSS_GOOD_UC_PKTS_SENT_E, CPSS_MULTIPLE_PKTS_SENT_E, CPSS_DEFERRED_PKTS_SENT_E, CPSS_PKTS_1024TO1518_OCTETS_E, CPSS_PKTS_1519TOMAX_OCTETS_E, CPSS_LAST_MAC_COUNTER_NUM_E} CPSS_PORT_MAC_COUNTERS_ENT;
typedef struct {
    GT_U64 goodOctetsRcv;
    GT_U64 badOctetsRcv;
    GT_U64 macTransmitErr;
    GT_U64 goodPktsRcv;
    GT_U64 badPktsRcv;
    GT_U64 brdcPktsRcv;
    GT_U64 mcPktsRcv;
    GT_U64 pkts64Octets;
    GT_U64 pkts65to127Octets;
    GT_U64 pkts128to255Octets;
    GT_U64 pkts256to511Octets;
    GT_U64 pkts512to1023Octets;
    GT_U64 pkts1024tomaxOoctets;
    GT_U64 goodOctetsSent;
    GT_U64 goodPktsSent;
    GT_U64 excessiveCollisions;
    GT_U64 mcPktsSent;
    GT_U64 brdcPktsSent;
    GT_U64 unrecogMacCntrRcv;
    GT_U64 fcSent;
    GT_U64 goodFcRcv;
    GT_U64 dropEvents;
    GT_U64 undersizePkts;
    GT_U64 fragmentsPkts;
    GT_U64 oversizePkts;
    GT_U64 jabberPkts;
    GT_U64 macRcvError;
    GT_U64 badCrc;
    GT_U64 collisions;
    GT_U64 lateCollisions;
    GT_U64 badFcRcv;
    GT_U64 ucPktsRcv;
    GT_U64 ucPktsSent;
    GT_U64 multiplePktsSent;
    GT_U64 deferredPktsSent;
    GT_U64 pkts1024to1518Octets;
    GT_U64 pkts1519toMaxOctets;
} CPSS_PORT_MAC_COUNTER_SET_STC;
typedef struct {
    CPSS_PORT_MAC_MTI_RX_COUNTER_SET_STC rxCounterStc;
    CPSS_PORT_MAC_MTI_TX_COUNTER_SET_STC txCounterStc;
} CPSS_PORT_MAC_MTI_COUNTER_SET_STC;
typedef struct {
    GT_U64 etherStatsOctets;
    GT_U64 ifInOctets;
    GT_U64 aAlignmentErrors;
    GT_U64 aMACControlFramesReceived;
    GT_U64 aFrameTooLongErrors;
    GT_U64 aInRangeLengthErrors;
    GT_U64 aFramesReceivedOK;
    GT_U64 aFrameCheckSequenceErrors;
    GT_U64 VLANRecievedOK;
    GT_U64 ifInErrors;
    GT_U64 ifInUcastPkts;
    GT_U64 ifInMulticastPkts;
    GT_U64 ifInBroadcastPkts;
    GT_U64 etherStatsDropEvents;
    GT_U64 etherStatsPkts;
    GT_U64 etherStatsUndersizePkts;
    GT_U64 etherStatsPkts64Octets;
    GT_U64 etherStatsPkts65to127Octets;
    GT_U64 etherStatsPkts128to255Octets;
    GT_U64 etherStatsPkts256to511Octets;
    GT_U64 etherStatsPkts512to1023Octets;
    GT_U64 etherStatsPkts1024to1518Octets;
    GT_U64 etherStatsPkts1519toMaxOctets;
    GT_U64 etherStatsOversizePkts;
    GT_U64 etherStatsJabbers;
    GT_U64 etherStatsFragments;
    GT_U64 aCBFCPAUSEFramesReceived_0;
    GT_U64 aCBFCPAUSEFramesReceived_1;
    GT_U64 aCBFCPAUSEFramesReceived_2;
    GT_U64 aCBFCPAUSEFramesReceived_3;
    GT_U64 aCBFCPAUSEFramesReceived_4;
    GT_U64 aCBFCPAUSEFramesReceived_5;
    GT_U64 aCBFCPAUSEFramesReceived_6;
    GT_U64 aCBFCPAUSEFramesReceived_7;
    GT_U64 aCBFCPAUSEFramesReceived_8;
    GT_U64 aCBFCPAUSEFramesReceived_9;
    GT_U64 aCBFCPAUSEFramesReceived_10;
    GT_U64 aCBFCPAUSEFramesReceived_11;
    GT_U64 aCBFCPAUSEFramesReceived_12;
    GT_U64 aCBFCPAUSEFramesReceived_13;
    GT_U64 aCBFCPAUSEFramesReceived_14;
    GT_U64 aCBFCPAUSEFramesReceived_15;
    GT_U64 aPAUSEMACCtrlFramesReceived;
} CPSS_PORT_MAC_MTI_RX_COUNTER_SET_STC;
typedef struct {
    GT_U64 ifOutOctets;
    GT_U64 octetsTransmittedOk;
    GT_U64 aPAUSEMACCtrlFramesTransmitted;
    GT_U64 aFramesTransmittedOK;
    GT_U64 VLANTransmittedOK;
    GT_U64 ifOutErrors;
    GT_U64 ifOutUcastPkts;
    GT_U64 ifOutMulticastPkts;
    GT_U64 ifOutBroadcastPkts;
    GT_U64 etherStatsPkts64Octets;
    GT_U64 etherStatsPkts65to127Octets;
    GT_U64 etherStatsPkts128to255Octets;
    GT_U64 etherStatsPkts256to511Octets;
    GT_U64 etherStatsPkts512to1023Octets;
    GT_U64 etherStatsPkts1024to1518Octets;
    GT_U64 etherStatsPkts1519toMaxOctets;
    GT_U64 aCBFCPAUSEFramesTransmitted_0;
    GT_U64 aCBFCPAUSEFramesTransmitted_1;
    GT_U64 aCBFCPAUSEFramesTransmitted_2;
    GT_U64 aCBFCPAUSEFramesTransmitted_3;
    GT_U64 aCBFCPAUSEFramesTransmitted_4;
    GT_U64 aCBFCPAUSEFramesTransmitted_5;
    GT_U64 aCBFCPAUSEFramesTransmitted_6;
    GT_U64 aCBFCPAUSEFramesTransmitted_7;
    GT_U64 aCBFCPAUSEFramesTransmitted_8;
    GT_U64 aCBFCPAUSEFramesTransmitted_9;
    GT_U64 aCBFCPAUSEFramesTransmitted_10;
    GT_U64 aCBFCPAUSEFramesTransmitted_11;
    GT_U64 aCBFCPAUSEFramesTransmitted_12;
    GT_U64 aCBFCPAUSEFramesTransmitted_13;
    GT_U64 aCBFCPAUSEFramesTransmitted_14;
    GT_U64 aCBFCPAUSEFramesTransmitted_15;
    GT_U64 aMACControlFramesTransmitted;
    GT_U64 etherStatsPkts;
} CPSS_PORT_MAC_MTI_TX_COUNTER_SET_STC;

File common/h/cpss/common/port/private/prvCpssPortCtrl.h:
typedef struct {
    GT_U32 regAddr;
    GT_U32 fieldOffset;
    GT_U32 fieldLength;
    GT_U32 fieldData;
} PRV_CPSS_PORT_REG_CONFIG_STC;
typedef struct {
    PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_SEQUENCE_STC trainSequence;
    GT_U8 phase;
    GT_BOOL phaseFinished;
    GT_BOOL allPhasesFinished;
    GT_BOOL overrideEtParams;
    GT_U8 min_LF;
    GT_U8 max_LF;
} PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_COOKIE_STC;
typedef struct {
    PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_COOKIE_STC cookie;
    CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENT cyclicTune;
} PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_DB_STC;
typedef struct {
    PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_SEQUENCE_STC *trainDBObjPtr;
    MV_HWS_PORT_STANDARD hwsMode;
} PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_PER_PORT_MODE_DB_STC;
typedef struct {
    CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENT tune;
    GT_BOOL adaptiveEnabled;
    GT_BOOL edgeDetectEnabled;
} PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_SEQUENCE_STC;

File common/h/cpss/common/port/private/prvCpssPortManager.h:
typedef enum {PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_PORT_SM_DB_E, PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_PHYSICAL_PORT_E, PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_MAC_E, PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_SERDES_E, PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_AP_PORT_E, PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_ALL_E, PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_LASE_E} PRV_CPSS_PORT_MANAGER_ALLOCATION_TYPE_ENT;
typedef struct {
    GT_BOOL alignLock;
    GT_BOOL gbLock;
    GT_BOOL sigDet;
    GT_BOOL overallStatusesOk;
} PRV_CPSS_PORT_MANAGER_PORT_STATUSES_STC;

File common/h/cpss/common/port/private/prvCpssPortManagerTypes.h:
typedef struct {
    GT_BOOL fcPause;
    CPSS_PORT_AP_FLOW_CONTROL_ENT fcAsmDir;
    GT_BOOL noneceDisable;
    GT_U32 laneNum;
    CPSS_PORT_FEC_MODE_ENT fecAbilityArr[10];
    CPSS_PORT_FEC_MODE_ENT fecRequestedArr[10];
    CPSS_PORT_MANAGER_LKB_CONFIG_STC linkBinding;
    CPSS_PORT_MANAGER_INTERCONNECT_PROFILE_ENT interconnectProfile;
    GT_U32 portOperationsBitmap;
    GT_BOOL skipRes;
    CPSS_PORT_MANAGER_AP_PARALLEL_DETECT_STC parallelDetect;
    GT_U32 overrideAttrsBitMask;
} PRV_CPSS_PORT_MNG_AP_ATTRIBUTES_STC;
typedef struct {
    GT_U32 perPhyPortApNumOfModes;
    PRV_CPSS_PORT_MNG_PHY_PORT_SM_DB_STC perPhyPortDb[10];
    PRV_CPSS_PORT_MNG_SERDES_SM_DB_STC perSerdesDb[80];
    PRV_CPSS_PORT_MNG_AP_ATTRIBUTES_STC apAttributesStc;
    PRV_CPSS_PORT_MNG_AP_PORT_RESOLUTION_STC portResolution;
    PRV_CPSS_PORT_MNG_AP_PORT_RESOLUTION_STC portLastResolution;
} PRV_CPSS_PORT_MNG_AP_PORT_ATTRIBUTES_DB_STC;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT ifModeDb;
    CPSS_PORT_SPEED_ENT speedDb;
    CPSS_PORT_FEC_MODE_ENT fecStatus;
} PRV_CPSS_PORT_MNG_AP_PORT_RESOLUTION_STC;
typedef struct {
    CPSS_PORT_MANAGER_CALIBRATION_TYPE_ENT calibrationType;
    GT_U32 minLfThreshold;
    GT_U32 maxLfThreshold;
    GT_U32 minHfThreshold;
    GT_U32 maxHfThreshold;
    GT_U32 minEoThreshold;
    GT_U32 maxEoThreshold;
    GT_U32 confidenceBitMap;
    GT_BOOL opticalCalFinished[8];
    GT_BOOL overallOpticalCalFinished;
    GT_U32 opticalCalTimeoutSec;
    GT_U32 opticalCalTimerSecPrev;
    GT_U32 opticalCalTimerNsecNew;
} PRV_CPSS_PORT_MNG_CALIBRATION_DB_STC;
typedef struct {
    PRV_CPSS_PORT_MNG_AP_PORT_ATTRIBUTES_DB_STC **portsApAttributesDb;
    PRV_CPSS_PORT_MNG_PORT_ATTRIBUTES_DB_STC portsAttributedDb;
    PRV_CPSS_PORT_MNG_PORT_SM_DB_STC **portMngSmDb;
    PRV_CPSS_PORT_MNG_MAC_SM_DB_STC **portMngSmDbPerMac;
    CPSS_PORT_MANAGER_GLOBAL_PARAMS_STC globalParamsCfg;
    GT_BOOL portManagerGlobalUseFlag;
} PRV_CPSS_PORT_MNG_DB_STC;
typedef struct {
    CPSS_PORT_MANAGER_LOOPBACK_CONFIG_STC loopbackDbCfg;
    GT_U32 portMacNum;
    GT_U32 portGroup;
    MV_HWS_PORT_STANDARD portMode;
    GT_BOOL ignoreTraining;
    GT_U16 lastUpdate;
} PRV_CPSS_PORT_MNG_GENERAL_PORT_CONFIGURATIONS_DB_STC;
typedef struct {
    GT_U32 xlgMacDb[3];
    GT_U32 xlgMacDbFlag;
} PRV_CPSS_PORT_MNG_MAC_SM_DB_STC;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT ifModeDb;
    CPSS_PORT_SPEED_ENT speedDb;
} PRV_CPSS_PORT_MNG_PHY_PORT_SM_DB_STC;
typedef struct {
    PRV_CPSS_PORT_MNG_PHY_PORT_SM_DB_STC **perPhyPortDbPtr;
    PRV_CPSS_PORT_MNG_SERDES_SM_DB_STC **perSerdesDbPtr;
    PRV_CPSS_PORT_MNG_GENERAL_PORT_CONFIGURATIONS_DB_STC **generalPortCfgPtr;
} PRV_CPSS_PORT_MNG_PORT_ATTRIBUTES_DB_STC;
typedef struct {
    CPSS_PORT_MANAGER_PORT_TYPE_ENT portType;
    GT_BOOL pmOverFw;
    GT_BOOL signalDetected;
    PRV_CPSS_PORT_SERDES_CYCLIC_TUNE_DB_STC trainCookiePtrEnclosingDB;
    GT_U32 portTimeDiffFromLastTime;
    GT_U32 portTimeIntervalTimer;
    GT_U32 portTimerSecondsPrev;
    GT_U32 portTimerNsecPrev;
    GT_U32 portTotalTimeFromStart;
    GT_U32 portTotalTimeFromChange;
    GT_U32 portTrainResTimeDiffFromLastTime;
    GT_U32 portTrainResTimerSecondsPrev;
    GT_U32 portTrainResTimerNsecPrev;
    GT_U32 portTrainResTimeIntervalTimer;
    GT_U32 portAlignTimeDiffFromLastTime;
    GT_U32 portAlignTimerSecondsPrev;
    GT_U32 portAlignTimerNsecPrev;
    GT_U32 portAlignTotalTimeFromStart;
    GT_U32 portAlignTimeIntervalTimer;
    GT_U32 portAlignTries;
    CPSS_PORT_MANAGER_PROGRESS_TYPE_ENT portDbStabilityDone;
    CPSS_PORT_MANAGER_PROGRESS_TYPE_ENT portDbTrainDone;
    CPSS_PORT_MANAGER_PROGRESS_TYPE_ENT portDbAlignLockDone;
    CPSS_PORT_MANAGER_PROGRESS_TYPE_ENT rxStabilityTrainDone;
    GT_U32 rxStabilityTrainTimeDiffFromLastTime;
    GT_U32 rxStabilityTrainTimerSecondsPrev;
    GT_U32 rxStabilityTrainTimerNsecPrev;
    GT_U32 rxStabilityTrainTotalTimeFromStart;
    GT_U32 rxStabilityTrainTries;
    GT_U32 userOverrideByteBitmap;
    CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENT userOverrideTrainMode;
    GT_BOOL userOverrideAdaptiveRxTrainSupported;
    GT_BOOL userOverrideEdgeDetectSupported;
    CPSS_PORT_FEC_MODE_ENT fecAbility;
    GT_U64 portWaitForTrainResultCounter;
    GT_U32 portWaitForTrainResultTries;
    GT_BOOL portManaged;
    CPSS_PORT_MANAGER_STATE_ENT portAdminSM;
    CPSS_PORT_MANAGER_FAILURE_ENT portLastFailureReason;
    GT_BOOL portOperDisableSM;
    GT_U8 max_LF;
    GT_U8 min_LF;
    GT_BOOL overrideEtParams;
    CPSS_PORT_MANAGER_UNMASK_EVENTS_MODE_ENT unMaskEventsMode;
    PRV_CPSS_PORT_MNG_CALIBRATION_DB_STC calibrationMode;
    GT_BOOL disableMaskUnMask;
    GT_BOOL adaptiveStarted;
    CPSS_PORT_PA_BW_MODE_ENT bwMode;
    GT_BOOL byPassRemoteFault;
    CPSS_PORT_MANAGER_LKB_CONFIG_STC linkBinding;
    GT_BOOL oneShotiCal;
    GT_U32 maskingBitMap;
    GT_U32 portOperationsBitmap;
    GT_BOOL isRemotePort;
    GT_U32 interconnectProfile;
    CPSS_PM_MAC_PREEMPTION_PARAMS_STC preemptionParams;
    CPSS_PORT_MANAGER_SGMII_AUTO_NEGOTIATION_STC autoNegotiation;
    CPSS_PORT_MANAGER_STATISTICS_STC statistics;
    GT_U32 timeStampSec;
    GT_U32 timeStampNSec;
    GT_U8 logCounter;
    CPSS_PORT_MANAGER_STATE_ENT enterDebugState;
} PRV_CPSS_PORT_MNG_PORT_SM_DB_STC;
typedef struct {
    GT_U32 sdParamValidBitMap;
    PRV_CPSS_PORT_MNG_SERDES_TXRX_PARAMS_STC portSerdesParams;
} PRV_CPSS_PORT_MNG_SERDES_SM_DB_STC;
typedef struct {
    CPSS_PORT_SERDES_TUNE_STC serdesCfgDb;
    GT_BOOL rxValid;
    GT_BOOL txValid;
} PRV_CPSS_PORT_MNG_SERDES_TXRX_PARAMS_STC;
typedef struct {
    PRV_CPSS_PORT_PM_IS_FW_FUNC_PTR cpssPmIsFwFunc;
} PRV_CPSS_PORT_PM_FUNC_PTRS;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL *) PRV_CPSS_PORT_PM_IS_FW_FUNC_PTR;

File common/h/cpss/common/port/private/prvCpssPortTypes.h:
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_INTERFACE_MODE_ENT, CPSS_PORT_MANAGER_SGMII_AUTO_NEGOTIATION_STC *) PRV_CPSS_AUTO_NEG_1G_SGMII_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, PRV_CPSS_PORT_PM_FUNC_PTRS *) PRV_CPSS_PM_INIT_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL, CPSS_PORT_AP_PARAMS_STC *, GT_U32, GT_BOOL) PRV_CPSS_PORT_AP_CONFIG_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_U8, CPSS_PORT_AP_SERDES_TX_OFFSETS_STC *) PRV_CPSS_PORT_AP_SERDES_TX_PARAMS_OFFSETS_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, CPSS_PORT_AP_STATUS_STC *) PRV_CPSS_PORT_AP_STATUS_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_SERDES_AUTO_TUNE_STATUS_ENT *, CPSS_PORT_SERDES_AUTO_TUNE_STATUS_ENT *) PRV_CPSS_PORT_AUTO_TUNE_STATUS_GET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, CPSS_PORT_PA_BW_MODE_ENT) PRV_CPSS_PORT_BW_TX_FIFO_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL *) PRV_CPSS_PORT_CDR_LOCK_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_U32 *) PRV_CPSS_PORT_CG_CONVERTERS_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_U32 *) PRV_CPSS_PORT_CG_CONVERTERS_STATUS2_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_U32 *) PRV_CPSS_PORT_CHECK_AND_GET_MAC_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, GT_PHYSICAL_PORT_NUM *) PRV_CPSS_PORT_CONVERT_MAC_TO_PORT_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL *) PRV_CPSS_PORT_ENABLE_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_ENABLE_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM) PRV_CPSS_PORT_ENABLE_WA_WITH_LINK_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_U32, CPSS_PORT_INTERFACE_MODE_ENT, CPSS_PORT_SPEED_ENT, GT_U32, GT_U32 *) PRV_CPSS_PORT_EXTRA_OPERATIONS_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_FAST_LINK_DOWN_SET_FUNC;
typedef struct {
    GT_U16 xonLimit;
    GT_U16 xoffLimit;
} PRV_CPSS_PORT_FC_THRESHOLD_STC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_FEC_MODE_ENT *) PRV_CPSS_PORT_FEC_MODE_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_FEC_MODE_ENT) PRV_CPSS_PORT_FEC_MODE_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_FORCE_LINK_DOWN_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL *) PRV_CPSS_PORT_FORCE_LINK_PASS_GET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_FORCE_LINK_PASS_SET_FUNC;
typedef struct {
    PRV_CPSS_PORT_CHECK_AND_GET_MAC_FUNC ppCheckAndGetMacFunc;
    PRV_CPSS_PORT_CONVERT_MAC_TO_PORT_FUNC ppConvertMacToPortFunc;
    PRV_CPSS_PORT_LINK_STATUS_GET_FUNC ppLinkStatusGetFunc;
    PRV_CPSS_PORT_HW_UNRESET_FUNC ppPortHwUnresetFunc;
    PRV_CPSS_PORT_HW_RESET_FUNC ppPortHwResetFunc;
    PRV_CPSS_PORT_REMOTE_FAULT_SET_FUNC ppRemoteFaultSetFunc;
    PRV_CPSS_PORT_FORCE_LINK_DOWN_SET_FUNC ppForceLinkDownSetFunc;
    PRV_CPSS_PORT_ENABLE_GET_FUNC ppPortMacEnableGetFunc;
    PRV_CPSS_PORT_ENABLE_SET_FUNC ppPortMacEnableSetFunc;
    PRV_CPSS_PORT_AUTO_TUNE_STATUS_GET_FUNC ppTuneStatusGetFunc;
    PRV_CPSS_PORT_SIG_DET_GET_FUNC ppSigDetGetFunc;
    PRV_CPSS_PORT_CG_CONVERTERS_GET_FUNC ppCgConvertersGetFunc;
    PRV_CPSS_PORT_CG_CONVERTERS_STATUS2_GET_FUNC ppCgConvertersStatus2GetFunc;
    PRV_CPSS_PORT_MODE_SPEED_SET_FUNC ppPortModeSpeedSetFunc;
    PRV_CPSS_PORT_TUNE_SET_FUNC ppTuneExtSetFunc;
    PRV_CPSS_PORT_MAC_CONVERT_FUNC ppMacConvertFunc;
    PRV_CPSS_PORT_SPEED_GET_FUNC ppSpeedGetFromExtFunc;
    PRV_CPSS_PORT_INTERFACE_GET_FUNC ppIfModeGetFromExtFunc;
    PRV_CPSS_PORT_SERDES_NUM_GET_FUNC ppSerdesNumGetFunc;
    PRV_CPSS_PORT_NUM_OF_SERDES_GET_FUNC ppNumOfSerdesGetFunc;
    PRV_CPSS_PORT_MANAGER_DB_GET_FUNC ppPortManagerDbGetFunc;
    PRV_CPSS_PORT_MPCS40G_REG_ADDR_GET_FUNC ppMpcs40GCommonStatusRegGetFunc;
    PRV_CPSS_PORT_MAC_DMA_MODE_REG_ADDR_GET_FUNC ppMacDmaModeRegAddrGetFunc;
    PRV_CPSS_PORT_LINK_STATUS_CHANGED_NOTIFY_FUNC ppLinkStatusChangedNotifyFunc;
    PRV_CPSS_PORT_XLG_MAC_MASK_GET_FUNC ppXlgMacMaskAddrGetFunc;
    PRV_CPSS_PORT_FEC_MODE_SET_FUNC ppFecModeSetFunc;
    PRV_CPSS_PORT_FEC_MODE_GET_FUNC ppFecModeGetFunc;
    PRV_CPSS_PORT_LANE_TUNE_SET_FUNC ppLaneTuneSetFunc;
    PRV_CPSS_PORT_LANE_TUNE_GET_FUNC ppLaneTuneGetFunc;
    PRV_CPSS_PORT_MAC_CONFIG_CLEAR_FUNC ppMacConfigClearFunc;
    PRV_CPSS_PORT_MAC_CONFIGURATION_FUNC ppMacConfigurationFunc;
    PRV_CPSS_PORT_AP_CONFIG_SET_FUNC ppPortApConfigSetFunc;
    PRV_CPSS_PORT_AP_STATUS_GET_FUNC ppPortApStatusGetFunc;
    PRV_CPSS_PORT_AP_SERDES_TX_PARAMS_OFFSETS_SET_FUNC ppPortApSerdesTxParamsOffsetSetFunc;
    PRV_CPSS_PORT_MAC_LOOPBACK_MODE_SET_FUNC ppPortMacLoopbackModeSetFunc;
    PRV_CPSS_PORT_PCS_LOOPBACK_MODE_SET_FUNC ppPortPcsLoopbackModeSetFunc;
    PRV_CPSS_PORT_SERDES_LOOPBACK_MODE_SET_FUNC ppPortSerdesLoopbackModeSetFunc;
    PRV_CPSS_PORT_SERDES_POLARITY_SET_FUNC ppPortSerdesPolaritySetFunc;
    PRV_CPSS_PORT_HIGH_SPEED_SET_FUNC ppPortProprietaryHighSpeedPortsSetFunc;
    PRV_CPSS_PORT_SERDES_TUNE_RESULT_GET_FUNC ppPortSerdesTuneResultGetFunc;
    PRV_CPSS_AUTO_NEG_1G_SGMII_FUNC ppAutoNeg1GSgmiiFunc;
    PRV_CPSS_USX_REPLICATION_SET_FUNC ppUsxReplicationSetFunc;
    PRV_CPSS_PM_INIT_FUNC ppPortMgrInitFunc;
    PRV_CPSS_PORT_BW_TX_FIFO_SET_FUNC ppPortBwTxFifoSetFunc;
    PRV_CPSS_PORT_REMOTE_FAULT_CONFIG_GET_FUNC ppPortRemoteFaultConfigGetFunc;
    PRV_CPSS_PORT_LINK_BINDING_SET_FUNC ppPortLkbSetFunc;
    PRV_CPSS_PORT_FAST_LINK_DOWN_SET_FUNC ppPortFastLinkDownSetFunc;
    PRV_CPSS_PORT_EXTRA_OPERATIONS_SET_FUNC ppPortExtraOperationsSetFunc;
    PRV_CPSS_PORT_LOW_POWER_SET_FUNC ppPortLowPowerEnableFunc;
    PRV_CPSS_REMOTE_PORT_CHECK_FUNC ppRemotePortCheckFunc;
    PRV_CPSS_PORT_PREEMPTION_PARAMS_SET_FUNC ppPortPreemptionParamsSetFunc;
    PRV_CPSS_PORT_PTP_DELAY_PARAMS_SET_FUNC ppPortPtpDelayParamsSetFunc;
    PRV_CPSS_PORT_FORCE_LINK_PASS_SET_FUNC ppPortForceLinkPassSetFunc;
    PRV_CPSS_PORT_FORCE_LINK_PASS_GET_FUNC ppPortForceLinkPassGetFunc;
    PRV_CPSS_PORT_ENABLE_WA_WITH_LINK_FUNC ppPortEnableWaWithLinkStatusSet;
    PRV_CPSS_PORT_CDR_LOCK_GET_FUNC ppCdrLockGetFunc;
} PRV_CPSS_PORT_FUNC_PTRS_STC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_BOOL) PRV_CPSS_PORT_HIGH_SPEED_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_HW_RESET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM) PRV_CPSS_PORT_HW_UNRESET_FUNC;
typedef struct {
    PRV_CPSS_PORT_FC_THRESHOLD_STC portFcParams;
    PRV_CPSS_PORT_TYPE_ENT portType;
    PRV_CPSS_PHY_PORT_SMI_IF_INFO_STC smiIfInfo;
    CPSS_PHY_XSMI_INTERFACE_ENT xsmiInterface;
    PRV_CPSS_PORT_TYPE_OPTIONS_ENT portTypeOptions;
    GT_U32 phyErrataWa;
    GT_BOOL isFlexLink;
    GT_32 vctLengthOffset;
    CPSS_PORT_INTERFACE_MODE_ENT portIfMode;
    CPSS_PORT_SPEED_ENT portSpeed;
    GT_U32 serdesOptAlgBmp;
    PRV_CPSS_PORT_REF_CLOCK_SOURCE_STC portRefClock;
    PRV_CPSS_PORT_LED_INFO_STC portLedInfo;
    GT_BOOL isFastLink;
    GT_BOOL preemptionSupported;
} PRV_CPSS_PORT_INFO_ARRAY_STC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_INTERFACE_MODE_ENT *) PRV_CPSS_PORT_INTERFACE_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, GT_U32, CPSS_PORT_SERDES_SPEED_ENT, CPSS_PORT_SERDES_TUNE_STC *) PRV_CPSS_PORT_LANE_TUNE_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, GT_U32, CPSS_PORT_SERDES_SPEED_ENT, CPSS_PORT_SERDES_TUNE_STC *) PRV_CPSS_PORT_LANE_TUNE_SET_FUNC;
typedef struct {
    GT_U32 ledPosition;
    PRV_CPSS_PORT_TYPE_ENT ledMacType;
} PRV_CPSS_PORT_LED_INFO_STC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, MV_HWS_PORT_STANDARD, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_LINK_BINDING_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_MANAGER_PORT_TYPE_ENT, GT_BOOL) PRV_CPSS_PORT_LINK_STATUS_CHANGED_NOTIFY_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL *) PRV_CPSS_PORT_LINK_STATUS_GET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_U32, GT_BOOL) PRV_CPSS_PORT_LOW_POWER_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, const PRV_CPSS_PORT_REG_CONFIG_STC *) PRV_CPSS_PORT_MAC_CONFIGURATION_FUNC;
typedef GT_STATUS (*)(PRV_CPSS_PORT_REG_CONFIG_STC *) PRV_CPSS_PORT_MAC_CONFIG_CLEAR_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, PRV_CPSS_EV_CONVERT_DIRECTION_ENT, GT_U32, GT_U32 *) PRV_CPSS_PORT_MAC_CONVERT_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, GT_U32 *) PRV_CPSS_PORT_MAC_DMA_MODE_REG_ADDR_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL) PRV_CPSS_PORT_MAC_LOOPBACK_MODE_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, PRV_CPSS_PORT_MNG_DB_STC **) PRV_CPSS_PORT_MANAGER_DB_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, CPSS_PORTS_BMP_STC, GT_BOOL, CPSS_PORT_INTERFACE_MODE_ENT, CPSS_PORT_SPEED_ENT, PRV_CPSS_PORT_MNG_PORT_SM_DB_STC *) PRV_CPSS_PORT_MODE_SPEED_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_U32 *) PRV_CPSS_PORT_MPCS40G_REG_ADDR_GET_FUNC;
typedef GT_U32 (*)(GT_SW_DEV_NUM) PRV_CPSS_PORT_NUM_OF_SERDES_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_PCS_LOOPBACK_MODE_ENT) PRV_CPSS_PORT_PCS_LOOPBACK_MODE_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PM_MAC_PREEMPTION_PARAMS_STC *) PRV_CPSS_PORT_PREEMPTION_PARAMS_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM) PRV_CPSS_PORT_PTP_DELAY_PARAMS_SET_FUNC;
typedef struct {
    GT_BOOL enableOverride;
    CPSS_PORT_REF_CLOCK_SOURCE_ENT portRefClockSource;
} PRV_CPSS_PORT_REF_CLOCK_SOURCE_STC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL *) PRV_CPSS_PORT_REMOTE_FAULT_CONFIG_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_INTERFACE_MODE_ENT, CPSS_PORT_SPEED_ENT, GT_BOOL) PRV_CPSS_PORT_REMOTE_FAULT_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_U32, CPSS_PORT_SERDES_LOOPBACK_MODE_ENT) PRV_CPSS_PORT_SERDES_LOOPBACK_MODE_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_INTERFACE_MODE_ENT, GT_U32 *, GT_U32 *) PRV_CPSS_PORT_SERDES_NUM_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, GT_U32, GT_BOOL, GT_BOOL) PRV_CPSS_PORT_SERDES_POLARITY_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_U32, CPSS_PORT_SERDES_TUNE_STC *) PRV_CPSS_PORT_SERDES_TUNE_RESULT_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, GT_BOOL *) PRV_CPSS_PORT_SIG_DET_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_SPEED_ENT *) PRV_CPSS_PORT_SPEED_GET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_PHYSICAL_PORT_NUM, CPSS_PORT_SERDES_AUTO_TUNE_MODE_ENT) PRV_CPSS_PORT_TUNE_SET_FUNC;
typedef enum {PRV_CPSS_PORT_NOT_EXISTS_E, PRV_CPSS_PORT_FE_E, PRV_CPSS_PORT_GE_E, PRV_CPSS_PORT_XG_E, PRV_CPSS_PORT_XLG_E, PRV_CPSS_PORT_HGL_E, PRV_CPSS_PORT_CG_E, PRV_CPSS_PORT_ILKN_E, PRV_CPSS_PORT_MTI_100_E, PRV_CPSS_PORT_MTI_400_E, PRV_CPSS_PORT_MTI_CPU_E, PRV_CPSS_PORT_MTI_USX_E, PRV_CPSS_PORT_NOT_APPLICABLE_E} PRV_CPSS_PORT_TYPE_ENT;
typedef enum {PRV_CPSS_XG_PORT_XG_ONLY_E, PRV_CPSS_XG_PORT_HX_QX_ONLY_E, PRV_CPSS_XG_PORT_XG_HX_QX_E, PRV_CPSS_GE_PORT_GE_ONLY_E, PRV_CPSS_XG_PORT_XLG_SGMII_E, PRV_CPSS_XG_PORT_CG_SGMII_E, PRV_CPSS_XG_PORT_OPTIONS_MAX_E} PRV_CPSS_PORT_TYPE_OPTIONS_ENT;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, GT_U32 *) PRV_CPSS_PORT_XLG_MAC_MASK_GET_FUNC;
typedef GT_BOOL (*)(GT_U8, GT_PHYSICAL_PORT_NUM) PRV_CPSS_REMOTE_PORT_CHECK_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, MV_HWS_PORT_STANDARD, MV_HWS_PORT_INIT_INPUT_PARAMS *, GT_BOOL) PRV_CPSS_USX_REPLICATION_SET_FUNC;

File common/h/cpss/common/private/globalNonShared/prvCpssCommonModGlobalNonSharedDb.h:
typedef struct {
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_NON_SHARED_SILICON_IF_SRC_GLOBAL_DB mvHwsSiliconIfSrc;
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    MV_HWS_REG_ADDR_FIELD_STC *mvHwsRegDb[60];
    MV_OS_TIME_WK_AFTER_FUNC hwsOsTimerWkFuncGlobalPtr;
    MV_OS_MEM_SET_FUNC hwsOsMemSetFuncGlobalPtr;
    MV_OS_FREE_FUNC hwsOsFreeFuncGlobalPtr;
    MV_OS_MALLOC_FUNC hwsOsMallocFuncGlobalPtr;
    MV_OS_MEM_COPY_FUNC hwsOsMemCopyFuncGlobalPtr;
    MV_OS_STR_CAT_FUNC hwsOsStrCatFuncGlobalPtr;
    MV_TIMER_GET hwsTimerGetFuncGlobalPtr;
    MV_REG_ACCESS_SET hwsRegisterSetFuncGlobalPtr;
    MV_REG_ACCESS_GET hwsRegisterGetFuncGlobalPtr;
    MV_SERDES_REG_ACCESS_SET hwsSerdesRegSetFuncGlobalPtr;
    MV_SERDES_REG_ACCESS_GET hwsSerdesRegGetFuncGlobalPtr;
    MV_HWS_DEV_FUNC_PTRS hwsDevFunc[16];
    GT_BOOL devFuncInitDone;
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_NON_SHARED_SILICON_IF_SRC_GLOBAL_DB;
typedef struct {
    char buffer[2048];
    char buffer1[160];
    char buffer2[160];
    char buffer3[2048];
    char buffer4[2048];
    char buffer5[2048];
    PRV_CPSS_LOG_CONTEXT_ENTRY_STC currentEntry;
    PRV_CPSS_LOG_API_HISTORY_ENTRY_STC firstHistoryDbEntry;
    PRV_CPSS_LOG_API_HISTORY_ENTRY_STC *currentHistoryEntryPtr;
    GT_U32 currentHistoryEntryNum;
    PRV_CPSS_LOG_STAT_STC prvLogStat;
    PRV_CPSS_LOG_PHASE_ENT lastState;
    char prvCpssLogHistoryName[80];
} PRV_CPSS_COMMON_MOD_LOG_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_MAC_DIR_NON_SHARED_MAC_IF_SRC_GLOBAL_DB mvHwsMacIfSrc;
} PRV_CPSS_COMMON_MOD_MAC_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    MV_HWS_MAC_FUNC_PTRS *hwsMacFuncsPtr[128][18];
} PRV_CPSS_COMMON_MOD_MAC_DIR_NON_SHARED_MAC_IF_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_LOG_DIR_NON_SHARED_GLOBAL_DB logDir;
    PRV_CPSS_COMMON_MOD_SYS_RECOVERY_DIR_NON_SHARED_GLOBAL_DB systemRecoveryDir;
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_NON_SHARED_GLOBAL_DB labServicesDir;
    PRV_CPSS_COMMON_MOD_PCS_DIR_NON_SHARED_GLOBAL_DB pcsDir;
    PRV_CPSS_COMMON_MOD_SERDES_DIR_NON_SHARED_GLOBAL_DB serdesDir;
    PRV_CPSS_DRV_COMMON_MOD_INT_DIR_NON_SHARED_GLOBAL_DB genericInterrupsDir;
    PRV_CPSS_COMMON_MOD_MAC_DIR_NON_SHARED_GLOBAL_DB macDir;
} PRV_CPSS_COMMON_MOD_NON_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_PCS_DIR_NON_SHARED_PCS_IF_SRC_GLOBAL_DB mvHwsPcsIfSrc;
} PRV_CPSS_COMMON_MOD_PCS_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    MV_HWS_PCS_FUNC_PTRS *hwsPcsFuncsPtr[128][21];
} PRV_CPSS_COMMON_MOD_PCS_DIR_NON_SHARED_PCS_IF_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_SERDES_DIR_NON_SHARED_SERDES_IF_SRC_GLOBAL_DB mvHwsSerdesIfSrc;
} PRV_CPSS_COMMON_MOD_SERDES_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    MV_HWS_SERDES_FUNC_PTRS *hwsSerdesFuncsPtr[128][12];
} PRV_CPSS_COMMON_MOD_SERDES_DIR_NON_SHARED_SERDES_IF_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_SYS_RECOVERY_DIR_SYS_RECOVERY_SRC_NON_SHARED_GLOBAL_DB genSystemRecoverySrc;
} PRV_CPSS_COMMON_MOD_SYS_RECOVERY_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    CPSS_SYSTEM_RECOVERY_INFO_STC systemRecoveryInfo;
    PRV_CPSS_SYSTEM_RECOVERY_MANAGER_STC systemRecoveryManagersDb;
    PRV_CPSS_SYSTEM_RECOVERY_DEBUG_STC systemRecoveryDebugDb;
    PRV_CPSS_SYSTEM_RECOVERY_PARALLEL_COMPLETION_FUN prvCpssSystemRecoveryParallelCompletionHandleFuncPtr;
    PRV_CPSS_SYSTEM_RECOVERY_MSG_DISABLE_MODE_FUN prvCpssSystemRecoveryMsgDisableModeHandleFuncPtr;
    PRV_CPSS_SYSTEM_RECOVERY_HA_FUN prvCpssSystemRecoveryCatchUpHandleFuncPtr;
    PRV_CPSS_SYSTEM_RECOVERY_HA_FUN prvCpssSystemRecoveryCompletionHandleFuncPtr;
    PRV_CPSS_SYSTEM_RECOVERY_HA_FUN prvCpssSystemRecoveryCompletionGenHandleFuncPtr;
    PRV_CPSS_SYSTEM_RECOVERY_HA_FUN prvCpssSystemRecoveryHa2PhasesInitHandleFuncPtr;
} PRV_CPSS_COMMON_MOD_SYS_RECOVERY_DIR_SYS_RECOVERY_SRC_NON_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_DRV_COMMON_MOD_INT_GENERIC_DIR_NON_SHARED_GLOBAL_DB genericInterruptsSrc;
} PRV_CPSS_DRV_COMMON_MOD_INT_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_EVENT_MASK_DEVICE_SET_FUNC eventMaskDeviceFuncArray[4];
    PRV_CPSS_EVENT_MASK_DEVICE_GET_FUNC eventMaskGetDeviceFuncArray[4];
    PRV_CPSS_EVENT_GENERATE_DEVICE_SET_FUNC eventGenerateDeviceFuncArray[4];
    PRV_CPSS_EVENT_GPP_ISR_CONNECT_FUNC eventGppIsrConnectFunc;
    PRV_CPSS_EVENT_EXT_DATA_CONVERT_FUNC prvCpssEventExtDataConvertFunc;
    PRV_CPSS_EVENT_MAC_EXT_DATA_CONVERT_FUNC prvCpssMacEventExtDataConvertFunc;
} PRV_CPSS_DRV_COMMON_MOD_INT_GENERIC_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    GT_BOOL prvCpssLogEnabled;
    CPSS_LOG_API_FORMAT_ENT prvCpssLogFormat;
    GT_U32 prvCpssLogStackSize;
    GT_BOOL prvCpssLogLibsLogsTypesTable[58][5];
    GT_BOOL prvCpssLogLibsLogs_errorAllEnable;
    GT_U32 prvCpssLogTabIndex;
    GT_BOOL prvCpssLogLineNumberEnabled;
    CPSS_LOG_POINTER_FORMAT_ENT prvCpssLogPointerFormat;
    CPSS_BM_POOL_ID prvCpssLogDbPoolId;
    CPSS_BM_POOL_ID prvCpssLogAvlPoolId;
    PRV_CPSS_AVL_TREE_ID prvCpssLogAvlTreeId;
    PRV_CPSS_LOG_CONTEXT_ENTRY_STC *prvCpssLogContextEntryPtr;
    CPSS_LOG_TIME_FORMAT_ENT timeFormat;
    GT_BOOL prvCpssLogSilent;
} PRV_CPSS_DRV_COMMON_MOD_LOG_NON_VOLATILE_GLOBAL_DB;

File common/h/cpss/common/private/globalNonShared/prvCpssExtDrvFunctionsGlobalNonSharedDb.h:
typedef struct {
    CPSS_EXTDRV_ETH_CPU_PREPEND_TWO_BYTES_FUNC cpssExtDrvEthPrePendTwoBytesHeaderSet;
    CPSS_EXT_DRV_MGMT_CACHE_FLUSH_FUNC cpssExtDrvMgmtCacheFlush;
    CPSS_EXT_DRV_MGMT_CACHE_INVALIDATE_FUNC cpssExtDrvMgmtCacheInvalidate;
    CPSS_EXTDRV_DMA_WRITE_FUNC cpssExtDrvDmaWrite;
    CPSS_EXTDRV_DMA_READ_FUNC cpssExtDrvDmaRead;
    CPSS_EXTDRV_HSU_INBOUND_SDMA_ENABLE_FUNC cpssExtDrvInboundSdmaEnable;
    CPSS_EXTDRV_HSU_INBOUND_SDMA_DISABLE_FUNC cpssExtDrvInboundSdmaDisable;
    CPSS_EXTDRV_HSU_INBOUND_SDMA_STATE_GET_FUNC cpssExtDrvInboundSdmaStateGet;
    CPSS_EXTDRV_HW_IF_SMI_INIT_DRIVER_FUNC cpssExtDrvHwIfSmiInitDriver;
    CPSS_EXTDRV_HW_IF_SMI_WRITE_REG_FUNC cpssExtDrvHwIfSmiWriteReg;
    CPSS_EXTDRV_HW_IF_SMI_READ_REG_FUNC cpssExtDrvHwIfSmiReadReg;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_RAM_READ_FUNC cpssExtDrvHwIfSmiTskRegRamRead;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_RAM_WRITE_FUNC cpssExtDrvHwIfSmiTskRegRamWrite;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_VEC_READ_FUNC cpssExtDrvHwIfSmiTskRegVecRead;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_VEC_WRITE_FUNC cpssExtDrvHwIfSmiTskRegVecWrite;
    CPSS_EXTDRV_HW_IF_SMI_TASK_WRITE_REG_FUNC cpssExtDrvHwIfSmiTaskWriteReg;
    CPSS_EXTDRV_HW_IF_SMI_TASK_READ_REG_FUNC cpssExtDrvHwIfSmiTaskReadReg;
    CPSS_EXTDRV_HW_IF_SMI_INTERRUPT_WRITE_REG_FUNC cpssExtDrvHwIfSmiInterruptWriteReg;
    CPSS_EXTDRV_HW_IF_SMI_INTERRUPT_READ_REG_FUNC cpssExtDrvHwIfSmiInterruptReadReg;
    CPSS_EXTDRV_HW_IF_SMI_DEV_VENDOR_ID_GET_FUNC cpssExtDrvSmiDevVendorIdGet;
    CPSS_EXTDRV_HW_IF_SMI_TASK_WRITE_REG_FIELD_FUNC cpssExtDrvHwIfSmiTaskWriteRegField;
    CPSS_EXTDRV_HW_IF_TWSI_INIT_DRIVER_FUNC cpssExtDrvHwIfTwsiInitDriver;
    CPSS_EXTDRV_HW_IF_TWSI_WRITE_REG_FUNC cpssExtDrvHwIfTwsiWriteReg;
    CPSS_EXTDRV_HW_IF_TWSI_READ_REG_FUNC cpssExtDrvHwIfTwsiReadReg;
    CPSS_EXTDRV_INT_CONNECT_FUNC cpssExtDrvIntConnect;
    CPSS_EXTDRV_INT_DISCONNECT_FUNC cpssExtDrvIntDisconnect;
    CPSS_EXTDRV_INT_ENABLE_FUNC cpssExtDrvIntEnable;
    CPSS_EXTDRV_INT_DISABLE_FUNC cpssExtDrvIntDisable;
    CPSS_EXTDRV_ETH_PORT_RX_INIT_FUNC cpssExtDrvEthPortRxInit;
    CPSS_EXTDRV_ETH_RAW_SOCKET_MODE_SET_FUNC cpssExtDrvEthRawSocketModeSet;
    CPSS_EXTDRV_ETH_RAW_SOCKET_MODE_GET_FUNC cpssExtDrvEthRawSocketModeGet;
    CPSS_EXTDRV_LINUX_MODE_SET_FUNC cpssExtDrvLinuxModeSet;
    CPSS_EXTDRV_LINUX_MODE_GET_FUNC cpssExtDrvLinuxModeGet;
    CPSS_EXTDRV_HSU_MEM_BASE_ADDR_GET_FUNC cpssExtDrvHsuMemBaseAddrGet;
    CPSS_EXTDRV_HSU_WARM_RESTART_FUNC cpssExtDrvHsuWarmRestart;
    CPSS_EXTDRV_ETH_PORT_TX_INIT_FUNC cpssExtDrvEthPortTxInit;
    CPSS_EXTDRV_ETH_PORT_ENABLE_FUNC cpssExtDrvEthPortEnable;
    CPSS_EXTDRV_ETH_PORT_DISABLE_FUNC cpssExtDrvEthPortDisable;
    CPSS_EXTDRV_ETH_PORT_TX_FUNC cpssExtDrvEthPortTx;
    CPSS_EXTDRV_ETH_PORT_INPUT_HOOK_ADD_FUNC cpssExtDrvEthInputHookAdd;
    CPSS_EXTDRV_ETH_RAW_SOCKET_RX_HOOK_ADD_FUNC cpssExtDrvEthRawSocketRxHookAdd;
    CPSS_EXTDRV_ETH_PORT_TX_COMPLETE_HOOK_ADD_FUNC cpssExtDrvEthTxCompleteHookAdd;
    CPSS_EXTDRV_ETH_PORT_RX_PACKET_FREE_FUNC cpssExtDrvEthRxPacketFree;
    CPSS_EXTDRV_ETH_PORT_TX_MODE_SET_FUNC cpssExtDrvEthPortTxModeSet;
    CPSS_EXTDRV_ETH_CPU_CODE_TO_QUEUE cpssExtDrvEthCpuCodeToQueue;
    CPSS_EXTDRV_I2C_MGMT_MASTER_INIT_FUNC cpssExtDrvI2cMgmtMasterInit;
    CPSS_EXTDRV_MGMT_READ_REGISTER_FUNC cpssExtDrvMgmtReadRegister;
    CPSS_EXTDRV_MGMT_WRITE_REGISTER_FUNC cpssExtDrvMgmtWriteRegister;
    CPSS_EXTDRV_MGMT_ISR_READ_REGISTER_FUNC cpssExtDrvMgmtIsrReadRegister;
    CPSS_EXTDRV_MGMT_ISR_WRITE_REGISTER_FUNC cpssExtDrvMgmtIsrWriteRegister;
    CPSS_EXTDRV_PCI_CONFIG_WRITE_REG_FUNC cpssExtDrvPciConfigWriteReg;
    CPSS_EXTDRV_PCI_CONFIG_READ_REG_FUNC cpssExtDrvPciConfigReadReg;
    CPSS_EXTDRV_PCI_DEV_FIND_FUNC cpssExtDrvPciFindDev;
    CPSS_EXTDRV_PCI_INT_VEC_GET_FUNC cpssExtDrvGetPciIntVec;
    CPSS_EXTDRV_INT_MASK_GET_FUNC cpssExtDrvGetIntMask;
    CPSS_EXTDRV_PCI_COMBINED_ACCESS_ENABLE_FUNC cpssExtDrvEnableCombinedPciAccess;
    CPSS_EXTDRV_PCI_DOUBLE_WRITE_FUNC cpssExtDrvPciDoubleWrite;
    CPSS_EXTDRV_PCI_DOUBLE_READ_FUNC cpssExtDrvPciDoubleRead;
    CPSS_EXTDRV_PCI_SET_DEV_ID_FUNC cpssExtDrvPciSetDevId;
    CPSS_EXTDRV_DRAGONITE_GET_BASE_ADDRESS_FUNC cpssExtDrvDragoniteShMemBaseAddrGet;
} PRV_CPSS_EXT_DRV_FUNC_PTR_NON_SHARED_GLOBAL_DB;

File common/h/cpss/common/private/globalNonShared/prvCpssOsFunctionsGlobalNonSharedDb.h:
typedef struct {
    CPSS_OS_IO_F_LAST_ERROR_STR_FUNC cpssOsFlastErrorStr;
    CPSS_OS_IO_FOPEN_FUNC cpssOsFopen;
    CPSS_OS_IO_FCLOSE_FUNC cpssOsFclose;
    CPSS_OS_IO_REWIND_FUNC cpssOsRewind;
    CPSS_OS_IO_FPRINTF_FUNC cpssOsFprintf;
    CPSS_OS_IO_FGETS_FUNC cpssOsFgets;
    CPSS_OS_IO_FWRITE_FUNC cpssOsFwrite;
    CPSS_OS_IO_FREAD_FUNC cpssOsFread;
    CPSS_OS_IO_FGET_LENGTH_FUNC cpssOsFgetLength;
    CPSS_OS_FATAL_ERROR_FUNC cpssOsFatalError;
    CPSS_OS_BZERO_FUNC cpssOsBzero;
    CPSS_OS_MEM_SET_FUNC cpssOsMemSet;
    CPSS_OS_MEM_CPY_FUNC cpssOsMemCpy;
    CPSS_OS_MEM_MOVE_FUNC cpssOsMemMove;
    CPSS_OS_MEM_CMP_FUNC cpssOsMemCmp;
    CPSS_OS_STATIC_MALLOC_FUNC cpssOsStaticMalloc;
    CPSS_OS_MALLOC_FUNC cpssOsMalloc;
    CPSS_OS_REALLOC_FUNC cpssOsRealloc;
    CPSS_OS_FREE_FUNC cpssOsFree;
    CPSS_OS_CACHE_DMA_MALLOC_FUNC cpssOsCacheDmaMalloc;
    CPSS_OS_CACHE_DMA_FREE_FUNC cpssOsCacheDmaFree;
    CPSS_OS_PHY_TO_VIRT_FUNC cpssOsPhy2Virt;
    CPSS_OS_VIRT_TO_PHY_FUNC cpssOsVirt2Phy;
    CPSS_OS_MEM_GLOBAL_DB_SHMEM_INIT cpssOsGlobalDbShmemInit;
    CPSS_OS_MEM_GLOBAL_DB_SHMEM_UNLINK cpssOsGlobalDbShmemUnlink;
    CPSS_OS_RAND_FUNC cpssOsRand;
    CPSS_OS_SRAND_FUNC cpssOsSrand;
    CPSS_OS_MUTEX_CREATE_FUNC cpssOsMutexCreate;
    CPSS_OS_MUTEX_DELETE_FUNC cpssOsMutexDelete;
    CPSS_OS_STR_LEN_FUNC cpssOsStrlen;
    CPSS_OS_STR_CPY_FUNC cpssOsStrCpy;
    CPSS_OS_STR_N_CPY_FUNC cpssOsStrNCpy;
    CPSS_OS_STR_CHR_FUNC cpssOsStrChr;
    CPSS_OS_STR_STR_FUNC cpssOsStrStr;
    CPSS_OS_STR_REV_CHR_FUNC cpssOsStrRChr;
    CPSS_OS_STR_CMP_FUNC cpssOsStrCmp;
    CPSS_OS_STR_N_CMP_FUNC cpssOsStrNCmp;
    CPSS_OS_STR_CAT_FUNC cpssOsStrCat;
    CPSS_OS_STR_N_CAT_FUNC cpssOsStrNCat;
    CPSS_OS_TO_UPPER_FUNC cpssOsToUpper;
    CPSS_OS_STR_TO_32_FUNC cpssOsStrTo32;
    CPSS_OS_STR_TO_U32_FUNC cpssOsStrToU32;
    CPSS_OS_STR_TOL_FUNC cpssOsStrTol;
    CPSS_SOCKET_LAST_ERROR_FUNC cpssOsSocketLastError;
    CPSS_SOCKET_LAST_ERROR_STR_FUNC cpssOsSocketLastErrorStr;
    CPSS_SOCKET_TCP_CREATE_FUNC cpssOsSocketTcpCreate;
    CPSS_SOCKET_UDP_CREATE_FUNC cpssOsSocketUdpCreate;
    CPSS_SOCKET_TCP_DESTROY_FUNC cpssOsSocketTcpDestroy;
    CPSS_SOCKET_UDP_DESTROY_FUNC cpssOsSocketUdpDestroy;
    CPSS_SOCKET_CREATE_ADDR_FUNC cpssOsSocketCreateAddr;
    CPSS_SOCKET_DESTROY_ADDR_FUNC cpssOsSocketDestroyAddr;
    CPSS_SOCKET_BIND_FUNC cpssOsSocketBind;
    CPSS_SOCKET_LISTEN_FUNC cpssOsSocketListen;
    CPSS_SOCKET_ACCEPT_FUNC cpssOsSocketAccept;
    CPSS_SOCKET_CONNECT_FUNC cpssOsSocketConnect;
    CPSS_SOCKET_SET_NONBLOCK_FUNC cpssOsSocketSetNonBlock;
    CPSS_SOCKET_SET_BLOCK_FUNC cpssOsSocketSetBlock;
    CPSS_SOCKET_SEND_FUNC cpssOsSocketSend;
    CPSS_SOCKET_SENDTO_FUNC cpssOsSocketSendTo;
    CPSS_SOCKET_RECV_FUNC cpssOsSocketRecv;
    CPSS_SOCKET_RECVFROM_FUNC cpssOsSocketRecvFrom;
    CPSS_SOCKET_SET_SOCKET_NOLINGER_FUNC cpssOsSocketSetSocketNoLinger;
    CPSS_SOCKET_EXTRACT_IPADDR_FROM_SOCKET_ADDR_FUNC cpssOsSocketExtractIpAddrFromSocketAddr;
    CPSS_SOCKET_GET_ADDR_SIZE_FUNC cpssOsSocketGetSocketAddrSize;
    CPSS_SOCKET_SHUTDOWN_FUNC cpssOsSocketShutDown;
    CPSS_SOCKET_SELECT_CREATE_SET_FUNC cpssOsSelectCreateSet;
    CPSS_SOCKET_SELECT_ERASE_SET_FUNC cpssOsSelectEraseSet;
    CPSS_SOCKET_SELECT_ZERO_SET_FUNC cpssOsSelectZeroSet;
    CPSS_SOCKET_SELECT_ADD_FD_TO_SET_FUNC cpssOsSelectAddFdToSet;
    CPSS_SOCKET_SELECT_CLEAR_FD_FROM_SET_FUNC cpssOsSelectClearFdFromSet;
    CPSS_SOCKET_SELECT_IS_FD_SET_FUNC cpssOsSelectIsFdSet;
    CPSS_SOCKET_SELECT_COPY_SET_FUNC cpssOsSelectCopySet;
    CPSS_SOCKET_SELECT_FUNC cpssOsSelect;
    CPSS_SOCKET_SELECT_GET_SOCKET_FD_SIZE_FUNC cpssOsSocketGetSocketFdSetSize;
    CPSS_OS_INET_NTOHL_FUNC cpssOsNtohl;
    CPSS_OS_INET_HTONL_FUNC cpssOsHtonl;
    CPSS_OS_INET_NTOHS_FUNC cpssOsNtohs;
    CPSS_OS_INET_HTONS_FUNC cpssOsHtons;
    CPSS_OS_INET_NTOA_FUNC cpssOsInetNtoa;
    CPSS_OS_IO_BIND_STDOUT_FUNC cpssOsBindStdOut;
    CPSS_OS_IO_PRINTF_FUNC cpssOsPrintf;
    CPSS_OS_IO_VPRINTF_FUNC cpssOsVprintf;
    CPSS_OS_IO_SPRINTF_FUNC cpssOsSprintf;
    CPSS_OS_IO_VSPRINTF_FUNC cpssOsVsprintf;
    CPSS_OS_IO_SNPRINTF_FUNC cpssOsSnprintf;
    CPSS_OS_IO_VSNPRINTF_FUNC cpssOsVsnprintf;
    CPSS_OS_IO_PRINT_SYNC_FUNC cpssOsPrintSync;
    CPSS_OS_IO_GETS_FUNC cpssOsGets;
    CPSS_OS_MUTEX_LOCK_FUNC cpssOsMutexLock;
    CPSS_OS_MUTEX_UNLOCK_FUNC cpssOsMutexUnlock;
    CPSS_OS_SIG_SEM_BIN_CREATE_FUNC cpssOsSigSemBinCreate;
    CPSS_OS_SIG_SEM_M_CREATE_FUNC cpssOsSigSemMCreate;
    CPSS_OS_SIG_SEM_C_CREATE_FUNC cpssOsSigSemCCreate;
    CPSS_OS_SIG_SEM_DELETE_FUNC cpssOsSigSemDelete;
    CPSS_OS_SIG_SEM_WAIT_FUNC cpssOsSigSemWait;
    CPSS_OS_SIG_SEM_SIGNAL_FUNC cpssOsSigSemSignal;
    CPSS_OS_NAMED_SEM_OPEN_FUNC cpssOsNamedSemOpen;
    CPSS_OS_NAMED_SEM_WAIT_FUNC cpssOsNamedSemWait;
    CPSS_OS_NAMED_SEM_POST_FUNC cpssOsNamedSemPost;
    CPSS_OS_NAMED_SEM_CLOSE_FUNC cpssOsNamedSemClose;
    CPSS_OS_NAMED_SEM_UNLINK_FUNC cpssOsNamedSemUnlink;
    CPSS_OS_TIME_WK_AFTER_FUNC cpssOsTimerWkAfter;
    CPSS_OS_TIME_TICK_GET_FUNC cpssOsTickGet;
    CPSS_OS_TIME_GET_FUNC cpssOsTime;
    CPSS_OS_TIME_RT_FUNC cpssOsTimeRT;
    CPSS_OS_GET_SYS_CLOCK_RATE_FUNC cpssOsGetSysClockRate;
    CPSS_OS_DELAY_FUNC cpssOsDelay;
    CPSS_OS_STRF_TIME_FUNC cpssOsStrfTime;
    CPSS_TRACE_HW_ACCESS_WRITE_FUNC cpssTraceHwAccessWrite;
    CPSS_TRACE_HW_ACCESS_READ_FUNC cpssTraceHwAccessRead;
    CPSS_TRACE_HW_ACCESS_DELAY_FUNC cpssTraceHwAccessDelay;
    CPSS_OS_TASK_GET_PID_FUNC cpssOsTaskGetPid;
    CPSS_OS_TASK_AT_PROC_EXIT_FUNC cpssOsTaskAtProcExit;
    CPSS_OS_TASK_CREATE_FUNC cpssOsTaskCreate;
    CPSS_OS_TASK_DELETE_FUNC cpssOsTaskDelete;
    CPSS_OS_TASK_GET_SELF_FUNC cpssOsTaskGetSelf;
    CPSS_OS_STDLIB_QSORT_FUNC cpssOsQsort;
    CPSS_OS_STDLIB_BSEARCH_FUNC cpssOsBsearch;
    CPSS_OS_MSGQ_CREATE_FUNC cpssOsMsgQCreate;
    CPSS_OS_MSGQ_DELETE_FUNC cpssOsMsgQDelete;
    CPSS_OS_MSGQ_SEND_FUNC cpssOsMsgQSend;
    CPSS_OS_MSGQ_RECV_FUNC cpssOsMsgQRecv;
    CPSS_OS_MSGQ_NUM_MSGS_FUNC cpssOsMsgQNumMsgs;
    CPSS_OS_LOG_FUNC cpssOsLog;
} PRV_CPSS_OS_FUNC_PTR_NON_SHARED_GLOBAL_DB;

File common/h/cpss/common/private/globalShared/prvCpssCommonModGlobalSharedDb.h:
typedef struct {
    PRV_CPSS_DRIVER_PP_CONFIG_STC *prvCpssDrvPpConfig[128];
    PRV_CPSS_DRV_OBJ_STC *prvCpssDrvPpObjConfig[128];
    PRV_CPSS_HW_DRIVER_LIST_NODE_STC *cpssHwDriverListPtr;
    CPSS_OS_MUTEX prvCpssHwDriverListMtx;
} PRV_CPSS_COMMON_MOD_CONFIG_DIR_SHARED_DRV_PP_CON_GEN_INIT_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_CONFIG_DIR_SHARED_DRV_PP_CON_GEN_INIT_SRC_GLOBAL_DB dDrvPpConGenInitSrc;
} PRV_CPSS_COMMON_MOD_CONFIG_DIR_SHARED_GLOBAL_DB;
typedef struct {
    void *prvCpssPpConfig[128];
    PRV_CPSS_PP_PRE_PHASE1_INIT_MODE_ENT prvCpssPrePhase1PpInitMode;
    GT_U32 simUserDefinedCoreClockMHz;
    PRV_CPSS_GEN_GLOBAL_DATA_STC sysGenGlobalInfo;
    GT_UINTPTR dmmBlockNotFoundIndication;
    CPSS_OS_MUTEX prvCpssLockSem;
    CPSS_OS_MUTEX prvCpssApiLockDevicelessMtx[8];
    CPSS_OS_MUTEX prvCpssApiLockByDevNumAndFunctionalityMtx[128][4];
    CPSS_OS_MUTEX prvCpssApiLockDevicelessMtxZeroLevel;
} PRV_CPSS_COMMON_MOD_CPSS_HW_INIT_DIR_SHARED_GLOBAL_DB;
typedef struct {
    GT_BOOL mvHwsAnpUsedForStaticPort;
    GT_BOOL mvHwsAnpUseCmdTable;
    GT_U32 mvHwsAnpTimerDisable;
    MV_HWS_ANP_PORT_DATA_STC mvHwsAnpPortDB;
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_ANP_SRC_GLOBAL_DB;
typedef struct {
    MV_HWS_DEVICE_PORTS_ELEMENTS hwsDevicesPortsElementsArrayGlobal[128];
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_COMMON_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_PORT_SRC_GLOBAL_DB portSrc;
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_SILICON_IF_SRC_GLOBAL_DB mvHwsSiliconIfSrc;
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_COMMON_SRC_GLOBAL_DB commonSrc;
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_ANP_SRC_GLOBAL_DB mvHwsAnpSrc;
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_GLOBAL_DB;
typedef struct {
    GT_UINTPTR hwsIpcChannelHandlers[128];
    GT_U32 hwsIpcQueueIdPool[128][6];
    GT_BOOL multiLaneConfig;
    MV_HWS_GLOBALS *apGlobalsCfgPtr;
    MV_HWS_GLOBALS apGlobalsCfgSnap;
    GT_BOOL apEngineInitOnDev[128][32];
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_PORT_SRC_GLOBAL_DB;
typedef struct {
    HWS_DEVICE_INFO *hwsDeviceSpecInfoGlobal;
    HWS_UNIT_INFO hwsDeviceSpecUnitInfo[16][60];
    MV_OS_EXACT_DELAY_FUNC hwsOsExactDelayGlobalPtr;
    MV_OS_MICRO_DELAY_FUNC hwsOsMicroDelayGlobalPtr;
    MV_SERVER_REG_ACCESS_SET hwsServerRegSetFuncGlobalPtr;
    MV_SERVER_REG_ACCESS_GET hwsServerRegGetFuncGlobalPtr;
    MV_SERVER_REG_FIELD_ACCESS_SET hwsServerRegFieldSetFuncGlobalPtr;
    MV_SERVER_REG_FIELD_ACCESS_GET hwsServerRegFieldGetFuncGlobalPtr;
    MV_SIL_ILKN_REG_DB_GET hwsIlknRegDbGetFuncGlobalPtr;
    MV_OS_HW_TRACE_ENABLE_FUNC hwsPpHwTraceEnableGlobalPtr;
} PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_SILICON_IF_SRC_GLOBAL_DB;
typedef struct {
    GT_BOOL isPortMgrEnable[128];
    GT_BOOL stageInit[1024];
    GT_U32 globalTimeStampSec;
    GT_U32 globalTimeStampNSec;
    GT_U32 globalTimeStampSecEnd;
    GT_U32 globalTimeStampNSecEnd;
} PRV_CPSS_COMMON_MOD_PORT_DIR_SHARED_COMMON_PORT_MANAGER_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_PORT_DIR_SHARED_COMMON_PORT_MANAGER_SRC_GLOBAL_DB commonPortManagerSrc;
} PRV_CPSS_COMMON_MOD_PORT_DIR_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_SERDES_DIR_SHARED_SERDES_IF_SRC_GLOBAL_DB mvHwsSerdesIfSrc;
} PRV_CPSS_COMMON_MOD_SERDES_DIR_SHARED_GLOBAL_DB;
typedef struct {
    GT_BOOL serdesExternalFirmware;
    CPSS_OS_MUTEX serdesAccessMutex;
} PRV_CPSS_COMMON_MOD_SERDES_DIR_SHARED_SERDES_IF_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_COMMON_MOD_CPSS_HW_INIT_DIR_SHARED_GLOBAL_DB genericHwInitDir;
    PRV_CPSS_DRV_COMMON_MOD_INT_DIR_SHARED_GLOBAL_DB genericInterrupsDir;
    PRV_CPSS_COMMON_MOD_SERDES_DIR_SHARED_GLOBAL_DB serdesDir;
    PRV_CPSS_COMMON_MOD_CONFIG_DIR_SHARED_GLOBAL_DB configDir;
    PRV_CPSS_COMMON_MOD_LAB_SERVICES_DIR_SHARED_GLOBAL_DB labServicesDir;
    PRV_CPSS_COMMON_MOD_PORT_DIR_SHARED_GLOBAL_DB portDir;
} PRV_CPSS_COMMON_MOD_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_DRV_COMMON_MOD_INT_GENERIC_DIR_SHARED_GLOBAL_DB genericInterruptsSrc;
    PRV_CPSS_DRV_COMMON_MOD_INT_DXEXMX_DIR_SHARED_GLOBAL_DB dxexmxInterruptsSrc;
} PRV_CPSS_DRV_COMMON_MOD_INT_DIR_SHARED_GLOBAL_DB;
typedef struct {
    GT_BOOL aldrin2initDone;
    GT_BOOL bobcat3initDone;
    GT_BOOL falconInitDone[3];
    GT_BOOL hawkInitDone;
    GT_BOOL harrierInitDone;
    GT_BOOL ironmanInitDone;
    GT_BOOL phoenixInitDone;
    GT_BOOL bc2InitDone;
    GT_BOOL aldrinInitDone;
    GT_BOOL ac5InitDone;
    GT_BOOL xcat3InitDone;
    GT_BOOL lion2InitDone;
    GT_BOOL caelumInitDone;
    GT_BOOL cetusInitDone;
    GT_U32 pollingSleepTime;
    GT_CHAR readRegFuncAddr[20];
    GT_CHAR writeRegFuncAddr[20];
    PRV_CPSS_DRV_INT_TASK_PARAMS_STC intArr[64];
    PRV_CPSS_DRV_DEVICE_INTERRUPTS_INFO_STC prvCpssDrvDevFamilyInterruptInfoArray[40];
    GT_U32 macSecRegIdNotAccessibleBeforeMacSecInitHarrier[13];
    GT_U32 macSecRegIdNotAccessibleBeforeMacSecInitAc5p[13];
    GT_U32 macSecRegIdNotAccessibleBeforeMacSecInitAc5x[7];
    GT_U32 macSecRegIdNotAccessibleBeforeMacSecInitIronMan[7];
} PRV_CPSS_DRV_COMMON_MOD_INT_DXEXMX_DIR_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_DRV_COMMON_INT_EVENT_REQUEST_QUEUES_STC prvCpssDrvComIntEvReqQueuesDb;
    PRV_CPSS_DRV_COMMON_INT_SERVICE_ROUTINE_STC prvCpssDrvComIntSvcRtnDb;
    GT_BOOL afterDbReleaseIntVecAttached_initialized;
    GT_U32 afterDbReleaseIntVecAttached[128];
} PRV_CPSS_DRV_COMMON_MOD_INT_GENERIC_DIR_SHARED_GLOBAL_DB;

File common/h/cpss/common/private/globalShared/prvCpssGlobalDb.h:
typedef struct {
    GT_U32 atExitIndex;
    GT_BOOL cleanUpRegistered;
    GT_U32 cleanUpIndex;
    GT_BOOL removeProcRegistered;
    GT_U32 removeProcIndex;
} PRV_CPSS_NON_SHARED_AT_EXIT_VARS;
typedef struct {
    PRV_CPSS_DUPLICATED_ADDITIONAL_ADDRESSES_GET_FUNC duplicatedAddrGetFunc;
    PRV_CPSS_PORT_FUNC_PTRS_STC ppCommonPortFuncPtrsStc;
    PRV_CPSS_PORT_PM_FUNC_PTRS pmPortFuncPtrsStc;
    const MV_HWS_PORT_INIT_PARAMS **portsParamsSupModesMap;
    PRV_CPSS_DRV_REMOTE_DEVICE_EVENT_MASK_DEVICE_SET_FUNC remoteDevice_drvEventMaskDeviceFunc;
    PRV_CPSS_DRV_UNIT_INTERRUPT_GENERATION_CHECK_FUNC unitIntGenerationCheckFunc;
    PRV_CPSS_DRV_EVENT_PORT_MAP_CONVERT_FUNC eventPortMapConvertFunc;
    PRV_CPSS_DRV_MAC_EVENT_PORT_MAP_CONVERT_FUNC macEventPortMapConvertFunc;
    PRV_CPSS_DRV_EVENT_GENERIC_CONVERT_FUNC eventGenericConvertFunc;
    PRV_CPSS_DRV_INT_CTRL_NON_SHARED_STC intCtrlNonShared;
} PRV_CPSS_NON_SHARED_DEVICE_SPECIFIC_DATA;
typedef struct {
    GT_U32 magic;
    PRV_CPSS_MAIN_PP_DRV_MOD_NON_SHARED_GLOBAL_DB mainPpDrvMod;
    PRV_CPSS_COMMON_MOD_NON_SHARED_GLOBAL_DB commonMod;
    PRV_CPSS_NON_SHARED_NON_VOLATILE_DB nonVolatileDb;
    PRV_CPSS_NON_SHARED_DEVICE_SPECIFIC_DATA *nonSharedDeviceSpecificDb[128];
} PRV_CPSS_NON_SHARED_GLOBAL_DB;
typedef struct {
    PRV_CPSS_EXT_DRV_FUNC_PTR_NON_SHARED_GLOBAL_DB extDrvFuncDb;
    PRV_CPSS_OS_FUNC_PTR_NON_SHARED_GLOBAL_DB osFuncDb;
    PRV_CPSS_DRV_COMMON_MOD_LOG_NON_VOLATILE_GLOBAL_DB cpssLogDb;
    PRV_CPSS_NON_SHARED_NON_VOLATILE_VARS generalVars;
} PRV_CPSS_NON_SHARED_NON_VOLATILE_DB;
typedef struct {
    GT_BOOL initialization;
    GT_BOOL debugLegacyCommandsMode;
    GT_BOOL aslrSupport;
    PRV_CPSS_NON_SHARED_AT_EXIT_VARS exitVars;
    GT_BOOL verboseMode;
} PRV_CPSS_NON_SHARED_NON_VOLATILE_VARS;
typedef struct {
    GT_U32 initializerPid;
    GT_BOOL dbInitialized;
    GT_U32 magic;
    GT_U32 clientNum;
    GT_BOOL sharedMemoryUsed;
    GT_BOOL sysConfigPhase1Done;
    GT_U32 isWmDeviceInSimEnv;
    GT_U32 pids[256];
    PRV_CPSS_MAIN_PP_DRV_MOD_SHARED_GLOBAL_DB mainPpDrvMod;
    PRV_CPSS_COMMON_MOD_SHARED_GLOBAL_DB commonMod;
} PRV_CPSS_SHARED_GLOBAL_DB;

File common/h/cpss/common/private/globalShared/prvCpssMainPpDrvModGlobalNonSharedDb.h:
typedef struct {
    PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_NON_SHARED_HW_INIT_SRC_GLOBAL_DB hwInitSrc;
} PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    GT_U32 dummy;
} PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_NON_SHARED_HW_INIT_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_NON_SHARED_GLOBAL_DB hwInitDir;
} PRV_CPSS_MAIN_PP_DRV_MOD_NON_SHARED_GLOBAL_DB;

File common/h/cpss/common/private/globalShared/prvCpssMainPpDrvModGlobalSharedDb.h:
typedef struct {
    PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_SHARED_HW_INIT_SRC_GLOBAL_DB hwInitSrc;
} PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_SHARED_GLOBAL_DB;
typedef struct {
    CPSS_GEN_CFG_HW_DEV_NUM_MODE_ENT prvCpssHwDevNumModeDb[4096];
} PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_SHARED_HW_INIT_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_MAIN_PP_DRV_MOD_DIAG_DIR_SHARED_SRC_GLOBAL_DB genDiagSrc;
} PRV_CPSS_MAIN_PP_DRV_MOD_DIAG_DIR_SHARED_GLOBAL_DB;
typedef struct {
    GT_U32 backgroundBuffer[128];
    GT_U32 writeBuffer[128];
    GT_U32 readBuffer[128];
    GT_U32 memMaskArSize;
    GT_U32 memMaskArray[32];
    GT_U32 memDiagBurstSize;
    GT_BOOL testInProgress;
} PRV_CPSS_MAIN_PP_DRV_MOD_DIAG_DIR_SHARED_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_MAIN_PP_DRV_MOD_CPSS_HW_INIT_DIR_SHARED_GLOBAL_DB hwInitDir;
    PRV_CPSS_MAIN_PP_DRV_MOD_DIAG_DIR_SHARED_GLOBAL_DB diagDir;
} PRV_CPSS_MAIN_PP_DRV_MOD_SHARED_GLOBAL_DB;

File common/h/cpss/common/private/prvCpssCyclicLogger.h:
typedef struct {
    GT_U32 psudoTimeStamp;
    GT_U32 timeStamp[3];
    GT_U8 info[256];
    GT_U32 line;
    GT_SW_DEV_NUM devNum;
    GT_U32 port;
} CPSS_CYCLIC_LOGGER_LOG_ENTRY;

File common/h/cpss/common/srvCpu/prvCpssGenericSrvCpuIpcDevCfg.h:
typedef struct {
    GT_UINTPTR base;
    GT_UINTPTR size;
    GT_U32 targetBase;
    GT_U32 shmAddr;
    GT_U32 shmSize;
    GT_UINTPTR shmResvdRegs;
    CPSS_HW_DRIVER_STC *drv;
    IPC_SHM_STC shm;
    GT_BOOL irqBound;
} PRV_SRVCPU_IPC_CHANNEL_STC;
typedef enum {PRV_SRVCPU_OPS_EXISTS_E, PRV_SRVCPU_OPS_IS_ON_E, PRV_SRVCPU_OPS_PRE_LOAD_E, PRV_SRVCPU_OPS_RESET_E, PRV_SRVCPU_OPS_UNRESET_E, PRV_SRVCPU_OPS_PRE_CHECK_IPC_E} PRV_SRVCPU_OPS_ENT;
typedef GT_STATUS (*)(CPSS_HW_INFO_STC *, CPSS_HW_DRIVER_STC *, GT_U32, PRV_SRVCPU_OPS_ENT, void *) PRV_SRVCPU_OPS_FUNC;

File common/h/cpss/common/srvCpu/prvCpssGenericSrvCpuLoad.h:
typedef struct PRV_CPSS_GENERIC_SRV_CPU_IPC_CHANNEL_CONFIG_STCT PRV_CPSS_GENERIC_SRV_CPU_IPC_CHANNEL_CONFIG_STC;
struct PRV_CPSS_GENERIC_SRV_CPU_IPC_CHANNEL_CONFIG_STCT;

File common/h/cpss/common/systemRecovery/cpssGenSystemRecovery.h:
typedef enum {CPSS_SYSTEM_RECOVERY_HA_2_PHASES_INIT_NONE_E, CPSS_SYSTEM_RECOVERY_HA_2_PHASES_INIT_PHASE1_E, CPSS_SYSTEM_RECOVERY_HA_2_PHASES_INIT_PHASE2_E} CPSS_SYSTEM_RECOVERY_HA_2_PHASES_INIT_ENT;
typedef enum {CPSS_SYSTEM_RECOVERY_HA_STATE_READ_ENABLE_WRITE_ENABLE_E, CPSS_SYSTEM_RECOVERY_HA_STATE_READ_ENABLE_WRITE_DISABLE_E, CPSS_SYSTEM_RECOVERY_HA_STATE_READ_DISABLE_WRITE_ENABLE_E, CPSS_SYSTEM_RECOVERY_HA_STATE_READ_DISABLE_WRITE_DISABLE_E} CPSS_SYSTEM_RECOVERY_HA_STATE_ENT;
typedef struct {
    CPSS_SYSTEM_RECOVERY_STATE_ENT systemRecoveryState;
    CPSS_SYSTEM_RECOVERY_MODE_STC systemRecoveryMode;
    CPSS_SYSTEM_RECOVERY_PROCESS_ENT systemRecoveryProcess;
} CPSS_SYSTEM_RECOVERY_INFO_STC;
typedef enum {CPSS_SYSTEM_RECOVERY_NO_MANAGERS_E, CPSS_SYSTEM_RECOVERY_PORT_MANAGER_E, CPSS_SYSTEM_RECOVERY_FDB_MANAGER_E, CPSS_SYSTEM_RECOVERY_LPM_MANAGER_E, CPSS_SYSTEM_RECOVERY_TCAM_MANAGER_E, CPSS_SYSTEM_RECOVERY_EXACT_MATCH_MANAGER_E, CPSS_SYSTEM_RECOVERY_TRUNK_MANAGER_E, CPSS_SYSTEM_RECOVERY_LAST_MANAGER_E} CPSS_SYSTEM_RECOVERY_MANAGER_ENT;
typedef struct {
    GT_BOOL continuousRx;
    GT_BOOL continuousTx;
    GT_BOOL continuousAuMessages;
    GT_BOOL continuousFuMessages;
    GT_BOOL haCpuMemoryAccessBlocked;
    CPSS_SYSTEM_RECOVERY_HA_2_PHASES_INIT_ENT ha2phasesInitPhase;
    CPSS_SYSTEM_RECOVERY_HA_STATE_ENT haReadWriteState;
} CPSS_SYSTEM_RECOVERY_MODE_STC;
typedef enum {CPSS_SYSTEM_RECOVERY_PROCESS_HSU_E, CPSS_SYSTEM_RECOVERY_PROCESS_FAST_BOOT_E, CPSS_SYSTEM_RECOVERY_PROCESS_HA_E, CPSS_SYSTEM_RECOVERY_PROCESS_NOT_ACTIVE_E, CPSS_SYSTEM_RECOVERY_PROCESS_PARALLEL_HA_E, CPSS_SYSTEM_RECOVERY_PROCESS_HITLESS_STARTUP_E} CPSS_SYSTEM_RECOVERY_PROCESS_ENT;
typedef enum {CPSS_SYSTEM_RECOVERY_PREPARATION_STATE_E, CPSS_SYSTEM_RECOVERY_INIT_STATE_E, CPSS_SYSTEM_RECOVERY_COMPLETION_STATE_E, CPSS_SYSTEM_RECOVERY_HW_CATCH_UP_STATE_E} CPSS_SYSTEM_RECOVERY_STATE_ENT;
typedef GT_STATUS (*)(void) PRV_CPSS_SYSTEM_RECOVERY_HA_FUN;
typedef GT_STATUS (*)(void) PRV_CPSS_SYSTEM_RECOVERY_MSG_DISABLE_MODE_FUN;

File common/h/cpss/common/systemRecovery/private/prvCpssCommonSystemRecovery.h:
typedef struct {
    GT_BOOL errorInjectionEnable;
    GT_U32 errorBmp[3];
} CPSS_SYSTEM_RECOVERY_ERROR_INJECTION_STC;
typedef struct {
    GT_BOOL hsSkipVersionCheck;
    GT_BOOL hsSkipMiReset;
    GT_BOOL hsSkipDfxInitStateCheck;
} PRV_CPSS_SYSTEM_RECOVERY_DEBUG_STC;
typedef enum {PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_NONE_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_1_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_2_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_3_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_4_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_5_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_6_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_7_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_8_E, 
    PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_9_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_10_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_11_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_12_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_13_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_14_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_EM_15_E, PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_LAST_E} PRV_CPSS_SYSYEM_RECOVERY_ERROR_INJECTION_INDEX_ENT;

File common/h/cpss/common/systemRecovery/private/prvCpssCommonSystemRecoveryParallel.h:
typedef struct {
    GT_BOOL recoveryStarted;
    GT_BOOL recoveryDone;
} PRV_CPSS_SYSTEM_RECOVERY_MANAGER_STATUS_STC;
typedef struct {
    PRV_CPSS_SYSTEM_RECOVERY_MANAGER_STATUS_STC managersStatusArray[7];
    CPSS_SYSTEM_RECOVERY_ERROR_INJECTION_STC errorInjection;
} PRV_CPSS_SYSTEM_RECOVERY_MANAGER_STC;
typedef GT_STATUS (*)(CPSS_SYSTEM_RECOVERY_MANAGER_ENT) PRV_CPSS_SYSTEM_RECOVERY_PARALLEL_COMPLETION_FUN;

File common/h/cpss/driver/interrupts/cpssDrvComIntEvReqQueues.h:
typedef struct {
    PRV_CPSS_DRV_EV_REQ_Q_CTRL_STC *uniEvQArr;
    GT_U32 uniEvQArrSize;
} PRV_CPSS_DRV_COMMON_INT_EVENT_REQUEST_QUEUES_STC;
typedef struct {
    PRV_CPSS_DRV_EVENT_TYPE_ENT evType;
    PRV_CPSS_DRV_HANDLE_BIND_TYPE_ENT hndlBindType;
    union {...} hndlBindInfo;
    void *extDataPtr;
    struct PRV_CPSS_DRV_EV_REQ_Q_CTRL_STCT *evListPtr;
    struct {...} cpssEventDestroy_info;
} PRV_CPSS_DRV_EVENT_HNDL_STC;
typedef enum {PRV_CPSS_DRV_TX_BUFF_QUEUE_EVENT_E, PRV_CPSS_DRV_REGULAR_EVENT_E} PRV_CPSS_DRV_EVENT_TYPE_ENT;
typedef void (*)(GT_U8, GT_U32) PRV_CPSS_DRV_EV_DRVN_INT_REC_CB;
typedef struct PRV_CPSS_DRV_EV_REQ_NODE_STCT PRV_CPSS_DRV_EV_REQ_NODE_STC;
struct PRV_CPSS_DRV_EV_REQ_NODE_STCT;
typedef struct PRV_CPSS_DRV_EV_REQ_Q_CTRL_STCT PRV_CPSS_DRV_EV_REQ_Q_CTRL_STC;
struct PRV_CPSS_DRV_EV_REQ_Q_CTRL_STCT;
typedef enum {PRV_CPSS_DRV_HANDLE_BIND_USE_SIGNAL_TYPE_E, PRV_CPSS_DRV_HANDLE_BIND_USE_APPL_CB_TYPE_E} PRV_CPSS_DRV_HANDLE_BIND_TYPE_ENT;
typedef GT_STATUS (*)(struct PRV_CPSS_DRV_EV_REQ_NODE_STCT *, CPSS_EVENT_MASK_SET_ENT) PRV_CPSS_DRV_REQ_DRVN_MASK_SET_FUNC;
typedef struct PRV_CPSS_SW_TX_FREE_DATA_STCT PRV_CPSS_SW_TX_FREE_DATA_STC;
struct PRV_CPSS_SW_TX_FREE_DATA_STCT;
typedef struct {
    PRV_CPSS_SW_TX_FREE_DATA_STC *headPtr;
    PRV_CPSS_SW_TX_FREE_DATA_STC *tailPtr;
} PRV_CPSS_TX_BUF_QUEUE_FIFO_STC;

File common/h/cpss/driver/interrupts/cpssDrvComIntSvcRtn.h:
typedef struct {
    PRV_CPSS_DRV_INT_VEC_MEM_LIST_STC *intVecMap[128];
    PRV_CPSS_DRV_COM_INT_TX_ENDED_CB txEndCb[128];
} PRV_CPSS_DRV_COMMON_INT_SERVICE_ROUTINE_STC;
typedef GT_STATUS (*)(GT_U8, GT_U8) PRV_CPSS_DRV_COM_INT_TX_ENDED_CB;
typedef struct {
    CPSS_EVENT_ISR_FUNC gppIsrPtr;
    void *cookie;
} PRV_CPSS_DRV_GPP_INT_INFO_STC;
typedef struct CPSS_INTERRUPT_SCAN_STCT PRV_CPSS_DRV_INTERRUPT_SCAN_STC;
typedef struct {
    GT_U32 intVecNum;
    PRV_CPSS_DRV_ISR_PARAMS_STC *first;
    PRV_CPSS_DRV_ISR_PARAMS_STC *isrParamsArray[128];
} PRV_CPSS_DRV_INT_VEC_MEM_LIST_STC;
typedef struct PRV_CPSS_DRV_ISR_PARAMS_STCT PRV_CPSS_DRV_ISR_PARAMS_STC;
struct PRV_CPSS_DRV_ISR_PARAMS_STCT;

File common/h/cpss/extServices/cpssExtServices.h:
typedef struct {
    CPSS_EXT_DRV_MGMT_CACHE_STC extDrvMgmtCacheBindInfo;
    CPSS_EXT_DRV_HW_IF_SMI_STC extDrvHwIfSmiBindInfo;
    CPSS_EXT_DRV_HW_IF_TWSI_STC extDrvHwIfTwsiBindInfo;
    CPSS_EXT_DRV_DMA_STC extDrvDmaBindInfo;
    CPSS_EXT_DRV_ETH_PORT_STC extDrvEthPortBindInfo;
    CPSS_EXT_DRV_HSU_DRV_STC extDrvHsuDrvBindInfo;
    CPSS_EXT_DRV_INT_STC extDrvIntBindInfo;
    CPSS_EXT_DRV_PCI_STC extDrvPciInfo;
    CPSS_EXT_DRV_MGMT_HW_IF_STC extDrvMgmtHwIfBindInfo;
    CPSS_EXT_DRV_DRAGONITE_STC extDrvDragoniteInfo;
} CPSS_EXT_DRV_FUNC_BIND_STC;
typedef struct {
    CPSS_OS_MEM_BIND_STC osMemBindInfo;
    CPSS_OS_STR_BIND_STC osStrBindInfo;
    CPSS_OS_SEM_BIND_STC osSemBindInfo;
    CPSS_OS_IO_BIND_STC osIoBindInfo;
    CPSS_OS_INET_BIND_STC osInetBindInfo;
    CPSS_OS_TIME_BIND_STC osTimeBindInfo;
    CPSS_OS_INT_BIND_STC osIntBindInfo;
    CPSS_OS_RAND_BIND_STC osRandBindInfo;
    CPSS_OS_TASK_BIND_STC osTaskBindInfo;
    CPSS_OS_STDLIB_BIND_STC osStdLibBindInfo;
    CPSS_OS_MSGQ_BIND_STC osMsgQBindInfo;
    CPSS_OS_LOG_BIND_STC osLogBindInfo;
    CPSS_SOCKET_BIND_STC osSocketInfo;
    CPSS_SOCKET_SELECT_BIND_STC osSocketSelectInfo;
} CPSS_OS_FUNC_BIND_STC;
typedef struct {
    CPSS_TRACE_HW_ACCESS_FUNC_BIND_STC traceHwBindInfo;
} CPSS_TRACE_FUNC_BIND_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssCacheMng.h:
typedef GT_STATUS (*)(CPSS_MGMT_CACHE_TYPE_ENT, void *, size_t) CPSS_EXT_DRV_MGMT_CACHE_FLUSH_FUNC;
typedef GT_STATUS (*)(CPSS_MGMT_CACHE_TYPE_ENT, void *, size_t) CPSS_EXT_DRV_MGMT_CACHE_INVALIDATE_FUNC;
typedef struct {
    CPSS_EXT_DRV_MGMT_CACHE_FLUSH_FUNC extDrvMgmtCacheFlush;
    CPSS_EXT_DRV_MGMT_CACHE_INVALIDATE_FUNC extDrvMgmtCacheInvalidate;
} CPSS_EXT_DRV_MGMT_CACHE_STC;
typedef enum {CPSS_MGMT_INSTRUCTION_CACHE_E, CPSS_MGMT_DATA_CACHE_E} CPSS_MGMT_CACHE_TYPE_ENT;

File common/h/cpss/extServices/extDrv/drivers/cpssDmaDrv.h:
typedef GT_STATUS (*)(GT_UINTPTR, GT_U32, GT_U32, GT_U32 *) CPSS_EXTDRV_DMA_READ_FUNC;
typedef GT_STATUS (*)(GT_UINTPTR, GT_U32 *, GT_U32, GT_U32) CPSS_EXTDRV_DMA_WRITE_FUNC;
typedef struct {
    CPSS_EXTDRV_DMA_WRITE_FUNC extDrvDmaWriteDriverFunc;
    CPSS_EXTDRV_DMA_READ_FUNC extDrvDmaReadFunc;
} CPSS_EXT_DRV_DMA_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssDragoniteDrv.h:
typedef GT_STATUS (*)(GT_U32 *) CPSS_EXTDRV_DRAGONITE_GET_BASE_ADDRESS_FUNC;
typedef struct {
    CPSS_EXTDRV_DRAGONITE_GET_BASE_ADDRESS_FUNC extDrvDragoniteShMemBaseAddrGetFunc;
} CPSS_EXT_DRV_DRAGONITE_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssEthPortCtrl.h:
typedef GT_STATUS (*)(GT_U32, GT_U8) CPSS_EXTDRV_ETH_CPU_CODE_TO_QUEUE;
typedef GT_STATUS (*)(GT_BOOL) CPSS_EXTDRV_ETH_CPU_PREPEND_TWO_BYTES_FUNC;
typedef GT_STATUS (*)(void) CPSS_EXTDRV_ETH_PORT_DISABLE_FUNC;
typedef GT_STATUS (*)(void) CPSS_EXTDRV_ETH_PORT_ENABLE_FUNC;
typedef GT_STATUS (*)(CPSS_EXTDRV_ETH_PORT_RX_FUNC) CPSS_EXTDRV_ETH_PORT_INPUT_HOOK_ADD_FUNC;
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32 *, GT_U32, GT_U32) CPSS_EXTDRV_ETH_PORT_RX_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U8_PTR, GT_U32, GT_U32 *, GT_U32, GT_U32 *, GT_U32) CPSS_EXTDRV_ETH_PORT_RX_INIT_FUNC;
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32, GT_U32) CPSS_EXTDRV_ETH_PORT_RX_PACKET_FREE_FUNC;
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32) CPSS_EXTDRV_ETH_PORT_TX_COMPLETE_FUNC;
typedef GT_STATUS (*)(CPSS_EXTDRV_ETH_PORT_TX_COMPLETE_FUNC) CPSS_EXTDRV_ETH_PORT_TX_COMPLETE_HOOK_ADD_FUNC;
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32 *, GT_U32, GT_U32) CPSS_EXTDRV_ETH_PORT_TX_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_EXTDRV_ETH_PORT_TX_INIT_FUNC;
typedef GT_STATUS (*)(CPSS_EXTDRV_ETH_TX_MODE_ENT) CPSS_EXTDRV_ETH_PORT_TX_MODE_SET_FUNC;
typedef GT_BOOL (*)(void) CPSS_EXTDRV_ETH_RAW_SOCKET_MODE_GET_FUNC;
typedef GT_STATUS (*)(GT_BOOL) CPSS_EXTDRV_ETH_RAW_SOCKET_MODE_SET_FUNC;
typedef GT_STATUS (*)(GT_U8_PTR, GT_U32, GT_U32) CPSS_EXTDRV_ETH_RAW_SOCKET_RX_FUNC;
typedef GT_STATUS (*)(CPSS_EXTDRV_ETH_RAW_SOCKET_RX_FUNC) CPSS_EXTDRV_ETH_RAW_SOCKET_RX_HOOK_ADD_FUNC;
typedef enum {CPSS_EXTDRV_ETH_TX_MODE_ASYNC_E, CPSS_EXTDRV_ETH_TX_MODE_SYNC_E} CPSS_EXTDRV_ETH_TX_MODE_ENT;
typedef GT_BOOL (*)(GT_U32) CPSS_EXTDRV_LINUX_MODE_GET_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_LINUX_MODE_SET_FUNC;
typedef struct {
    CPSS_EXTDRV_ETH_PORT_RX_INIT_FUNC extDrvEthPortRxInitFunc;
    CPSS_EXTDRV_ETH_RAW_SOCKET_MODE_SET_FUNC extDrvEthRawSocketModeSetFunc;
    CPSS_EXTDRV_ETH_RAW_SOCKET_MODE_GET_FUNC extDrvEthRawSocketModeGetFunc;
    CPSS_EXTDRV_LINUX_MODE_SET_FUNC extDrvLinuxModeSetFunc;
    CPSS_EXTDRV_LINUX_MODE_GET_FUNC extDrvLinuxModeGetFunc;
    CPSS_EXTDRV_ETH_PORT_TX_INIT_FUNC extDrvEthPortTxInitFunc;
    CPSS_EXTDRV_ETH_PORT_ENABLE_FUNC extDrvEthPortEnableFunc;
    CPSS_EXTDRV_ETH_PORT_DISABLE_FUNC extDrvEthPortDisableFunc;
    CPSS_EXTDRV_ETH_PORT_TX_FUNC extDrvEthPortTxFunc;
    CPSS_EXTDRV_ETH_PORT_INPUT_HOOK_ADD_FUNC extDrvEthPortInputHookAddFunc;
    CPSS_EXTDRV_ETH_RAW_SOCKET_RX_HOOK_ADD_FUNC extDrvEthRawSocketRxHookAddFunc;
    CPSS_EXTDRV_ETH_PORT_TX_COMPLETE_HOOK_ADD_FUNC extDrvEthPortTxCompleteHookAddFunc;
    CPSS_EXTDRV_ETH_PORT_RX_PACKET_FREE_FUNC extDrvEthPortRxPacketFreeFunc;
    CPSS_EXTDRV_ETH_PORT_TX_MODE_SET_FUNC extDrvEthPortTxModeSetFunc;
    CPSS_EXTDRV_ETH_CPU_CODE_TO_QUEUE extDrvEthCpuCodeToQueueFunc;
    CPSS_EXTDRV_ETH_CPU_PREPEND_TWO_BYTES_FUNC extDrvEthPrePendTwoBytesHeaderSetFunc;
} CPSS_EXT_DRV_ETH_PORT_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssHsuDrv.h:
typedef GT_STATUS (*)(void) CPSS_EXTDRV_HSU_INBOUND_SDMA_DISABLE_FUNC;
typedef GT_STATUS (*)(void) CPSS_EXTDRV_HSU_INBOUND_SDMA_ENABLE_FUNC;
typedef GT_STATUS (*)(GT_BOOL *) CPSS_EXTDRV_HSU_INBOUND_SDMA_STATE_GET_FUNC;
typedef GT_STATUS (*)(GT_U32 **) CPSS_EXTDRV_HSU_MEM_BASE_ADDR_GET_FUNC;
typedef void (*)(void) CPSS_EXTDRV_HSU_WARM_RESTART_FUNC;
typedef struct {
    CPSS_EXTDRV_HSU_MEM_BASE_ADDR_GET_FUNC extDrvHsuMemBaseAddrGetFunc;
    CPSS_EXTDRV_HSU_WARM_RESTART_FUNC extDrvHsuWarmRestartFunc;
    CPSS_EXTDRV_HSU_INBOUND_SDMA_ENABLE_FUNC extDrvHsuInboundSdmaEnableFunc;
    CPSS_EXTDRV_HSU_INBOUND_SDMA_DISABLE_FUNC extDrvHsuInboundSdmaDisableFunc;
    CPSS_EXTDRV_HSU_INBOUND_SDMA_STATE_GET_FUNC extDrvHsuInboundSdmaStateGetFunc;
} CPSS_EXT_DRV_HSU_DRV_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssIntDrv.h:
typedef GT_STATUS (*)(GT_U32, GT_VOIDFUNCPTR, GT_U32) CPSS_EXTDRV_INT_CONNECT_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_EXTDRV_INT_DISABLE_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_EXTDRV_INT_DISCONNECT_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_EXTDRV_INT_ENABLE_FUNC;
typedef GT_32 (*)(CPSS_OS_INTR_MODE_ENT, GT_32 *) CPSS_EXTDRV_INT_LOCK_MODE_SET_FUNC;
typedef struct {
    CPSS_EXTDRV_INT_CONNECT_FUNC extDrvIntConnectFunc;
    CPSS_EXTDRV_INT_DISCONNECT_FUNC extDrvIntDisconnectFunc;
    CPSS_EXTDRV_INT_ENABLE_FUNC extDrvIntEnableFunc;
    CPSS_EXTDRV_INT_DISABLE_FUNC extDrvIntDisableFunc;
    CPSS_EXTDRV_INT_LOCK_MODE_SET_FUNC extDrvIntLockModeSetFunc;
} CPSS_EXT_DRV_INT_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssMgmtHwIfDrv.h:
typedef union {
    GT_U8 devNum;
    GT_U16 i2cBaseAddr;
} CPSS_EXTDRV_DEV_ID_UNT;
typedef GT_STATUS (*)(void) CPSS_EXTDRV_I2C_MGMT_MASTER_INIT_FUNC;
typedef enum {CPSS_EXTDRV_MGMT_VIA_PP_E, CPSS_EXTDRV_MGMT_I2C_E} CPSS_EXTDRV_MGMT_IF_TYPE_ENT;
typedef GT_32 (*)(CPSS_EXTDRV_MGMT_IF_TYPE_ENT, CPSS_EXTDRV_DEV_ID_UNT, GT_U32, GT_U32 *) CPSS_EXTDRV_MGMT_ISR_READ_REGISTER_FUNC;
typedef GT_32 (*)(CPSS_EXTDRV_MGMT_IF_TYPE_ENT, CPSS_EXTDRV_DEV_ID_UNT, GT_U32, GT_U32) CPSS_EXTDRV_MGMT_ISR_WRITE_REGISTER_FUNC;
typedef GT_STATUS (*)(CPSS_EXTDRV_MGMT_IF_TYPE_ENT, CPSS_EXTDRV_DEV_ID_UNT, GT_U32, GT_U32 *) CPSS_EXTDRV_MGMT_READ_REGISTER_FUNC;
typedef GT_STATUS (*)(CPSS_EXTDRV_MGMT_IF_TYPE_ENT, CPSS_EXTDRV_DEV_ID_UNT, GT_U32, GT_U32) CPSS_EXTDRV_MGMT_WRITE_REGISTER_FUNC;
typedef struct {
    CPSS_EXTDRV_I2C_MGMT_MASTER_INIT_FUNC extDrvI2cMgmtMasterInitFunc;
    CPSS_EXTDRV_MGMT_READ_REGISTER_FUNC extDrvMgmtReadRegisterFunc;
    CPSS_EXTDRV_MGMT_WRITE_REGISTER_FUNC extDrvMgmtWriteRegisterFunc;
    CPSS_EXTDRV_MGMT_ISR_READ_REGISTER_FUNC extDrvMgmtIsrReadRegisterFunc;
    CPSS_EXTDRV_MGMT_ISR_WRITE_REGISTER_FUNC extDrvMgmtIsrWriteRegisterFunc;
} CPSS_EXT_DRV_MGMT_HW_IF_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssPciDrv.h:
typedef GT_STATUS (*)(CPSS_EXTDRV_PCI_INT_ENT, GT_UINTPTR *) CPSS_EXTDRV_INT_MASK_GET_FUNC;
typedef GT_STATUS (*)(GT_BOOL, GT_BOOL) CPSS_EXTDRV_PCI_COMBINED_ACCESS_ENABLE_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *) CPSS_EXTDRV_PCI_CONFIG_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_PCI_CONFIG_WRITE_REG_FUNC;
typedef GT_STATUS (*)(GT_U16, GT_U16, GT_U32, GT_U32 *, GT_U32 *, GT_U32 *) CPSS_EXTDRV_PCI_DEV_FIND_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U64 *) CPSS_EXTDRV_PCI_DOUBLE_READ_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_PCI_DOUBLE_WRITE_FUNC;
typedef enum {CPSS_EXTDRV_PCI_INT_A_E = 1, CPSS_EXTDRV_GT_PCI_INT_B_E, CPSS_EXTDRV_GT_PCI_INT_C_E, CPSS_EXTDRV_GT_PCI_INT_D_E} CPSS_EXTDRV_PCI_INT_ENT;
typedef GT_STATUS (*)(CPSS_EXTDRV_PCI_INT_ENT, void **) CPSS_EXTDRV_PCI_INT_VEC_GET_FUNC;
typedef GT_STATUS (*)(GT_U16) CPSS_EXTDRV_PCI_SET_DEV_ID_FUNC;
typedef struct {
    CPSS_EXTDRV_PCI_CONFIG_WRITE_REG_FUNC extDrvPciConfigWriteRegFunc;
    CPSS_EXTDRV_PCI_CONFIG_READ_REG_FUNC extDrvPciConfigReadRegFunc;
    CPSS_EXTDRV_PCI_DEV_FIND_FUNC extDrvPciDevFindFunc;
    CPSS_EXTDRV_PCI_INT_VEC_GET_FUNC extDrvPciIntVecFunc;
    CPSS_EXTDRV_INT_MASK_GET_FUNC extDrvPciIntMaskFunc;
    CPSS_EXTDRV_PCI_COMBINED_ACCESS_ENABLE_FUNC extDrvPciCombinedAccessEnableFunc;
    CPSS_EXTDRV_PCI_DOUBLE_WRITE_FUNC extDrvPciDoubleWriteFunc;
    CPSS_EXTDRV_PCI_DOUBLE_READ_FUNC extDrvPciDoubleReadFunc;
    CPSS_EXTDRV_PCI_SET_DEV_ID_FUNC extDrvPciSetDevIdFunc;
} CPSS_EXT_DRV_PCI_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssSmiHwCtrl.h:
typedef GT_STATUS (*)(GT_U16 *, GT_U16 *, GT_U32) CPSS_EXTDRV_HW_IF_SMI_DEV_VENDOR_ID_GET_FUNC;
typedef GT_STATUS (*)(void) CPSS_EXTDRV_HW_IF_SMI_INIT_DRIVER_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32 *) CPSS_EXTDRV_HW_IF_SMI_INTERRUPT_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_HW_IF_SMI_INTERRUPT_WRITE_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32 *) CPSS_EXTDRV_HW_IF_SMI_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32 *) CPSS_EXTDRV_HW_IF_SMI_TASK_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32 *, GT_U32) CPSS_EXTDRV_HW_IF_SMI_TASK_REG_RAM_READ_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32 *, GT_U32) CPSS_EXTDRV_HW_IF_SMI_TASK_REG_RAM_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32 *, GT_U32 *, GT_U32) CPSS_EXTDRV_HW_IF_SMI_TASK_REG_VEC_READ_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32 *, GT_U32 *, GT_U32) CPSS_EXTDRV_HW_IF_SMI_TASK_REG_VEC_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_HW_IF_SMI_TASK_WRITE_REG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_HW_IF_SMI_TASK_WRITE_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_HW_IF_SMI_WRITE_REG_FUNC;
typedef struct {
    CPSS_EXTDRV_HW_IF_SMI_INIT_DRIVER_FUNC extDrvHwIfSmiInitDriverFunc;
    CPSS_EXTDRV_HW_IF_SMI_WRITE_REG_FUNC extDrvHwIfSmiWriteRegFunc;
    CPSS_EXTDRV_HW_IF_SMI_READ_REG_FUNC extDrvHwIfSmiReadRegFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_RAM_READ_FUNC extDrvHwIfSmiTaskRegRamReadFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_RAM_WRITE_FUNC extDrvHwIfSmiTaskRegRamWriteFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_VEC_READ_FUNC extDrvHwIfSmiTaskRegVecReadFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_REG_VEC_WRITE_FUNC extDrvHwIfSmiTaskRegVecWriteFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_WRITE_REG_FUNC extDrvHwIfSmiTaskWriteRegFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_READ_REG_FUNC extDrvHwIfSmiTaskReadRegFunc;
    CPSS_EXTDRV_HW_IF_SMI_INTERRUPT_READ_REG_FUNC extDrvHwIfSmiIntReadRegFunc;
    CPSS_EXTDRV_HW_IF_SMI_INTERRUPT_WRITE_REG_FUNC extDrvHwIfSmiIntWriteRegFunc;
    CPSS_EXTDRV_HW_IF_SMI_DEV_VENDOR_ID_GET_FUNC extDrvHwIfSmiDevVendorIdGetFunc;
    CPSS_EXTDRV_HW_IF_SMI_TASK_WRITE_REG_FIELD_FUNC extDrvHwIfSmiTaskWriteFieldFunc;
} CPSS_EXT_DRV_HW_IF_SMI_STC;

File common/h/cpss/extServices/extDrv/drivers/cpssTwsiHwCtrl.h:
typedef GT_STATUS (*)(void) CPSS_EXTDRV_HW_IF_TWSI_INIT_DRIVER_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32 *) CPSS_EXTDRV_HW_IF_TWSI_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32) CPSS_EXTDRV_HW_IF_TWSI_WRITE_REG_FUNC;
typedef struct {
    CPSS_EXTDRV_HW_IF_TWSI_INIT_DRIVER_FUNC extDrvHwIfTwsiInitDriverFunc;
    CPSS_EXTDRV_HW_IF_TWSI_WRITE_REG_FUNC extDrvHwIfTwsiWriteRegFunc;
    CPSS_EXTDRV_HW_IF_TWSI_READ_REG_FUNC extDrvHwIfTwsiReadRegFunc;
} CPSS_EXT_DRV_HW_IF_TWSI_STC;

File common/h/cpss/extServices/os/gtOs/cpssOsInet.h:
typedef struct {
    CPSS_OS_INET_NTOHL_FUNC osInetNtohlFunc;
    CPSS_OS_INET_HTONL_FUNC osInetHtonlFunc;
    CPSS_OS_INET_NTOHS_FUNC osInetNtohsFunc;
    CPSS_OS_INET_HTONS_FUNC osInetHtonsFunc;
    CPSS_OS_INET_NTOA_FUNC osInetNtoaFunc;
} CPSS_OS_INET_BIND_STC;
typedef GT_U32 (*)(GT_U32) CPSS_OS_INET_HTONL_FUNC;
typedef GT_U16 (*)(GT_U16) CPSS_OS_INET_HTONS_FUNC;
typedef void (*)(GT_U32, GT_U8 *) CPSS_OS_INET_NTOA_FUNC;
typedef GT_U32 (*)(GT_U32) CPSS_OS_INET_NTOHL_FUNC;
typedef GT_U16 (*)(GT_U16) CPSS_OS_INET_NTOHS_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsIntr.h:
typedef enum {CPSS_OS_INTR_MODE_LOCK_E, CPSS_OS_INTR_MODE_UNLOCK_E} CPSS_OS_INTR_MODE_ENT;
typedef struct {
    CPSS_OS_INT_ENABLE_FUNC osIntEnableFunc;
    CPSS_OS_INT_DISABLE_FUNC osIntDisableFunc;
    CPSS_OS_INT_MODE_SET_FUNC osIntModeSetFunc;
    CPSS_OS_INT_CONNECT_FUNC osIntConnectFunc;
    CPSS_OS_INT_DISCONNECT_FUNC osIntDisconnectFunc;
} CPSS_OS_INT_BIND_STC;
typedef GT_STATUS (*)(GT_U32, GT_VOIDFUNCPTR, GT_U32) CPSS_OS_INT_CONNECT_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_OS_INT_DISABLE_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_OS_INT_DISCONNECT_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_OS_INT_ENABLE_FUNC;
typedef GT_32 (*)(CPSS_OS_INTR_MODE_ENT, GT_32 *) CPSS_OS_INT_MODE_SET_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsIo.h:
typedef int (*)(void *, const char *, int) CPSS_OS_BIND_STDOUT_FUNC_PTR;
typedef void (*)(CPSS_OS_FATAL_ERROR_TYPE, char *) CPSS_OS_FATAL_ERROR_FUNC;
typedef enum {CPSS_OS_FATAL_RESET, CPSS_OS_FATAL_MONITOR, CPSS_OS_FATAL_WARNING} CPSS_OS_FATAL_ERROR_TYPE;
typedef struct {
    CPSS_OS_IO_BIND_STDOUT_FUNC osIoBindStdOutFunc;
    CPSS_OS_IO_PRINTF_FUNC osIoPrintfFunc;
    CPSS_OS_IO_VPRINTF_FUNC osIoVprintfFunc;
    CPSS_OS_IO_SPRINTF_FUNC osIoSprintfFunc;
    CPSS_OS_IO_VSPRINTF_FUNC osIoVsprintfFunc;
    CPSS_OS_IO_SNPRINTF_FUNC osIoSnprintfFunc;
    CPSS_OS_IO_VSNPRINTF_FUNC osIoVsnprintfFunc;
    CPSS_OS_IO_PRINT_SYNC_FUNC osIoPrintSynchFunc;
    CPSS_OS_IO_GETS_FUNC osIoGetsFunc;
    CPSS_OS_IO_F_LAST_ERROR_STR_FUNC osIoFlastErrorStrFunc;
    CPSS_OS_IO_FOPEN_FUNC osIoFopenFunc;
    CPSS_OS_IO_FCLOSE_FUNC osIoFcloseFunc;
    CPSS_OS_IO_REWIND_FUNC osIoRewindFunc;
    CPSS_OS_IO_FPRINTF_FUNC osIoFprintfFunc;
    CPSS_OS_IO_FGETS_FUNC osIoFgets;
    CPSS_OS_IO_FWRITE_FUNC osIoFwriteFunc;
    CPSS_OS_IO_FREAD_FUNC osIoFreadFunc;
    CPSS_OS_IO_FGET_LENGTH_FUNC osIoFgetLengthFunc;
    CPSS_OS_FATAL_ERROR_FUNC osIoFatalErrorFunc;
} CPSS_OS_IO_BIND_STC;
typedef GT_STATUS (*)(CPSS_OS_BIND_STDOUT_FUNC_PTR, void *) CPSS_OS_IO_BIND_STDOUT_FUNC;
typedef int (*)(CPSS_OS_FILE_TYPE_STC *) CPSS_OS_IO_FCLOSE_FUNC;
typedef char *(*)(char *, int, CPSS_OS_FILE) CPSS_OS_IO_FGETS_FUNC;
typedef GT_UINTPTR (*)(CPSS_OS_FILE) CPSS_OS_IO_FGET_LENGTH_FUNC;
typedef CPSS_OS_FILE (*)(const char *, const char *, CPSS_OS_FILE_TYPE_STC *) CPSS_OS_IO_FOPEN_FUNC;
typedef int (*)(CPSS_OS_FILE, const char *, ...) CPSS_OS_IO_FPRINTF_FUNC;
typedef int (*)(void *, int, int, CPSS_OS_FILE_TYPE_STC *) CPSS_OS_IO_FREAD_FUNC;
typedef int (*)(const void *, int, int, CPSS_OS_FILE_TYPE_STC *) CPSS_OS_IO_FWRITE_FUNC;
typedef const char *(*)(void) CPSS_OS_IO_F_LAST_ERROR_STR_FUNC;
typedef char *(*)(char *) CPSS_OS_IO_GETS_FUNC;
typedef int (*)(const char *, ...) CPSS_OS_IO_PRINTF_FUNC;
typedef int (*)(const char *, ...) CPSS_OS_IO_PRINT_SYNC_FUNC;
typedef void (*)(CPSS_OS_FILE) CPSS_OS_IO_REWIND_FUNC;
typedef int (*)(char *, int, const char *, ...) CPSS_OS_IO_SNPRINTF_FUNC;
typedef int (*)(char *, const char *, ...) CPSS_OS_IO_SPRINTF_FUNC;
typedef int (*)(const char *, struct __va_list_tag *) CPSS_OS_IO_VPRINTF_FUNC;
typedef int (*)(char *, int, const char *, struct __va_list_tag *) CPSS_OS_IO_VSNPRINTF_FUNC;
typedef int (*)(char *, const char *, struct __va_list_tag *) CPSS_OS_IO_VSPRINTF_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsLog.h:
typedef struct {
    CPSS_OS_LOG_FUNC osLogFunc;
} CPSS_OS_LOG_BIND_STC;
typedef void (*)(CPSS_LOG_LIB_ENT, CPSS_LOG_TYPE_ENT, const char *, ...) CPSS_OS_LOG_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsMem.h:
typedef void (*)(GT_CHAR *, GT_U32) CPSS_OS_BZERO_FUNC;
typedef GT_STATUS (*)(void *) CPSS_OS_CACHE_DMA_FREE_FUNC;
typedef void *(*)(GT_U32) CPSS_OS_CACHE_DMA_MALLOC_FUNC;
typedef void (*)(void * const) CPSS_OS_FREE_FUNC;
typedef void *(*)(GT_U32) CPSS_OS_MALLOC_FUNC;
typedef struct {
    CPSS_OS_BZERO_FUNC osMemBzeroFunc;
    CPSS_OS_MEM_SET_FUNC osMemSetFunc;
    CPSS_OS_MEM_CPY_FUNC osMemCpyFunc;
    CPSS_OS_MEM_MOVE_FUNC osMemMoveFunc;
    CPSS_OS_MEM_CMP_FUNC osMemCmpFunc;
    CPSS_OS_STATIC_MALLOC_FUNC osMemStaticMallocFunc;
    CPSS_OS_MALLOC_FUNC osMemMallocFunc;
    CPSS_OS_REALLOC_FUNC osMemReallocFunc;
    CPSS_OS_FREE_FUNC osMemFreeFunc;
    CPSS_OS_CACHE_DMA_MALLOC_FUNC osMemCacheDmaMallocFunc;
    CPSS_OS_CACHE_DMA_FREE_FUNC osMemCacheDmaFreeFunc;
    CPSS_OS_PHY_TO_VIRT_FUNC osMemPhyToVirtFunc;
    CPSS_OS_VIRT_TO_PHY_FUNC osMemVirtToPhyFunc;
    CPSS_OS_MEM_GLOBAL_DB_SHMEM_INIT osMemGlobalDbShmemInit;
    CPSS_OS_MEM_GLOBAL_DB_SHMEM_UNLINK osMemGlobalDbShmemUnlink;
} CPSS_OS_MEM_BIND_STC;
typedef GT_32 (*)(const void *, const void *, GT_U32) CPSS_OS_MEM_CMP_FUNC;
typedef void *(*)(void *, const void *, GT_U32) CPSS_OS_MEM_CPY_FUNC;
typedef GT_STATUS (*)(unsigned int, GT_CHAR_PTR, GT_BOOL *, void **) CPSS_OS_MEM_GLOBAL_DB_SHMEM_INIT;
typedef GT_STATUS (*)(GT_CHAR_PTR) CPSS_OS_MEM_GLOBAL_DB_SHMEM_UNLINK;
typedef void *(*)(void *, const void *, GT_U32) CPSS_OS_MEM_MOVE_FUNC;
typedef void *(*)(void *, int, GT_U32) CPSS_OS_MEM_SET_FUNC;
typedef GT_STATUS (*)(GT_UINTPTR, GT_UINTPTR *) CPSS_OS_PHY_TO_VIRT_FUNC;
typedef void *(*)(void *, GT_U32) CPSS_OS_REALLOC_FUNC;
typedef void *(*)(GT_U32) CPSS_OS_STATIC_MALLOC_FUNC;
typedef GT_STATUS (*)(GT_UINTPTR, GT_UINTPTR *) CPSS_OS_VIRT_TO_PHY_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsMsgQ.h:
typedef struct {
    CPSS_OS_MSGQ_CREATE_FUNC osMsgQCreateFunc;
    CPSS_OS_MSGQ_DELETE_FUNC osMsgQDeleteFunc;
    CPSS_OS_MSGQ_SEND_FUNC osMsgQSendFunc;
    CPSS_OS_MSGQ_RECV_FUNC osMsgQRecvFunc;
    CPSS_OS_MSGQ_NUM_MSGS_FUNC osMsgQNumMsgsFunc;
} CPSS_OS_MSGQ_BIND_STC;
typedef GT_STATUS (*)(const char *, GT_U32, GT_U32, CPSS_OS_MSGQ_ID *) CPSS_OS_MSGQ_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_OS_MSGQ_ID) CPSS_OS_MSGQ_DELETE_FUNC;
typedef unsigned long CPSS_OS_MSGQ_ID;
typedef GT_STATUS (*)(CPSS_OS_MSGQ_ID, GT_U32 *) CPSS_OS_MSGQ_NUM_MSGS_FUNC;
typedef GT_STATUS (*)(CPSS_OS_MSGQ_ID, GT_PTR, GT_U32 *, GT_U32) CPSS_OS_MSGQ_RECV_FUNC;
typedef GT_STATUS (*)(CPSS_OS_MSGQ_ID, GT_PTR, GT_U32, GT_U32) CPSS_OS_MSGQ_SEND_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsRand.h:
typedef struct {
    CPSS_OS_RAND_FUNC osRandFunc;
    CPSS_OS_SRAND_FUNC osSrandFunc;
} CPSS_OS_RAND_BIND_STC;
typedef GT_32 (*)(void) CPSS_OS_RAND_FUNC;
typedef void (*)(GT_U32) CPSS_OS_SRAND_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsSem.h:
typedef unsigned long CPSS_OS_MUTEX;
typedef GT_STATUS (*)(const char *, CPSS_OS_MUTEX *) CPSS_OS_MUTEX_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_OS_MUTEX) CPSS_OS_MUTEX_DELETE_FUNC;
typedef GT_STATUS (*)(CPSS_OS_MUTEX) CPSS_OS_MUTEX_LOCK_FUNC;
typedef GT_STATUS (*)(CPSS_OS_MUTEX) CPSS_OS_MUTEX_UNLOCK_FUNC;
typedef GT_STATUS (*)(CPSS_OS_SIG_SEM) CPSS_OS_NAMED_SEM_CLOSE_FUNC;
typedef GT_STATUS (*)(const GT_CHAR_PTR, CPSS_OS_SIG_SEM *) CPSS_OS_NAMED_SEM_OPEN_FUNC;
typedef GT_STATUS (*)(CPSS_OS_SIG_SEM) CPSS_OS_NAMED_SEM_POST_FUNC;
typedef GT_STATUS (*)(GT_CHAR_PTR) CPSS_OS_NAMED_SEM_UNLINK_FUNC;
typedef GT_STATUS (*)(CPSS_OS_SIG_SEM) CPSS_OS_NAMED_SEM_WAIT_FUNC;
typedef enum {CPSS_OS_SEMB_EMPTY_E, CPSS_OS_SEMB_FULL_E} CPSS_OS_SEMB_STATE_ENT;
typedef struct {
    CPSS_OS_MUTEX_CREATE_FUNC osMutexCreateFunc;
    CPSS_OS_MUTEX_DELETE_FUNC osMutexDeleteFunc;
    CPSS_OS_MUTEX_LOCK_FUNC osMutexLockFunc;
    CPSS_OS_MUTEX_UNLOCK_FUNC osMutexUnlockFunc;
    CPSS_OS_SIG_SEM_BIN_CREATE_FUNC osSigSemBinCreateFunc;
    CPSS_OS_SIG_SEM_M_CREATE_FUNC osSigSemMCreateFunc;
    CPSS_OS_SIG_SEM_C_CREATE_FUNC osSigSemCCreateFunc;
    CPSS_OS_SIG_SEM_DELETE_FUNC osSigSemDeleteFunc;
    CPSS_OS_SIG_SEM_WAIT_FUNC osSigSemWaitFunc;
    CPSS_OS_SIG_SEM_SIGNAL_FUNC osSigSemSignalFunc;
    CPSS_OS_NAMED_SEM_OPEN_FUNC osNamedSemOpen;
    CPSS_OS_NAMED_SEM_WAIT_FUNC osNamedSemWait;
    CPSS_OS_NAMED_SEM_POST_FUNC osNamedSemPost;
    CPSS_OS_NAMED_SEM_CLOSE_FUNC osNamedSemClose;
    CPSS_OS_NAMED_SEM_UNLINK_FUNC osNamedSemUnlink;
} CPSS_OS_SEM_BIND_STC;
typedef unsigned long CPSS_OS_SIG_SEM;
typedef GT_STATUS (*)(const char *, CPSS_OS_SEMB_STATE_ENT, CPSS_OS_SIG_SEM *) CPSS_OS_SIG_SEM_BIN_CREATE_FUNC;
typedef GT_STATUS (*)(const char *, GT_U32, CPSS_OS_SIG_SEM *) CPSS_OS_SIG_SEM_C_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_OS_SIG_SEM) CPSS_OS_SIG_SEM_DELETE_FUNC;
typedef GT_STATUS (*)(const char *, CPSS_OS_SIG_SEM *) CPSS_OS_SIG_SEM_M_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_OS_SIG_SEM) CPSS_OS_SIG_SEM_SIGNAL_FUNC;
typedef GT_STATUS (*)(CPSS_OS_SIG_SEM, GT_U32) CPSS_OS_SIG_SEM_WAIT_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsStdLib.h:
typedef int (*)(const void *, const void *) CPSS_OS_COMPARE_ITEMS_FUNC_PTR;
typedef struct {
    CPSS_OS_STDLIB_QSORT_FUNC osQsortFunc;
    CPSS_OS_STDLIB_BSEARCH_FUNC osBsearchFunc;
} CPSS_OS_STDLIB_BIND_STC;
typedef GT_STATUS (*)(const void *, const void *, GT_U32, GT_U32, CPSS_OS_COMPARE_ITEMS_FUNC_PTR, GT_VOID_PTR *) CPSS_OS_STDLIB_BSEARCH_FUNC;
typedef GT_STATUS (*)(void *, GT_U32, GT_U32, CPSS_OS_COMPARE_ITEMS_FUNC_PTR) CPSS_OS_STDLIB_QSORT_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsStr.h:
typedef struct {
    CPSS_OS_STR_LEN_FUNC osStrlenFunc;
    CPSS_OS_STR_CPY_FUNC osStrCpyFunc;
    CPSS_OS_STR_N_CPY_FUNC osStrNCpyFunc;
    CPSS_OS_STR_CHR_FUNC osStrChrFunc;
    CPSS_OS_STR_STR_FUNC osStrStrFunc;
    CPSS_OS_STR_REV_CHR_FUNC osStrRevChrFunc;
    CPSS_OS_STR_CMP_FUNC osStrCmpFunc;
    CPSS_OS_STR_N_CMP_FUNC osStrNCmpFunc;
    CPSS_OS_STR_CAT_FUNC osStrCatFunc;
    CPSS_OS_STR_N_CAT_FUNC osStrStrNCatFunc;
    CPSS_OS_TO_UPPER_FUNC osStrChrToUpperFunc;
    CPSS_OS_STR_TO_32_FUNC osStrTo32Func;
    CPSS_OS_STR_TO_U32_FUNC osStrToU32Func;
    CPSS_OS_STR_TOL_FUNC osStrTolFunc;
} CPSS_OS_STR_BIND_STC;
typedef GT_CHAR *(*)(GT_CHAR *, const GT_CHAR *) CPSS_OS_STR_CAT_FUNC;
typedef GT_CHAR *(*)(const GT_CHAR *, GT_32) CPSS_OS_STR_CHR_FUNC;
typedef GT_32 (*)(const GT_CHAR *, const GT_CHAR *) CPSS_OS_STR_CMP_FUNC;
typedef GT_CHAR *(*)(GT_CHAR *, const GT_CHAR *) CPSS_OS_STR_CPY_FUNC;
typedef GT_U32 (*)(const void *) CPSS_OS_STR_LEN_FUNC;
typedef GT_CHAR *(*)(GT_CHAR *, const GT_CHAR *, GT_U32) CPSS_OS_STR_N_CAT_FUNC;
typedef GT_32 (*)(const GT_CHAR *, const GT_CHAR *, GT_U32) CPSS_OS_STR_N_CMP_FUNC;
typedef GT_CHAR *(*)(GT_CHAR *, const GT_CHAR *, GT_U32) CPSS_OS_STR_N_CPY_FUNC;
typedef GT_CHAR *(*)(const GT_CHAR *, GT_32) CPSS_OS_STR_REV_CHR_FUNC;
typedef GT_CHAR *(*)(const GT_CHAR *, const GT_CHAR *) CPSS_OS_STR_STR_FUNC;
typedef GT_32 (*)(const GT_CHAR *, GT_CHAR **, GT_32) CPSS_OS_STR_TOL_FUNC;
typedef GT_32 (*)(const GT_CHAR *) CPSS_OS_STR_TO_32_FUNC;
typedef GT_U32 (*)(const GT_CHAR *, GT_CHAR **, GT_32) CPSS_OS_STR_TO_U32_FUNC;
typedef GT_32 (*)(const GT_32) CPSS_OS_TO_UPPER_FUNC;

File common/h/cpss/extServices/os/gtOs/cpssOsTask.h:
typedef GT_STATUS (*)(void (*)(void)) CPSS_OS_TASK_AT_PROC_EXIT_FUNC;
typedef struct {
    CPSS_OS_TASK_CREATE_FUNC osTaskCreateFunc;
    CPSS_OS_TASK_DELETE_FUNC osTaskDeleteFunc;
    CPSS_OS_TASK_GET_SELF_FUNC osTaskGetSelfFunc;
    CPSS_OS_TASK_LOCK_FUNC osTaskLockFunc;
    CPSS_OS_TASK_UNLOCK_FUNC osTaskUnLockFunc;
    CPSS_OS_TASK_GET_PID_FUNC osTaskGetPid;
    CPSS_OS_TASK_AT_PROC_EXIT_FUNC osTaskAtProcExit;
} CPSS_OS_TASK_BIND_STC;
typedef GT_STATUS (*)(const GT_CHAR *, GT_U32, GT_U32, unsigned int (*)(void *), void *, CPSS_TASK *) CPSS_OS_TASK_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_TASK) CPSS_OS_TASK_DELETE_FUNC;
typedef GT_U32 (*)(void) CPSS_OS_TASK_GET_PID_FUNC;
typedef GT_STATUS (*)(GT_U32 *) CPSS_OS_TASK_GET_SELF_FUNC;
typedef GT_STATUS (*)(void) CPSS_OS_TASK_LOCK_FUNC;
typedef GT_STATUS (*)(void) CPSS_OS_TASK_UNLOCK_FUNC;
typedef unsigned int CPSS_TASK;

File common/h/cpss/extServices/os/gtOs/cpssOsTimer.h:
typedef GT_STATUS (*)(GT_U32) CPSS_OS_DELAY_FUNC;
typedef GT_STATUS (*)(GT_U32 *) CPSS_OS_GET_SYS_CLOCK_RATE_FUNC;
typedef GT_U32 (*)(char *, GT_U32, const char *, GT_U32) CPSS_OS_STRF_TIME_FUNC;
typedef struct {
    CPSS_OS_TIME_WK_AFTER_FUNC osTimeWkAfterFunc;
    CPSS_OS_TIME_TICK_GET_FUNC osTimeTickGetFunc;
    CPSS_OS_TIME_GET_FUNC osTimeGetFunc;
    CPSS_OS_TIME_RT_FUNC osTimeRTFunc;
    CPSS_OS_GET_SYS_CLOCK_RATE_FUNC osGetSysClockRateFunc;
    CPSS_OS_DELAY_FUNC osDelayFunc;
    CPSS_OS_STRF_TIME_FUNC osStrftimeFunc;
} CPSS_OS_TIME_BIND_STC;
typedef GT_U32 (*)(void) CPSS_OS_TIME_GET_FUNC;
typedef GT_STATUS (*)(GT_U32 *, GT_U32 *) CPSS_OS_TIME_RT_FUNC;
typedef GT_U32 (*)(void) CPSS_OS_TIME_TICK_GET_FUNC;
typedef GT_STATUS (*)(GT_U32) CPSS_OS_TIME_WK_AFTER_FUNC;

File common/h/cpss/extServices/os/gtOs/gtEnvDep.h:
typedef short GT_16;
typedef int GT_32;
typedef signed char GT_8;
typedef enum {GT_FALSE, GT_TRUE} GT_BOOL;
typedef char GT_CHAR;
typedef char * GT_CHAR_PTR;
typedef float GT_FLOAT32;
typedef double GT_FLOAT64;
typedef void * GT_PTR;
typedef unsigned long GT_SIZE_T;
typedef long GT_SSIZE_T;
typedef unsigned short GT_U16;
typedef unsigned int GT_U32;
typedef uint32_t * GT_U32_PTR;
typedef struct {
    GT_U32 l[2];
} GT_U64;
typedef unsigned long long GT_U64_BIT;
typedef unsigned char GT_U8;
typedef uint8_t * GT_U8_PTR;
typedef unsigned long GT_UINTPTR;
typedef unsigned long GT_UL64;
typedef void * GT_VOID_PTR;

File common/h/cpss/extServices/os/gtOs/gtGenTypes.h:
typedef unsigned long CPSS_OS_FILE;
struct CPSS_OS_FILE_TYPE_STC;
typedef enum {GT_EQUAL, GT_GREATER, GT_SMALLER} GT_COMP_RES;
typedef unsigned int (*)() GT_INTFUNCPTR;
typedef void (*)(void * const) GT_MEMFREEFUNCPTR;
typedef unsigned int GT_STATUS;
typedef void (*)() GT_VOIDFUNCPTR;
typedef void (*)(int) GT_VOIDINTFUNCPTR;

File common/h/cpss/extServices/os/gtStack/cpssOsSelect.h:
typedef void (*)(void *, CPSS_SOCKET_FD) CPSS_SOCKET_SELECT_ADD_FD_TO_SET_FUNC;
typedef struct {
    CPSS_SOCKET_SELECT_CREATE_SET_FUNC osSelectCreateSetFunc;
    CPSS_SOCKET_SELECT_ERASE_SET_FUNC osSelectEraseSetFunc;
    CPSS_SOCKET_SELECT_ZERO_SET_FUNC osSelectZeroSetFunc;
    CPSS_SOCKET_SELECT_ADD_FD_TO_SET_FUNC osSelectAddFdToSetFunc;
    CPSS_SOCKET_SELECT_CLEAR_FD_FROM_SET_FUNC osSelectClearFdFromSetFunc;
    CPSS_SOCKET_SELECT_IS_FD_SET_FUNC osSelectIsFdSetFunc;
    CPSS_SOCKET_SELECT_COPY_SET_FUNC osSelectCopySetFunc;
    CPSS_SOCKET_SELECT_FUNC osSelectFunc;
    CPSS_SOCKET_SELECT_GET_SOCKET_FD_SIZE_FUNC osSocketGetSocketFdSetSizeFunc;
} CPSS_SOCKET_SELECT_BIND_STC;
typedef void (*)(void *, CPSS_SOCKET_FD) CPSS_SOCKET_SELECT_CLEAR_FD_FROM_SET_FUNC;
typedef void (*)(void *, void *) CPSS_SOCKET_SELECT_COPY_SET_FUNC;
typedef void *(*)(void) CPSS_SOCKET_SELECT_CREATE_SET_FUNC;
typedef void (*)(void *) CPSS_SOCKET_SELECT_ERASE_SET_FUNC;
typedef GT_SSIZE_T (*)(CPSS_SOCKET_FD, void *, void *, void *, GT_U32) CPSS_SOCKET_SELECT_FUNC;
typedef GT_STATUS (*)(GT_U32 *) CPSS_SOCKET_SELECT_GET_SOCKET_FD_SIZE_FUNC;
typedef GT_BOOL (*)(void *, CPSS_SOCKET_FD) CPSS_SOCKET_SELECT_IS_FD_SET_FUNC;
typedef void (*)(void *) CPSS_SOCKET_SELECT_ZERO_SET_FUNC;

File common/h/cpss/extServices/os/gtStack/cpssOsSocket.h:
typedef CPSS_SOCKET_FD (*)(CPSS_SOCKET_FD, void *, GT_SIZE_T *) CPSS_SOCKET_ACCEPT_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD, void *, GT_SIZE_T) CPSS_SOCKET_BIND_FUNC;
typedef struct {
    CPSS_SOCKET_LAST_ERROR_FUNC osSocketLastErrorFunc;
    CPSS_SOCKET_LAST_ERROR_STR_FUNC osSocketLastErrorStrFunc;
    CPSS_SOCKET_TCP_CREATE_FUNC osSocketTcpCreateFunc;
    CPSS_SOCKET_UDS_CREATE_FUNC osSocketUdsCreateFunc;
    CPSS_SOCKET_UDP_CREATE_FUNC osSocketUdpCreateFunc;
    CPSS_SOCKET_TCP_DESTROY_FUNC osSocketTcpDestroyFunc;
    CPSS_SOCKET_UDP_DESTROY_FUNC osSocketUdpDestroyFunc;
    CPSS_SOCKET_CREATE_ADDR_FUNC osSocketCreateAddrFunc;
    CPSS_SOCKET_DESTROY_ADDR_FUNC osSocketDestroyAddrFunc;
    CPSS_SOCKET_BIND_FUNC osSocketBindFunc;
    CPSS_SOCKET_LISTEN_FUNC osSocketListenFunc;
    CPSS_SOCKET_ACCEPT_FUNC osSocketAcceptFunc;
    CPSS_SOCKET_CONNECT_FUNC osSocketConnectFunc;
    CPSS_SOCKET_SET_NONBLOCK_FUNC osSocketSetNonBlockFunc;
    CPSS_SOCKET_SET_BLOCK_FUNC osSocketSetBlockFunc;
    CPSS_SOCKET_SEND_FUNC osSocketSendFunc;
    CPSS_SOCKET_SENDTO_FUNC osSocketSendToFunc;
    CPSS_SOCKET_RECV_FUNC osSocketRecvFunc;
    CPSS_SOCKET_RECVFROM_FUNC osSocketRecvFromFunc;
    CPSS_SOCKET_SET_SOCKET_NOLINGER_FUNC osSocketSetSocketNoLingerFunc;
    CPSS_SOCKET_EXTRACT_IPADDR_FROM_SOCKET_ADDR_FUNC osSocketExtractIpAddrFromSocketAddrFunc;
    CPSS_SOCKET_GET_ADDR_SIZE_FUNC osSocketGetSocketAddrSizeFunc;
    CPSS_SOCKET_SHUTDOWN_FUNC osSocketShutDownFunc;
} CPSS_SOCKET_BIND_STC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD, void *, GT_SIZE_T) CPSS_SOCKET_CONNECT_FUNC;
typedef GT_STATUS (*)(const GT_CHAR *, CPSS_SOCKET_PORT, void **, GT_SIZE_T *) CPSS_SOCKET_CREATE_ADDR_FUNC;
typedef void (*)(void *) CPSS_SOCKET_DESTROY_ADDR_FUNC;
typedef GT_STATUS (*)(void *, GT_U32 *) CPSS_SOCKET_EXTRACT_IPADDR_FROM_SOCKET_ADDR_FUNC;
typedef int CPSS_SOCKET_FD;
typedef GT_STATUS (*)(GT_U32 *) CPSS_SOCKET_GET_ADDR_SIZE_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD) CPSS_SOCKET_LAST_ERROR_FUNC;
typedef const char *(*)(void) CPSS_SOCKET_LAST_ERROR_STR_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD, GT_SSIZE_T) CPSS_SOCKET_LISTEN_FUNC;
typedef int CPSS_SOCKET_PORT;
typedef GT_SSIZE_T (*)(CPSS_SOCKET_FD, void *, GT_SIZE_T, GT_BOOL, void *, GT_SIZE_T *) CPSS_SOCKET_RECVFROM_FUNC;
typedef GT_SSIZE_T (*)(CPSS_SOCKET_FD, void *, GT_SIZE_T, GT_BOOL) CPSS_SOCKET_RECV_FUNC;
typedef GT_SSIZE_T (*)(CPSS_SOCKET_FD, const void *, GT_SIZE_T, void *, GT_SIZE_T) CPSS_SOCKET_SENDTO_FUNC;
typedef GT_SSIZE_T (*)(CPSS_SOCKET_FD, const void *, GT_SIZE_T) CPSS_SOCKET_SEND_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD) CPSS_SOCKET_SET_BLOCK_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD) CPSS_SOCKET_SET_NONBLOCK_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD) CPSS_SOCKET_SET_SOCKET_NOLINGER_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD, CPSS_SOCKET_SHUTDOWN_OPERATION) CPSS_SOCKET_SHUTDOWN_FUNC;
typedef enum {CPSS_SOCKET_SHUTDOWN_CLOSE_INPUT, CPSS_SOCKET_SHUTDOWN_CLOSE_OUTPUT, CPSS_SOCKET_SHUTDOWN_CLOSE_ALL} CPSS_SOCKET_SHUTDOWN_OPERATION;
typedef CPSS_SOCKET_FD (*)(GT_32) CPSS_SOCKET_TCP_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD) CPSS_SOCKET_TCP_DESTROY_FUNC;
typedef CPSS_SOCKET_FD (*)(GT_32) CPSS_SOCKET_UDP_CREATE_FUNC;
typedef GT_STATUS (*)(CPSS_SOCKET_FD) CPSS_SOCKET_UDP_DESTROY_FUNC;
typedef CPSS_SOCKET_FD (*)() CPSS_SOCKET_UDS_CREATE_FUNC;

File common/h/cpss/extServices/trace/cpssTraceHw.h:
typedef enum {CPSS_TRACE_HW_ACCESS_ADDR_SPACE_PP_E = 3, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_PCI_PEX_E = 0, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_RESET_AND_INIT_CTRL_E = 8, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_MG1_E = 5, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_MG2_E, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_MG3_E} CPSS_TRACE_HW_ACCESS_ADDR_SPACE_ENT;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32) CPSS_TRACE_HW_ACCESS_DELAY_FUNC;
typedef struct {
    CPSS_TRACE_HW_ACCESS_WRITE_FUNC traceHwAccessWriteFunc;
    CPSS_TRACE_HW_ACCESS_READ_FUNC traceHwAccessReadFunc;
    CPSS_TRACE_HW_ACCESS_DELAY_FUNC traceHwAccessDelayFunc;
} CPSS_TRACE_HW_ACCESS_FUNC_BIND_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_ENT, GT_U32, GT_U32, GT_U32 *) CPSS_TRACE_HW_ACCESS_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL, CPSS_TRACE_HW_ACCESS_ADDR_SPACE_ENT, GT_U32, GT_U32, GT_U32 *, GT_U32) CPSS_TRACE_HW_ACCESS_WRITE_FUNC;

File common/h/cpss/generic/cpssHwInfo.h:
typedef enum {CPSS_HW_INFO_BUS_TYPE_NONE_E, CPSS_HW_INFO_BUS_TYPE_PCI_E, CPSS_HW_INFO_BUS_TYPE_PEX_E, CPSS_HW_INFO_BUS_TYPE_SMI_E, CPSS_HW_INFO_BUS_TYPE_MBUS_E, CPSS_HW_INFO_BUS_TYPE_MAX_NUM} CPSS_HW_INFO_BUS_TYPE_ENT;
typedef struct CPSS_HW_INFO_RESOURCE_MAPPING_STCT CPSS_HW_INFO_RESOURCE_MAPPING_STC;
struct CPSS_HW_INFO_RESOURCE_MAPPING_STCT;
typedef struct CPSS_HW_INFO_STCT CPSS_HW_INFO_STC;
struct CPSS_HW_INFO_STCT;
typedef unsigned long long GT_PHYSICAL_ADDR;

File common/h/cpss/generic/events/cpssGenEventCtrl.h:
typedef enum {CPSS_EVENT_GPP_INTERNAL_0_E, CPSS_EVENT_GPP_INTERNAL_1_E, CPSS_EVENT_GPP_INTERNAL_2_E, CPSS_EVENT_GPP_INTERNAL_3_E, CPSS_EVENT_GPP_INTERNAL_4_E, CPSS_EVENT_GPP_INTERNAL_5_E, CPSS_EVENT_GPP_INTERNAL_6_E, CPSS_EVENT_GPP_INTERNAL_7_E, CPSS_EVENT_MPP_INTERNAL_0_E, CPSS_EVENT_MPP_INTERNAL_32_E = 40, CPSS_EVENT_GPP_MAX_NUM_E} CPSS_EVENT_GPP_ID_ENT;
typedef GT_U8 (*)(void *) CPSS_EVENT_ISR_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_EVENT_GPP_ID_ENT) CPSS_INTERRUPTS_GPP_ISR_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *) CPSS_INTERRUPTS_HW_READ_REGISTER_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) CPSS_INTERRUPTS_HW_WRITE_REGISTER_FUNC;
typedef struct CPSS_INTERRUPT_SCAN_STCT CPSS_INTERRUPT_SCAN_STC;
struct CPSS_INTERRUPT_SCAN_STCT;

File common/h/cpss/generic/events/cpssGenEventRequests.h:
typedef void (*)(GT_UINTPTR, void *) CPSS_EVENT_ISR_CB_FUNC;
typedef enum {CPSS_EVENT_MASK_E, CPSS_EVENT_UNMASK_E} CPSS_EVENT_MASK_SET_ENT;

File common/h/cpss/generic/events/cpssGenEventUnifyTypes.h:
typedef enum {CPSS_PP_UNI_EV_MIN_E, CPSS_PP_SLV_WRITE_ERR_E = 0, CPSS_PP_MAS_WRITE_ERR_E, CPSS_PP_ADDR_ERR_E, CPSS_PP_MAS_ABORT_E, CPSS_PP_TARGET_ABORT_E, CPSS_PP_SLV_READ_ERR_E, CPSS_PP_MAS_READ_ERR_E, CPSS_PP_RETRY_CNTR_E, CPSS_PP_MISC_TWSI_TIME_OUT_E, CPSS_PP_MISC_TWSI_STATUS_E, CPSS_PP_MISC_ILLEGAL_ADDR_E, CPSS_PP_MISC_CPU_PORT_RX_OVERRUN_E, CPSS_PP_MISC_CPU_PORT_TX_OVERRUN_E, CPSS_PP_MISC_TX_CRC_PORT_E, CPSS_PP_MISC_C2C_W_FAR_END_UP_E, CPSS_PP_MISC_C2C_N_FAR_END_UP_E, CPSS_PP_MISC_C2C_DATA_ERR_E, 
    CPSS_PP_MISC_MSG_TIME_OUT_E, CPSS_PP_MISC_UPDATED_STAT_E, CPSS_PP_GPP_E, CPSS_PP_MISC_UPLINK_W_ECC_ON_DATA_E, CPSS_PP_MISC_UPLINK_W_ECC_ON_HEADER_E, CPSS_PP_MISC_UPLINK_N_ECC_ON_DATA_E, CPSS_PP_MISC_UPLINK_N_ECC_ON_HEADER_E, CPSS_PP_MISC_PEX_ADDR_UNMAPPED_E, CPSS_PP_MISC_GENXS_READ_DMA_DONE_E, CPSS_PP_BM_EMPTY_CLEAR_E, CPSS_PP_BM_EMPTY_INC_E, CPSS_PP_BM_AGED_PACKET_E, CPSS_PP_BM_MAX_BUFF_REACHED_E, CPSS_PP_BM_PORT_RX_BUFFERS_CNT_UNDERRUN_E, CPSS_PP_BM_PORT_RX_BUFFERS_CNT_OVERRUN_E, 
    CPSS_PP_BM_INVALID_ADDRESS_E, CPSS_PP_BM_WRONG_SRC_PORT_E, CPSS_PP_BM_MC_INC_OVERFLOW_E, CPSS_PP_BM_MC_INC_UNDERRUN_E, CPSS_PP_BM_TQ_PARITY_ERROR_PORT_E, CPSS_PP_BM_RX_MEM_READ_ECC_ERROR_E, CPSS_PP_BM_VLT_ECC_ERR_E, CPSS_PP_BM_MISC_E, CPSS_PP_BM_TRIGGER_AGING_DONE_E, CPSS_PP_BM_PORT_RX_FULL_E, CPSS_PP_BM_ALL_GIGA_PORTS_BUFF_LIMIT_REACHED_E, CPSS_PP_BM_ALL_HG_STACK_PORTS_BUFF_LIMIT_REACHED_E, CPSS_PP_PORT_LINK_STATUS_CHANGED_E, CPSS_PP_PORT_AN_COMPLETED_E, CPSS_PP_PORT_RX_FIFO_OVERRUN_E, 
    CPSS_PP_PORT_TX_FIFO_UNDERRUN_E, CPSS_PP_PORT_TX_FIFO_OVERRUN_E, CPSS_PP_PORT_TX_UNDERRUN_E, CPSS_PP_PORT_ADDRESS_OUT_OF_RANGE_E, CPSS_PP_PORT_PRBS_ERROR_E, CPSS_PP_PORT_SYNC_STATUS_CHANGED_E, CPSS_PP_PORT_TX_CRC_ERROR_E, CPSS_PP_PORT_ILLEGAL_SEQUENCE_E, CPSS_PP_PORT_IPG_TOO_SMALL_E, CPSS_PP_PORT_FAULT_TYPE_CHANGE_E, CPSS_PP_PORT_FC_STATUS_CHANGED_E, CPSS_PP_PORT_CONSECUTIVE_TERM_CODE_E, CPSS_PP_INTERNAL_PHY_E, CPSS_PP_PORT_NO_BUFF_PACKET_DROP_E, CPSS_PP_PORT_XAUI_PHY_E, 
    CPSS_PP_PORT_COUNT_COPY_DONE_E, CPSS_PP_PORT_COUNT_EXPIRED_E, CPSS_PP_GOP_ADDRESS_OUT_OF_RANGE_E, CPSS_PP_GOP_COUNT_EXPIRED_E, CPSS_PP_GOP_COUNT_COPY_DONE_E, CPSS_PP_GOP_GIG_BAD_FC_PACKET_GOOD_CRC_E, CPSS_PP_GOP_XG_BAD_FC_PACKET_GOOD_CRC_E, CPSS_PP_XSMI_WRITE_DONE_E, CPSS_PP_TQ_WATCHDOG_EX_PORT_E, CPSS_PP_TQ_TXQ2_FLUSH_PORT_E, CPSS_PP_TQ_TXQ2_MG_FLUSH_E, CPSS_PP_TQ_ONE_ECC_ERROR_E, CPSS_PP_TQ_TWO_ECC_ERROR_E, CPSS_PP_TQ_MG_READ_ERR_E, CPSS_PP_TQ_HOL_REACHED_PORT_E, CPSS_PP_TQ_RED_REACHED_PORT_E, 
    CPSS_PP_TQ_TOTAL_DESC_UNDERFLOW_E, CPSS_PP_TQ_TOTAL_DESC_OVERFLOW_E, CPSS_PP_TQ_TOTAL_BUFF_UNDERFLOW_E, CPSS_PP_TQ_SNIFF_DESC_DROP_E, CPSS_PP_TQ_MLL_PARITY_ERR_E, CPSS_PP_TQ_MC_FIFO_OVERRUN_E, CPSS_PP_TQ_MISC_E, CPSS_PP_TQ_PORT_DESC_FULL_E, CPSS_PP_TQ_MC_DESC_FULL_E, CPSS_PP_TQ_GIGA_FIFO_FULL_E, CPSS_PP_TQ_XG_MC_FIFO_FULL_E, CPSS_PP_TQ_PORT_FULL_XG_E, CPSS_PP_EB_AUQ_FULL_E, CPSS_PP_EB_AUQ_PENDING_E, CPSS_PP_EB_AUQ_OVER_E, CPSS_PP_EB_AUQ_ALMOST_FULL_E, CPSS_PP_EB_FUQ_FULL_E, CPSS_PP_EB_FUQ_PENDING_E, 
    CPSS_PP_EB_NA_FIFO_FULL_E, CPSS_PP_EB_MG_ADDR_OUT_OF_RANGE_E, CPSS_PP_EB_VLAN_TBL_OP_DONE_E, CPSS_PP_EB_SECURITY_BREACH_UPDATE_E, CPSS_PP_EB_VLAN_SECURITY_BREACH_E, CPSS_PP_EB_NA_NOT_LEARNED_SECURITY_BREACH_E, CPSS_PP_EB_SA_MSG_DISCARDED_E, CPSS_PP_EB_QA_MSG_DISCARDED_E, CPSS_PP_EB_SA_DROP_SECURITY_BREACH_E, CPSS_PP_EB_DA_DROP_SECURITY_BREACH_E, CPSS_PP_EB_DA_SA_DROP_SECURITY_BREACH_E, CPSS_PP_EB_NA_ON_LOCKED_DROP_SECURITY_BREACH_E, CPSS_PP_EB_MAC_RANGE_DROP_SECURITY_BREACH_E, 
    CPSS_PP_EB_INVALID_SA_DROP_SECURITY_BREACH_E, CPSS_PP_EB_VLAN_NOT_VALID_DROP_SECURITY_BREACH_E, CPSS_PP_EB_VLAN_NOT_MEMBER_DROP_DROP_SECURITY_BREACH_E, CPSS_PP_EB_VLAN_RANGE_DROP_SECURITY_BREACH_E, CPSS_PP_EB_INGRESS_FILTER_PCKT_E, CPSS_PP_MAC_TBL_READ_ECC_ERR_E, CPSS_PP_MAC_SFLOW_E, CPSS_PP_MAC_NUM_OF_HOP_EXP_E, CPSS_PP_MAC_NA_LEARNED_E, CPSS_PP_MAC_NA_NOT_LEARNED_E, CPSS_PP_MAC_AGE_VIA_TRIGGER_ENDED_E, CPSS_PP_MAC_MG_ADDR_OUT_OF_RANGE_E, CPSS_PP_MAC_UPDATE_FROM_CPU_DONE_E, 
    CPSS_PP_MAC_MESSAGE_TO_CPU_READY_E, CPSS_PP_MAC_NA_SELF_LEARNED_E, CPSS_PP_MAC_NA_FROM_CPU_LEARNED_E, CPSS_PP_MAC_NA_FROM_CPU_DROPPED_E, CPSS_PP_MAC_AGED_OUT_E, CPSS_PP_MAC_FIFO_2_CPU_EXCEEDED_E, CPSS_PP_MAC_1ECC_ERRORS_E, CPSS_PP_MAC_2ECC_ERRORS_E, CPSS_PP_MAC_TBL_OP_DONE_E, CPSS_PP_MAC_PACKET_RSSI_LESS_THAN_THRESH_E, CPSS_PP_MAC_UPD_AVG_RSSI_LESS_THAN_THRESH_E, CPSS_PP_MAC_STG_TBL_DATA_ERROR_E, CPSS_PP_MAC_VIDX_TBL_DATA_ERROR_E, CPSS_PP_LX_LB_ERR_E, CPSS_PP_LX_CTRL_MEM_2_RF_ERR_E, 
    CPSS_PP_LX_TCB_CNTR_E, CPSS_PP_LX_IPV4_MC_ERR_E, CPSS_PP_LX_IPV4_LPM_ERR_E, CPSS_PP_LX_IPV4_ROUTE_ERR_E, CPSS_PP_LX_IPV4_CNTR_E, CPSS_PP_LX_L3_L7_ERR_ADDR_E, CPSS_PP_LX_TRUNK_ADDR_OUT_OF_RANGE_E, CPSS_PP_LX_IPV4_REFRESH_AGE_OVERRUN_E, CPSS_PP_LX_PCE_PAR_ERR_E, CPSS_PP_LX_TC_2_RF_CNTR_ALRM_E, CPSS_PP_LX_TC_2_RF_PLC_ALRM_E, CPSS_PP_LX_TC_2_RF_TBL_ERR_E, CPSS_PP_LX_CLASSIFIER_HASH_PAR_ERR_E, CPSS_PP_LX_FLOW_LKUP_PAR_ERR_E, CPSS_PP_LX_FLOW_KEY_TBL_PAR_ERR_E, CPSS_PP_LX_MPLS_ILM_TBL_PAR_ERR_E, 
    CPSS_PP_LX_MPLS_CNTR_E, CPSS_PP_EB_TCC_E, CPSS_PP_RX_BUFFER_QUEUE0_E, CPSS_PP_RX_BUFFER_QUEUE1_E, CPSS_PP_RX_BUFFER_QUEUE2_E, CPSS_PP_RX_BUFFER_QUEUE3_E, CPSS_PP_RX_BUFFER_QUEUE4_E, CPSS_PP_RX_BUFFER_QUEUE5_E, CPSS_PP_RX_BUFFER_QUEUE6_E, CPSS_PP_RX_BUFFER_QUEUE7_E, CPSS_PP_RX_ERR_QUEUE0_E, CPSS_PP_RX_ERR_QUEUE1_E, CPSS_PP_RX_ERR_QUEUE2_E, CPSS_PP_RX_ERR_QUEUE3_E, CPSS_PP_RX_ERR_QUEUE4_E, CPSS_PP_RX_ERR_QUEUE5_E, CPSS_PP_RX_ERR_QUEUE6_E, CPSS_PP_RX_ERR_QUEUE7_E, CPSS_PP_RX_CNTR_OVERFLOW_E, 
    CPSS_PP_TX_BUFFER_QUEUE_E, CPSS_PP_TX_ERR_QUEUE_E, CPSS_PP_TX_END_E, CPSS_PP_PORT_LANE_PRBS_ERROR_E, CPSS_PP_PORT_LANE_DISPARITY_ERROR_E, CPSS_PP_PORT_LANE_SYMBOL_ERROR_E, CPSS_PP_PORT_LANE_CJR_PAT_ERROR_E, CPSS_PP_PORT_LANE_SIGNAL_DETECT_CHANGED_E, CPSS_PP_PORT_LANE_SYNC_STATUS_CHANGED_E, CPSS_PP_PORT_LANE_DETECTED_IIAII_E, CPSS_PP_PORT_PCS_LINK_STATUS_CHANGED_E, CPSS_PP_PORT_PCS_DESKEW_TIMEOUT_E, CPSS_PP_PORT_PCS_DETECTED_COLUMN_IIAII_E, CPSS_PP_PORT_PCS_DESKEW_ERROR_E, 
    CPSS_PP_PORT_PCS_PPM_FIFO_UNDERRUN_E, CPSS_PP_PORT_PCS_PPM_FIFO_OVERRUN_E, CPSS_PP_PORT_PCS_ALIGN_LOCK_LOST_E, CPSS_PP_BM_EGRESS_EMPTY_CLEAR_E, CPSS_PP_BM_EGRESS_EMPTY_INC_E, CPSS_PP_BM_EGRESS_AGED_PACKET_E, CPSS_PP_BM_EGRESS_MAX_BUFF_REACHED_E, CPSS_PP_BM_EGRESS_PORT_RX_BUFFERS_CNT_UNDERRUN_E, CPSS_PP_BM_EGRESS_PORT_RX_BUFFERS_CNT_OVERRUN_E, CPSS_PP_BM_EGRESS_INVALID_ADDRESS_E, CPSS_PP_BM_EGRESS_WRONG_SRC_PORT_E, CPSS_PP_BM_EGRESS_MC_INC_OVERFLOW_E, CPSS_PP_BM_EGRESS_MC_INC_UNDERRUN_E, 
    CPSS_PP_BM_EGRESS_TQ_PARITY_ERROR_PORT_E, CPSS_PP_BM_EGRESS_RX_MEM_READ_ECC_ERROR_E, CPSS_PP_BM_EGRESS_VLT_ECC_ERR_E, CPSS_PP_BM_EGRESS_MISC_E, CPSS_PP_PEX_DL_DOWN_TX_ACC_ERR_E, CPSS_PP_PEX_MASTER_DISABLED_E, CPSS_PP_PEX_ERROR_WR_TO_REG_E, CPSS_PP_PEX_HIT_DEFAULT_WIN_ERR_E, CPSS_PP_PEX_COR_ERROR_DET_E, CPSS_PP_PEX_NON_FATAL_ERROR_DET_E, CPSS_PP_PEX_FATAL_ERROR_DET_E, CPSS_PP_PEX_DSTATE_CHANGED_E, CPSS_PP_PEX_BIST_E, CPSS_PP_PEX_RCV_ERROR_FATAL_E, CPSS_PP_PEX_RCV_ERROR_NON_FATAL_E, 
    CPSS_PP_PEX_RCV_ERROR_COR_E, CPSS_PP_PEX_RCV_CRS_E, CPSS_PP_PEX_PEX_SLAVE_HOT_RESET_E, CPSS_PP_PEX_PEX_SLAVE_DISABLE_LINK_E, CPSS_PP_PEX_PEX_SLAVE_LOOPBACK_E, CPSS_PP_PEX_PEX_LINK_FAIL_E, CPSS_PP_PEX_RCV_A_E, CPSS_PP_PEX_RCV_B_E, CPSS_PP_PEX_RCV_C_E, CPSS_PP_PEX_RCV_D_E, CPSS_PP_BUF_MEM_MAC_ERROR_E, CPSS_PP_BUF_MEM_ONE_ECC_ERROR_E, CPSS_PP_BUF_MEM_TWO_OR_MORE_ECC_ERRORS_E, CPSS_PP_POLICER_ADDR_OUT_OF_MEMORY_E, CPSS_PP_POLICER_DATA_ERR_E, CPSS_PP_POLICER_IPFIX_WRAP_AROUND_E, 
    CPSS_PP_POLICER_IPFIX_ALARM_E, CPSS_PP_POLICER_IPFIX_ALARMED_ENTRIES_FIFO_WRAP_AROUND_E, CPSS_PP_PCL_TCC_ECC_ERR_E, CPSS_PP_PCL_MG_ADDR_OUT_OF_RANGE_E, CPSS_PP_PCL_LOOKUP_DATA_ERROR_E, CPSS_PP_PCL_ACTION_ERROR_DETECTED_E, CPSS_PP_PCL_MG_LOOKUP_RESULTS_READY_E, CPSS_PP_PCL_INLIF_TABLE_DATA_ERROR_E, CPSS_PP_PCL_CONFIG_TABLE_DATA_ERROR_E, CPSS_PP_PCL_LOOKUP_FIFO_FULL_E, CPSS_PP_CNC_WRAPAROUND_BLOCK_E, CPSS_PP_CNC_DUMP_FINISHED_E, CPSS_PP_SCT_RATE_LIMITER_E, CPSS_PP_EGRESS_SFLOW_E, 
    CPSS_PP_INGRESS_SFLOW_SAMPLED_CNTR_E, CPSS_PP_EGRESS_SFLOW_SAMPLED_CNTR_E, CPSS_PP_TTI_CPU_ADDRESS_OUT_OF_RANGE_E, CPSS_PP_TTI_ACCESS_DATA_ERROR_E, CPSS_PP_DIT_MC_DIT_TTL_TRHOLD_EXCEED_E, CPSS_PP_DIT_UC_DIT_TTL_TRHOLD_EXCEED_E, CPSS_PP_DIT_DATA_ERROR_E, CPSS_PP_DIT_MC0_PARITY_ERROR_E, CPSS_PP_DIT_INT_TABLE_ECC_ERROR_CNTR_E, CPSS_PP_DIT_MC0_IP_TV_PARITY_ERROR_CNTR_E, CPSS_PP_EXTERNAL_TCAM_INT_SUM_E, CPSS_PP_EXTERNAL_TCAM_IO_ERR_E, CPSS_PP_EXTERNAL_TCAM_RX_PARITY_ERR_E, 
    CPSS_PP_EXTERNAL_TCAM_MG_CMD_EXE_DONE_E, CPSS_PP_EXTERNAL_TCAM_NEW_DATA_IN_MAILBOX_E, CPSS_PP_EXTERNAL_TCAM_MG_WRONG_EXP_RES_LEN_E, CPSS_PP_EXTERNAL_TCAM_RSP_IDQ_EMPTY_E, CPSS_PP_EXTERNAL_TCAM_PHASE_ERROR_E, CPSS_PP_EXTERNAL_TCAM_TRAINING_SEQUENCE_DONE_E, CPSS_PP_EXTERNAL_MEMORY_PARITY_ERROR_E, CPSS_PP_EXTERNAL_MEMORY_ECC_ERROR_E, CPSS_PP_EXTERNAL_MEMORY_RLDRAM_UNIT_PARITY_ERR_LOW_E, CPSS_PP_EXTERNAL_MEMORY_RLDRAM_UNIT_PARITY_ERR_HIGH_E, CPSS_PP_EXTERNAL_MEMORY_RLDRAM_UNIT_MG_CMD_DONE_E, 
    CPSS_PP_VOQ_DROP_DEV_EN_E, CPSS_PP_VOQ_GLOBAL_DESC_FULL_E, CPSS_PP_VOQ_ADDR_OUT_OF_RANGE_E, CPSS_PP_VOQ_ECC_ERR_E, CPSS_PP_VOQ_GLOBAL_BUF_FULL_E, CPSS_PP_XBAR_INVALID_TRG_DROP_CNTR_RL_E, CPSS_PP_XBAR_SRC_FILTER_DROP_CNTR_RL_E, CPSS_PP_XBAR_RX_CELL_CNTR_RL_E, CPSS_PP_XBAR_PRIORITY_0_3_TX_DROP_CNTR_RL_E, CPSS_PP_XBAR_SHP_TX_DROP_CNTR_RL_E, CPSS_PP_XBAR_RX_FIFO_OVERRUN_CNTR_RL_E, CPSS_PP_XBAR_RX_FIFO_OVERRUN_CNTR_INC_E, CPSS_PP_XBAR_INVALID_TRG_DROP_CNTR_INC_E, CPSS_PP_XBAR_SRC_FILTER_DROP_CNTR_INC_E, 
    CPSS_PP_XBAR_RX_CELL_CNTR_INC_E, CPSS_PP_XBAR_PRIORITY_0_3_TX_DROP_CNTR_INC_E, CPSS_PP_XBAR_SHP_TX_DROP_CNTR_INC_E, CPSS_PP_XBAR_PRIORITY_0_3_TX_FC_CHANGED_TO_XOFF_E, CPSS_PP_XBAR_PRIORITY_0_3_TX_FC_CHANGED_TO_XON_E, CPSS_PP_XBAR_INVALID_ADDR_E, CPSS_PP_XBAR_TX_CELL_CNTR_RL_E, CPSS_PP_XBAR_TX_CELL_CNTR_INC_E, CPSS_PP_CRX_MAIL_ARRIVED_E, CPSS_PP_CRX_READ_EMPTY_CPU_E, CPSS_PP_CRX_DATA_DROP_E, CPSS_PP_CRX_CPU_DROP_E, CPSS_PP_CRX_AGED_OUT_CONTEXT_E, CPSS_PP_CRX_CRC_DROP_E, 
    CPSS_PP_CRX_PACKET_LENGTH_DROP_E, CPSS_PP_CRX_MAX_BUFFERS_DROP_E, CPSS_PP_CRX_BAD_CONTEXT_DROP_E, CPSS_PP_CRX_NO_BUFFERS_DROP_E, CPSS_PP_CRX_MULTICAST_CONGESTION_DROP_E, CPSS_PP_CRX_DATA_FIFO_UNDERRUN_E, CPSS_PP_CRX_DATA_FIFO_OVERRUN_E, CPSS_PP_CRX_CPU_UNDERRUN_E, CPSS_PP_CRX_CPU_OVERRUN_E, CPSS_PP_CRX_E2E_FIFO_UNDERRUN_E, CPSS_PP_CRX_E2E_FIFO_OVERRUN_E, CPSS_PP_CRX_UNKNOWN_CELL_TYPE_E, CPSS_PP_CRX_COUNTER_BAD_ADDR_E, CPSS_PP_CRX_PSM_BAD_ADDR_E, CPSS_PP_TXD_SEG_FIFO_PARITY_ERR_E, 
    CPSS_PP_TXD_CPU_MAIL_SENT_E, CPSS_PP_TXD_SEG_FIFO_OVERRUN_E, CPSS_PP_TXD_WRONG_CH_TO_FABRIC_DIST_E, CPSS_PP_IPVX_DATA_ERROR_E, CPSS_PP_IPVX_ADDRESS_OUT_OF_MEMORY_E, CPSS_PP_IPVX_LPM_DATA_ERROR_E, CPSS_PP_STAT_INF_TX_SYNC_FIFO_FULL_E, CPSS_PP_STAT_INF_TX_SYNC_FIFO_OVERRUN_E, CPSS_PP_STAT_INF_TX_SYNC_FIFO_UNDERRUN_E, CPSS_PP_STAT_INF_RX_SYNC_FIFO_FULL_E, CPSS_PP_STAT_INF_RX_SYNC_FIFO_OVERRUN_E, CPSS_PP_STAT_INF_RX_SYNC_FIFO_UNDERRUN_E, CPSS_PP_HGLINK_PING_RECEIVED_E, CPSS_PP_HGLINK_PING_SENT_E, 
    CPSS_PP_HGLINK_MAC_TX_OVERRUN_E, CPSS_PP_HGLINK_MAC_TX_UNDERRUN_E, CPSS_PP_HGLINK_RX_ERR_CNTR_RL_E, CPSS_PP_HGLINK_BAD_PCS_TO_MAC_REFORMAT_RX_E, CPSS_PP_HGLINK_BAD_HEAD_CELL_RX_E, CPSS_PP_HGLINK_BAD_LENGTH_CELL_RX_E, CPSS_PP_HGLINK_FC_CELL_RX_INT_E, CPSS_PP_HGLINK_FC_CELL_TX_INT_E, CPSS_PP_HGLINK_FC_XOFF_DEAD_LOCK_TC0_E, CPSS_PP_HGLINK_FC_XOFF_DEAD_LOCK_TC1_E, CPSS_PP_HGLINK_FC_XOFF_DEAD_LOCK_TC2_E, CPSS_PP_HGLINK_FC_XOFF_DEAD_LOCK_TC3_E, CPSS_PP_HGLINK_ADDR_OUT_OF_RANGE_E, 
    CPSS_PP_TCC_TCAM_ERROR_DETECTED_E, CPSS_PP_TCC_TCAM_BIST_FAILED_E, CPSS_PP_BCN_COUNTER_WRAP_AROUND_ERR_E, CPSS_PP_GTS_GLOBAL_FIFO_FULL_E, CPSS_PP_GTS_VALID_TIME_SAMPLE_MESSAGE_E, CPSS_PP_CRITICAL_HW_ERROR_E, CPSS_PP_PORT_PRBS_ERROR_QSGMII_E, CPSS_PP_PORT_802_3_AP_E, CPSS_PP_PORT_802_3_AP_CORE_1_E, CPSS_PP_PORT_802_3_AP_CORE_2_E, CPSS_PP_PORT_802_3_AP_CORE_3_E, CPSS_PP_PORT_802_3_AP_CORE_4_E, CPSS_PP_PORT_802_3_AP_CORE_5_E, CPSS_PP_PORT_802_3_AP_CORE_6_E, CPSS_PP_PORT_802_3_AP_CORE_7_E, 
    CPSS_PP_PORT_MMPCS_SIGNAL_DETECT_CHANGE_E, CPSS_PP_DATA_INTEGRITY_ERROR_E, CPSS_PP_MAC_BANK_LEARN_COUNTERS_OVERFLOW_E, CPSS_PP_PORT_EEE_E, CPSS_PP_OAM_EXCEPTION_KEEPALIVE_AGING_E, CPSS_PP_OAM_EXCEPTION_EXCESS_KEEPALIVE_E, CPSS_PP_OAM_EXCEPTION_INVALID_KEEPALIVE_E, CPSS_PP_OAM_EXCEPTION_RDI_STATUS_E, CPSS_PP_OAM_EXCEPTION_TX_PERIOD_E, CPSS_PP_OAM_EXCEPTION_MEG_LEVEL_E, CPSS_PP_OAM_EXCEPTION_SOURCE_INTERFACE_E, CPSS_PP_OAM_ILLEGAL_ENTRY_INDEX_E, CPSS_PP_RX_BUFFER_QUEUE8_E, CPSS_PP_RX_BUFFER_QUEUE9_E, 
    CPSS_PP_RX_BUFFER_QUEUE10_E, CPSS_PP_RX_BUFFER_QUEUE11_E, CPSS_PP_RX_BUFFER_QUEUE12_E, CPSS_PP_RX_BUFFER_QUEUE13_E, CPSS_PP_RX_BUFFER_QUEUE14_E, CPSS_PP_RX_BUFFER_QUEUE15_E, CPSS_PP_RX_ERR_QUEUE8_E, CPSS_PP_RX_ERR_QUEUE9_E, CPSS_PP_RX_ERR_QUEUE10_E, CPSS_PP_RX_ERR_QUEUE11_E, CPSS_PP_RX_ERR_QUEUE12_E, CPSS_PP_RX_ERR_QUEUE13_E, CPSS_PP_RX_ERR_QUEUE14_E, CPSS_PP_RX_ERR_QUEUE15_E, CPSS_PP_RX_BUFFER_QUEUE16_E, CPSS_PP_RX_BUFFER_QUEUE17_E, CPSS_PP_RX_BUFFER_QUEUE18_E, CPSS_PP_RX_BUFFER_QUEUE19_E, 
    CPSS_PP_RX_BUFFER_QUEUE20_E, CPSS_PP_RX_BUFFER_QUEUE21_E, CPSS_PP_RX_BUFFER_QUEUE22_E, CPSS_PP_RX_BUFFER_QUEUE23_E, CPSS_PP_RX_ERR_QUEUE16_E, CPSS_PP_RX_ERR_QUEUE17_E, CPSS_PP_RX_ERR_QUEUE18_E, CPSS_PP_RX_ERR_QUEUE19_E, CPSS_PP_RX_ERR_QUEUE20_E, CPSS_PP_RX_ERR_QUEUE21_E, CPSS_PP_RX_ERR_QUEUE22_E, CPSS_PP_RX_ERR_QUEUE23_E, CPSS_PP_RX_BUFFER_QUEUE24_E, CPSS_PP_RX_BUFFER_QUEUE25_E, CPSS_PP_RX_BUFFER_QUEUE26_E, CPSS_PP_RX_BUFFER_QUEUE27_E, CPSS_PP_RX_BUFFER_QUEUE28_E, CPSS_PP_RX_BUFFER_QUEUE29_E, 
    CPSS_PP_RX_BUFFER_QUEUE30_E, CPSS_PP_RX_BUFFER_QUEUE31_E, CPSS_PP_RX_ERR_QUEUE24_E, CPSS_PP_RX_ERR_QUEUE25_E, CPSS_PP_RX_ERR_QUEUE26_E, CPSS_PP_RX_ERR_QUEUE27_E, CPSS_PP_RX_ERR_QUEUE28_E, CPSS_PP_RX_ERR_QUEUE29_E, CPSS_PP_RX_ERR_QUEUE30_E, CPSS_PP_RX_ERR_QUEUE31_E, CPSS_PP_PIPE_PCP_E, CPSS_PP_PHA_E, CPSS_PP_PORT_PCS_GB_LOCK_SYNC_CHANGE_E, CPSS_PP_RX_BUFFER_QUEUE32_E, CPSS_PP_RX_BUFFER_QUEUE33_E, CPSS_PP_RX_BUFFER_QUEUE34_E, CPSS_PP_RX_BUFFER_QUEUE35_E, CPSS_PP_RX_BUFFER_QUEUE36_E, 
    CPSS_PP_RX_BUFFER_QUEUE37_E, CPSS_PP_RX_BUFFER_QUEUE38_E, CPSS_PP_RX_BUFFER_QUEUE39_E, CPSS_PP_RX_BUFFER_QUEUE40_E, CPSS_PP_RX_BUFFER_QUEUE41_E, CPSS_PP_RX_BUFFER_QUEUE42_E, CPSS_PP_RX_BUFFER_QUEUE43_E, CPSS_PP_RX_BUFFER_QUEUE44_E, CPSS_PP_RX_BUFFER_QUEUE45_E, CPSS_PP_RX_BUFFER_QUEUE46_E, CPSS_PP_RX_BUFFER_QUEUE47_E, CPSS_PP_RX_BUFFER_QUEUE48_E, CPSS_PP_RX_BUFFER_QUEUE49_E, CPSS_PP_RX_BUFFER_QUEUE50_E, CPSS_PP_RX_BUFFER_QUEUE51_E, CPSS_PP_RX_BUFFER_QUEUE52_E, CPSS_PP_RX_BUFFER_QUEUE53_E, 
    CPSS_PP_RX_BUFFER_QUEUE54_E, CPSS_PP_RX_BUFFER_QUEUE55_E, CPSS_PP_RX_BUFFER_QUEUE56_E, CPSS_PP_RX_BUFFER_QUEUE57_E, CPSS_PP_RX_BUFFER_QUEUE58_E, CPSS_PP_RX_BUFFER_QUEUE59_E, CPSS_PP_RX_BUFFER_QUEUE60_E, CPSS_PP_RX_BUFFER_QUEUE61_E, CPSS_PP_RX_BUFFER_QUEUE62_E, CPSS_PP_RX_BUFFER_QUEUE63_E, CPSS_PP_RX_BUFFER_QUEUE64_E, CPSS_PP_RX_BUFFER_QUEUE65_E, CPSS_PP_RX_BUFFER_QUEUE66_E, CPSS_PP_RX_BUFFER_QUEUE67_E, CPSS_PP_RX_BUFFER_QUEUE68_E, CPSS_PP_RX_BUFFER_QUEUE69_E, CPSS_PP_RX_BUFFER_QUEUE70_E, 
    CPSS_PP_RX_BUFFER_QUEUE71_E, CPSS_PP_RX_BUFFER_QUEUE72_E, CPSS_PP_RX_BUFFER_QUEUE73_E, CPSS_PP_RX_BUFFER_QUEUE74_E, CPSS_PP_RX_BUFFER_QUEUE75_E, CPSS_PP_RX_BUFFER_QUEUE76_E, CPSS_PP_RX_BUFFER_QUEUE77_E, CPSS_PP_RX_BUFFER_QUEUE78_E, CPSS_PP_RX_BUFFER_QUEUE79_E, CPSS_PP_RX_BUFFER_QUEUE80_E, CPSS_PP_RX_BUFFER_QUEUE81_E, CPSS_PP_RX_BUFFER_QUEUE82_E, CPSS_PP_RX_BUFFER_QUEUE83_E, CPSS_PP_RX_BUFFER_QUEUE84_E, CPSS_PP_RX_BUFFER_QUEUE85_E, CPSS_PP_RX_BUFFER_QUEUE86_E, CPSS_PP_RX_BUFFER_QUEUE87_E, 
    CPSS_PP_RX_BUFFER_QUEUE88_E, CPSS_PP_RX_BUFFER_QUEUE89_E, CPSS_PP_RX_BUFFER_QUEUE90_E, CPSS_PP_RX_BUFFER_QUEUE91_E, CPSS_PP_RX_BUFFER_QUEUE92_E, CPSS_PP_RX_BUFFER_QUEUE93_E, CPSS_PP_RX_BUFFER_QUEUE94_E, CPSS_PP_RX_BUFFER_QUEUE95_E, CPSS_PP_RX_BUFFER_QUEUE96_E, CPSS_PP_RX_BUFFER_QUEUE97_E, CPSS_PP_RX_BUFFER_QUEUE98_E, CPSS_PP_RX_BUFFER_QUEUE99_E, CPSS_PP_RX_BUFFER_QUEUE100_E, CPSS_PP_RX_BUFFER_QUEUE101_E, CPSS_PP_RX_BUFFER_QUEUE102_E, CPSS_PP_RX_BUFFER_QUEUE103_E, CPSS_PP_RX_BUFFER_QUEUE104_E, 
    CPSS_PP_RX_BUFFER_QUEUE105_E, CPSS_PP_RX_BUFFER_QUEUE106_E, CPSS_PP_RX_BUFFER_QUEUE107_E, CPSS_PP_RX_BUFFER_QUEUE108_E, CPSS_PP_RX_BUFFER_QUEUE109_E, CPSS_PP_RX_BUFFER_QUEUE110_E, CPSS_PP_RX_BUFFER_QUEUE111_E, CPSS_PP_RX_BUFFER_QUEUE112_E, CPSS_PP_RX_BUFFER_QUEUE113_E, CPSS_PP_RX_BUFFER_QUEUE114_E, CPSS_PP_RX_BUFFER_QUEUE115_E, CPSS_PP_RX_BUFFER_QUEUE116_E, CPSS_PP_RX_BUFFER_QUEUE117_E, CPSS_PP_RX_BUFFER_QUEUE118_E, CPSS_PP_RX_BUFFER_QUEUE119_E, CPSS_PP_RX_BUFFER_QUEUE120_E, 
    CPSS_PP_RX_BUFFER_QUEUE121_E, CPSS_PP_RX_BUFFER_QUEUE122_E, CPSS_PP_RX_BUFFER_QUEUE123_E, CPSS_PP_RX_BUFFER_QUEUE124_E, CPSS_PP_RX_BUFFER_QUEUE125_E, CPSS_PP_RX_BUFFER_QUEUE126_E, CPSS_PP_RX_BUFFER_QUEUE127_E, CPSS_PP_RX_ERR_QUEUE32_E, CPSS_PP_RX_ERR_QUEUE33_E, CPSS_PP_RX_ERR_QUEUE34_E, CPSS_PP_RX_ERR_QUEUE35_E, CPSS_PP_RX_ERR_QUEUE36_E, CPSS_PP_RX_ERR_QUEUE37_E, CPSS_PP_RX_ERR_QUEUE38_E, CPSS_PP_RX_ERR_QUEUE39_E, CPSS_PP_RX_ERR_QUEUE40_E, CPSS_PP_RX_ERR_QUEUE41_E, CPSS_PP_RX_ERR_QUEUE42_E, 
    CPSS_PP_RX_ERR_QUEUE43_E, CPSS_PP_RX_ERR_QUEUE44_E, CPSS_PP_RX_ERR_QUEUE45_E, CPSS_PP_RX_ERR_QUEUE46_E, CPSS_PP_RX_ERR_QUEUE47_E, CPSS_PP_RX_ERR_QUEUE48_E, CPSS_PP_RX_ERR_QUEUE49_E, CPSS_PP_RX_ERR_QUEUE50_E, CPSS_PP_RX_ERR_QUEUE51_E, CPSS_PP_RX_ERR_QUEUE52_E, CPSS_PP_RX_ERR_QUEUE53_E, CPSS_PP_RX_ERR_QUEUE54_E, CPSS_PP_RX_ERR_QUEUE55_E, CPSS_PP_RX_ERR_QUEUE56_E, CPSS_PP_RX_ERR_QUEUE57_E, CPSS_PP_RX_ERR_QUEUE58_E, CPSS_PP_RX_ERR_QUEUE59_E, CPSS_PP_RX_ERR_QUEUE60_E, CPSS_PP_RX_ERR_QUEUE61_E, 
    CPSS_PP_RX_ERR_QUEUE62_E, CPSS_PP_RX_ERR_QUEUE63_E, CPSS_PP_RX_ERR_QUEUE64_E, CPSS_PP_RX_ERR_QUEUE65_E, CPSS_PP_RX_ERR_QUEUE66_E, CPSS_PP_RX_ERR_QUEUE67_E, CPSS_PP_RX_ERR_QUEUE68_E, CPSS_PP_RX_ERR_QUEUE69_E, CPSS_PP_RX_ERR_QUEUE70_E, CPSS_PP_RX_ERR_QUEUE71_E, CPSS_PP_RX_ERR_QUEUE72_E, CPSS_PP_RX_ERR_QUEUE73_E, CPSS_PP_RX_ERR_QUEUE74_E, CPSS_PP_RX_ERR_QUEUE75_E, CPSS_PP_RX_ERR_QUEUE76_E, CPSS_PP_RX_ERR_QUEUE77_E, CPSS_PP_RX_ERR_QUEUE78_E, CPSS_PP_RX_ERR_QUEUE79_E, CPSS_PP_RX_ERR_QUEUE80_E, 
    CPSS_PP_RX_ERR_QUEUE81_E, CPSS_PP_RX_ERR_QUEUE82_E, CPSS_PP_RX_ERR_QUEUE83_E, CPSS_PP_RX_ERR_QUEUE84_E, CPSS_PP_RX_ERR_QUEUE85_E, CPSS_PP_RX_ERR_QUEUE86_E, CPSS_PP_RX_ERR_QUEUE87_E, CPSS_PP_RX_ERR_QUEUE88_E, CPSS_PP_RX_ERR_QUEUE89_E, CPSS_PP_RX_ERR_QUEUE90_E, CPSS_PP_RX_ERR_QUEUE91_E, CPSS_PP_RX_ERR_QUEUE92_E, CPSS_PP_RX_ERR_QUEUE93_E, CPSS_PP_RX_ERR_QUEUE94_E, CPSS_PP_RX_ERR_QUEUE95_E, CPSS_PP_RX_ERR_QUEUE96_E, CPSS_PP_RX_ERR_QUEUE97_E, CPSS_PP_RX_ERR_QUEUE98_E, CPSS_PP_RX_ERR_QUEUE99_E, 
    CPSS_PP_RX_ERR_QUEUE100_E, CPSS_PP_RX_ERR_QUEUE101_E, CPSS_PP_RX_ERR_QUEUE102_E, CPSS_PP_RX_ERR_QUEUE103_E, CPSS_PP_RX_ERR_QUEUE104_E, CPSS_PP_RX_ERR_QUEUE105_E, CPSS_PP_RX_ERR_QUEUE106_E, CPSS_PP_RX_ERR_QUEUE107_E, CPSS_PP_RX_ERR_QUEUE108_E, CPSS_PP_RX_ERR_QUEUE109_E, CPSS_PP_RX_ERR_QUEUE110_E, CPSS_PP_RX_ERR_QUEUE111_E, CPSS_PP_RX_ERR_QUEUE112_E, CPSS_PP_RX_ERR_QUEUE113_E, CPSS_PP_RX_ERR_QUEUE114_E, CPSS_PP_RX_ERR_QUEUE115_E, CPSS_PP_RX_ERR_QUEUE116_E, CPSS_PP_RX_ERR_QUEUE117_E, 
    CPSS_PP_RX_ERR_QUEUE118_E, CPSS_PP_RX_ERR_QUEUE119_E, CPSS_PP_RX_ERR_QUEUE120_E, CPSS_PP_RX_ERR_QUEUE121_E, CPSS_PP_RX_ERR_QUEUE122_E, CPSS_PP_RX_ERR_QUEUE123_E, CPSS_PP_RX_ERR_QUEUE124_E, CPSS_PP_RX_ERR_QUEUE125_E, CPSS_PP_RX_ERR_QUEUE126_E, CPSS_PP_RX_ERR_QUEUE127_E, CPSS_PP_PTP_TAI_INCOMING_TRIGGER_E, CPSS_PP_PTP_TAI_GENERATION_E, CPSS_PP_TQ_PORT_MICRO_BURST_E, CPSS_PP_PORT_PTP_MIB_FRAGMENT_E, CPSS_PP_LMU_LATENCY_EXCEED_THRESHOLD_E, CPSS_PP_TQ_PORT_HR_CROSSED_THRESHOLD_E, 
    CPSS_PP_PCL_ACTION_TRIGGERED_E, CPSS_PP_MACSEC_SA_EXPIRED_E, CPSS_PP_MACSEC_SA_PN_FULL_E, CPSS_PP_MACSEC_STATISTICS_SUMMARY_E, CPSS_PP_MACSEC_TRANSFORM_ENGINE_ERR_E, CPSS_PP_MACSEC_EGRESS_SEQ_NUM_ROLLOVER_E, CPSS_PP_EM_AUTO_LEARN_INDIRECT_ADDRESS_OUT_OF_RANGE_EVENT_E, CPSS_PP_EM_AUTO_LEARN_FLOW_ID_ALLOCATION_FAILED_EVENT_E, CPSS_PP_EM_AUTO_LEARN_FLOW_ID_RANGE_FULL_EVENT_E, CPSS_PP_EM_AUTO_LEARN_FLOW_ID_THRESHOLD_CROSSED_EVENT_E, CPSS_PP_EM_AUTO_LEARN_FLOW_ID_EMPTY_EVENT_E, 
    CPSS_PP_EM_AUTO_LEARN_COLLISION_EVENT_E, CPSS_PP_EM_AUTO_LEARN_ILLEGAL_ADDRESS_ACCESS_EVENT_E, CPSS_PP_EM_AUTO_LEARN_ILLEGAL_TABLE_OVERLAP_EVENT_E, CPSS_PP_EM_AUTO_LEARN_CHANNEL_0_SHM_ANSWER_FIFO_OVERFLOW_EVENT_E, CPSS_PP_EM_AUTO_LEARN_CHANNEL_1_SHM_ANSWER_FIFO_OVERFLOW_EVENT_E, CPSS_PP_PORT_AN_HCD_FOUND_E, CPSS_PP_PORT_AN_RESTART_E, CPSS_PP_PORT_AN_PARALLEL_DETECT_E, CPSS_PP_PORT_LANE_FEC_ERROR_E, CPSS_PP_HSR_PRP_PNT_NUM_OF_READY_ENTRIES_E, CPSS_PP_STREAM_LATENT_ERROR_E, CPSS_PP_CM3_WD_E, 
    CPSS_PP_CM3_DOORBELL_E, CPSS_PP_UNI_EV_DUMMY_MAX_E, CPSS_PP_UNI_EV_MAX_E = 637, CPSS_SRVCPU_IPC_E, CPSS_SRVCPU_PORT_LINK_STATUS_CHANGED_E, CPSS_SRVCPU_PORT_802_3_AP_E, CPSS_SRVCPU_PORT_REMOTE_FAULT_TX_CHANGE_E, CPSS_SRVCPU_PORT_AP_DISABLE_E, CPSS_SRVCPU_RESERVED_5, CPSS_SRVCPU_RESERVED_6, CPSS_SRVCPU_RESERVED_7, CPSS_SRVCPU_RESERVED_8, CPSS_SRVCPU_RESERVED_9, CPSS_SRVCPU_MAX_E = 647, CPSS_XBAR_UNI_EV_MIN_E, CPSS_XBAR_HG_LANE_SYNCH_CHANGE_E = 648, CPSS_XBAR_HG_LANE_COMMA_ALIGN_CHANGE_E, 
    CPSS_XBAR_GPORT_INVALID_TRG_DROP_CNT_INC_E, CPSS_XBAR_GPORT_DIAG_CELL_RX_CNTR_INC_E, CPSS_XBAR_MISC_E, CPSS_XBAR_HG_PING_RECEIVED_E, CPSS_XBAR_HOST_RX_FIFO_PEND_E, CPSS_XBAR_HOST_SEND_CELL_E, CPSS_XBAR_HG_ALIGNMENT_LOCK_CHANGE_E, CPSS_XBAR_HG_PING_E, CPSS_XBAR_SD_INV_ADDR_E, CPSS_XBAR_SXBAR_INV_ADDR_E, CPSS_XBAR_S_INV_ADDR_E, CPSS_XBAR_G_INV_ADDR_E, CPSS_XBAR_MC_INV_ADDR_E, CPSS_XBAR_UNI_EV_DUMMY_MAX_E, CPSS_XBAR_UNI_EV_MAX_E = 662, CPSS_FA_UNI_EV_MIN_E, CPSS_FA_UC_PRIO_BUF_FULL_E = 663, 
    CPSS_FA_MC_PRIO_BUF_FULL_E, CPSS_FA_UC_RX_BUF_FULL_E, CPSS_FA_MC_RX_BUF_FULL_E, CPSS_FA_WD_FPORT_GRP_E, CPSS_FA_MC_WD_EXP_E, CPSS_FA_GLBL_DESC_FULL_E, CPSS_FA_MAC_UPD_THRS_E, CPSS_FA_DROP_DEV_EN_E, CPSS_FA_MISC_I2C_TIMEOUT_E, CPSS_FA_MISC_STATUS_E, CPSS_FA_UNI_EV_DUMMY_MAX_E, CPSS_FA_UNI_EV_MAX_E = 673, CPSS_DRAGONITE_UNI_EV_MIN_E, CPSS_DRAGONITE_PORT_ON_E = 674, CPSS_DRAGONITE_PORT_OFF_E, CPSS_DRAGONITE_DETECT_FAIL_E, CPSS_DRAGONITE_PORT_FAULT_E, CPSS_DRAGONITE_PORT_UDL_E, 
    CPSS_DRAGONITE_PORT_FAULT_ON_STARTUP_E, CPSS_DRAGONITE_PORT_PM_E, CPSS_DRAGONITE_POWER_DENIED_E, CPSS_DRAGONITE_OVER_TEMP_E, CPSS_DRAGONITE_TEMP_ALARM_E, CPSS_DRAGONITE_DEVICE_FAULT_E, CPSS_DRAGONITE_OVER_CONSUM_E, CPSS_DRAGONITE_VMAIN_LOW_AF_E, CPSS_DRAGONITE_VMAIN_LOW_AT_E, CPSS_DRAGONITE_VMAIN_HIGH_E, CPSS_DRAGONITE_READ_EVENT_E, CPSS_DRAGONITE_WRITE_EVENT_E, CPSS_DRAGONITE_ERROR_E, CPSS_DRAGONITE_UNI_EV_DUMMY_MAX_E, CPSS_DRAGONITE_UNI_EV_MAX_E = 691, CPSS_UNI_EV_DUMMY_MAX_E, 
    CPSS_UNI_EVENT_COUNT_E = 692, CPSS_UNI_RSRVD_EVENT_E = 65535} CPSS_UNI_EV_CAUSE_ENT;

File common/h/cpss/generic/events/private/prvCpssGenEvReq.h:
typedef enum {PRV_CPSS_DEVICE_TYPE_PP_E, PRV_CPSS_DEVICE_TYPE_FA_E, PRV_CPSS_DEVICE_TYPE_XBAR_E, PRV_CPSS_DEVICE_TYPE_DRAGONITE_E, PRV_CPSS_DEVICE_TYPE_LAST_E} PRV_CPSS_DEVICE_TYPE_ENT;
typedef GT_STATUS (*)(GT_U8, CPSS_UNI_EV_CAUSE_ENT, PRV_CPSS_EV_CONVERT_DIRECTION_ENT, GT_U32 *) PRV_CPSS_EVENT_EXT_DATA_CONVERT_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_UNI_EV_CAUSE_ENT, GT_U32) PRV_CPSS_EVENT_GENERATE_DEVICE_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_EVENT_GPP_ID_ENT, CPSS_EVENT_ISR_FUNC, void *) PRV_CPSS_EVENT_GPP_ISR_CONNECT_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32 *) PRV_CPSS_EVENT_MAC_EXT_DATA_CONVERT_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_UNI_EV_CAUSE_ENT, GT_U32, CPSS_EVENT_MASK_SET_ENT *) PRV_CPSS_EVENT_MASK_DEVICE_GET_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_UNI_EV_CAUSE_ENT, GT_U32, CPSS_EVENT_MASK_SET_ENT) PRV_CPSS_EVENT_MASK_DEVICE_SET_FUNC;
typedef enum {PRV_CPSS_EV_CONVERT_DIRECTION_UNI_EVENT_TO_HW_INTERRUPT_E, PRV_CPSS_EV_CONVERT_DIRECTION_HW_INTERRUPT_TO_UNI_EVENT_E, PRV_CPSS_EV_CONVERT_TYPE_LAST} PRV_CPSS_EV_CONVERT_DIRECTION_ENT;

File common/h/cpss/generic/hwDriver/cpssHwDriverAPI.h:
typedef void (*)(struct CPSS_HW_DRIVER_STCT *) CPSS_HW_DRIVER_METHOD_DESTROY;
typedef GT_STATUS (*)(struct CPSS_HW_DRIVER_STCT *, GT_U32, GT_U32, GT_U32 *, GT_U32) CPSS_HW_DRIVER_METHOD_READ;
typedef GT_STATUS (*)(struct CPSS_HW_DRIVER_STCT *, GT_U32, GT_U32, GT_U32 *, GT_U32, GT_U32) CPSS_HW_DRIVER_METHOD_WRITE_MASK;
typedef struct CPSS_HW_DRIVER_STCT CPSS_HW_DRIVER_STC;
struct CPSS_HW_DRIVER_STCT;
typedef enum {CPSS_HW_DRIVER_TYPE_NONNE_E, CPSS_HW_DRIVER_TYPE_ARMADA_SMI_E, CPSS_HW_DRIVER_TYPE_I2C_E, CPSS_HW_DRIVER_TYPE_GEN_MMAP_E, CPSS_HW_DRIVER_TYPE_EAGLE_E, CPSS_HW_DRIVER_TYPE_GEN_MMAP_AC4_E, CPSS_HW_DRIVER_TYPE_GEN_MMAP_AC8_E, CPSS_HW_DRIVER_TYPE_GEN_MMAP_RELOF_E, CPSS_HW_DRIVER_TYPE_GEN_SLAVE_SMI_E, CPSS_HW_DRIVER_TYPE_PCI_KERN_E, CPSS_HW_DRIVER_TYPE_FALCON_Z_E, CPSS_HW_DRIVER_TYPE_PEX_E, CPSS_HW_DRIVER_TYPE_MBUS_E, CPSS_HW_DRIVER_TYPE_SIMULATION_EAGLE_E = 14, 
    CPSS_HW_DRIVER_TYPE_LAST_E = 65535} CPSS_HW_DRIVER_TYPE_ENT;

File common/h/cpss/generic/hwDriver/cpssHwDriverGeneric.h:
typedef struct CPSS_HW_DRIVER_SPLIT_ADDR_SPACE_RANGE_STCT CPSS_HW_DRIVER_SPLIT_ADDR_SPACE_RANGE_STC;
struct CPSS_HW_DRIVER_SPLIT_ADDR_SPACE_RANGE_STCT;

File common/h/cpss/generic/ipc/mvShmIpc.h:
typedef struct IPC_SHM_STCT IPC_SHM_STC;
struct IPC_SHM_STCT;
typedef void (*)(void *, IPC_SHM_SYNC_FUNC_MODE_ENT, void *, GT_UINTPTR, GT_U32) IPC_SHM_SYNC_FUNC;
typedef enum {IPC_SHM_SYNC_FUNC_MODE_READ_E, IPC_SHM_SYNC_FUNC_MODE_WRITE_E} IPC_SHM_SYNC_FUNC_MODE_ENT;

File common/h/cpss/generic/log/cpssLog.h:
typedef enum {CPSS_LOG_API_FORMAT_NO_PARAMS_E, CPSS_LOG_API_FORMAT_ALL_PARAMS_E, CPSS_LOG_API_FORMAT_NON_ZERO_PARAMS_E} CPSS_LOG_API_FORMAT_ENT;
typedef enum {CPSS_LOG_LIB_APP_DRIVER_CALL_E, CPSS_LOG_LIB_BRIDGE_E, CPSS_LOG_LIB_CNC_E, CPSS_LOG_LIB_CONFIG_E, CPSS_LOG_LIB_COS_E, CPSS_LOG_LIB_HW_INIT_E, CPSS_LOG_LIB_CSCD_E, CPSS_LOG_LIB_CUT_THROUGH_E, CPSS_LOG_LIB_DIAG_E, CPSS_LOG_LIB_FABRIC_E, CPSS_LOG_LIB_IP_E, CPSS_LOG_LIB_IPFIX_E, CPSS_LOG_LIB_IP_LPM_E, CPSS_LOG_LIB_L2_MLL_E, CPSS_LOG_LIB_LOGICAL_TARGET_E, CPSS_LOG_LIB_LPM_E, CPSS_LOG_LIB_MIRROR_E, CPSS_LOG_LIB_MULTI_PORT_GROUP_E, CPSS_LOG_LIB_NETWORK_IF_E, CPSS_LOG_LIB_NST_E, CPSS_LOG_LIB_OAM_E, 
    CPSS_LOG_LIB_PCL_E, CPSS_LOG_LIB_PHY_E, CPSS_LOG_LIB_POLICER_E, CPSS_LOG_LIB_PORT_E, CPSS_LOG_LIB_PROTECTION_E, CPSS_LOG_LIB_PTP_E, CPSS_LOG_LIB_SYSTEM_RECOVERY_E, CPSS_LOG_LIB_TCAM_E, CPSS_LOG_LIB_TM_GLUE_E, CPSS_LOG_LIB_TRUNK_E, CPSS_LOG_LIB_TTI_E, CPSS_LOG_LIB_TUNNEL_E, CPSS_LOG_LIB_VNT_E, CPSS_LOG_LIB_RESOURCE_MANAGER_E, CPSS_LOG_LIB_VERSION_E, CPSS_LOG_LIB_TM_E, CPSS_LOG_LIB_SMI_E, CPSS_LOG_LIB_INIT_E, CPSS_LOG_LIB_DRAGONITE_E, CPSS_LOG_LIB_VIRTUAL_TCAM_E, CPSS_LOG_LIB_INGRESS_E, 
    CPSS_LOG_LIB_EGRESS_E, CPSS_LOG_LIB_LATENCY_MONITORING_E, CPSS_LOG_LIB_TAM_E, CPSS_LOG_LIB_EXACT_MATCH_E, CPSS_LOG_LIB_PHA_E, CPSS_LOG_LIB_PACKET_ANALYZER_E, CPSS_LOG_LIB_FLOW_MANAGER_E, CPSS_LOG_LIB_BRIDGE_FDB_MANAGER_E, CPSS_LOG_LIB_I2C_E, CPSS_LOG_LIB_PPU_E, CPSS_LOG_LIB_EXACT_MATCH_MANAGER_E, CPSS_LOG_LIB_MAC_SEC_E, CPSS_LOG_LIB_PTP_MANAGER_E, CPSS_LOG_LIB_HSR_PRP_E, CPSS_LOG_LIB_STREAM_E, CPSS_LOG_LIB_IPFIX_MANAGER_E, CPSS_LOG_LIB_ALL_E} CPSS_LOG_LIB_ENT;
typedef enum {CPSS_LOG_POINTER_FORMAT_SIMPLE_E, CPSS_LOG_POINTER_FORMAT_PREFIX_E} CPSS_LOG_POINTER_FORMAT_ENT;
typedef enum {CPSS_LOG_TIME_FORMAT_DATE_TIME_E, CPSS_LOG_TIME_FORMAT_SHORT_DATE_TIME_E, CPSS_LOG_TIME_FORMAT_SHORT_DATE_ISO_TIME_E, CPSS_LOG_TIME_FORMAT_NO_DATE_TIME_E} CPSS_LOG_TIME_FORMAT_ENT;
typedef enum {CPSS_LOG_TYPE_INFO_E, CPSS_LOG_TYPE_ENTRY_LEVEL_FUNCTION_E, CPSS_LOG_TYPE_NON_ENTRY_LEVEL_FUNCTION_E, CPSS_LOG_TYPE_DRIVER_E, CPSS_LOG_TYPE_ERROR_E, CPSS_LOG_TYPE_ALL_E} CPSS_LOG_TYPE_ENT;

File common/h/cpss/generic/log/prvCpssLog.h:
typedef struct {
    GT_CHAR_PTR namePtr;
    GT_32 enumValue;
} PRV_CPSS_ENUM_STRING_VALUE_PAIR_STC;
typedef struct cpss_log_api_history_entry PRV_CPSS_LOG_API_HISTORY_ENTRY_STC;
typedef struct {
    GT_VOID_PTR paramValue;
    const PRV_CPSS_LOG_FUNC_PARAM_STC *paramsPtr;
} PRV_CPSS_LOG_API_STACK_PARAM_STC;
typedef struct {
    GT_U32 functionId;
    PRV_CPSS_LOG_PARAM_KEY_INFO_STC paramKey;
    GT_U32 numOfParams;
    PRV_CPSS_LOG_API_STACK_PARAM_STC paramsArr[20];
} PRV_CPSS_LOG_API_STACK_STC;
typedef struct {
    GT_U32 prvCpssLogApiTid;
    GT_U32 prvCpssLogApiContextIndex;
    CPSS_LOG_LIB_ENT prvCpssLogApiContextLib;
    GT_U32 prvCpssLogEntryFuncId;
    PRV_CPSS_LOG_API_STACK_STC prvCpssLogApiStack[32];
    GT_U32 prvCpssLogStackCurrentIndex;
} PRV_CPSS_LOG_CONTEXT_ENTRY_STC;
typedef struct {
    GT_CHAR_PTR apiName;
    GT_U32 numOfParams;
    const PRV_CPSS_LOG_FUNC_PARAM_STC * const *paramsPtrPtr;
    PRV_CPSS_LOG_PRE_LOG_HANDLER_FUN prvCpssLogPreLogFunc;
} PRV_CPSS_LOG_FUNC_ENTRY_STC;
typedef struct {
    GT_CHAR_PTR paramNamePtr;
    PRV_CPSS_LOG_PARAM_DIRECTION_ENT direction;
    PRV_CPSS_LOG_PARAM_FUNC logFunc;
} PRV_CPSS_LOG_FUNC_PARAM_STC;
typedef enum {PRV_CPSS_LOG_PARAM_IN_E, PRV_CPSS_LOG_PARAM_OUT_E, PRV_CPSS_LOG_PARAM_INOUT_E} PRV_CPSS_LOG_PARAM_DIRECTION_ENT;
typedef struct {
    PRV_CPSS_LOG_PARAM_KEY_INFO_STC paramKey;
    GT_CHAR *formatPtr;
    GT_VOID_PTR paramValue;
} PRV_CPSS_LOG_PARAM_ENTRY_INFO_STC;
typedef void (*)(CPSS_LOG_LIB_ENT, CPSS_LOG_TYPE_ENT, GT_CHAR_PTR, va_list *, GT_BOOL, PRV_CPSS_LOG_PARAM_ENTRY_INFO_STC *) PRV_CPSS_LOG_PARAM_FUNC;
typedef struct {
    GT_UINTPTR paramKeyArr[8];
} PRV_CPSS_LOG_PARAM_KEY_INFO_STC;
typedef void (*)(const PRV_CPSS_LOG_FUNC_ENTRY_STC **, GT_U32 *) PRV_CPSS_LOG_PARAM_LIB_DB_GET_FUNC;
typedef enum {PRV_CPSS_LOG_PHASE_ENTER_E, PRV_CPSS_LOG_PHASE_EXIT_E, PRV_CPSS_LOG_PHASE_ERROR_E, PRV_CPSS_LOG_PHASE_INFO_E} PRV_CPSS_LOG_PHASE_ENT;
typedef void (*)(struct __va_list_tag *, PRV_CPSS_LOG_PARAM_ENTRY_INFO_STC *) PRV_CPSS_LOG_PRE_LOG_HANDLER_FUN;
typedef struct {
    GT_U32 maxNumOfApiParams;
    GT_U32 maxStackDbSize;
    GT_U32 errorStackDbFull;
    GT_U32 errorStackParamDbFull;
    GT_U32 errorStackIndex0;
    GT_U32 errorWrongFuncId;
    GT_U32 errorParamInfoNullPointer;
} PRV_CPSS_LOG_STAT_STC;
typedef void (*)(CPSS_LOG_LIB_ENT, CPSS_LOG_TYPE_ENT, GT_CHAR_PTR, void *, PRV_CPSS_LOG_PARAM_ENTRY_INFO_STC *) PRV_CPSS_LOG_STC_FUNC;
struct cpss_log_api_history_entry;

File common/h/cpss/generic/version/gtVersion.h:
typedef struct {
    GT_U8 version[30];
} GT_VERSION;

File common/h/cpssAppPlatform/cpssAppPlatformExtPhyConfig.h:
typedef struct _CPSS_APP_PLATFORM_EXT_PHY_PORT_MAP CPSS_APP_PLATFORM_EXT_PHY_PORT_MAP;
typedef struct _CPSS_APP_PLATFORM_PHY_CFG_DATA_STC CPSS_APP_PLATFORM_PHY_CFG_DATA_STC;
typedef struct _CPSS_APP_PLATFORM_PHY_CFG_STC CPSS_APP_PLATFORM_PHY_CFG_STC;
typedef struct _CPSS_APP_PLATFORM_PHY_INFO_STC CPSS_APP_PLATFORM_PHY_INFO_STC;
typedef enum _CPSS_APP_PLATFORM_PHY_ITF_TYPE_ENT CPSS_APP_PLATFORM_PHY_ITF_TYPE_ENT;
typedef union _CPSS_APP_PLATFORM_PHY_ITF_UNT CPSS_APP_PLATFORM_PHY_ITF_UNT;
struct _CPSS_APP_PLATFORM_EXT_PHY_PORT_MAP;
struct _CPSS_APP_PLATFORM_PHY_CFG_DATA_STC;
struct _CPSS_APP_PLATFORM_PHY_CFG_STC;
struct _CPSS_APP_PLATFORM_PHY_INFO_STC;
enum _CPSS_APP_PLATFORM_PHY_ITF_TYPE_ENT;
union _CPSS_APP_PLATFORM_PHY_ITF_UNT;

File common/h/cpssAppPlatform/profiles/cpssAppPlatformBoardProfile.h:
typedef enum _CPSS_APP_PLATFORM_BOARD_PARAM_ENT CPSS_APP_PLATFORM_BOARD_PARAM_ENT;
typedef struct _CPSS_APP_PLATFORM_BOARD_PARAM_GENERIC_STC CPSS_APP_PLATFORM_BOARD_PARAM_GENERIC_STC;
typedef struct _CPSS_APP_PLATFORM_BOARD_PARAM_LED_STC CPSS_APP_PLATFORM_BOARD_PARAM_LED_STC;
typedef struct _CPSS_APP_PLATFORM_BOARD_PARAM_PP_MAP_STC CPSS_APP_PLATFORM_BOARD_PARAM_PP_MAP_STC;
typedef union _CPSS_APP_PLATFORM_BOARD_PARAM_UNT CPSS_APP_PLATFORM_BOARD_PARAM_UNT;
typedef struct _CPSS_APP_PLATFORM_BOARD_PROFILE_STC CPSS_APP_PLATFORM_BOARD_PROFILE_STC;
typedef enum _CPSS_APP_PLATFORM_EXT_DRV_CALL_TYPE_ENT CPSS_APP_PLATFORM_EXT_DRV_CALL_TYPE_ENT;
typedef enum _CPSS_APP_PLATFORM_OS_CALL_TYPE_ENT CPSS_APP_PLATFORM_OS_CALL_TYPE_ENT;
enum _CPSS_APP_PLATFORM_BOARD_PARAM_ENT;
struct _CPSS_APP_PLATFORM_BOARD_PARAM_GENERIC_STC;
struct _CPSS_APP_PLATFORM_BOARD_PARAM_LED_STC;
struct _CPSS_APP_PLATFORM_BOARD_PARAM_PP_MAP_STC;
union _CPSS_APP_PLATFORM_BOARD_PARAM_UNT;
struct _CPSS_APP_PLATFORM_BOARD_PROFILE_STC;
enum _CPSS_APP_PLATFORM_EXT_DRV_CALL_TYPE_ENT;
enum _CPSS_APP_PLATFORM_OS_CALL_TYPE_ENT;

File common/h/cpssAppPlatform/profiles/cpssAppPlatformRunTimeProfile.h:
typedef struct _CPSS_APP_PLATFORM_PORT_CONFIG_STC CPSS_APP_PLATFORM_PORT_CONFIG_STC;
typedef enum _CPSS_APP_PLATFORM_PORT_LIST_TYPE_ENT CPSS_APP_PLATFORM_PORT_LIST_TYPE_ENT;
typedef struct _CPSS_APP_PLATFORM_TRAFFIC_ENABLE_STC CPSS_APP_PLATFORM_TRAFFIC_ENABLE_STC;
struct _CPSS_APP_PLATFORM_PORT_CONFIG_STC;
enum _CPSS_APP_PLATFORM_PORT_LIST_TYPE_ENT;
struct _CPSS_APP_PLATFORM_TRAFFIC_ENABLE_STC;

File common/h/cpssCommon/cpssBuffManagerPool.h:
typedef enum {CPSS_BM_POOL_1_BYTE_ALIGNMENT_E = 1, CPSS_BM_POOL_4_BYTE_ALIGNMENT_E = 3, CPSS_BM_POOL_8_BYTE_ALIGNMENT_E = 7, CPSS_BM_POOL_16_BYTE_ALIGNMENT_E = 15} CPSS_BM_POOL_ALIGNMENT_ENT;
typedef void * CPSS_BM_POOL_ID;

File common/h/cpssCommon/cpssFormatConvert.h:
typedef enum {CPSS_FORMAT_CONVERT_FIELD_CHECK_BITS_E, CPSS_FORMAT_CONVERT_FIELD_CHECK_NONE_E, CPSS_FORMAT_CONVERT_FIELD_CHECK_BY_MAXVALUE_E} CPSS_FORMAT_CONVERT_FIELD_CHECK_ENT;
typedef struct {
    CPSS_FORMAT_CONVERT_FIELD_TYPE_ENT fieldTypeOrSizeOf;
    GT_U16 stcOrExtMemByteOffset;
    GT_U32 mask;
    GT_U32 pattern;
} CPSS_FORMAT_CONVERT_FIELD_CONDITION_STC;
typedef enum {CPSS_FORMAT_CONVERT_FIELD_CONTEXT_CONVERT_TAB_E, CPSS_FORMAT_CONVERT_FIELD_CONTEXT_CONVERT_FUNC_E, CPSS_FORMAT_CONVERT_FIELD_CONTEXT_CONDITION_E, CPSS_FORMAT_CONVERT_FIELD_CONTEXT_MAXVALUE_E} CPSS_FORMAT_CONVERT_FIELD_CONTEXT_ENT;
typedef enum {CPSS_FORMAT_CONVERT_FIELD_CONVERT_NONE_E, CPSS_FORMAT_CONVERT_FIELD_CONVERT_BY_TABLE_E, CPSS_FORMAT_CONVERT_FIELD_CONVERT_BY_FUNCTION_E} CPSS_FORMAT_CONVERT_FIELD_CONVERT_CMD_ENT;
typedef struct __CPSS_FORMAT_CONVERT_FIELD_INFO_STC CPSS_FORMAT_CONVERT_FIELD_INFO_STC;
typedef enum {CPSS_FORMAT_CONVERT_FIELD_PTR_CMD_NONE_E, CPSS_FORMAT_CONVERT_FIELD_PTR_CMD_USE_NOT_SAVE_E, CPSS_FORMAT_CONVERT_FIELD_PTR_CMD_SAVE_NOT_USE_E, CPSS_FORMAT_CONVERT_FIELD_PTR_CMD_USE_AND_SAVE_E} CPSS_FORMAT_CONVERT_FIELD_PTR_CMD_ENT;
typedef enum {CPSS_FORMAT_CONVERT_FIELD_SIZEOF_1BYTE_E = 1, CPSS_FORMAT_CONVERT_FIELD_SIZEOF_2BYTES_E, CPSS_FORMAT_CONVERT_FIELD_SIZEOF_4BYTES_E = 4, CPSS_FORMAT_CONVERT_FIELD_SIZEOF_8BYTES_E = 8, CPSS_FORMAT_CONVERT_FIELD_BOOL_E, CPSS_FORMAT_CONVERT_FIELD_INVERTED_BOOL_E, CPSS_FORMAT_CONVERT_FIELD_EXT_MEM_SIZEOF_1BYTE_E, CPSS_FORMAT_CONVERT_FIELD_EXT_MEM_SIZEOF_2BYTES_E, CPSS_FORMAT_CONVERT_FIELD_EXT_MEM_SIZEOF_4BYTES_E, CPSS_FORMAT_CONVERT_FIELD_BYTE_ARRAY_E, 
    CPSS_FORMAT_CONVERT_FIELD_BYTE_ARRAY_ASCENT_E, CPSS_FORMAT_CONVERT_FIELD_STC_PTR_E, CPSS_FORMAT_CONVERT_FIELD_CONSTANT_VALUE_E, CPSS_FORMAT_CONVERT_FIELD_DUMMY_E, CPSS_FORMAT_CONVERT_FIELD_ENDLIST_E} CPSS_FORMAT_CONVERT_FIELD_TYPE_ENT;
typedef GT_STATUS (*)(GT_BOOL, GT_U32, GT_U32 *) CPSS_FORMAT_CONVERT_FIELD_VAL_CONVERT_FUNC;
typedef struct {
    GT_U32 stcValue;
    GT_U32 rawValue;
} CPSS_FORMAT_CONVERT_FIELD_VAL_CONVERT_STC;
struct __CPSS_FORMAT_CONVERT_FIELD_INFO_STC;

File common/h/cpssCommon/private/mxml/prvCpssMxml.h:
struct mxml_attr_s;
typedef struct mxml_attr_s mxml_attr_t;
typedef void (*)(void *) mxml_custom_destroy_cb_t;
typedef int (*)(mxml_node_t *, const char *) mxml_custom_load_cb_t;
struct mxml_custom_s;
typedef char *(*)(mxml_node_t *) mxml_custom_save_cb_t;
typedef struct mxml_custom_s mxml_custom_t;
struct mxml_element_s;
typedef struct mxml_element_s mxml_element_t;
typedef int (*)(const char *) mxml_entity_cb_t;
typedef void (*)(const char *) mxml_error_cb_t;
struct mxml_index_s;
typedef struct mxml_index_s mxml_index_t;
typedef mxml_type_t (*)(mxml_node_t *) mxml_load_cb_t;
struct mxml_node_s;
typedef struct mxml_node_s mxml_node_t;
typedef const char *(*)(mxml_node_t *, int) mxml_save_cb_t;
typedef void (*)(mxml_node_t *, mxml_sax_event_t, void *) mxml_sax_cb_t;
enum mxml_sax_event_e;
typedef enum mxml_sax_event_e mxml_sax_event_t;
struct mxml_text_s;
typedef struct mxml_text_s mxml_text_t;
enum mxml_type_e;
typedef enum mxml_type_e mxml_type_t;
typedef union mxml_value_u mxml_value_t;
union mxml_value_u;

File common/h/cpssCommon/private/mxml/prvCpssMxmlConfig.h:
typedef unsigned long mxml_size_t;

File common/h/cpssCommon/private/prvCpssAvlTree.h:
typedef enum {PRV_CPSS_AVL_TREE_FIND_EQUAL_E, PRV_CPSS_AVL_TREE_FIND_MAX_LESS_OR_EQUAL_E, PRV_CPSS_AVL_TREE_FIND_MIN_GREATER_OR_EQUAL_E} PRV_CPSS_AVL_TREE_FIND_ENT;
typedef void * PRV_CPSS_AVL_TREE_ID;
typedef void * PRV_CPSS_AVL_TREE_ITERATOR_ID;
typedef struct {
    PRV_CPSS_AVL_TREE_PATH path;
    PRV_CPSS_AVL_TREE_ID treeId;
    PRV_CPSS_AVL_TREE_SEEK_ENT defaultSeekType;
    GT_BOOL doFind;
    GT_BOOL doSeek;
    GT_BOOL doDefaultSeek;
    void *bookmarkPtr;
    PRV_CPSS_AVL_TREE_FIND_ENT findType;
    PRV_CPSS_AVL_TREE_SEEK_ENT seekType;
} PRV_CPSS_AVL_TREE_ITERATOR_STC;
typedef GT_U8 [8] PRV_CPSS_AVL_TREE_PATH;
typedef enum {PRV_CPSS_AVL_TREE_SEEK_THIS_E, PRV_CPSS_AVL_TREE_SEEK_NEXT_E, PRV_CPSS_AVL_TREE_SEEK_PREVIOUS_E, PRV_CPSS_AVL_TREE_SEEK_FIRST_E, PRV_CPSS_AVL_TREE_SEEK_LAST_E} PRV_CPSS_AVL_TREE_SEEK_ENT;

File common/h/cpssCommon/private/prvCpssDevMemManager.h:
typedef struct dmmBlock GT_DMM_BLOCK;
typedef struct _gtDmmPartition GT_DMM_PARTITION;
typedef struct _gtDmmSortedPartitionElement GT_DMM_SORTED_PARTITION_ELEMENT;
struct _gtDmmPartition;
struct _gtDmmSortedPartitionElement;
struct dmmBlock;

File common/h/cpssCommon/private/prvCpssMemLib.h:
typedef struct memData STRUCT_MEM_DATA;
struct memData;

File common/h/cpssCommon/private/prvCpssMisc.h:
typedef struct {
    GT_U32 startBit;
    GT_U32 numOfBits;
    GT_U32 previousFieldType;
} PRV_CPSS_ENTRY_FORMAT_TABLE_STC;
typedef struct {
    GT_U32 secondsLow;
    GT_U32 secondsHigh;
    GT_U32 nanoseconds;
} PRV_CPSS_TIMESTAMP_STC;

File common/h/cpssCommon/private/prvCpssSkipList.h:
typedef GT_COMP_RES (*)(void *, void *) FUNCP_SL_COMP;

File common/h/cpssDriver/pp/config/generic/cpssDrvPpGenDump.h:
typedef enum {CPSS_MEMORY_DUMP_BYTE_E, CPSS_MEMORY_DUMP_SHORT_E, CPSS_MEMORY_DUMP_WORD_E} CPSS_MEMORY_DUMP_TYPE_ENT;

File common/h/cpssDriver/pp/config/prvCpssDrvPpCfgInit.h:
typedef enum {PRV_CPSS_DRV_DEV_ID_LOCATION_PCI_CONFIG_CYCLE_ADDR_0x00000000_E, PRV_CPSS_DRV_DEV_ID_LOCATION_PEX_CONFIGURATION_HEADER_ADDR_0X00070000_E, PRV_CPSS_DRV_DEV_ID_LOCATION_DEVICE_ADDR_0x0000004C_E} PRV_CPSS_DRV_DEV_ID_LOCATION_ENT;
typedef struct {
    GT_BOOL prvCpssDrvAfterDbRelease;
    GT_BOOL performReadAfterWrite;
} PRV_CPSS_DRV_GLOBAL_DATA_STC;
typedef struct {
    CPSS_PP_INTERFACE_CHANNEL_ENT mngInterfaceType;
    CPSS_HW_INFO_STC hwInfo[8];
    CPSS_SYS_HA_MODE_ENT ppHAState;
    PRV_CPSS_DRV_DEV_ID_LOCATION_ENT devIdLocationType;
    GT_U32 numOfPortGroups;
    GT_U32 isrAddrCompletionRegionsBmp;
    GT_U32 appAddrCompletionRegionsBmp;
} PRV_CPSS_DRV_PP_PHASE_1_INPUT_INFO_STC;
typedef struct {
    CPSS_PP_DEVICE_TYPE devType;
    GT_U8 revision;
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
    CPSS_PP_SUB_FAMILY_TYPE_ENT devSubFamily;
    GT_U32 numOfPorts;
    GT_U32 numOfTiles;
    CPSS_PORTS_BMP_STC existingPorts;
} PRV_CPSS_DRV_PP_PHASE_1_OUTPUT_INFO_STC;

File common/h/cpssDriver/pp/hardware/cpssDriverPpHw.h:
typedef struct {
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_READ_FUNC hwAccessRegisterReadFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_WRITE_FUNC hwAccessRegisterWriteFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_FIELD_READ_FUNC hwAccessRegisterFieldReadFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_FIELD_WRITE_FUNC hwAccessRegisterFieldWriteFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_BIT_MASK_READ_FUNC hwAccessRegisterBitMaskReadFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_BIT_MASK_WRITE_FUNC hwAccessRegisterBitMaskWriteFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_RAM_READ_FUNC hwAccessRamReadFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_RAM_WRITE_FUNC hwAccessRamWriteFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_RAM_WRITE_FUNC hwAccessRamWriteInReverseFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_VECTOR_READ_FUNC hwAccessVectorReadFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_VECTOR_WRITE_FUNC hwAccessVectorWriteFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_READ_FUNC hwAccessRegisterIsrReadFunc;
    CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_WRITE_FUNC hwAccessRegisterIsrWriteFunc;
} CPSS_DRV_HW_ACCESS_OBJ_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_RAM_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_RAM_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_BIT_MASK_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_BIT_MASK_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_FIELD_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_FIELD_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_REGISTER_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *, GT_U32 *, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_VECTOR_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *, GT_U32 *, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT) CPSS_DRV_HW_ACCESS_PORT_GROUP_VECTOR_WRITE_FUNC;
typedef enum {CPSS_DRV_HW_ACCESS_STAGE_PRE_E, CPSS_DRV_HW_ACCESS_STAGE_POST_E} CPSS_DRV_HW_ACCESS_STAGE_ENT;
typedef enum {CPSS_DRV_HW_RESOURCE_SWITCHING_AND_MG0_CORE_E = 3, CPSS_DRV_HW_RESOURCE_MG1_CORE_E = 5, CPSS_DRV_HW_RESOURCE_MG2_CORE_E, CPSS_DRV_HW_RESOURCE_MG3_CORE_E, CPSS_DRV_HW_RESOURCE_INTERNAL_PCI_E = 0, CPSS_DRV_HW_RESOURCE_DFX_CORE_E = 8} CPSS_DRV_HW_RESOURCE_TYPE_ENT;
typedef enum {CPSS_DRV_HW_TRACE_TYPE_READ_E, CPSS_DRV_HW_TRACE_TYPE_WRITE_E, CPSS_DRV_HW_TRACE_TYPE_BOTH_E, CPSS_DRV_HW_TRACE_TYPE_WRITE_DELAY_E, CPSS_DRV_HW_TRACE_TYPE_ALL_E} CPSS_DRV_HW_TRACE_TYPE_ENT;

File common/h/cpssDriver/pp/hardware/prvCpssDrvHwCntl.h:
typedef struct {
    GT_U32 ramBase;
    GT_U32 ramBaseMask;
    GT_U8 burstSize;
    GT_U8 addrResolution;
} PRV_CPSS_DRV_RAM_BURST_INFO_STC;
typedef struct {
    GT_U32 addrCompletShadow[8];
    GT_U32 isrAddrCompletionRegionsBmp;
    GT_U32 isrAddrRegionUsed;
    GT_U32 isrAddrRegionMin;
    GT_U32 isrAddrRegionMax;
    GT_U32 appAddrCompletionRegionsBmp;
    GT_U32 appAddrRegionUsed;
    GT_U32 appAddrRegionMin;
    GT_U32 appAddrRegionMax;
    CPSS_OS_MUTEX hwComplSem;
    GT_U8 compIdx;
    PRV_CPSS_DRV_RAM_BURST_INFO_STC *ramBurstInfo;
    GT_U8 ramBurstInfoLen;
    GT_U32 lastWriteAddr[2];
    GT_BOOL doReadAfterWrite;
    GT_U32 dummyReadAfterWriteRegAddr;
    PRV_SIM_DRV_STRUCT_PP_HW_STC simInfo;
} PRV_CPSS_DRV_STRUCT_PP_PORT_GROUP_HW_STC;
typedef struct {
    GT_U8 devId;
    GT_BOOL addrCompletEnable;
} PRV_SIM_DRV_STRUCT_PP_HW_STC;

File common/h/cpssDriver/pp/hardware/prvCpssDrvObj.h:
typedef struct {
    PRV_CPSS_DRV_HW_CFG_PHASE1_INIT_FUNC drvHwPpCfgPhase1Init;
    PRV_CPSS_DRV_HW_INTERRUPT_INIT_FUNC drvHwPpInterruptInit;
    PRV_CPSS_DRV_HW_EVENTS_MASK_FUNC drvHwPpEventsMask;
    PRV_CPSS_DRV_HW_EVENTS_MASK_GET_FUNC drvHwPpEventsMaskGet;
    PRV_CPSS_DRV_HW_SET_RAM_BURST_CONFIG_FUNC drvHwPpSetRamBurstConfig;
    PRV_CPSS_DRV_HW_INIT_INT_MASKS_FUNC drvHwPpInitInMasks;
    PRV_CPSS_DRV_HW_PP_HA_MODE_SET_FUNC drvHwPpHaModeSet;
    PRV_CPSS_DRV_HW_INTERRUPTS_TREE_GET_FUNC drvHwPpInterruptsTreeGet;
} PRV_CPSS_DRV_GEN_OBJ_STC;
typedef GT_STATUS (*)(GT_U8, PRV_CPSS_DRV_PP_PHASE_1_INPUT_INFO_STC *, PRV_CPSS_DRV_PP_PHASE_1_OUTPUT_INFO_STC *) PRV_CPSS_DRV_HW_CFG_PHASE1_INIT_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL) PRV_CPSS_DRV_HW_CNTL_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL) PRV_CPSS_DRV_HW_EVENTS_MASK_FUNC;
typedef void (*)(GT_U8, GT_U32, GT_BOOL *) PRV_CPSS_DRV_HW_EVENTS_MASK_GET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_GET_REG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, PRV_CPSS_DRV_INT_INIT_PHASE_ENT) PRV_CPSS_DRV_HW_INIT_INT_MASKS_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *, const CPSS_INTERRUPT_SCAN_STC **, GT_U32 *, GT_U32 **) PRV_CPSS_DRV_HW_INTERRUPTS_TREE_GET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_INTERRUPT_INIT_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_ISR_READ_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_ISR_WRITE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_MG_GET_REG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_MG_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_MG_SET_REG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_MG_WRITE_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_SYS_HA_MODE_ENT) PRV_CPSS_DRV_HW_PP_HA_MODE_SET_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_READ_INT_PCI_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_READ_RAM_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_READ_REG_BITMASK_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *, GT_U32 *, GT_U32) PRV_CPSS_DRV_HW_READ_VEC_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_GET_REG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_READ_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_SET_REG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32) PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_WRITE_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, PRV_CPSS_DRV_RAM_BURST_INFO_STC *, GT_U8) PRV_CPSS_DRV_HW_SET_RAM_BURST_CONFIG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_SET_SEG_FIELD_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_WRITE_INT_PCI_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_WRITE_RAM_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32 *) PRV_CPSS_DRV_HW_WRITE_RAM_REV_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_WRITE_REG_BITMASK_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_HW_WRITE_REG_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32 *, GT_U32 *, GT_U32) PRV_CPSS_DRV_HW_WRITE_VEC_FUNC;
typedef struct {
    PRV_CPSS_DRV_HW_CNTL_FUNC drvHwCntlInit;
    PRV_CPSS_DRV_HW_READ_REG_FUNC drvHwPpReadReg;
    PRV_CPSS_DRV_HW_WRITE_REG_FUNC drvHwPpWriteReg;
    PRV_CPSS_DRV_HW_GET_REG_FIELD_FUNC drvHwPpGetRegField;
    PRV_CPSS_DRV_HW_SET_SEG_FIELD_FUNC drvHwPpSetRegField;
    PRV_CPSS_DRV_HW_READ_REG_BITMASK_FUNC drvHwPpReadRegBitMask;
    PRV_CPSS_DRV_HW_WRITE_REG_BITMASK_FUNC drvHwPpWriteRegBitMask;
    PRV_CPSS_DRV_HW_READ_RAM_FUNC drvHwPpReadRam;
    PRV_CPSS_DRV_HW_WRITE_RAM_FUNC drvHwPpWriteRam;
    PRV_CPSS_DRV_HW_READ_VEC_FUNC drvHwPpReadVec;
    PRV_CPSS_DRV_HW_WRITE_VEC_FUNC drvHwPpWriteVec;
    PRV_CPSS_DRV_HW_WRITE_RAM_REV_FUNC drvHwPpWriteRamRev;
    PRV_CPSS_DRV_HW_ISR_READ_FUNC drvHwPpIsrRead;
    PRV_CPSS_DRV_HW_ISR_WRITE_FUNC drvHwPpIsrWrite;
    PRV_CPSS_DRV_HW_READ_INT_PCI_REG_FUNC drvHwPpReadIntPciReg;
    PRV_CPSS_DRV_HW_WRITE_INT_PCI_REG_FUNC drvHwPpWriteIntPciReg;
    PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_READ_REG_FUNC drvHwPpResetAndInitControllerReadReg;
    PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_WRITE_REG_FUNC drvHwPpResetAndInitControllerWriteReg;
    PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_GET_REG_FIELD_FUNC drvHwPpResetAndInitControllerGetRegField;
    PRV_CPSS_DRV_HW_RESET_AND_INIT_CTRL_SET_REG_FIELD_FUNC drvHwPpResetAndInitControllerSetRegField;
    PRV_CPSS_DRV_HW_MG_READ_REG_FUNC drvHwPpMgReadReg;
    PRV_CPSS_DRV_HW_MG_WRITE_REG_FUNC drvHwPpMgWriteReg;
    PRV_CPSS_DRV_HW_MG_GET_REG_FIELD_FUNC drvHwPpMgGetRegField;
    PRV_CPSS_DRV_HW_MG_SET_REG_FIELD_FUNC drvHwPpMgSetRegField;
} PRV_CPSS_DRV_MNG_INF_OBJ_STC;
typedef struct {
    PRV_CPSS_DRV_GEN_OBJ_STC *genPtr;
    PRV_CPSS_DRV_MNG_INF_OBJ_STC *busPtr;
    CPSS_SYS_HA_MODE_ENT HAState;
} PRV_CPSS_DRV_OBJ_STC;

File common/h/cpssDriver/pp/interrupts/dxExMx/prvCpssDrvExMxEventsPxPipe.h:
typedef enum {PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_GENERAL_SUMMARY_E, PRV_CPSS_PIPE_GLOBAL_S_PEX_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_PEX_ERR_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_FUNC_UNITS_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_DATA_PATH_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_PORTS_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_DFX_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_MG_INTERNAL_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_TX_SDMA_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RX_SDMA_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_DFX_1_SUM_E, 
    PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_FUNC_UNITS1_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_XSMI0_S_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_XSMI1_S_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED14_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED15_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_PORTS_1_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_PORTS_2_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_MG1_INTERNAL_SUM_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED19_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED20_E, 
    PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED21_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED22_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED23_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED24_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED25_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED26_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED27_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED28_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED29_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED30_E, PRV_CPSS_PIPE_GLOBAL_S_SUMMARY_RESERVED31_E, 
    PRV_CPSS_PIPE_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_FUNC_UNITS_INT_SUM_1_E, PRV_CPSS_PIPE_FUNC_UNITS_INT_SUM_2_E, PRV_CPSS_PIPE_FUNC_UNITS_INT_SUM_3_E, PRV_CPSS_PIPE_MG1_INT0_E, PRV_CPSS_PIPE_MG1_INT1_E, PRV_CPSS_PIPE_MG1_INT2_E, PRV_CPSS_PIPE_TXQ_LL_INT_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_E, PRV_CPSS_PIPE_TXQ_QCN_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_E, PRV_CPSS_PIPE_PFC_INT_E, PRV_CPSS_PIPE_MCFC_INT_E, PRV_CPSS_PIPE_CNC_INT_E, PRV_CPSS_PIPE_PCP_INT_E, 
    PRV_CPSS_PIPE_SIP_PHA_INT_E, PRV_CPSS_PIPE_IUNIT_INT_E, PRV_CPSS_PIPE_MUNIT_INT_E, PRV_CPSS_PIPE_GPIO_7_0_INT_E, PRV_CPSS_PIPE_GPIO_15_8_INT_E, PRV_CPSS_PIPE_GPIO_23_16_INT_E, PRV_CPSS_PIPE_GPIO_31_24_INT_E, PRV_CPSS_PIPE_I2C_0_INT_E, PRV_CPSS_PIPE_I2C_1_INT_E, PRV_CPSS_PIPE_R2INTR_SPI_INT_E, PRV_CPSS_PIPE_SBC2MG_INT_E, PRV_CPSS_PIPE_SD2MG_INT_E, PRV_CPSS_PIPE_SERVER_INT_E, PRV_CPSS_PIPE_FUNC_UNITS_INT_SUM_29_E, PRV_CPSS_PIPE_FUNC_UNITS_INT_SUM_30_E, PRV_CPSS_PIPE_FUNC_UNITS_INT_SUM_31_E, 
    PRV_CPSS_PIPE_DATA_PATH_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_TXFIFO_INT_E, PRV_CPSS_PIPE_RXDMA_INT_E, PRV_CPSS_PIPE_BM_INT_E, PRV_CPSS_PIPE_BMA_INT_E, PRV_CPSS_PIPE_TXDMA_INT_E, PRV_CPSS_PIPE_MPPM_INT_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED7_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED8_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED9_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED10_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED11_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED12_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED13_E, 
    PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED14_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED15_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED16_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED17_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED18_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED19_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED20_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED21_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED22_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED23_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED24_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED25_E, 
    PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED26_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED27_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED28_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED29_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED30_E, PRV_CPSS_PIPE_DATA_PATH_INT_RESERVED31_E, PRV_CPSS_PIPE_PORTS_INT_SUMMARY_E, PRV_CPSS_PIPE_GOP_PORT_0_INT_E, PRV_CPSS_PIPE_GOP_PORT_1_INT_E, PRV_CPSS_PIPE_GOP_PORT_2_INT_E, PRV_CPSS_PIPE_GOP_PORT_3_INT_E, PRV_CPSS_PIPE_GOP_PORT_4_INT_E, PRV_CPSS_PIPE_GOP_PORT_5_INT_E, 
    PRV_CPSS_PIPE_GOP_PORT_6_INT_E, PRV_CPSS_PIPE_GOP_PORT_7_INT_E, PRV_CPSS_PIPE_GOP_PORT_8_INT_E, PRV_CPSS_PIPE_GOP_PORT_9_INT_E, PRV_CPSS_PIPE_GOP_PORT_10_INT_E, PRV_CPSS_PIPE_GOP_PORT_11_INT_E, PRV_CPSS_PIPE_GOP_PORT_12_INT_E, PRV_CPSS_PIPE_GOP_PORT_13_INT_E, PRV_CPSS_PIPE_GOP_PORT_14_INT_E, PRV_CPSS_PIPE_GOP_PORT_15_INT_E, PRV_CPSS_PIPE_PORT_INT_SUM_17_E, PRV_CPSS_PIPE_PORT_INT_SUM_18_E, PRV_CPSS_PIPE_PORT_INT_SUM_19_E, PRV_CPSS_PIPE_PORT_INT_SUM_20_E, PRV_CPSS_PIPE_PORT_INT_SUM_21_E, 
    PRV_CPSS_PIPE_PORT_INT_SUM_22_E, PRV_CPSS_PIPE_PORT_INT_SUM_23_E, PRV_CPSS_PIPE_PORT_INT_SUM_24_E, PRV_CPSS_PIPE_PORT_INT_SUM_25_E, PRV_CPSS_PIPE_PORT_INT_SUM_26_E, PRV_CPSS_PIPE_PORT_INT_SUM_27_E, PRV_CPSS_PIPE_PORT_INT_SUM_28_E, PRV_CPSS_PIPE_PORT_INT_SUM_29_E, PRV_CPSS_PIPE_PORT_INT_SUM_30_E, PRV_CPSS_PIPE_PORT_INT_SUM_31_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_DFX_CLIENT_MGMT_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_MGMT_MACRO_MBUS_CLK_INT_E, 
    PRV_CPSS_PIPE_DFX_CLIENT_MPPM_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_RXDMA_TXFIFO_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_TXDMA_BM_BMA_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_CP_PHA_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_CP_PHA_MACRO_PP_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_CP_ING_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_TXQ_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_MSPG_10G0_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_MSPG_10G1_MACRO_CORE_CLK_INT_E, 
    PRV_CPSS_PIPE_DFX_CLIENT_MSPG_10G2_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_MSPG_25G3_MACRO_CORE_CLK_INT_E, PRV_CPSS_PIPE_DFX_CLIENT_CG_MACRO_MAC_CLK_INT_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_15_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_16_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_17_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_18_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_19_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_20_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_21_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_22_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_23_E, 
    PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_24_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_25_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_26_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_27_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_28_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_29_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_30_E, PRV_CPSS_PIPE_DFX_INTERRUPT_SUM_31_E, PRV_CPSS_PIPE_MISCELLANEOUS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_I2C_TIME_OUT_INTERRUPT_E, PRV_CPSS_PIPE_I2C_STATUS_INTERRUPT_E, PRV_CPSS_PIPE_ILLEGAL_ADDRESS_INTERRUPT_E, PRV_CPSS_PIPE_RX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_READ_TIMEOUT_E, PRV_CPSS_PIPE_UART_INTERRUPT_E, PRV_CPSS_PIPE_AU_QUEUE_OVERRUN_E, PRV_CPSS_PIPE_AU_QUEUE_ALMOST_FULL_E, PRV_CPSS_PIPE_AU_QUEUE_FULL_E, PRV_CPSS_PIPE_AU_QUEUE_PENDING_E, PRV_CPSS_PIPE_FU_QUEUE_FULL_E, PRV_CPSS_PIPE_FU_QUEUE_PENDING_E, PRV_CPSS_PIPE_MG_READ_DMA_DONE_E, PRV_CPSS_PIPE_CM3_TO_HOST_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PCIE_ADDRESS_UNMAPPED_E, PRV_CPSS_PIPE_GPP0_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_GPP1_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_GPP2_INTERRUPT_CAUSE_E, 
    PRV_CPSS_PIPE_GPP3_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_GPP4_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_GPP5_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_GPP6_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_GPP7_INTERRUPT_CAUSE_E, PRV_CPSS_PIPE_Z80_INTERRUPT_E, PRV_CPSS_PIPE_I2C_MASTER_INTERRUPT_E, PRV_CPSS_PIPE_ADDRESS_NO_MATCH_E, PRV_CPSS_PIPE_ADDRESS_VIOLATION_E, PRV_CPSS_PIPE_READ_BURST_VIOLATION_E, PRV_CPSS_PIPE_PORTS_ADDRESS_OUT_OF_RANGE_VIOLATION_E, PRV_CPSS_PIPE_MIB_COUNTERS_ADDRESS_OUT_OF_RANGE_VIOLATION_E, 
    PRV_CPSS_PIPE_SERDES_ADDRESS_OUT_OF_RANGE_VIOLATION_E, PRV_CPSS_PIPE_CPU_DOORBELL_INTERRUPT_TO_HOST_CPU_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU1_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU2_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU3_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU4_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU5_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU6_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU7_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU8_E, 
    PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU9_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU10_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU11_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU12_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU13_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU14_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU15_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU16_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU17_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU18_E, 
    PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU19_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU20_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU21_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU22_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU23_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU24_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU25_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU26_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU27_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU28_E, 
    PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU29_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU30_E, PRV_CPSS_PIPE_CPU_DOORBELL_DATA_TO_HOST_CPU31_E, PRV_CPSS_PIPE_RX_SDMA_SUMMARY_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED1_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_0_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_1_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_2_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_3_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_4_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_5_E, 
    PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_6_E, PRV_CPSS_PIPE_RX_SDMA_RX_BUFFER_QUEUE_7_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED10_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_0_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_1_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_2_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_3_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_4_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_5_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_6_E, PRV_CPSS_PIPE_RX_SDMA_RX_ERROR_QUEUE_7_E, PRV_CPSS_PIPE_RX_SDMA_RESOURCE_ERROR_CNT_OF_E, 
    PRV_CPSS_PIPE_RX_SDMA_BYTE_CNT_OF_E, PRV_CPSS_PIPE_RX_SDMA_PACKET_CNT_OF_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED22_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED23_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED24_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED25_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED26_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED27_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED28_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED29_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED30_E, PRV_CPSS_PIPE_RX_SDMA_RESERVED31_E, PRV_CPSS_PIPE_TX_SDMA_SUMMARY_E, 
    PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_0_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_1_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_2_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_3_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_4_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_5_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_6_E, PRV_CPSS_PIPE_TX_SDMA_TX_BUFFER_QUEUE_7_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_0_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_1_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_2_E, 
    PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_3_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_4_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_5_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_6_E, PRV_CPSS_PIPE_TX_SDMA_TX_ERROR_QUEUE_7_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_0_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_1_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_2_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_3_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_4_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_5_E, PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_6_E, 
    PRV_CPSS_PIPE_TX_SDMA_TX_END_QUEUE_7_E, PRV_CPSS_PIPE_TX_SDMA_TX_REJECT_0_E, PRV_CPSS_PIPE_TX_SDMA_RESERVED26_E, PRV_CPSS_PIPE_TX_SDMA_RESERVED27_E, PRV_CPSS_PIPE_TX_SDMA_RESERVED28_E, PRV_CPSS_PIPE_TX_SDMA_RESERVED29_E, PRV_CPSS_PIPE_TX_SDMA_RESERVED30_E, PRV_CPSS_PIPE_TX_SDMA_RESERVED31_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_1_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_2_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_3_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_4_E, 
    PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_5_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_6_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_7_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_8_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_9_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_10_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_11_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_12_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_13_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_14_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_15_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_16_E, 
    PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_17_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_18_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_19_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_20_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_21_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_22_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_23_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_24_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_25_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_26_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_27_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_28_E, 
    PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_29_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_30_E, PRV_CPSS_PIPE_DFX_1_INTERRUPT_SUM_31_E, PRV_CPSS_PIPE_FUNCTIONAL_1_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_1_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_2_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_3_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_4_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_5_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_6_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_7_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_8_E, 
    PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_9_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_10_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_11_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_12_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_13_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_14_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_15_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_16_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_17_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_18_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_19_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_20_E, 
    PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_21_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_22_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_23_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_24_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_25_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_26_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_27_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_28_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_29_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_30_E, PRV_CPSS_PIPE_FUNC_UNITS_1_INT_SUM_31_E, PRV_CPSS_PIPE_PORTS1_INT_SUMMARY_E, 
    PRV_CPSS_PIPE_PORT_1_INT_SUM_1_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_2_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_3_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_4_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_5_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_6_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_7_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_8_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_9_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_10_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_11_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_12_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_13_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_14_E, 
    PRV_CPSS_PIPE_PORT_1_INT_SUM_15_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_16_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_17_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_18_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_19_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_20_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_21_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_22_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_23_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_24_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_25_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_26_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_27_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_28_E, 
    PRV_CPSS_PIPE_PORT_1_INT_SUM_29_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_30_E, PRV_CPSS_PIPE_PORT_1_INT_SUM_31_E, PRV_CPSS_PIPE_PORTS2_INT_SUMMARY_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_1_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_2_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_3_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_4_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_5_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_6_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_7_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_8_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_9_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_10_E, 
    PRV_CPSS_PIPE_PORT_2_INT_SUM_11_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_12_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_13_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_14_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_15_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_16_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_17_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_18_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_19_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_20_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_21_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_22_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_23_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_24_E, 
    PRV_CPSS_PIPE_PORT_2_INT_SUM_25_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_26_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_27_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_28_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_29_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_30_E, PRV_CPSS_PIPE_PORT_2_INT_SUM_31_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_LL_INTERRUPT_CAUSE_SUM_E, PRV_CPSS_PIPE_LL_FIFO_INTERRUPT_CAUSE_SUM_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED5_E, 
    PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED16_E, 
    PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED27_E, 
    PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_LL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_LL_FIFO_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_EQ0_WRITE_LATENCY_FIFO_FULL_E, PRV_CPSS_PIPE_EQ1_WRITE_LATENCY_FIFO_FULL_E, PRV_CPSS_PIPE_EQ2_WRITE_LATENCY_FIFO_FULL_E, PRV_CPSS_PIPE_EQ3_WRITE_LATENCY_FIFO_FULL_E, PRV_CPSS_PIPE_EQ4_WRITE_LATENCY_FIFO_FULL_E, PRV_CPSS_PIPE_EQ5_WRITE_LATENCY_FIFO_FULL_E, 
    PRV_CPSS_PIPE_EQ6_WRITE_LATENCY_FIFO_FULL_E, PRV_CPSS_PIPE_EQ0_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_EQ1_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_EQ2_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_EQ3_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_EQ4_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_EQ5_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_EQ6_QUEUE_LAST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_LL_ARB0_BURST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_LL_ARB1_BURST_FIFO_OVERRUN_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED17_E, 
    PRV_CPSS_PIPE_LL_FIFO_RESERVED18_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED19_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED20_E, PRV_CPSS_PIPE_EQ_CTRL_TDM_LATENCY_FIFO_OVERRUN_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED22_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED23_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED24_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED25_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED26_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED27_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED28_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED29_E, PRV_CPSS_PIPE_LL_FIFO_RESERVED30_E, 
    PRV_CPSS_PIPE_LL_FIFO_RESERVED31_E, PRV_CPSS_PIPE_LL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_ID_FIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_LL_WRONG_ADDRESS_INT_E, PRV_CPSS_PIPE_BMX_NOT_READY_INT0_E, PRV_CPSS_PIPE_BMX_NOT_READY_INT1_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED11_E, 
    PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED23_E, 
    PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_LL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_QUEUE_GENERALINT1_SUM_E, PRV_CPSS_PIPE_TXQ_QUEUE_PORT_DESC_FULL0_INT_SUM_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED3_E, 
    PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_QUEUE_PORT_BUFF_FULL0_INT_SUM_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_QUEUE_GENERAL_INT2_SUM_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_QUEUE_TAIL_DROP_DQ_FIFO_FULL_INT_SUM_E, PRV_CPSS_PIPE_TXQ_QUEUE_STATISTIC_INT_SUM_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED14_E, 
    PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED26_E, 
    PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_QUEUE_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT1_SUMMARY_E, PRV_CPSS_PIPE_TXQ_GLOBAL_DESC_FULL_INT_E, PRV_CPSS_PIPE_TXQ_GLOBAL_BUFF_FULL_INT_E, PRV_CPSS_PIPE_TXQ_GLOBAL_DESC_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_GLOBAL_BUFF_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_LATENCY_FIFO_OVERFLOW_INT_E, 
    PRV_CPSS_PIPE_TXQ_LFIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_LIMIT_ID_FIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_CNC_UPDATE_0_DROP_INT_E, PRV_CPSS_PIPE_TXQ_CNC_UPDATE_1_DROP_INT_E, PRV_CPSS_PIPE_TXQ_CNC_UPDATE_2_DROP_INT_E, PRV_CPSS_PIPE_TXQ_CNC_UPDATE_3_DROP_INT_E, PRV_CPSS_PIPE_TXQ_VLAN_UPDATE_0_DROP_INT_E, PRV_CPSS_PIPE_TXQ_VLAN_UPDATE_1_DROP_INT_E, PRV_CPSS_PIPE_TXQ_VLAN_UPDATE_2_DROP_INT_E, PRV_CPSS_PIPE_TXQ_VLAN_UPDATE_3_DROP_INT_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT1_RESERVED16_E, 
    PRV_CPSS_PIPE_TXQ_GENERAL_INT1_RESERVED17_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT1_RESERVED18_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT1_RESERVED19_E, PRV_CPSS_PIPE_TXQ_QUEUE_WRONG_ADDR_INT_E, PRV_CPSS_PIPE_TXQ_CLEAR_DEMUX_FIFO_0_OVERRUNINT_E, PRV_CPSS_PIPE_TXQ_CLEAR_DEMUX_FIFO_1_OVERRUNINT_E, PRV_CPSS_PIPE_TXQ_CLEAR_DEMUX_FIFO_2_OVERRUNINT_E, PRV_CPSS_PIPE_TXQ_CLEAR_DEMUXF_IFO_3_OVERRUNINT_E, PRV_CPSS_PIPE_TXQ_PA_CLEAR_FIFO_0_FULL_INT_E, PRV_CPSS_PIPE_TXQ_PA_CLEAR_FIFO_1_FULL_INT_E, 
    PRV_CPSS_PIPE_TXQ_PA_CLEAR_FIFO_2_FULL_INT_E, PRV_CPSS_PIPE_TXQ_PA_CLEAR_FIFO_3_FULL_INT_E, PRV_CPSS_PIPE_TXQ_TD_CLR_ECC_ONE_ERROR_CORRECTED_INT_E, PRV_CPSS_PIPE_TXQ_TD_CLR_ECC_TWO_ERROR_DETECTED_INT_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT1_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUMMARY0_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT0_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT1_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT2_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT3_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT4_E, 
    PRV_CPSS_PIPE_TXQ_DESC_FULLPORT5_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT6_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT7_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT8_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT9_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT10_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT11_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT12_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT13_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT14_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT15_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT16_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT17_E, 
    PRV_CPSS_PIPE_TXQ_DESC_FULLPORT18_E, PRV_CPSS_PIPE_TXQ_DESC_FULLPORT19_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED28_E, 
    PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DESC_FULL_INT_SUM0_RESERVED31_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUMMARY0_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT0_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT1_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT2_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT3_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT4_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT5_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT6_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT7_E, 
    PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT8_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT9_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT10_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT11_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT12_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT13_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT14_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT15_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT16_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT17_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT18_E, PRV_CPSS_PIPE_TXQ_BUFF_FULLPORT19_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED21_E, 
    PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED22_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED23_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED24_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED25_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED26_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED27_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED28_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED29_E, PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED30_E, 
    PRV_CPSS_PIPE_TXQ_BUFF_FULL_INT_SUM0_RESERVED31_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_SUMMARY_E, PRV_CPSS_PIPE_TXQ_INC_FIFO_0_FULL_INT_E, PRV_CPSS_PIPE_TXQ_INC_FIFO_1_FULL_INT_E, PRV_CPSS_PIPE_TXQ_INC_FIFO_2_FULL_INT_E, PRV_CPSS_PIPE_TXQ_INC_FIFO_3_FULL_INT_E, PRV_CPSS_PIPE_TXQ_BYPASS_BURST_FIFO_FULL_INT_0_E, PRV_CPSS_PIPE_TXQ_BYPASS_BURST_FIFO_FULL_INT_1_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED7_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED8_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED9_E, 
    PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED10_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED11_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED12_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED13_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED14_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED15_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED16_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED17_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED18_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED19_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED20_E, 
    PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED21_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED22_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED23_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED24_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED25_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED26_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED27_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED28_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED29_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED30_E, PRV_CPSS_PIPE_TXQ_GENERAL_INT2_RESERVED31_E, 
    PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_ULTICAST_DESC_FIFO_FULL_INT_0_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_ULTICAST_DESC_FIFO_FULL_INT_1_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_RX_SNIFF_FIFO_FULL_INT0_E, 
    PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_RX_SNIFF_FIFO_FULL_INT1_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_TX_SNIFF_FIFO_FULL_INT0_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_TX_SNIFF_FIFO_FULL_INT1_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED15_E, 
    PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_PARAM_FIFO_FULL_INTERRUP0_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_PARAM_FIFO_FULL_INTERRUP1_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED23_E, 
    PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_TAIL_DROP_DQ_FIFO_FULL_INT_RESERVED31_E, 
    PRV_CPSS_PIPE_TXQ_STATISTIC_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_STATISTIC_LOW_CROSSING_INT_CAUSE_QUEUE_GROUPS_0_30_SUM_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED2_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_STATISTIC_HIGH_CROSSING_IN_CAUSE_QUEUE_GROUPS_0_30_SUM_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED8_E, 
    PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED19_E, 
    PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED30_E, 
    PRV_CPSS_PIPE_TXQ_STATISTIC_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_CROSSED_FOR_QUEUES_GROUP_0_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_CROSSED_FOR_QUEUES_GROUP_1_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_CROSSED_FOR_QUEUES_GROUP_2_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED7_E, 
    PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED16_E, 
    PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_LOW_THRESHOLD_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_CROSSED_FOR_QUEUES_GROUP_0_E, 
    PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_CROSSED_FOR_QUEUES_GROUP_1_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_CROSSED_FOR_QUEUES_GROUP_2_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_HIGH_THRESHOLD_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_QCN_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_QCN_BUFFER_FIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_QCN_BUFFER_FIFO_PARITY_ERR_INT_E, 
    PRV_CPSS_PIPE_TXQ_QCN_DROP_INT_E, PRV_CPSS_PIPE_TXQ_QCN_WRONG_ADDR_E, PRV_CPSS_PIPE_TXQ_QCN_DESC_ECC_SINGLE_ERROR_DETECTED_INT_E, PRV_CPSS_PIPE_TXQ_QCN_DESC_ECC_DOUBLE_ERROR_DETECTED_INT_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED11_E, 
    PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED19_E, 
    PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED27_E, 
    PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_QCN_PRV_CPSS_PIPE_TXQ_CN_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_DQ0_FLUSH_DONE_SUM_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED2_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_SUM_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC0_SUM_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERAL_INTERRUPT_SUM_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED17_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED29_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ0_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERAL_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_MIRORR_DESC_DROP_E, PRV_CPSS_PIPE_TXQ_DQ0_STC_DESC_DROP_E, PRV_CPSS_PIPE_TXQ_DQ0_WRONG_ADDR_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_INC_ECC_ONE_ERROR_CORRECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_INC_ECC_TWO_ERROR_DETECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_CLR_ECC_ONE_ERROR_CORRECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_CLR_ECC_TWO_ERROR_DETECTED_INT_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_TXQ_ARBITER_LL_PATH_FIFO_FULL_E, PRV_CPSS_PIPE_TXQ_DQ0_EXACT_SHAPING_BURST_FIFO_FULL_E, PRV_CPSS_PIPE_TXQ_DQ0_LATENCY_FIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_BURST_ABSORB_FIFO_FULL_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED17_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED27_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ0_GENERALINT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_SUMMARY_0_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT0_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT1_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT2_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT3_EGRESS_SAMPLE_LOADED_INT_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_PORT4_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT5_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT6_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT7_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT8_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_PORT9_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED13_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED22_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ0_EGRESS_STC_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_SUMMARY_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_TOKEN_BUCKET_PRIO_PARITY_ERROR_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED2_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED3_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED4_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED5_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED6_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED7_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED8_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED9_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED10_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED18_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED20_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED30_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_MEMORY_ERROR_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_SUMMARY_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT0_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT1_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT2_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT3_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT4_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT5_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT6_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT7_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT8_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_PORT9_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED18_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED27_E, 
    PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ0_TXQ_FLUSH_DONE_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_DQ1_FLUSH_DONE_SUM_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED2_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_SUM_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC0_SUM_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERAL_INTERRUPT_SUM_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED18_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED30_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERAL_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_MIRORR_DESC_DROP_E, PRV_CPSS_PIPE_TXQ_DQ1_STC_DESC_DROP_E, PRV_CPSS_PIPE_TXQ_DQ1_WRONG_ADDR_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_INC_ECC_ONE_ERROR_CORRECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_INC_ECC_TWO_ERROR_DETECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_CLR_ECC_ONE_ERROR_CORRECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_CLR_ECC_TWO_ERROR_DETECTED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_ARBITER_LL_PATH_FIFO_FULL_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_EXACT_SHAPING_BURST_FIFO_FULL_E, PRV_CPSS_PIPE_TXQ_DQ1_LATENCY_FIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_BURST_ABSORB_FIFO_FULL_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED18_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED28_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ1_GENERALINT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_SUMMARY_1_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT0_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT1_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT2_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT3_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT4_EGRESS_SAMPLE_LOADED_INT_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_PORT5_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT6_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT7_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT8_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_PORT9_EGRESS_SAMPLE_LOADED_INT_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED14_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED23_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ1_EGRESS_STC_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_SUMMARY_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_TOKEN_BUCKET_PRIO_PARITY_ERROR_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED2_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED3_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED4_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED5_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED6_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED7_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED8_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED9_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED10_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED18_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED20_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED27_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED30_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_MEMORY_ERROR_RESERVED31_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_SUMMARY_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT0_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT1_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT2_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT3_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT4_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT5_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT6_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT7_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT8_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_PORT9_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED11_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED12_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED13_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED14_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED15_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED16_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED17_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED18_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED19_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED20_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED21_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED22_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED23_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED24_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED25_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED26_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED27_E, 
    PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED28_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED29_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED30_E, PRV_CPSS_PIPE_TXQ_DQ1_TXQ_FLUSH_DONE_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_SUM_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDERFLOW_INT_SUM_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_OVER_UNDERFLOW_INT_SUM_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVERUNDERFLOW_INT_SUM_E, PRV_CPSS_PIPE_TXQ_PFC_INDICATION_FIFO_OVERRUNS_INT_SUM_E, 
    PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_EGR3_0_CAUSE_INT_SUM_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED17_E, 
    PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED29_E, 
    PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_PFC_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_QCN0_MSG_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED2_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_CNT_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_EGR0_MSG_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED5_E, 
    PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED12_E, 
    PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED19_E, 
    PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED26_E, 
    PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_PFC_MSGS_SETS_OVERRUNS_CAUSE_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_FC_IND_FIFO_OVERRUN_INT_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED2_E, 
    PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED10_E, 
    PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED18_E, 
    PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED26_E, 
    PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_PFC_IND_FIFO_OVERRUNS_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_CC_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_CC_UNDERFLOW_INT_E, 
    PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED10_E, 
    PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED18_E, 
    PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED26_E, 
    PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_PFC_CC_OVER_UNDERFLOW_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC0_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC1_UNDERFLOW_INT_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC2_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC3_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC4_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC5_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC6_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC7_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC0_OVERFLOW_INT_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC1_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC2_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC3_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC4_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC5_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC6_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_PFC_TC7_OVERFLOW_INT_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED23_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED30_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_GLOBAL_UNDERFLOW_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_OVERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_UNDERFLOW_INT_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED6_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED7_E, 
    PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED13_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED16_E, 
    PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED23_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED25_E, 
    PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_PFC_OVER_UNDER_FLOW_INT_RESERVED31_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_SUMMARY_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_COUNTERS_PARITY_ERR_E, PRV_CPSS_PIPE_TXQ_PFC_PORT_GROUP0_PFC_IND_FIFO_ECC_ERR_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED3_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED4_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED5_E, PRV_CPSS_PIPE_TXQ_PFC_WRONG_ADDR_INT_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED7_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED8_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED9_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED10_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED11_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED12_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED13_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED14_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED15_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED16_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED17_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED18_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED19_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED20_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED21_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED22_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED23_E, 
    PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED24_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED25_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED26_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED27_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED28_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED29_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED30_E, PRV_CPSS_PIPE_TXQ_PFC_PARITY_INT_RESERVED31_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_SUMMARY_E, PRV_CPSS_PIPE_MCFC_CPU_ADDRESS_OUT_OF_RANGE_E, 
    PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED2_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED3_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED4_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED5_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED6_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED7_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED8_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED9_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED10_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED11_E, 
    PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED12_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED13_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED14_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED15_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED16_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED17_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED18_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED19_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED20_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED21_E, 
    PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED22_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED23_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED24_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED25_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED26_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED27_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED28_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED29_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED30_E, PRV_CPSS_PIPE_MCFC_INTERRUPT_CAUSE_RESERVED31_E, 
    PRV_CPSS_PIPE_CNC_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_WRAPAROUND_FUNC_INTERRUPT_SUM_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_SUM_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_SUM_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED11_E, 
    PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED23_E, 
    PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_CNC_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_DUMP_FINISHED_E, PRV_CPSS_PIPE_CNC_UPDATE_LOST_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED3_E, 
    PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED13_E, 
    PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED23_E, 
    PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_MISC_FUNC_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_BLOCK0_RATE_LIMIT_FIFO_DROP_E, 
    PRV_CPSS_PIPE_BLOCK1_RATE_LIMIT_FIFODROP_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED19_E, 
    PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED28_E, 
    PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_RATE_LIMIT_FUNC_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_CNC_BLOCK0_WRAPAROUND_E, PRV_CPSS_PIPE_CNC_BLOCK1_WRAPAROUND_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED5_E, 
    PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED13_E, 
    PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED29_E, 
    PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_CNC_WRAPAROUND_FUNC_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_SUMMARY_E, PRV_CPSS_PIPE_PCP_CPU_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_PCP_PACKET_TYPE_KEY_LOOK_UP_MISS_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED3_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED4_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED5_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED6_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED7_E, 
    PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED8_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED9_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED10_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED11_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED12_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED13_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED14_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED15_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED16_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED17_E, 
    PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED18_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED19_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED20_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED21_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED22_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED23_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED24_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED25_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED26_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED27_E, 
    PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED28_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED29_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED30_E, PRV_CPSS_PIPE_PCP_INTERRUPT_CAUSE_RESERVED31_E, PRV_CPSS_PIPE_PHA_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PHA_INTERNAL_FUNCTIONAL_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PHA_SUMMARY_SER_INTERRUPT_E, PRV_CPSS_PIPE_PHA_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED6_E, 
    PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED18_E, 
    PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED30_E, 
    PRV_CPSS_PIPE_PHA_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPA_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPA_INTERNAL_FUNCTIONAL_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPA_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_0_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_1_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_2_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_3_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_4_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_5_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_6_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_7_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_0_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_1_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_2_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_3_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_4_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_5_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_6_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_7_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_0_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_1_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_2_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_3_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_4_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_5_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_6_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_7_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_0_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_1_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_2_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_3_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_4_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_5_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_6_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_7_SUMMARY_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_0_HOST_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_0_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_0_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_0_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_1_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_1_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_1_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_1_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_2_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_2_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_2_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_2_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_3_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_3_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_3_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_3_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_4_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_4_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_4_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_4_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_5_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_5_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_5_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_5_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_6_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_6_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_6_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_6_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_PPN_7_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_7_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_7_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_0_PPN_7_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_0_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_0_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_0_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_0_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_1_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_1_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_1_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_1_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_2_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_2_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_2_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_2_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_3_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_3_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_3_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_3_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_4_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_4_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_4_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_4_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_5_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_5_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_5_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_5_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_6_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_6_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_6_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_6_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_PPN_7_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_7_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_7_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_1_PPN_7_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_0_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_0_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_0_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_0_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_1_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_1_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_1_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_1_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_2_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_2_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_2_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_2_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_3_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_3_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_3_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_3_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_4_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_4_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_4_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_4_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_5_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_5_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_5_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_5_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_6_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_6_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_6_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_6_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_2_PPN_7_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_7_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_7_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_2_PPN_7_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_0_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_0_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_0_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_0_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_0_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_1_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_1_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_1_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_1_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_1_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_2_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_2_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_2_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_2_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_2_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_3_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_3_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_3_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_3_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_3_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_4_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_4_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_4_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_4_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_4_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_5_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_5_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_5_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_5_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_5_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_6_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_6_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_6_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_6_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_6_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_PPN_7_HOST_UNMAPPED_ACCESS_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_7_CORE_UNMAPPED_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_7_NEAR_EDGE_IMEM_ACCESS_E, PRV_CPSS_PIPE_PPG_3_PPN_7_DOORBELL_INTERRUPT_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_PPN_7_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_0_UNMAPPED_HOST_ACCESS_ERROR_E, 
    PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED19_E, 
    PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED28_E, 
    PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_0_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_1_UNMAPPED_HOST_ACCESS_ERROR_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED5_E, 
    PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED14_E, 
    PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED23_E, 
    PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_1_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_PPG_2_UNMAPPED_HOST_ACCESS_ERROR_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED9_E, 
    PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED18_E, 
    PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED27_E, 
    PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_2_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPG_3_UNMAPPED_HOST_ACCESS_ERROR_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED4_E, 
    PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED13_E, 
    PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED22_E, 
    PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPG_3_FUNCTIONAL_INTERRUPT_RESERVED31_E, 
    PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_PPA_UNMAPPED_HOST_ACCESS_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED8_E, 
    PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED17_E, 
    PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED26_E, 
    PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PPA_FUNCTIONAL_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_HEADER_SINGLE_ERROR_E, PRV_CPSS_PIPE_HEADER_DOUBLE_ERROR_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED4_E, 
    PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED14_E, 
    PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED24_E, 
    PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_PHA_ERROR_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_PHA_INTERNAL_INTERRUPT_E, PRV_CPSS_PIPE_PHA_UNMAPPED_HOST_ACCESS_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED2_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED3_E, 
    PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED4_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED5_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED6_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED7_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED8_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED9_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED10_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED11_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED12_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED13_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED14_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED15_E, 
    PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED16_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED17_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED18_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED19_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED20_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED21_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED22_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED23_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED24_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED25_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED26_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED27_E, 
    PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED28_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED29_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED30_E, PRV_CPSS_PIPE_PHA_INTERNAL_RESERVED31_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_SUMMARY_E, PRV_CPSS_PIPE_WRONG_ADDRESS_INTERRUPT_E, PRV_CPSS_PIPE_XBAR_DATA_READ_PARITY_ERROR_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED3_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED4_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED5_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED6_E, 
    PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED7_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED8_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED9_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED10_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED11_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED12_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED13_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED14_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED15_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED16_E, 
    PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED17_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED18_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED19_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED20_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED21_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED22_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED23_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED24_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED25_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED26_E, 
    PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED27_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED28_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED29_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED30_E, PRV_CPSS_PIPE_IUNIT_INTERRUPT_CAUSE_RESERVED31_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED1_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED4_E, 
    PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED14_E, 
    PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED24_E, 
    PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_I2C_BRIDGE_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED1_E, 
    PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED8_E, 
    PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED15_E, 
    PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED22_E, 
    PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED29_E, 
    PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_SERIAL_MEMORY_DATA_TRANSFER_READY_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_SBC_INT_SUMMARY_E, PRV_CPSS_PIPE_SBC_INT_SUM_1_E, PRV_CPSS_PIPE_SBC_INT_SUM_2_E, PRV_CPSS_PIPE_SBC_INT_RESERVED1_E, PRV_CPSS_PIPE_SBC_INT_RESERVED2_E, PRV_CPSS_PIPE_SBC_INT_RESERVED3_E, PRV_CPSS_PIPE_SBC_INT_RESERVED4_E, PRV_CPSS_PIPE_SBC_INT_RESERVED5_E, PRV_CPSS_PIPE_SBC_INT_RESERVED6_E, PRV_CPSS_PIPE_SBC_INT_RESERVED7_E, 
    PRV_CPSS_PIPE_SBC_INT_RESERVED8_E, PRV_CPSS_PIPE_SBC_INT_RESERVED9_E, PRV_CPSS_PIPE_SBC_INT_RESERVED10_E, PRV_CPSS_PIPE_SBC_INT_RESERVED11_E, PRV_CPSS_PIPE_SBC_INT_RESERVED12_E, PRV_CPSS_PIPE_SBC_INT_RESERVED13_E, PRV_CPSS_PIPE_SBC_INT_RESERVED14_E, PRV_CPSS_PIPE_SBC_INT_RESERVED15_E, PRV_CPSS_PIPE_SBC_INT_RESERVED16_E, PRV_CPSS_PIPE_SBC_INT_RESERVED17_E, PRV_CPSS_PIPE_SBC_INT_RESERVED18_E, PRV_CPSS_PIPE_SBC_INT_RESERVED19_E, PRV_CPSS_PIPE_SBC_INT_RESERVED20_E, PRV_CPSS_PIPE_SBC_INT_RESERVED21_E, 
    PRV_CPSS_PIPE_SBC_INT_RESERVED22_E, PRV_CPSS_PIPE_SBC_INT_RESERVED23_E, PRV_CPSS_PIPE_SBC_INT_RESERVED24_E, PRV_CPSS_PIPE_SBC_INT_RESERVED25_E, PRV_CPSS_PIPE_SBC_INT_RESERVED26_E, PRV_CPSS_PIPE_SBC_INT_RESERVED27_E, PRV_CPSS_PIPE_SBC_INT_RESERVED28_E, PRV_CPSS_PIPE_SBC_INT_RESERVED29_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_SUMMARY_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_0_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_1_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_2_CAUSE_E, 
    PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_3_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_4_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_5_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_6_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_7_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_8_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_9_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_10_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_11_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_12_CAUSE_E, 
    PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_13_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_14_CAUSE_E, PRV_CPSS_PIPE_SPICO_GPIO_INTERRUPT_15_CAUSE_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_31_INT_E, PRV_CPSS_PIPE_MG2SBM_READY_INT_E, PRV_CPSS_PIPE_RF_ERROR_E, PRV_CPSS_PIPE_MG2SBM_READ_FAILED_E, PRV_CPSS_PIPE_MG2SBM_WRITE_FAILED_E, PRV_CPSS_PIPE_SPICO_ECC_DOUBLE_ERROR_E, PRV_CPSS_PIPE_SPICO_ECC_SINGLE_ERROR_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED24_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED25_E, 
    PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED26_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED27_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED28_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED29_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED30_E, PRV_CPSS_PIPE_SBC_INTERRUPT2_RESERVED31_E, PRV_CPSS_PIPE_SBC_INTERRUPT1_SUMMARY_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_0_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_1_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_2_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_3_INT_E, 
    PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_4_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_5_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_6_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_7_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_8_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_9_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_10_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_11_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_12_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_13_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_14_INT_E, 
    PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_15_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_16_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_17_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_18_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_19_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_20_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_21_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_22_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_23_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_24_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_25_INT_E, 
    PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_26_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_27_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_28_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_29_INT_E, PRV_CPSS_PIPE_SBUS_0XFE_0X80_OUT_30_INT_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_TXFIFO_GENERAL_CAUSE_REG1_SUMMARY_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_NOT_READY_CAUSE_REG_1_SUMMARY_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED4_E, 
    PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_CAUSE_REG_1_SUMMARY_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_CAUSE_REG_1_SUMMARY_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED14_E, 
    PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_TXFIFO_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_GENERAL_INT_REG_SUMMARY_E, PRV_CPSS_PIPE_LATENCY_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_ECC_0_SINGLE_ERROR_INT_E, PRV_CPSS_PIPE_ECC_1_SINGLE_ERROR_INT_E, PRV_CPSS_PIPE_ECC_0_DOUBLE_ERROR_INT_E, 
    PRV_CPSS_PIPE_ECC_1_DOUBLE_ERROR_INT_E, PRV_CPSS_PIPE_PAYLOAD_TXFIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_HEADER_TXFIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_CT_BC_IDDB_IDS_RUN_OUT_INT_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED9_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED10_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED11_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED12_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED13_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED14_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED15_E, 
    PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED16_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED17_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED18_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED19_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED20_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED21_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED22_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED23_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED24_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED25_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED26_E, 
    PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED27_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED28_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED29_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED30_E, PRV_CPSS_PIPE_GENERAL_INT_REG_RESERVED31_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_SUMMARY_E, PRV_CPSS_PIPE_SHIFTER_0_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_1_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_2_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_3_SOP_EOP_FIFO_NOT_READY_INT_E, 
    PRV_CPSS_PIPE_SHIFTER_4_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_5_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_6_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_7_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_8_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_9_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_10_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_11_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_12_SOP_EOP_FIFO_NOT_READY_INT_E, 
    PRV_CPSS_PIPE_SHIFTER_13_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_14_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_15_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_16_SOP_EOP_FIFO_NOT_READY_INT_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED18_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED19_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED20_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED21_E, 
    PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED22_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED23_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED24_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED25_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED26_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED27_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED28_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED29_E, 
    PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED30_E, PRV_CPSS_PIPE_SHIFTER_SOP_EOP_FIFO_OVERRUNT_REG1_RESERVED31_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_SUMMARY_E, PRV_CPSS_PIPE_SCDMA_0_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_1_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_2_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_3_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_4_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, 
    PRV_CPSS_PIPE_SCDMA_5_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_6_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_7_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_8_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_9_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_10_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_11_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_12_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, 
    PRV_CPSS_PIPE_SCDMA_13_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_14_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_15_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_SCDMA_16_CT_BYTE_COUNT_ARRIVED_LATE_INT_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED18_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED19_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED20_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED21_E, 
    PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED22_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED23_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED24_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED25_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED26_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED27_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED28_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED29_E, 
    PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED30_E, PRV_CPSS_PIPE_CT_BYTE_COUNT_ARRIVED_LATE_REG1_RESRVED31_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_SUMMARY_E, PRV_CPSS_PIPE_SD_INT_SUM_1_E, PRV_CPSS_PIPE_SD_INT_SUM_2_E, PRV_CPSS_PIPE_SD_INT_SUM_3_E, PRV_CPSS_PIPE_SD_INT_SUM_4_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED5_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED6_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED7_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED8_E, 
    PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED9_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED10_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED11_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED12_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED13_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED14_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED15_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED16_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED17_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED18_E, 
    PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED19_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED20_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED21_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED22_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED23_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED24_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED25_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED26_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED27_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED28_E, 
    PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED29_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED30_E, PRV_CPSS_PIPE_SD_GLOBAL_INT_CAUSE_RESERVED31_E, PRV_CPSS_PIPE_SD_INTERRUPT_SUMMARY_0_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_0_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_1_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_2_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_3_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_4_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_5_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_6_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_7_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_8_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_9_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_10_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_11_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_12_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_13_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_14_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_15_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_16_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_17_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_18_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_19_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_20_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_21_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_22_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_23_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_24_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_25_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_26_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_27_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_28_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_29_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_0_30_E, PRV_CPSS_PIPE_SD_INTERRUPT_SUMMARY_1_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_0_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_1_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_2_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_3_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_4_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_5_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_6_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_7_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_8_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_9_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_10_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_11_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_12_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_13_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_14_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_15_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_16_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_17_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_18_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_19_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_20_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_21_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_22_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_23_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_24_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_25_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_26_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_27_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_28_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_29_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_1_30_E, PRV_CPSS_PIPE_SD_INTERRUPT_SUMMARY_2_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_0_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_1_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_2_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_3_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_4_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_5_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_6_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_7_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_8_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_9_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_10_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_11_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_12_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_13_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_14_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_15_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_16_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_17_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_18_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_19_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_20_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_21_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_22_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_23_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_24_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_25_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_26_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_27_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_28_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_29_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_2_30_E, PRV_CPSS_PIPE_SD_INTERRUPT_SUMMARY_3_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_0_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_1_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_2_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_3_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_4_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_5_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_6_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_7_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_8_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_9_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_10_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_11_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_12_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_13_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_14_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_15_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_16_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_17_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_18_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_19_E, 
    PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_20_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_21_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_22_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_23_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_24_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_25_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_26_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_27_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_28_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_29_E, PRV_CPSS_PIPE_SD_INTERRUPT_CAUSE_3_30_E, PRV_CPSS_PIPE_SERVER_INT_SUMMARY_E, 
    PRV_CPSS_PIPE_SERVER_INTERRUPT_SUM_E, PRV_CPSS_PIPE_SERVER_SPARE_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_0_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_1_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_2_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_3_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_4_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_5_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_6_INTERRUPT_SUM_E, PRV_CPSS_PIPE_PIPE_7_INTERRUPT_SUM_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED11_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED12_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED13_E, 
    PRV_CPSS_PIPE_SERVER_INT_RESERVED14_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED15_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED16_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED17_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED18_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED19_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED20_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED21_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED22_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED23_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED24_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED25_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED26_E, 
    PRV_CPSS_PIPE_SERVER_INT_RESERVED27_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED28_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED29_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED30_E, PRV_CPSS_PIPE_SERVER_INT_RESERVED31_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_SUMMARY_E, PRV_CPSS_PIPE_SCDMA_0_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_1_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_2_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, 
    PRV_CPSS_PIPE_SCDMA_3_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_4_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_5_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_6_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_7_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_8_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_9_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, 
    PRV_CPSS_PIPE_SCDMA_10_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_11_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_12_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_13_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_14_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_15_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, PRV_CPSS_PIPE_SCDMA_16_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_INT_E, 
    PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED18_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED19_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED20_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED21_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED22_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED23_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED24_E, 
    PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED25_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED26_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED27_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED28_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED29_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED30_E, PRV_CPSS_PIPE_CT_MODIFIED_BYTE_COUNT_IS_TOO_SHORT_REG1_RESERVED31_E, 
    PRV_CPSS_PIPE_RXDMA_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_SUM0_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED2_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED10_E, 
    PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED21_E, 
    PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_SUMMARY0_E, 
    PRV_CPSS_PIPE_RXDMA_GENERAL_RXDMA_INTERRUPTS_SUMMARY_E, PRV_CPSS_PIPE_RXDMA_SCDMA0_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA1_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA2_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA3_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA4_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA5_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA6_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA7_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA8_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA9_INTERRUPTS_SUM_E, 
    PRV_CPSS_PIPE_RXDMA_SCDMA10_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA11_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA12_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA13_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA14_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA15_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_SCDMA16_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_19_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_20_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_21_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_22_E, 
    PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_23_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_24_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_25_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_26_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_27_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_28_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_29_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_30_E, PRV_CPSS_PIPE_RXDMA_INTERRUPT_RESERVED0_31_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED1_E, 
    PRV_CPSS_PIPE_RXDMA_RF_ERR_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_ARB_REQ_WITH_NO_GLOBAL_CREDITS_E, PRV_CPSS_PIPE_CREDIT_COUNTER_OVERFLOW_E, PRV_CPSS_PIPE_GLOBAL_ALLOC_COUNTER_OVERFLOW_E, PRV_CPSS_PIPE_GLOBAL_ALLOC_COUNTER_REACHED_LIMIT_E, PRV_CPSS_PIPE_OS_DROP_E, PRV_CPSS_PIPE_MISSED_SLOT_BANK_EXCEED_THRESHOLD_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_E, 
    PRV_CPSS_PIPE_IBUF_FIFO_OUT_OVERRUN_E, PRV_CPSS_PIPE_IBUF_ID_FIFO_OVERRUN_E, PRV_CPSS_PIPE_DESC_RAM_RD_VALID_WITHOUT_IDDB_RD_VALID_INT_E, PRV_CPSS_PIPE_IDDB_RD_VALID_WITHOUT_DESC_RAM_RD_VALID_INT_E, PRV_CPSS_PIPE_INT_HDR_OVERUN_E, PRV_CPSS_PIPE_IBUF_HDR_IDDB_RD_ERR_INT_E, PRV_CPSS_PIPE_COMMON_BUFFER_EMPTY_GROUP0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_0_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_0_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_0_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_0_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_0_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_0_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_0_E, 
    PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_0_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_0_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_0_E, PRV_CPSS_PIPE_PORT_0_OS_DROP_E, PRV_CPSS_PIPE_PORT_0_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_0_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED19_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_0_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_0_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED31_0_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_1_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_1_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_1_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_1_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_1_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_1_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_1_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_1_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_1_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_1_E, PRV_CPSS_PIPE_PORT_1_OS_DROP_E, 
    PRV_CPSS_PIPE_PORT_1_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_1_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED23_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_1_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_1_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_2_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_2_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_2_E, 
    PRV_CPSS_PIPE_PORT_RX_BUF_FULL_2_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_2_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_2_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_2_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_2_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_2_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_2_E, PRV_CPSS_PIPE_PORT_2_OS_DROP_E, PRV_CPSS_PIPE_PORT_2_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_2_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED15_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_2_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED27_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_2_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_2_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_3_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_3_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_3_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_3_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_3_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_3_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_3_E, 
    PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_3_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_3_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_3_E, PRV_CPSS_PIPE_PORT_3_OS_DROP_E, PRV_CPSS_PIPE_PORT_3_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_3_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED19_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_3_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_3_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED31_3_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_4_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_4_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_4_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_4_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_4_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_4_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_4_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_4_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_4_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_4_E, PRV_CPSS_PIPE_PORT_4_OS_DROP_E, 
    PRV_CPSS_PIPE_PORT_4_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_4_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED23_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_4_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_4_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_5_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_5_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_5_E, 
    PRV_CPSS_PIPE_PORT_RX_BUF_FULL_5_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_5_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_5_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_5_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_5_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_5_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_5_E, PRV_CPSS_PIPE_PORT_5_OS_DROP_E, PRV_CPSS_PIPE_PORT_5_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_5_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED15_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_5_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED27_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_5_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_5_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_6_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_6_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_6_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_6_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_6_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_6_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_6_E, 
    PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_6_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_6_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_6_E, PRV_CPSS_PIPE_PORT_6_OS_DROP_E, PRV_CPSS_PIPE_PORT_6_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_6_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED19_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_6_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_6_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED31_6_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_7_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_7_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_7_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_7_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_7_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_7_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_7_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_7_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_7_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_7_E, PRV_CPSS_PIPE_PORT_7_OS_DROP_E, 
    PRV_CPSS_PIPE_PORT_7_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_7_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED23_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_7_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_7_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_8_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_8_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_8_E, 
    PRV_CPSS_PIPE_PORT_RX_BUF_FULL_8_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_8_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_8_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_8_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_8_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_8_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_8_E, PRV_CPSS_PIPE_PORT_8_OS_DROP_E, PRV_CPSS_PIPE_PORT_8_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_8_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED15_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_8_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED27_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_8_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_8_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_9_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_9_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_9_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_9_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_9_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_9_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_9_E, 
    PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_9_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_9_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_9_E, PRV_CPSS_PIPE_PORT_9_OS_DROP_E, PRV_CPSS_PIPE_PORT_9_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_9_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED19_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_9_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_9_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED31_9_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_10_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_10_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_10_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_10_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_10_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_10_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_10_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_10_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_10_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_10_E, PRV_CPSS_PIPE_PORT_10_OS_DROP_E, 
    PRV_CPSS_PIPE_PORT_10_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_10_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED23_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_10_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_10_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_11_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_11_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_11_E, 
    PRV_CPSS_PIPE_PORT_RX_BUF_FULL_11_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_11_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_11_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_11_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_11_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_11_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_11_E, PRV_CPSS_PIPE_PORT_11_OS_DROP_E, PRV_CPSS_PIPE_PORT_11_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_11_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED15_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_11_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED27_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_11_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_11_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_12_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_12_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_12_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_12_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_12_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_12_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_12_E, 
    PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_12_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_12_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_12_E, PRV_CPSS_PIPE_PORT_12_OS_DROP_E, PRV_CPSS_PIPE_PORT_12_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_12_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED19_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_12_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_12_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED31_12_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_13_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_13_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_13_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_13_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_13_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_13_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_13_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_13_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_13_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_13_E, PRV_CPSS_PIPE_PORT_13_OS_DROP_E, 
    PRV_CPSS_PIPE_PORT_13_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_13_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED23_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_13_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_13_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_14_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_14_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_14_E, 
    PRV_CPSS_PIPE_PORT_RX_BUF_FULL_14_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_14_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_14_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_14_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_14_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_14_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_14_E, PRV_CPSS_PIPE_PORT_14_OS_DROP_E, PRV_CPSS_PIPE_PORT_14_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_14_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED15_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_14_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED27_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_14_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_14_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_15_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_15_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_15_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_15_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_15_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_15_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_15_E, 
    PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_15_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_15_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_15_E, PRV_CPSS_PIPE_PORT_15_OS_DROP_E, PRV_CPSS_PIPE_PORT_15_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_15_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED19_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED23_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_15_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_15_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED31_15_E, PRV_CPSS_PIPE_INTERRUPT_SUMMARY_16_E, PRV_CPSS_PIPE_EOP_DESC_FIFO_OVERRUN_16_E, PRV_CPSS_PIPE_SOP_DESC_FIFO_OVERRUN_16_E, PRV_CPSS_PIPE_PORT_RX_BUF_FULL_16_E, PRV_CPSS_PIPE_PORT_BUF_CNT_OVERFLOW_16_E, PRV_CPSS_PIPE_PORT_BUF_CNT_UNDERFLOW_16_E, PRV_CPSS_PIPE_FRAGMENT_PACKET_16_E, PRV_CPSS_PIPE_PACKET_WITH_NO_EOP_16_E, PRV_CPSS_PIPE_FIRST_PACKET_CHUNK_WITHOUT_SOP_16_E, PRV_CPSS_PIPE_DSR_LOAD_BUT_HDR_NOT_RDY_16_E, PRV_CPSS_PIPE_PORT_16_OS_DROP_E, 
    PRV_CPSS_PIPE_PORT_16_CT_GAP_REJECT_INT_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED12_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED13_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED14_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED15_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED16_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED17_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED18_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED19_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED20_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED21_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED22_16_E, 
    PRV_CPSS_PIPE_INTERRUPT_RESERVED23_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED24_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED25_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED26_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED27_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED28_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED29_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED30_16_E, PRV_CPSS_PIPE_INTERRUPT_RESERVED31_16_E, PRV_CPSS_PIPE_BM_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_BM_GENERAL_CAUSE_REG1_SUMMARY_E, PRV_CPSS_PIPE_BM_GENERAL_CAUSE_REG2_SUMMARY_E, 
    PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED4_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED5_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED12_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED14_E, 
    PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED23_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED26_E, 
    PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_BM_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_SUMMARY_1_E, PRV_CPSS_PIPE_IN_PROG_CT_CLEAR_FIFO_OVERRUN_CORE_0_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_2_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_3_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_4_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_5_E, 
    PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_6_E, PRV_CPSS_PIPE_BM_CORE_0_NUMBER_OF_BUFFERS_TABLE_UPDATE_WAS_LOST_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_8_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_9_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_10_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_11_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_12_E, PRV_CPSS_PIPE_BM_CORE_0_VALID_TABLE_PARITY_ERROR_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_14_E, 
    PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_15_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_16_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_17_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_18_E, PRV_CPSS_PIPE_BM_CORE_0_INVALID_BUFFER_CLEAR_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_20_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_21_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_22_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_23_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_24_E, 
    PRV_CPSS_PIPE_BM_CORE_0_NEXT_TABLE_UPDATE_WAS_LOST_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_26_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_27_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_28_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_29_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED1_30_E, PRV_CPSS_PIPE_BM_GLOBAL_RX_FULL_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_SUMMARY_2_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_1_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_2_E, 
    PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_3_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_4_E, PRV_CPSS_PIPE_BM_BUFFER_0_TERMINATION_COMPLETED_INTERRUPT_E, PRV_CPSS_PIPE_BM_BUFFER_1_TERMINATION_COMPLETED_INTERRUPT_E, PRV_CPSS_PIPE_BM_BUFFER_2_TERMINATION_COMPLETED_INTERRUPT_E, PRV_CPSS_PIPE_BM_BUFFER_3_TERMINATION_COMPLETED_INTERRUPT_E, PRV_CPSS_PIPE_BM_BUFFER_4_TERMINATION_COMPLETED_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_10_E, 
    PRV_CPSS_PIPE_BM_CORE_0_RXDMA_ALLOCATION_DELAYED_INTERRUPT_E, PRV_CPSS_PIPE_BM_GLOBAL_BUFFER_COUNTER_UNDERFLOW_INTERRUPT_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_13_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_14_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_15_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_16_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_17_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_18_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_19_E, 
    PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_20_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_21_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_22_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_23_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_24_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_25_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_26_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_27_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_28_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_29_E, 
    PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_30_E, PRV_CPSS_PIPE_BM_GENERAL_INT_REG_RESERVED2_31_E, PRV_CPSS_PIPE_BMA_INT_SUMMARY_E, PRV_CPSS_PIPE_BMA_MCCNT_RMW_CLEAR_FIFO_FULL_E, PRV_CPSS_PIPE_BMA_MC_CNT_PARITY_ERROR_E, PRV_CPSS_PIPE_BMA_MC_CNT_COUNTER_FLOW_E, PRV_CPSS_PIPE_BMA_REG_FILE_ERR_E, PRV_CPSS_PIPE_BMA_SHIFTER_LATENCY_FIFO_OVERFLOW_E, PRV_CPSS_PIPE_BMA_SHIFTER_LATENCY_FIFO_UNDERFLOW_E, PRV_CPSS_PIPE_BMA_FINAL_CLEAR_UDB_FIFO0_FULL_E, PRV_CPSS_PIPE_BMA_INT_RESERVED8_E, 
    PRV_CPSS_PIPE_BMA_INT_RESERVED9_E, PRV_CPSS_PIPE_BMA_INT_RESERVED10_E, PRV_CPSS_PIPE_BMA_INT_RESERVED11_E, PRV_CPSS_PIPE_BMA_INT_RESERVED12_E, PRV_CPSS_PIPE_BMA_INT_RESERVED13_E, PRV_CPSS_PIPE_BMA_INT_RESERVED14_E, PRV_CPSS_PIPE_BMA_INT_RESERVED15_E, PRV_CPSS_PIPE_BMA_INT_RESERVED16_E, PRV_CPSS_PIPE_BMA_INT_RESERVED17_E, PRV_CPSS_PIPE_BMA_INT_RESERVED18_E, PRV_CPSS_PIPE_BMA_INT_RESERVED19_E, PRV_CPSS_PIPE_BMA_INT_RESERVED20_E, PRV_CPSS_PIPE_BMA_INT_RESERVED21_E, PRV_CPSS_PIPE_BMA_INT_RESERVED22_E, 
    PRV_CPSS_PIPE_BMA_INT_RESERVED23_E, PRV_CPSS_PIPE_BMA_INT_RESERVED24_E, PRV_CPSS_PIPE_BMA_INT_RESERVED25_E, PRV_CPSS_PIPE_BMA_INT_RESERVED26_E, PRV_CPSS_PIPE_BMA_INT_RESERVED27_E, PRV_CPSS_PIPE_BMA_INT_RESERVED28_E, PRV_CPSS_PIPE_BMA_INT_RESERVED29_E, PRV_CPSS_PIPE_BMA_INT_RESERVED30_E, PRV_CPSS_PIPE_BMA_INT_RESERVED31_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_TXDMA_SCDMAS_INTERRUPT_CAUSE_REG0_SUMMARY_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED2_E, 
    PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED3_E, PRV_CPSS_PIPE_TXDMA_GENERAL_CAUSE_REG1_SUMMARY_E, PRV_CPSS_PIPE_TXDMA_RXDMA_UPDATES_FIFOS_OVERRUN_INTERRUPT_CAUSE_REG1_SUMMARY_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED6_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED7_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED8_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED9_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED10_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED11_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED12_E, 
    PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED13_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED14_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED15_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED16_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED17_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED18_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED19_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED20_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED21_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED22_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED23_E, 
    PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED24_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED25_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED26_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED27_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED28_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED29_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED30_E, PRV_CPSS_PIPE_TXDMA_INTERRUPT_RESERVED31_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_SUMMARY_E, PRV_CPSS_PIPE_RXDMA_0_UPDATES_FIFOS_OVERRUN_INT_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED2_E, 
    PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED3_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED4_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED5_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED6_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED7_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED8_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED9_E, PRV_CPSS_PIPE_RXDMA_INPROG_0_UPDATES_FIFOS_OVERRUN_INT_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED11_E, 
    PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED12_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED13_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED14_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED15_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED16_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED17_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED18_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED19_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED20_E, 
    PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED21_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED22_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED23_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED24_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED25_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED26_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED27_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED28_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED29_E, 
    PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED30_E, PRV_CPSS_PIPE_RXDMA_FIFOS_OVERRUN_REG1_RESERVED31_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_SUMMARY_E, PRV_CPSS_PIPE_TXDMA_REQUEST_EXECUTOR_NOT_READY_E, PRV_CPSS_PIPE_TXDMA_TXQ_TO_TXDMA_HA_DESC_OVERRUN_INT_E, PRV_CPSS_PIPE_TXDMA_TXQ_TO_TXDMA_INT_DESC_OVERRUN_INT_E, PRV_CPSS_PIPE_TXDMA_DESC_ID_FIFO_FULL_INT_E, PRV_CPSS_PIPE_TXDMA_CLEAR_FIFO_FULL_INT_E, PRV_CPSS_PIPE_TXDMA_HEADER_REORDER_FIFO_FULL_INT_E, 
    PRV_CPSS_PIPE_TXDMA_PAYLOAD_REORDER_FIFO_FULL_INT_E, PRV_CPSS_PIPE_TXDMA_TXFIFO_CT_BC_IDDB_OVERRUN_INT_E, PRV_CPSS_PIPE_TXDMA_ECC_SINGLE_ERROR_INT_E, PRV_CPSS_PIPE_TXDMA_ECC_DOUBLE_ERROR_INT_E, PRV_CPSS_PIPE_TXDMA_BANK_REQUESTS_ON_AIR_REACHED_MAXIMAL_THRESHOLD_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED12_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED13_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED14_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED15_E, 
    PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED16_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED17_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED18_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED19_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED20_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED21_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED22_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED23_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED24_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED25_E, 
    PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED26_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED27_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED28_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED29_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED30_E, PRV_CPSS_PIPE_TXDMA_GENERAL_INT_REG_RESERVED31_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_SUMMARY0_E, PRV_CPSS_PIPE_SCDMA0_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA1_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA2_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA3_INTERRUPTS_SUM_E, 
    PRV_CPSS_PIPE_SCDMA4_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA5_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA6_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA7_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA8_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA9_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA10_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA11_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA12_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA13_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA14_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMA15_INTERRUPTS_SUM_E, 
    PRV_CPSS_PIPE_SCDMA16_INTERRUPTS_SUM_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_18_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_19_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_20_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_21_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_22_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_23_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_24_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_25_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_26_E, 
    PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_27_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_28_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_29_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_30_E, PRV_CPSS_PIPE_SCDMAS_INTERRUPT_RESERVED0_31_E, PRV_CPSS_PIPE_MPPM_INT_SUMMARY_E, PRV_CPSS_PIPE_MPPM_RX_CLIENT_0_INTERRUPTS_CAUSE_SUM_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED2_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED3_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED4_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED5_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED6_E, 
    PRV_CPSS_PIPE_MPPM_TX_CLIENT_0_INTERRUPTS_CAUSE_SUM_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED8_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED9_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED10_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED11_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED12_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED13_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED14_E, PRV_CPSS_PIPE_MPPM_BANK_0_INTERRUPT_CAUSE_SUM_E, PRV_CPSS_PIPE_MPPM_BANK_1_INTERRUPT_CAUSE_SUM_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED17_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED18_E, 
    PRV_CPSS_PIPE_MPPM_INT_RESERVED19_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED20_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED21_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED22_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED23_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED24_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED25_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED26_E, PRV_CPSS_PIPE_MPPM_INTERRUPT_ECC_ERROR_CAUSE_SUM_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED28_E, PRV_CPSS_PIPE_MPPM_GENERAL_INTERRUPT_SUM_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED30_E, PRV_CPSS_PIPE_MPPM_INT_RESERVED31_E, 
    PRV_CPSS_PIPE_MPPM_RX_INT_SUMMARY_E, PRV_CPSS_PIPE_MPPM_RX_INT_IDDB_WR_ID_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_MPPM_RX_INT_PHYSICAL_BANK_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_MPPM_RX_INT_IDDB_LATENCY_FIFO_OVERRUN_E, PRV_CPSS_PIPE_MPPM_RX_INT_WR_DATA_TO_BANK_WITHOUT_VALID_BANK_E, PRV_CPSS_PIPE_MPPM_RX_INT_LB_TOKEN_FIFO_OVERRUN_E, PRV_CPSS_PIPE_MPPM_CREDITS_COUNTER_UNDERRUN_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED7_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED8_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED9_E, 
    PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED10_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED11_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED12_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED13_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED14_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED15_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED16_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED17_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED18_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED19_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED20_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED21_E, 
    PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED22_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED23_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED24_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED25_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED26_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED27_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED28_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED29_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED30_E, PRV_CPSS_PIPE_MPPM_RX_INT_RESERVED31_E, PRV_CPSS_PIPE_MPPM_TX_INT_SUMMARY_E, PRV_CPSS_PIPE_MPPM_TX_INT_RD_BURST_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED2_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED3_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED4_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED5_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED6_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED7_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED8_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED9_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED10_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED11_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED12_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED13_E, 
    PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED14_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED15_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED16_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED17_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED18_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED19_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED20_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED21_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED22_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED23_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED24_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED25_E, 
    PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED26_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED27_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED28_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED29_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED30_E, PRV_CPSS_PIPE_MPPM_TX_INT_RESERVED31_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_SUMMARY_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_LATENCY_FIFO_OVERRUN_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED2_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED3_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED4_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED5_E, 
    PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED6_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED7_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED8_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED9_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED10_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED11_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED12_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED13_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED14_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED15_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED16_E, 
    PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED17_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED18_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED19_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED20_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED21_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED22_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED23_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED24_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED25_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED26_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED27_E, 
    PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED28_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED29_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED30_E, PRV_CPSS_PIPE_MPPM_BANK0_INT_RESERVED31_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_SUMMARY_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_LATENCY_FIFO_OVERRUN_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED2_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED3_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED4_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED5_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED6_E, 
    PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED7_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED8_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED9_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED10_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED11_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED12_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED13_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED14_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED15_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED16_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED17_E, 
    PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED18_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED19_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED20_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED21_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED22_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED23_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED24_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED25_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED26_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED27_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED28_E, 
    PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED29_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED30_E, PRV_CPSS_PIPE_MPPM_BANK1_INT_RESERVED31_E, PRV_CPSS_PIPE_MPPM_ECC_INT_SUMMARY_E, PRV_CPSS_PIPE_MPPM_ECC_INT_ECC_DOUBLE_ERROR_E, PRV_CPSS_PIPE_MPPM_ECC_INT_ECC_SINGLE_ERROR_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED3_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED4_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED5_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED6_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED7_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED8_E, 
    PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED9_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED10_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED11_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED12_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED13_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED14_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED15_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED16_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED17_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED18_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED19_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED20_E, 
    PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED21_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED22_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED23_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED24_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED25_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED26_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED27_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED28_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED29_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED30_E, PRV_CPSS_PIPE_MPPM_ECC_INT_RESERVED31_E, PRV_CPSS_PIPE_MPPM_RF_ERR_SUMMARY_E, 
    PRV_CPSS_PIPE_MPPM_RF_ERR_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED2_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED3_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED4_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED5_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED6_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED7_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED8_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED9_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED10_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED11_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED12_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED13_E, 
    PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED14_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED15_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED16_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED17_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED18_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED19_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED20_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED21_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED22_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED23_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED24_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED25_E, 
    PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED26_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED27_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED28_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED29_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED30_E, PRV_CPSS_PIPE_MPPM_RF_ERR_RESERVED31_E, PRV_CPSS_PIPE_PORTS0_SUM_PORTS_SUMMARY_E, PRV_CPSS_PIPE_PORTS0_SUM_SERDES_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_TAI_MSM4_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_SBC_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT0_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT1_SUM_E, 
    PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT2_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT3_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT4_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT5_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT6_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT7_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT8_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT9_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT10_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT11_SUM_E, 
    PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT12_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT13_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT14_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT15_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT16_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT17_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT18_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT19_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT20_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT21_SUM_E, 
    PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT22_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT23_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT24_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT25_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT26_SUM_E, PRV_CPSS_PIPE_PORTS0_SUM_MSM4_PORTS_INT27_SUM_E, PRV_CPSS_PIPE_PEX_DL_DWN_TX_ACC_ERR_E, PRV_CPSS_PIPE_PEX_MDIS_E, PRV_CPSS_PIPE_PEX_RESERVED2_E, PRV_CPSS_PIPE_PEX_ERR_WR_TO_REG_E, PRV_CPSS_PIPE_PEX_HIT_DFLT_WIN_ERR_E, PRV_CPSS_PIPE_PEX_RESERVED5_E, 
    PRV_CPSS_PIPE_PEX_RX_RAM_PARITY_ERR_E, PRV_CPSS_PIPE_PEX_TX_RAM_PARITY_ERR_E, PRV_CPSS_PIPE_PEX_COR_ERR_DET_E, PRV_CPSS_PIPE_PEX_NF_ERR_DET_E, PRV_CPSS_PIPE_PEX_F_ERR_DET_E, PRV_CPSS_PIPE_PEX_DSTATE_CHANGED_E, PRV_CPSS_PIPE_PEX_BIST_E, PRV_CPSS_PIPE_PEX_RESERVED13_E, PRV_CPSS_PIPE_PEX_FLOW_CNTRL_PROT_ERR_E, PRV_CPSS_PIPE_PEX_UR_CA_ERR_E, PRV_CPSS_PIPE_PEX_RCV_ERR_FATAL_E, PRV_CPSS_PIPE_PEX_RCV_ERR_NON_FATAL_E, PRV_CPSS_PIPE_PEX_RCV_ERR_COR_E, PRV_CPSS_PIPE_PEX_RCV_CRS_E, 
    PRV_CPSS_PIPE_PEX_PEX_SLV_HOT_RESET_E, PRV_CPSS_PIPE_PEX_PEX_SLV_DIS_LINK_E, PRV_CPSS_PIPE_PEX_PEX_SLV_LB_E, PRV_CPSS_PIPE_PEX_PEX_LINK_FAIL_E, PRV_CPSS_PIPE_PEX_RCV_A_E, PRV_CPSS_PIPE_PEX_RCV_B_E, PRV_CPSS_PIPE_PEX_RCV_C_E, PRV_CPSS_PIPE_PEX_RCV_D_E, PRV_CPSS_PIPE_PEX_RCV_PM_PME_E, PRV_CPSS_PIPE_PEX_RCV_TURN_OFF_E, PRV_CPSS_PIPE_PEX_RCV_WAKE_E, PRV_CPSS_PIPE_PEX_RCV_MSI_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_MACRO_SUMMARY_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_CG_PORT_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_CG_PORT_12_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_CG2_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED4_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED5_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED6_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED7_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED8_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED9_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED10_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED11_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED12_E, 
    PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED13_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED14_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED15_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED16_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED17_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED18_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED19_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED20_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED21_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED22_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED23_E, 
    PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED24_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED25_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED26_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED27_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED28_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED29_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED30_E, PRV_CPSS_PIPE_CG_PORT_12_SUM_RESERVED31_E, PRV_CPSS_PIPE_CG_PORT_12_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_CG_PORT_12_RX_OVERSIZE_PACKET_DROP_E, PRV_CPSS_PIPE_CG_PORT_12_RX_UNDERSIZE_PACKET_DROP_E, 
    PRV_CPSS_PIPE_CG_PORT_12_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_CG_PORT_12_TX_SER_ERROR_INT_E, PRV_CPSS_PIPE_CG_PORT_12_RX_SER_ERROR0_INT_E, PRV_CPSS_PIPE_CG_PORT_12_RX_SER_ERROR1_INT_E, PRV_CPSS_PIPE_CG_PORT_12_TX_UNDERFLOW_INT_E, PRV_CPSS_PIPE_CG_PORT_12_CG_RX_FIFO_OVERFLOW_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_OVERRUN0_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_OVERRUN1_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_OVERRUN2_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_OVERRUN3_INT_E, 
    PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_UNDERRUN0_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_UNDERRUN1_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_UNDERRUN2_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_UNDERRUN3_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_OVERRUN0_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_OVERRUN1_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_OVERRUN2_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_TX_FIFO_OVERRUN3_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_UNDERRUN0_INT_E, 
    PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_UNDERRUN1_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_UNDERRUN2_INT_E, PRV_CPSS_PIPE_CG_PORT_12_MLG_RX_FIFO_UNDERRUN3_INT_E, PRV_CPSS_PIPE_CG_PORT_12_SOP_INSIDE_PACKET_E, PRV_CPSS_PIPE_CG_PORT_12_TRANSACTION_OUTSIDE_PACKET_E, PRV_CPSS_PIPE_CG_PORT_12_PACKET_IS_FRAGMENT_SMALLER_THAN_60B_E, PRV_CPSS_PIPE_CG_PORT_12_PACKET_IS_LARGER_THAN_JUMBO_E, PRV_CPSS_PIPE_CG_PORT_12_RESERVED29_E, PRV_CPSS_PIPE_CG_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_CG_PORT_12_RESERVED31_E, 
    PRV_CPSS_PIPE_CG_2_PORT_12_SUMMARY_E, PRV_CPSS_PIPE_CG_2_PORT_12_CG_RX_PREAMB_SER_ERROR_E, PRV_CPSS_PIPE_CG_2_PORT_12_CG_TX_PREAMB_SER_ERROR_E, PRV_CPSS_PIPE_CG_2_PORT_12_CG_RX_FIFO_SER_ERROR_E, PRV_CPSS_PIPE_CG_2_PORT_12_CG_TX_FIFO_SER_ERROR_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED5_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED6_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED7_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED8_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED9_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED10_E, 
    PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED11_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED12_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED13_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED14_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED15_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED16_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED17_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED18_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED19_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED20_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED21_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED22_E, 
    PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED23_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED24_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED25_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED26_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED27_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED28_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED29_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_CG_2_PORT_12_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_0_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED11_E, 
    PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED22_E, 
    PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_0_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_0_PORT_E, PRV_CPSS_PIPE_XLG_PORT_0_LINK_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XLG_PORT_0_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_0_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_0_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_0_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_0_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_0_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_0_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_0_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_0_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_0_XG_COUNT_EXPIRED_E, 
    PRV_CPSS_PIPE_XLG_PORT_0_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED23_E, 
    PRV_CPSS_PIPE_XLG_PORT_0_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_0_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED3_E, 
    PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED14_E, 
    PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED25_E, 
    PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_0_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_0_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_0_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_0_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_0_TX_UNDERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_0_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_0_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_0_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_0_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_0_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_0_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_0_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_0_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_0_MIB_COUNTERS_COPY_DONE_E, 
    PRV_CPSS_PIPE_GIGA_PORT_0_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED26_E, 
    PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_0_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_0_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_0_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_0_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_0_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_0_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_0_NEW_TIMESTAMP_QUEUE0_E, 
    PRV_CPSS_PIPE_PTP_PORT_0_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_0_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_0_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_0_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_0_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_0_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED16_E, 
    PRV_CPSS_PIPE_PTP_PORT_0_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED29_E, 
    PRV_CPSS_PIPE_PTP_PORT_0_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_0_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_0_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_0_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_0_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_0_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_0_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_0_SUM_LANE2_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_0_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_0_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED11_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_0_RESERVED31_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_DETECTED_IIAII_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED17_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED27_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_SIGNAL_DETECT_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED15_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED25_E, 
    PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_0_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_0_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_0_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_0_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_0_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_0_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_0_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_0_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_0_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_0_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_0_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_0_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_0_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_0_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_0_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_0_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_1_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_1_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_1_PORT_E, PRV_CPSS_PIPE_XLG_PORT_1_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_1_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_1_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_1_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_1_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_1_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_1_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_1_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_1_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_1_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_1_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_1_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_1_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED29_E, 
    PRV_CPSS_PIPE_XLG_PORT_1_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_1_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_1_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_GIGA_PORT_1_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_1_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_1_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_1_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_1_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_1_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_1_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_1_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_1_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_1_QSGMII_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_GIGA_PORT_1_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_1_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_1_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_1_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_1_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED21_E, 
    PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_1_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_1_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_1_PTP_RX_FIFO_FULL_E, 
    PRV_CPSS_PIPE_PTP_PORT_1_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_1_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_1_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_1_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_1_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_1_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_1_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_1_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_1_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_1_RX_SOP_IN_UNDER_RESET_E, 
    PRV_CPSS_PIPE_PTP_PORT_1_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED24_E, 
    PRV_CPSS_PIPE_PTP_PORT_1_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_1_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_1_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_1_DESKEW_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_1_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_1_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_1_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_1_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_1_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_1_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_1_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_1_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_1_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_1_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_1_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_1_SD_INTERRUPT_1_E, 
    PRV_CPSS_PIPE_MPCS_PORT_1_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_1_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_1_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_1_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_1_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED20_E, 
    PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_1_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_MACRO_S_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_2_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_2_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_2_PORT_E, 
    PRV_CPSS_PIPE_XLG_PORT_2_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_2_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_2_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_2_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_2_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_2_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_2_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_2_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_2_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_2_XG_COUNT_COPY_DONE_E, 
    PRV_CPSS_PIPE_XLG_PORT_2_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_2_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XLG_PORT_2_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_2_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_PTP_SUM_E, 
    PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED13_E, 
    PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED24_E, 
    PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_2_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_2_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_2_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_2_RX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_2_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_2_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_2_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_2_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_2_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_2_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_2_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_2_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_2_MAC_RX_PATH_RECEIVED_LPI_E, 
    PRV_CPSS_PIPE_GIGA_PORT_2_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_2_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED25_E, 
    PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_2_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_2_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_2_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_2_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_2_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_2_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_2_NEW_TIMESTAMP_QUEUE0_E, 
    PRV_CPSS_PIPE_PTP_PORT_2_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_2_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_2_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_2_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_2_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_2_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED16_E, 
    PRV_CPSS_PIPE_PTP_PORT_2_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED29_E, 
    PRV_CPSS_PIPE_PTP_PORT_2_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_2_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_2_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_2_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_2_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_2_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_2_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_2_SUM_LANE2_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_2_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_2_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED11_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_0_RESERVED31_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_DETECTED_IIAII_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED17_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED27_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_SIGNAL_DETECT_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED15_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED25_E, 
    PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_2_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_2_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_2_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_2_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_2_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_2_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_2_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_2_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_2_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_2_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_2_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_2_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_2_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_2_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_2_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_2_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_3_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_3_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_3_PORT_E, PRV_CPSS_PIPE_XLG_PORT_3_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_3_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_3_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_3_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_3_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_3_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_3_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_3_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_3_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_3_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_3_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_3_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_3_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED29_E, 
    PRV_CPSS_PIPE_XLG_PORT_3_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_3_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_3_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_GIGA_PORT_3_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_3_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_3_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_3_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_3_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_3_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_3_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_3_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_3_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_3_QSGMII_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_GIGA_PORT_3_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_3_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_3_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_3_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_3_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED21_E, 
    PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_3_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_3_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_3_PTP_RX_FIFO_FULL_E, 
    PRV_CPSS_PIPE_PTP_PORT_3_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_3_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_3_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_3_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_3_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_3_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_3_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_3_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_3_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_3_RX_SOP_IN_UNDER_RESET_E, 
    PRV_CPSS_PIPE_PTP_PORT_3_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED24_E, 
    PRV_CPSS_PIPE_PTP_PORT_3_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_3_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_3_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_3_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_3_DESKEW_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_3_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_3_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_3_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_3_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_3_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_3_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_3_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_3_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_3_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_3_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_3_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_3_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_3_SD_INTERRUPT_1_E, 
    PRV_CPSS_PIPE_MPCS_PORT_3_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_3_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_3_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_3_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_3_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED20_E, 
    PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_3_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_MACRO_S_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_4_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_4_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_4_PORT_E, 
    PRV_CPSS_PIPE_XLG_PORT_4_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_4_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_4_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_4_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_4_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_4_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_4_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_4_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_4_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_4_XG_COUNT_COPY_DONE_E, 
    PRV_CPSS_PIPE_XLG_PORT_4_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_4_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED22_E, 
    PRV_CPSS_PIPE_XLG_PORT_4_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_4_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_PTP_SUM_E, 
    PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED13_E, 
    PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED24_E, 
    PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_4_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_4_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_4_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_4_RX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_4_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_4_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_4_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_4_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_4_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_4_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_4_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_4_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_4_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_4_MAC_RX_PATH_RECEIVED_LPI_E, 
    PRV_CPSS_PIPE_GIGA_PORT_4_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_4_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED25_E, 
    PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_4_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_4_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_4_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_4_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_4_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_4_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_4_NEW_TIMESTAMP_QUEUE0_E, 
    PRV_CPSS_PIPE_PTP_PORT_4_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_4_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_4_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_4_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_4_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_4_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED16_E, 
    PRV_CPSS_PIPE_PTP_PORT_4_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED29_E, 
    PRV_CPSS_PIPE_PTP_PORT_4_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_4_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_4_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_4_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_4_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_4_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_4_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_4_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_4_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_4_SUM_LANE2_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_4_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_4_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_4_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED11_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_0_RESERVED31_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_DETECTED_IIAII_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED17_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED27_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_SIGNAL_DETECT_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED15_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED25_E, 
    PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_4_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_4_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_4_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_4_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_4_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_4_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_4_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_4_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_4_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_4_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_4_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_4_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_4_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_4_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_4_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_4_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_4_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_5_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_5_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_5_PORT_E, PRV_CPSS_PIPE_XLG_PORT_5_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_5_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_5_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_5_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_5_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_5_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_5_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_5_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_5_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_5_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_5_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_5_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_5_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED29_E, 
    PRV_CPSS_PIPE_XLG_PORT_5_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_5_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_5_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_GIGA_PORT_5_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_5_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_5_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_5_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_5_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_5_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_5_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_5_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_5_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_5_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_5_QSGMII_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_GIGA_PORT_5_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_5_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_5_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_5_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_5_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED21_E, 
    PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_5_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_5_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_5_PTP_RX_FIFO_FULL_E, 
    PRV_CPSS_PIPE_PTP_PORT_5_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_5_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_5_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_5_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_5_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_5_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_5_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_5_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_5_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_5_RX_SOP_IN_UNDER_RESET_E, 
    PRV_CPSS_PIPE_PTP_PORT_5_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED24_E, 
    PRV_CPSS_PIPE_PTP_PORT_5_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_5_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_5_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_5_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_5_DESKEW_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_5_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_5_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_5_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_5_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_5_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_5_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_5_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_5_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_5_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_5_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_5_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_5_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_5_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_5_SD_INTERRUPT_1_E, 
    PRV_CPSS_PIPE_MPCS_PORT_5_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_5_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_5_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_5_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_5_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED20_E, 
    PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_5_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_MACRO_S_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_6_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_6_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_6_PORT_E, 
    PRV_CPSS_PIPE_XLG_PORT_6_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_6_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_6_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_6_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_6_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_6_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_6_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_6_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_6_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_6_XG_COUNT_COPY_DONE_E, 
    PRV_CPSS_PIPE_XLG_PORT_6_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_6_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED22_E, 
    PRV_CPSS_PIPE_XLG_PORT_6_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_6_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_PTP_SUM_E, 
    PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED13_E, 
    PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED24_E, 
    PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_6_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_6_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_6_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_6_RX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_6_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_6_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_6_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_6_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_6_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_6_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_6_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_6_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_6_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_6_MAC_RX_PATH_RECEIVED_LPI_E, 
    PRV_CPSS_PIPE_GIGA_PORT_6_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_6_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED25_E, 
    PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_6_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_6_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_6_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_6_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_6_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_6_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_6_NEW_TIMESTAMP_QUEUE0_E, 
    PRV_CPSS_PIPE_PTP_PORT_6_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_6_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_6_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_6_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_6_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_6_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED16_E, 
    PRV_CPSS_PIPE_PTP_PORT_6_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED29_E, 
    PRV_CPSS_PIPE_PTP_PORT_6_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_6_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_6_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_6_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_6_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_6_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_6_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_6_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_6_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_6_SUM_LANE2_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_6_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_6_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_6_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED11_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_0_RESERVED31_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_DETECTED_IIAII_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED17_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED27_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_SIGNAL_DETECT_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED15_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED25_E, 
    PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_6_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_6_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_6_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_6_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_6_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_6_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_6_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_6_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_6_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_6_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_6_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_6_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_6_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_6_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_6_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_6_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_6_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_7_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_7_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_7_PORT_E, PRV_CPSS_PIPE_XLG_PORT_7_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_7_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_7_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_7_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_7_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_7_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_7_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_7_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_7_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_7_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_7_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_7_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_7_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED29_E, 
    PRV_CPSS_PIPE_XLG_PORT_7_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_7_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_7_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_GIGA_PORT_7_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_7_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_7_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_7_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_7_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_7_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_7_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_7_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_7_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_7_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_7_QSGMII_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_GIGA_PORT_7_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_7_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_7_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_7_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_7_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED21_E, 
    PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_7_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_7_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_7_PTP_RX_FIFO_FULL_E, 
    PRV_CPSS_PIPE_PTP_PORT_7_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_7_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_7_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_7_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_7_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_7_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_7_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_7_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_7_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_7_RX_SOP_IN_UNDER_RESET_E, 
    PRV_CPSS_PIPE_PTP_PORT_7_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED24_E, 
    PRV_CPSS_PIPE_PTP_PORT_7_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_7_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_7_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_7_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_7_DESKEW_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_7_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_7_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_7_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_7_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_7_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_7_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_7_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_7_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_7_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_7_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_7_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_7_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_7_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_7_SD_INTERRUPT_1_E, 
    PRV_CPSS_PIPE_MPCS_PORT_7_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_7_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_7_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_7_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_7_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED20_E, 
    PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_7_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_MACRO_S_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_8_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_8_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_8_PORT_E, 
    PRV_CPSS_PIPE_XLG_PORT_8_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_8_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_8_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_8_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_8_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_8_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_8_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_8_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_8_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_8_XG_COUNT_COPY_DONE_E, 
    PRV_CPSS_PIPE_XLG_PORT_8_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_8_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED22_E, 
    PRV_CPSS_PIPE_XLG_PORT_8_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_8_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_PTP_SUM_E, 
    PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED13_E, 
    PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED24_E, 
    PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_8_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_8_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_8_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_8_RX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_8_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_8_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_8_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_8_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_8_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_8_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_8_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_8_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_8_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_8_MAC_RX_PATH_RECEIVED_LPI_E, 
    PRV_CPSS_PIPE_GIGA_PORT_8_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_8_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED25_E, 
    PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_8_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_8_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_8_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_8_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_8_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_8_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_8_NEW_TIMESTAMP_QUEUE0_E, 
    PRV_CPSS_PIPE_PTP_PORT_8_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_8_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_8_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_8_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_8_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_8_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED16_E, 
    PRV_CPSS_PIPE_PTP_PORT_8_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED29_E, 
    PRV_CPSS_PIPE_PTP_PORT_8_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_8_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_8_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_8_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_8_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_8_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_8_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_8_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_8_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_8_SUM_LANE2_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_8_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_8_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_8_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED11_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED21_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_0_RESERVED31_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_DETECTED_IIAII_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED17_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED27_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_SIGNAL_DETECT_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED15_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED25_E, 
    PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_8_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_8_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_8_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_8_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_8_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_8_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_8_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_8_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_8_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_8_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_8_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_8_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_8_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_8_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_8_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_8_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_8_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_9_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_9_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_9_PORT_E, PRV_CPSS_PIPE_XLG_PORT_9_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_9_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_9_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_9_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_9_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_9_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_9_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_9_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_9_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_9_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_9_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_9_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_9_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED29_E, 
    PRV_CPSS_PIPE_XLG_PORT_9_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_9_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_9_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_GIGA_PORT_9_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_9_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_9_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_9_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_9_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_9_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_9_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_9_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_9_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_9_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_9_QSGMII_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_GIGA_PORT_9_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_9_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_9_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_9_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_9_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED21_E, 
    PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_9_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_9_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_9_PTP_RX_FIFO_FULL_E, 
    PRV_CPSS_PIPE_PTP_PORT_9_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_9_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_9_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_9_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_9_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_9_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_9_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_9_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_9_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_9_RX_SOP_IN_UNDER_RESET_E, 
    PRV_CPSS_PIPE_PTP_PORT_9_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED24_E, 
    PRV_CPSS_PIPE_PTP_PORT_9_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_9_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_9_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_9_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_9_DESKEW_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_9_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_9_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_9_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_9_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_9_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_9_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_9_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_9_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_9_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_9_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_9_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_9_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_9_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_9_SD_INTERRUPT_1_E, 
    PRV_CPSS_PIPE_MPCS_PORT_9_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_9_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_9_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_9_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_9_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED20_E, 
    PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_9_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_MACRO_S_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_10_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_10_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_XLG_PORT_10_PORT_E, PRV_CPSS_PIPE_XLG_PORT_10_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_10_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_10_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_10_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_10_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_10_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_10_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_10_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_10_NO_BUFF_PACKET_DROP_E, 
    PRV_CPSS_PIPE_XLG_PORT_10_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_10_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_10_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED21_E, 
    PRV_CPSS_PIPE_XLG_PORT_10_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_10_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_INTERNAL_SUM_E, 
    PRV_CPSS_PIPE_GIGA_PORT_10_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED12_E, 
    PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED23_E, 
    PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_10_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_10_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_10_AN_COMPLETED_E, 
    PRV_CPSS_PIPE_GIGA_PORT_10_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_10_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_10_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_10_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_10_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_10_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_10_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_10_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_10_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_10_PCS_TX_PATH_RECEIVED_LPI_E, 
    PRV_CPSS_PIPE_GIGA_PORT_10_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_10_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_10_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED23_E, 
    PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_10_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_10_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_10_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_10_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_10_FIFO_READ_ERROR_E, 
    PRV_CPSS_PIPE_PTP_PORT_10_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_10_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_10_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_10_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_10_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_10_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_10_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_10_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED13_E, 
    PRV_CPSS_PIPE_PTP_PORT_10_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED25_E, 
    PRV_CPSS_PIPE_PTP_PORT_10_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_10_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_10_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_10_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_10_DESKEW_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_10_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_10_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_10_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_10_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_10_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_10_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_10_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_10_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_10_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_10_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_10_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_10_AP_INTERRUPT_SUMMERY_E, 
    PRV_CPSS_PIPE_MPCS_PORT_10_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_10_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_10_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_10_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_10_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_10_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_10_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED17_E, 
    PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED29_E, 
    PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_10_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED_E, 
    PRV_CPSS_PIPE_XLG_PORT_11_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED17_E, 
    PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED28_E, 
    PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_11_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_11_PORT_E, PRV_CPSS_PIPE_XLG_PORT_11_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_11_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_11_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_11_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_11_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_11_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_11_ADDRESS_OUT_OF_RANGE_E, 
    PRV_CPSS_PIPE_XLG_PORT_11_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_11_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_11_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_11_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_11_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED18_E, 
    PRV_CPSS_PIPE_XLG_PORT_11_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_11_RESERVED30_E, 
    PRV_CPSS_PIPE_XLG_PORT_11_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED9_E, 
    PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_11_SUM_RESERVED31_E, 
    PRV_CPSS_PIPE_GIGA_PORT_11_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_11_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_11_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_11_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_11_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_11_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_11_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_11_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_11_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_11_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_11_QSGMII_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_GIGA_PORT_11_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_11_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_11_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_11_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_11_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED20_E, 
    PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_11_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_11_SUMMARY_E, 
    PRV_CPSS_PIPE_PTP_PORT_11_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_11_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_11_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_11_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_11_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_11_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_11_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_11_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_11_RX_SOP_MISSED_E, PRV_CPSS_PIPE_PTP_PORT_11_RX_SOP_OUT_UNDER_RESET_E, 
    PRV_CPSS_PIPE_PTP_PORT_11_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED21_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED22_E, 
    PRV_CPSS_PIPE_PTP_PORT_11_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_11_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_11_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_DESKEW_TIMEOUT_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_11_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_11_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_11_SUM_LANE5_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED13_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED25_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_11_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_CJR_PAT_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED14_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_DISPARITY_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED12_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED22_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_SUM_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED9_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED19_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED29_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_DETECTED_IIAII_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED17_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED27_E, 
    PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_11_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_11_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_11_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_11_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_11_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_11_RX_GB_ALIGN_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_11_TX_GB_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_11_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_11_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_11_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_11_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_11_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_11_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_11_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_11_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_11_GB_LOCK_SYNC_CHANGE_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED15_E, 
    PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED26_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED27_E, 
    PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_11_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_XPCS_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_GB_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED27_E, 
    PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_12_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_12_PORT_E, PRV_CPSS_PIPE_XLG_PORT_12_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_12_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_12_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_12_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_12_UNKNOWN_SEQUENCE_E, PRV_CPSS_PIPE_XLG_PORT_12_FAULT_CHANGED_E, 
    PRV_CPSS_PIPE_XLG_PORT_12_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_12_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_12_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_12_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_12_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_12_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED17_E, 
    PRV_CPSS_PIPE_XLG_PORT_12_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED29_E, 
    PRV_CPSS_PIPE_XLG_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_12_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED7_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED8_E, 
    PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED19_E, 
    PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED30_E, 
    PRV_CPSS_PIPE_GIGA_PORT_12_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_12_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_12_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_12_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_12_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_12_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_12_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_12_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_12_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_12_TX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_12_TX_FIFO_UNDERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_12_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_12_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_12_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_12_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_12_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_12_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED18_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED19_E, 
    PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_12_RESERVED31_E, 
    PRV_CPSS_PIPE_PTP_PORT_12_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_12_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_12_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_12_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_12_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_12_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_12_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_12_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_12_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_12_RX_SOP_MISSED_E, 
    PRV_CPSS_PIPE_PTP_PORT_12_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_12_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED21_E, 
    PRV_CPSS_PIPE_PTP_PORT_12_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_12_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_12_LINK_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_12_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_12_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_12_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_12_SUM_LANE5_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_12_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_SYMBOL_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED13_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED23_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED8_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED18_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_12_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_12_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_12_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_12_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_12_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_12_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_12_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_12_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_12_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_12_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_12_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_12_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_12_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_12_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_12_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_12_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_12_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_13_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_13_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_13_PORT_E, PRV_CPSS_PIPE_XLG_PORT_13_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_13_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_13_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_13_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_13_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_13_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_13_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_13_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_13_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_13_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_13_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_13_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_13_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED28_E, 
    PRV_CPSS_PIPE_XLG_PORT_13_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_13_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED7_E, 
    PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED18_E, 
    PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED29_E, 
    PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_13_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_13_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_13_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_13_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_13_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_13_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_13_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_13_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_13_TX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_13_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_13_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_13_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_13_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_13_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_13_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_13_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED18_E, 
    PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED30_E, 
    PRV_CPSS_PIPE_GIGA_PORT_13_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_13_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_13_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_13_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_13_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_13_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_13_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_13_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_13_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_13_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_13_RX_SOP_MISSED_E, 
    PRV_CPSS_PIPE_PTP_PORT_13_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_13_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED21_E, 
    PRV_CPSS_PIPE_PTP_PORT_13_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_13_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_13_LINK_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_13_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_13_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_13_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_13_SUM_LANE5_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_13_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_SYMBOL_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED13_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED23_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED8_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED18_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_13_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_13_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_13_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_13_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_13_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_13_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_13_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_13_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_13_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_13_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_13_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_13_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_13_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_13_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_13_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_13_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_13_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_14_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_14_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_14_PORT_E, PRV_CPSS_PIPE_XLG_PORT_14_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_14_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_14_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_14_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_14_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_14_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_14_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_14_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_14_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_14_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_14_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_14_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_14_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED28_E, 
    PRV_CPSS_PIPE_XLG_PORT_14_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_14_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED7_E, 
    PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED18_E, 
    PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED29_E, 
    PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_14_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_14_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_14_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_14_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_14_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_14_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_14_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_14_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_14_TX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_14_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_14_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_14_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_14_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_14_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_14_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_14_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED18_E, 
    PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED30_E, 
    PRV_CPSS_PIPE_GIGA_PORT_14_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_14_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_14_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_14_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_14_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_14_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_14_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_14_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_14_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_14_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_14_RX_SOP_MISSED_E, 
    PRV_CPSS_PIPE_PTP_PORT_14_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_14_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED21_E, 
    PRV_CPSS_PIPE_PTP_PORT_14_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_14_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_14_LINK_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_14_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_14_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_14_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_14_SUM_LANE5_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_14_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_SYMBOL_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED13_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED23_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED8_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED18_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_14_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_14_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_14_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_14_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_14_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_14_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_14_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_14_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_14_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_14_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_14_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_14_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_14_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_14_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_14_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_14_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_14_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_MACRO_S_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_XLG_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_GIGE_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_HGL_PORT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_XPCS_INTERRUPT_SUMMARY_E, 
    PRV_CPSS_PIPE_XLG_PORT_15_SUM_GB_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_PTP_UNIT_INTERRUPT_SUMMARY_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED8_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED9_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED10_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED11_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED12_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED15_E, 
    PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED16_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED26_E, 
    PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED28_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_15_SUM_RESERVED31_E, PRV_CPSS_PIPE_XLG_PORT_15_PORT_E, PRV_CPSS_PIPE_XLG_PORT_15_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_15_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_15_TX_UNDERRUN_E, PRV_CPSS_PIPE_XLG_PORT_15_FC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_15_UNKNOWN_SEQUENCE_E, 
    PRV_CPSS_PIPE_XLG_PORT_15_FAULT_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_15_ADDRESS_OUT_OF_RANGE_E, PRV_CPSS_PIPE_XLG_PORT_15_SIMPLEX_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_XLG_PORT_15_NO_BUFF_PACKET_DROP_E, PRV_CPSS_PIPE_XLG_PORT_15_XG_COUNT_COPY_DONE_E, PRV_CPSS_PIPE_XLG_PORT_15_XG_COUNT_EXPIRED_E, PRV_CPSS_PIPE_XLG_PORT_15_PFC_SYNC_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED13_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED14_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED15_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED16_E, 
    PRV_CPSS_PIPE_XLG_PORT_15_RESERVED17_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED18_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED19_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED20_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED21_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED22_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED23_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED24_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED25_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED26_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED27_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED28_E, 
    PRV_CPSS_PIPE_XLG_PORT_15_RESERVED29_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED30_E, PRV_CPSS_PIPE_XLG_PORT_15_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_INTERNAL_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_PTP_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED3_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED4_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED5_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED6_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED7_E, 
    PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED8_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED9_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED10_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED11_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED12_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED13_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED14_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED15_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED18_E, 
    PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED29_E, 
    PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED30_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_RESERVED31_E, PRV_CPSS_PIPE_GIGA_PORT_15_SUM_E, PRV_CPSS_PIPE_GIGA_PORT_15_LINK_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_15_AN_COMPLETED_E, PRV_CPSS_PIPE_GIGA_PORT_15_RX_FIFO_OVERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_15_TX_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_15_RETRANSMIT_FIFO_UNDERRRUN_E, PRV_CPSS_PIPE_GIGA_PORT_15_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_GIGA_PORT_15_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_15_TX_FIFO_OVERRUN_E, 
    PRV_CPSS_PIPE_GIGA_PORT_15_TX_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_GIGA_PORT_15_QSGMII_PRBS_ERROR_E, PRV_CPSS_PIPE_GIGA_PORT_15_PCS_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_15_PCS_TX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_15_MAC_RX_PATH_RECEIVED_LPI_E, PRV_CPSS_PIPE_GIGA_PORT_15_MIB_COUNTERS_COPY_DONE_E, PRV_CPSS_PIPE_GIGA_PORT_15_MIB_COUNTER_WRAPAROUND_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED16_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED17_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED18_E, 
    PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED19_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED20_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED21_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED22_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED23_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED24_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED25_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED26_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED27_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED28_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED29_E, PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED30_E, 
    PRV_CPSS_PIPE_GIGA_PORT_15_RESERVED31_E, PRV_CPSS_PIPE_PTP_PORT_15_SUMMARY_E, PRV_CPSS_PIPE_PTP_PORT_15_PTP_RX_FIFO_FULL_E, PRV_CPSS_PIPE_PTP_PORT_15_MIB_FRAGMENT_E, PRV_CPSS_PIPE_PTP_PORT_15_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_15_FIFO_WRITE_ERROR_E, PRV_CPSS_PIPE_PTP_PORT_15_NEW_TIMESTAMP_QUEUE0_E, PRV_CPSS_PIPE_PTP_PORT_15_NEW_TIMESTAMP_QUEUE1_E, PRV_CPSS_PIPE_PTP_PORT_15_TIMESTAMP_QUEUE0_FULL_E, PRV_CPSS_PIPE_PTP_PORT_15_TIMESTAMP_QUEUE1_FULL_E, PRV_CPSS_PIPE_PTP_PORT_15_RX_SOP_MISSED_E, 
    PRV_CPSS_PIPE_PTP_PORT_15_RX_SOP_OUT_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_15_RX_SOP_IN_UNDER_RESET_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED12_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED13_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED14_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED15_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED16_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED17_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED18_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED19_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED20_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED21_E, 
    PRV_CPSS_PIPE_PTP_PORT_15_RESERVED22_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED23_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED24_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED25_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED26_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED27_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED28_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED29_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED30_E, PRV_CPSS_PIPE_PTP_PORT_15_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_15_LINK_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_DESKEW_TIMEOUT_E, PRV_CPSS_PIPE_XPCS_PORT_15_DETECTED_COLUMN_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_15_DESKEW_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_PPM_FIFO_UNDERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_15_PPM_FIFO_OVERRUN_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_LANE0_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_LANE1_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_LANE2_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_LANE3_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_LANE4_E, PRV_CPSS_PIPE_XPCS_PORT_15_SUM_LANE5_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED24_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_15_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_SYMBOL_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED13_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED23_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_0_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_PRBS_ERROR_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED10_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED20_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED30_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_1_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_SYNC_STATUS_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED8_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED16_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED18_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED26_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED28_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_2_RESERVED31_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_SUM_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_PRBS_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_DISPARITY_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_SYMBOL_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_CJR_PAT_ERROR_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_SYNC_STATUS_CHANGED_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_DETECTED_IIAII_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED8_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED9_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED10_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED11_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED12_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED13_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED14_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED15_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED16_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED17_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED18_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED19_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED20_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED21_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED22_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED23_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED24_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED25_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED26_E, 
    PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED27_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED28_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED29_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED30_E, PRV_CPSS_PIPE_XPCS_PORT_15_LANE_3_RESERVED31_E, PRV_CPSS_PIPE_MPCS_PORT_15_PCS_SUM_E, PRV_CPSS_PIPE_MPCS_PORT_15_ACCESS_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_15_ALIGN_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_15_LANE_LOCK_LOST_E, PRV_CPSS_PIPE_MPCS_PORT_15_RX_GB_ALIGN_FIFO_FULL_E, 
    PRV_CPSS_PIPE_MPCS_PORT_15_TX_GB_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_15_SIGNAL_DETECT_CHANGED_E, PRV_CPSS_PIPE_MPCS_PORT_15_AP_INTERRUPT_SUMMERY_E, PRV_CPSS_PIPE_MPCS_PORT_15_SD_INTERRUPT_0_E, PRV_CPSS_PIPE_MPCS_PORT_15_SD_INTERRUPT_1_E, PRV_CPSS_PIPE_MPCS_PORT_15_RX_DECODER_ERROR_INT_E, PRV_CPSS_PIPE_MPCS_PORT_15_PCS_LOOPBACK_FIFO_EMPTY_E, PRV_CPSS_PIPE_MPCS_PORT_15_PCS_LOOPBACK_FIFO_FULL_E, PRV_CPSS_PIPE_MPCS_PORT_15_TX_GB_FIFO_READ_ERROR_E, PRV_CPSS_PIPE_MPCS_PORT_15_GB_LOCK_SYNC_CHANGE_E, 
    PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED15_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED16_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED17_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED18_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED19_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED20_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED21_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED22_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED23_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED24_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED25_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED26_E, 
    PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED27_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED28_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED29_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED30_E, PRV_CPSS_PIPE_MPCS_PORT_15_RESERVED31_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_GENERAL_SUMMARY_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_PEX_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_PEX_ERR_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_FUNC_UNITS_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_DATA_PATH_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_PORTS_SUM_E, 
    PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_DFX_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_MG_INTERNAL_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_TX_SDMA_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RX_SDMA_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_DFX_1_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_FUNC_UNITS1_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_XSMI0_S_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_XSMI1_S_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED14_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED15_E, 
    PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_PORTS_1_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_PORTS_2_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_MG1_INTERNAL_SUM_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED19_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED20_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED21_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED22_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED23_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED24_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED25_E, 
    PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED26_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED27_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED28_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED29_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED30_E, PRV_CPSS_PIPE_GLOBAL_MG1_S_SUMMARY_RESERVED31_E, PRV_CPSS_PIPE_MG1_RX_SDMA_SUMMARY_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED1_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_0_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_1_E, 
    PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_2_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_3_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_4_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_5_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_6_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_BUFFER_QUEUE_7_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED10_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_0_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_1_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_2_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_3_E, 
    PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_4_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_5_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_6_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RX_ERROR_QUEUE_7_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESOURCE_ERROR_CNT_OF_E, PRV_CPSS_PIPE_MG1_RX_SDMA_BYTE_CNT_OF_E, PRV_CPSS_PIPE_MG1_RX_SDMA_PACKET_CNT_OF_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED22_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED23_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED24_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED25_E, 
    PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED26_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED27_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED28_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED29_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED30_E, PRV_CPSS_PIPE_MG1_RX_SDMA_RESERVED31_E, PRV_CPSS_PIPE_MG1_TX_SDMA_SUMMARY_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_0_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_1_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_2_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_3_E, 
    PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_4_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_5_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_6_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_BUFFER_QUEUE_7_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_0_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_1_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_2_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_3_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_4_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_5_E, 
    PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_6_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_ERROR_QUEUE_7_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_0_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_1_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_2_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_3_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_4_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_5_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_6_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_END_QUEUE_7_E, PRV_CPSS_PIPE_MG1_TX_SDMA_TX_REJECT_0_E, 
    PRV_CPSS_PIPE_MG1_TX_SDMA_RESERVED26_E, PRV_CPSS_PIPE_MG1_TX_SDMA_RESERVED27_E, PRV_CPSS_PIPE_MG1_TX_SDMA_RESERVED28_E, PRV_CPSS_PIPE_MG1_TX_SDMA_RESERVED29_E, PRV_CPSS_PIPE_MG1_TX_SDMA_RESERVED30_E, PRV_CPSS_PIPE_MG1_TX_SDMA_RESERVED31_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_IPC_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED1_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED2_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED3_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_PORT0_31_LINK_STATUS_CHANGE_SUM_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_MAIN_PORT32_63_LINK_STATUS_CHANGE_SUM_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_PORT64_95_LINK_STATUS_CHANGE_SUM_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED7_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED8_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED9_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED10_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED11_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED12_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED13_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED14_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED15_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED16_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED17_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED18_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED19_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED20_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED21_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED22_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED23_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED24_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED25_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED26_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED27_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED28_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED29_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED30_E, PRV_CPSS_PIPE_AP_DOORBELL_MAIN_RESERVED31_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_0_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_1_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_2_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_3_LINK_STATUS_CHANGE_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_PORT_4_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_5_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_6_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_7_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_8_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_9_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_10_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_11_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_12_LINK_STATUS_CHANGE_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_PORT_13_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_14_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_15_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_16_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_17_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_18_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_19_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_20_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_21_LINK_STATUS_CHANGE_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_PORT_22_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_23_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_24_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_25_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_26_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_27_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_28_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_29_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_30_LINK_STATUS_CHANGE_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_PORT_31_LINK_STATUS_CHANGE_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_0_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_1_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_2_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_3_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_4_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_5_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_6_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_7_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_8_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_9_802_3_AP_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_PORT_10_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_11_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_12_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_13_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_14_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_15_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_16_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_17_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_18_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_19_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_20_802_3_AP_E, 
    PRV_CPSS_PIPE_AP_DOORBELL_PORT_21_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_22_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_23_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_24_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_25_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_26_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_27_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_28_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_29_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_30_802_3_AP_E, PRV_CPSS_PIPE_AP_DOORBELL_PORT_31_802_3_AP_E, 
    PRV_CPSS_PIPE_DOORBELL_PORT_0_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_1_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_2_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_3_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_4_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_5_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_6_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_7_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_8_REMOTE_FAULT_TX_CHANGE_E, 
    PRV_CPSS_PIPE_DOORBELL_PORT_9_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_10_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_11_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_12_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_13_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_14_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_15_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_16_REMOTE_FAULT_TX_CHANGE_E, 
    PRV_CPSS_PIPE_DOORBELL_PORT_17_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_18_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_19_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_20_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_21_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_22_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_23_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_24_REMOTE_FAULT_TX_CHANGE_E, 
    PRV_CPSS_PIPE_DOORBELL_PORT_25_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_26_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_27_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_28_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_29_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_30_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_DOORBELL_PORT_31_REMOTE_FAULT_TX_CHANGE_E, PRV_CPSS_PIPE_LAST_INT_E} PRV_CPSS_PIPE_INT_CAUSE_ENT;

File common/h/cpssDriver/pp/interrupts/generic/prvCpssDrvInterrupts.h:
typedef GT_STATUS (*)(GT_SW_DEV_NUM, CPSS_UNI_EV_CAUSE_ENT, GT_U32, PRV_CPSS_EV_CONVERT_DIRECTION_ENT, GT_U32 *) PRV_CPSS_DRV_EVENT_GENERIC_CONVERT_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, PRV_CPSS_EV_CONVERT_DIRECTION_ENT, GT_U32, GT_U32 *) PRV_CPSS_DRV_EVENT_PORT_MAP_CONVERT_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, PRV_CPSS_EV_CONVERT_DIRECTION_ENT, GT_U32 *) PRV_CPSS_DRV_HW_PORT_INDEX_TO_MAC_NUM_CONVERT_CB_FUNC;
typedef struct {
    PRV_CPSS_DRV_HW_PORT_INDEX_TO_MAC_NUM_CONVERT_CB_FUNC eventHwIndexToMacNumConvertFunc;
    PRV_CPSS_DRV_REQ_DRVN_MASK_SET_FUNC intMaskSetFptr;
} PRV_CPSS_DRV_INT_CTRL_NON_SHARED_STC;
typedef struct {
    struct {...} portGroupInfo[8];
    CPSS_EVENT_ISR_FUNC isrFuncPtr;
    PRV_CPSS_DRV_INT_INIT_PHASE_ENT *initPhase;
    GT_U32 numOfIntBits;
    PRV_CPSS_DRV_GPP_INT_INFO_STC **gppIsrFuncsArr;
    GT_U32 intSumMaskRegAddr;
    GT_BOOL needInterruptMaskDefaultValueInit;
    GT_BOOL bindTheIsrCbRoutineToFdbTrigEnded;
    const GT_U32 *uniEvMapTableWithExtDataArr;
    GT_U32 uniEvMapTableWithExtDataSize;
    GT_U32 (*uniEvMapTableArr)[2];
    GT_U32 uniEvMapTableSize;
    GT_U32 numReservedPorts;
} PRV_CPSS_DRV_INT_CTRL_STC;
typedef enum {PRV_CPSS_DRV_INT_INIT_PHASE2_E, PRV_CPSS_DRV_INT_INIT_PHASE1_E, PRV_CPSS_DRV_INT_INIT_PHASE_MACSEC_E} PRV_CPSS_DRV_INT_INIT_PHASE_ENT;
typedef struct {
    GT_U8 devNum;
    GT_U32 portGroupId;
} PRV_CPSS_DRV_INT_ISR_COOKIE_STC;
typedef struct {
    GT_BOOL enabled;
    CPSS_EVENT_ISR_FUNC routine;
    void *param;
    CPSS_HW_DRIVER_STC *drv;
    GT_U32 intSumAs;
    GT_U32 intSumReg;
} PRV_CPSS_DRV_INT_TASK_PARAMS_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32 *) PRV_CPSS_DRV_MAC_EVENT_PORT_MAP_CONVERT_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_UNI_EV_CAUSE_ENT, GT_U32, CPSS_EVENT_MASK_SET_ENT, GT_BOOL *) PRV_CPSS_DRV_REMOTE_DEVICE_EVENT_MASK_DEVICE_SET_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32) PRV_CPSS_DRV_UNIT_INTERRUPT_GENERATION_CHECK_FUNC;

File common/h/cpssDriver/pp/interrupts/generic/prvCpssDrvInterruptsInit.h:
typedef struct {
    GT_U32 numOfInterrupts;
    GT_U32 *maskRegistersAddressesArray;
    GT_U32 *maskRegistersDefaultValuesArray;
    GT_U32 numOfScanElements;
    PRV_CPSS_DRV_INTERRUPT_SCAN_STC *interruptsScanArray;
    GT_U32 fdbTrigEndedId;
    PRV_CPSS_DRV_EV_DRVN_INT_REC_CB fdbTrigEndedCbPtr;
    GT_BOOL hasFakeInterrupts;
    GT_U32 firstFakeInterruptId;
    PRV_CPSS_DRV_INT_CAUSE_TO_UNI_EV_CONVERT_FUNC drvIntCauseToUniEvConvertFunc;
    GT_U32 numOfInterruptRegistersNotAccessibleBeforeStartInit;
    GT_U32 *notAccessibleBeforeStartInitPtr;
    GT_U32 *macSecRegIdArray;
} PRV_CPSS_DRV_DEVICE_INTERRUPTS_INFO_STC;
typedef enum {PRV_CPSS_DRV_FAMILY_CHEETAH_E, PRV_CPSS_DRV_FAMILY_CHEETAH_SMI_E, PRV_CPSS_DRV_FAMILY_CHEETAH_SMI_106_E, PRV_CPSS_DRV_FAMILY_CHEETAH_HX_SMI_E, PRV_CPSS_DRV_FAMILY_CHEETAH_HX_PCI_E, PRV_CPSS_DRV_FAMILY_CHEETAH2_E, PRV_CPSS_DRV_FAMILY_CHEETAH2_SMI_E, PRV_CPSS_DRV_FAMILY_CHEETAH3_E, PRV_CPSS_DRV_FAMILY_CHEETAH3_SMI_E, PRV_CPSS_DRV_FAMILY_DXCH_XCAT_REV0_E, PRV_CPSS_DRV_FAMILY_DXCH_XCAT_E, PRV_CPSS_DRV_FAMILY_DXCH_XCAT3_E, PRV_CPSS_DRV_FAMILY_DXCH_XCAT2_E, 
    PRV_CPSS_DRV_FAMILY_DXCH_LION_PORT_GROUP_ID_0_E, PRV_CPSS_DRV_FAMILY_DXCH_LION_PORT_GROUP_ID_1_E, PRV_CPSS_DRV_FAMILY_DXCH_LION_PORT_GROUP_ID_2_E, PRV_CPSS_DRV_FAMILY_DXCH_LION_PORT_GROUP_ID_3_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_0_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_1_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_2_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_3_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_4_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_5_E, 
    PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_6_E, PRV_CPSS_DRV_FAMILY_DXCH_LION2_PORT_GROUP_ID_7_E, PRV_CPSS_DRV_FAMILY_DXCH_BOBCAT2_E, PRV_CPSS_DRV_FAMILY_DXCH_BOBCAT2_BOBK_CAELUM_E, PRV_CPSS_DRV_FAMILY_DXCH_BOBCAT2_BOBK_CETUS_E, PRV_CPSS_DRV_FAMILY_DXCH_BOBCAT3_E, PRV_CPSS_DRV_FAMILY_DXCH_ALDRIN_E, PRV_CPSS_DRV_FAMILY_DXCH_ALDRIN2_E, PRV_CPSS_DRV_FAMILY_PX_PIPE_E, PRV_CPSS_DRV_FAMILY_DXCH_FALCON_1_TILE_E, PRV_CPSS_DRV_FAMILY_DXCH_FALCON_2_TILES_E, PRV_CPSS_DRV_FAMILY_DXCH_FALCON_4_TILES_E, 
    PRV_CPSS_DRV_FAMILY_DXCH_AC5P_E, PRV_CPSS_DRV_FAMILY_DXCH_AC5X_E, PRV_CPSS_DRV_FAMILY_DXCH_HARRIER_E, PRV_CPSS_DRV_FAMILY_DXCH_IRONMAN_L_E, PRV_CPSS_DRV_FAMILY_DXCH_AC5_E, PRV_CPSS_DRV_FAMILY_LAST_E} PRV_CPSS_DRV_FAMILY_ENT;
typedef struct {
    GT_CHAR *deviceNamePtr;
    PRV_CPSS_DRV_FAMILY_ENT intFamily;
    GT_U32 numScanElements;
    const PRV_CPSS_DRV_INTERRUPT_SCAN_STC *intrScanArr;
    GT_U32 numMaskRegisters;
    GT_U32 *maskRegDefaultSummaryArr;
    GT_U32 *maskRegMapArr;
    PRV_CPSS_DRV_INTERRUPT_SCAN_STC *intrScanOutArr;
} PRV_CPSS_DRV_INTERRUPTS_INFO_STC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32 *, GT_U32 *) PRV_CPSS_DRV_INT_CAUSE_TO_UNI_EV_CONVERT_FUNC;

File common/h/cpssDriver/pp/prvCpssDrvErrataMng.h:
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_U32, GT_U32) PRV_CPSS_DRV_ERRATA_ADDR_CHECK_FUNC;
typedef enum {PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_MASK_MEMORY_E = 15, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_MASK_STAGE_E = 240, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_MASK_OPERATION_E = 65280, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_REGISTER_E = 0, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_MEMORY_E, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_PREPARE_E = 0, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_COMPLETE_E = 16, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_READ_E = 0, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_WRITE_E = 256, 
    PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_READ_MASK_E = 512, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_WRITE_MASK_E = 768, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_SET_FIELD_E = 1024, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_GET_FIELD_E = 1280} PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_ENT;
typedef GT_STATUS (*)(GT_U8, GT_U32, void *, PRV_CPSS_DRV_ERRATA_CALLBACK_EVENT_ENT, GT_U32, GT_U32, GT_U32, GT_U32, void *, GT_BOOL *) PRV_CPSS_DRV_ERRATA_CALLBACK_FUNC_PTR;
typedef struct {
    GT_U32 FErArray[1];
    PRV_CPSS_DRV_ERRATA_ADDR_CHECK_FUNC addrCheckFuncPtr;
    PRV_CPSS_DRV_ERRATA_CALLBACK_FUNC_PTR callbackFuncPtr;
    void *callbackDataPtr;
} PRV_CPSS_DRV_ERRATA_STC;

File common/h/cpssDriver/pp/prvCpssDrvPpDefs.h:
typedef struct {
    GT_HW_DEV_NUM hwDevNum;
    CPSS_PP_DEVICE_TYPE devType;
    GT_U32 numOfPorts;
    GT_U32 numOfTiles;
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
    CPSS_PP_SUB_FAMILY_TYPE_ENT devSubFamily;
    GT_U32 drvHwIfSupportedBmp;
    CPSS_PP_INTERFACE_CHANNEL_ENT mngInterfaceType;
    CPSS_HW_INFO_STC hwInfo[8];
    PRV_CPSS_DRV_STRUCT_PP_PORT_GROUP_HW_STC hwCtrl[8];
    CPSS_HW_DRIVER_STC *drivers[8];
    PRV_CPSS_DRV_INT_CTRL_STC intCtrl;
    PRV_CPSS_DRV_ERRATA_STC errata;
    PRV_CPSS_DRV_PORT_GROUPS_INFO_STC portGroupsInfo;
    PRV_SRVCPU_IPC_CHANNEL_STC *ipcDevCfg[20];
    CPSS_HW_DRIVER_STC *chipletDrivers[16];
    GT_U32 activeRavensBitmap;
    GT_U32 enabledMacSecDpBitmap;
} PRV_CPSS_DRIVER_PP_CONFIG_STC;
typedef struct {
    GT_BOOL isMultiPortGroupDevice;
    GT_U32 numOfPortGroups;
    GT_U32 activePortGroupsBmp;
    GT_U32 firstActivePortGroup;
    GT_U32 lastActivePortGroup;
    GT_U32 debugForcedPortGroupId;
} PRV_CPSS_DRV_PORT_GROUPS_INFO_STC;
typedef struct PRV_CPSS_HW_DRIVER_LIST_NODE_STCT PRV_CPSS_HW_DRIVER_LIST_NODE_STC;
struct PRV_CPSS_HW_DRIVER_LIST_NODE_STCT;

File common/src/cpss/common/config/cpssGenCfg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/config/prvCpssCommonConfigLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/cpssHwInit/cpssHwInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/cpssHwInit/prvCpssCommonCpssHwInitLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/cpssHwInit/prvCpssHwMultiPortGroups.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/cpssHwInit/prvCpssHwRegisters.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/diag/prvCpssCommonDiag.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/i2c/cpssCommonPpI2cHwDriver.c:
typedef struct PRV_I2C_HW_DRIVER_STCT PRV_I2C_HW_DRIVER_STC;
struct PRV_I2C_HW_DRIVER_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/i2c/cpssCommonPpI2cHwDriver.h:
typedef enum {EXT_DRV_I2C_OFFSET_TYPE_NONE_E, EXT_DRV_I2C_OFFSET_TYPE_8_E, EXT_DRV_I2C_OFFSET_TYPE_16_E} EXT_DRV_I2C_OFFSET_TYPE_ENT;
typedef enum mv_twsi_controller_state MV_TWSI_CONTROLLER_STATE;
typedef enum mv_twsi_controller_status MV_TWSI_CONTROLLER_STATUS;
enum mv_twsi_control_bit;
enum mv_twsi_controller_state;
enum mv_twsi_controller_status;
enum mv_twsi_registers;

File common/src/cpss/common/i2c/prvCpssI2cLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/init/cpssInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/init/prvCpssCommonInitLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/common/coCpu/mvHwsPortApCoCpuIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/common/configElementDb/mvCfgSeqExecuter.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/common/os/mvSemaphore.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/common/siliconIf/mvHwsSiliconIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/apEngine/mvZ80Code.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/common/mvHwsDiagnostic.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/common/mvHwsPortModeElements.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/cgMac/mvHwsCgMac28nmDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/cgMac/mvHwsCgMac28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/cgMac/mvHwsCgMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/geMac/mvHwsGeMac28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/geMac/mvHwsGeMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/geMac/mvHwsGeMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/geMac/mvHwsGeMacSgIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/hglMac/mvHwsHglMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/hglMac/mvHwsHglMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/hglMac/mvHwsHglMacRev2If.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/ilknMac/mvHwsIlknMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/ilknMac/mvHwsIlknMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/mvHwsMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/tcamMac/mvHwsTcamMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/tcamMac/mvHwsTcamMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xgMac/mvHwsXgMac28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xgMac/mvHwsXgMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xgMac/mvHwsXgMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xgMac/mvHwsXgMacRev2If.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMac28nmDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMac28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMacDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMacDbRev3.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMacIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMacRev2If.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mac/xlgMac/mvHwsXlgMacRev3If.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsIpcApis.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsPortApCtrlDiagIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsPortApCtrlIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsPortApIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsPortCfgIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsPortInitIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/mvHwsPortIpcIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/cgPcs/mvHwsCgPcs28nmDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/cgPcs/mvHwsCgPcs28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/cgPcs/mvHwsCgPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/cgPcs/mvHwsCgPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/cgPcs/mvHwsCgPcsIf_Rev3.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/gPcs/mvHwsGPcs28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/gPcs/mvHwsGPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/gPcs/mvHwsGPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/gPcs/mvHwsGPcsIf_v2.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/hglPcs/mvHwsHglPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/hglPcs/mvHwsHglPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/ilknPcs/mvHwsIlknPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/ilknPcs/mvHwsIlknPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcs28nmDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcs28nmIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcsDb_v3.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcsIf_v2_0.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mmPcs/mvHwsMMPcsIf_v3.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/mvHwsPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/tcamPcs/mvHwsTcamPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/tcamPcs/mvHwsTcamPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/xPcs/mvHwsXPcsDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/pcs/xPcs/mvHwsXPcsIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/serdes/avago/mvAvagoSerdesIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/serdes/gw16/mvGw16If.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/serdes/mvHwsSerdesIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/general/mvHwsGeneralCpll.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/general/mvHwsGeneralPortCfgIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/general/mvHwsGeneralPortInitIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/pipe/mvHwsPipeDevInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/pipe/mvHwsPipePortModeElements.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/serviceCpu/mvHwsServiceCpuFw.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/serviceCpu/mvHwsServiceCpuInt.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/labServices/port/gop/src/port/silicon/serviceCpu/mvHwsServiceCpuInt.h:
typedef struct {
    GT_U8 portIntEvent;
    GT_U8 portIntStatus;
} MV_HWS_PORT_INT;
typedef struct {
    GT_U32 portIntSummary;
    GT_U32 portIntMask;
    GT_U32 portIntEvent;
    MV_HWS_PORT_INT portInt[32];
} MV_HWS_SERV_CPU_INT;

File common/src/cpss/common/port/cpssCommonPortManager.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/port/cpssCommonPortPcsCfg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/port/cpssCommonPortSerdes.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/port/prvCpssCommonPortIfModeCfg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/init/prvCpssGlobalNonSharedCommonInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/init/prvCpssGlobalNonSharedExtDrvFuncInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/init/prvCpssGlobalNonSharedMainPpDrvInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/init/prvCpssGlobalNonSharedOsFuncInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/init/prvCpssGlobalSharedCommonInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/init/prvCpssGlobalSharedMainPpDrvInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/globalDb/prvCpssGlobalDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/prvCpssCyclicLogger.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/prvCpssGlobalMutex.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/private/utils/prvCpssGenUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/smi/cpssGenSmi.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/smi/prvCpssSmiLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/smi/prvSmiHwDriver.c:
typedef struct PRV_SMI_HW_DRIVER_STCT PRV_SMI_HW_DRIVER_STC;
struct PRV_SMI_HW_DRIVER_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/smi/prvXSmiHwDriver.c:
typedef struct PRV_XSMI_HW_DRIVER_STCT PRV_XSMI_HW_DRIVER_STC;
struct PRV_XSMI_HW_DRIVER_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/srvCpu/private/prvCpssGenSrvCpuIpc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/srvCpu/prvCpssGenericSrvCpuIpc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/srvCpu/prvCpssGenericSrvCpuLoad.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/systemRecovery/cpssGenSystemRecovery.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/systemRecovery/prvCpssCommonSystemRecovery.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/common/systemRecovery/prvCpssCommonSystemRecoveryLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/driver/interrupts/cpssDrvComIntEvReqQueues.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/driver/interrupts/cpssDrvComIntSvcRtn.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/extServices/cpssExtServices.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/events/cpssGenEventRequests.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/hwDriver/cpssHwDriverAPI.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/hwDriver/cpssHwDriverGenMmap.c:
typedef struct CPSS_HW_DRIVER_GEN_MMAP_STCT CPSS_HW_DRIVER_GEN_MMAP_STC;
struct CPSS_HW_DRIVER_GEN_MMAP_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/hwDriver/cpssHwDriverGenMmapAddrCompl4.c:
typedef struct PRV_CPSS_HW_DRIVER_GEN_MMAP_AC4_STCT PRV_CPSS_HW_DRIVER_GEN_MMAP_AC4_STC;
struct PRV_CPSS_HW_DRIVER_GEN_MMAP_AC4_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/hwDriver/cpssHwDriverGenMmapAddrCompl8.c:
typedef struct CPSS_HW_DRIVER_GEN_MMAP_AC8_STCT CPSS_HW_DRIVER_GEN_MMAP_AC8_STC;
struct CPSS_HW_DRIVER_GEN_MMAP_AC8_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/hwDriver/cpssHwDriverGenMmapRelativePhyAddr.c:
typedef struct CPSS_HW_DRIVER_GEN_MMAP_RELATIVE_ADDR_STCT CPSS_HW_DRIVER_GEN_MMAP_RELATIVE_ADDR_STC;
struct CPSS_HW_DRIVER_GEN_MMAP_RELATIVE_ADDR_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/hwDriver/cpssHwDriverSip5SlaveSMI.c:
typedef struct CPSS_HW_DRIVER_SIP5_SSMI_STCT CPSS_HW_DRIVER_SIP5_SSMI_STC;
struct CPSS_HW_DRIVER_SIP5_SSMI_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/ipc/mvShmIpc.c:
typedef struct IPC_SHM_DATA_STCT IPC_SHM_DATA_STC;
struct IPC_SHM_DATA_STCT;
typedef struct IPC_SHM_FIFO_STCT IPC_SHM_FIFO_STC;
struct IPC_SHM_FIFO_STCT;
typedef struct IPC_SHM_MSG_STCT IPC_SHM_MSG_STC;
struct IPC_SHM_MSG_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/log/cpssLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/log/prvCpssGenCommonTypesLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpss/generic/log/prvCpssGenCommonTypesManualLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/cpssBuffManagerPool.c:
struct BufHead;
typedef struct _buf_block_node CPSS_BM_POOL_BLOCK_NODE;
typedef struct BufHead CPSS_BM_POOL_FREE_BUF_HEAD;
typedef struct pool_head CPSS_BM_POOL_HEAD;
struct _buf_block_node;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
struct pool_head;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/cpssFormatConvert.c:
typedef struct {
    CPSS_FORMAT_CONVERT_FIELD_VAL_CONVERT_STC *conversionTabPtr;
    CPSS_FORMAT_CONVERT_FIELD_VAL_CONVERT_FUNC conversionFuncPtr;
    GT_U32 maxValue;
    GT_BOOL conditionResult;
} PRV_CPSS_FORMAT_CONVERT_FIELD_CONTEXT_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlAttr.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlEntity.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlFile.c:
struct _mxml_fdbuf_s;
typedef struct _mxml_fdbuf_s _mxml_fdbuf_t;
typedef int (*)(void *, int *) _mxml_getc_cb_t;
typedef int (*)(int, void *) _mxml_putc_cb_t;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlIndex.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlNode.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlPrivate.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlPrivate.h:
struct _mxml_global_s;
typedef struct _mxml_global_s _mxml_global_t;

File common/src/cpssCommon/mxml/prvCpssMxmlSearch.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlSet.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/mxml/prvCpssMxmlString.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/prvCpssAvlTree.c:
typedef enum {PRV_CPSS_AVLSKEW_NONE_E, PRV_CPSS_AVLSKEW_LEFT_E, PRV_CPSS_AVLSKEW_RIGHT_E} PRV_CPSS_AVLSKEW_ENT;
typedef struct {
    prototypeCmpFunc compareFunc;
    CPSS_BM_POOL_ID poolId;
    PRV_CPSS_AVL_NODE_STC *pHead;
} PRV_CPSS_AVL_HEAD_STC;
typedef struct prvCpssAvlnode PRV_CPSS_AVL_NODE_STC;
typedef enum {PRV_CPSS_AVL_RES_OK_E, PRV_CPSS_AVL_RES_BALANCE_E, PRV_CPSS_AVL_RES_EXIST_E, PRV_CPSS_AVL_RES_NO_NEXT_E, PRV_CPSS_AVL_RES_NO_MEM_E, PRV_CPSS_AVL_RES_ERROR_E} PRV_CPSS_AVL_RES_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef GT_COMP_RES (*)(void *, void *) prototypeCmpFunc;
typedef void (*)(void *, void *) prototypeDataFreeFunc;
struct prvCpssAvlnode;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/prvCpssDevMemManager.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/prvCpssMemLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/prvCpssMisc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/prvCpssMth.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssCommon/prvCpssSkipList.c:
typedef struct SL_CTRL_STCT SL_CTRL_STC;
struct SL_CTRL_STCT;
typedef struct SL_NODE_STCT SL_NODE_STC;
struct SL_NODE_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/log/prvCpssDriverLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/log/prvCpssDriverManualLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/config/cpssDrvPpConGenInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/config/cpssDrvPpConInit.c:
typedef struct {
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
    GT_U32 numOfPorts;
    const CPSS_PP_DEVICE_TYPE *devTypeArray;
    const CPSS_PORTS_BMP_STC *defaultPortsBmpPtr;
    const PORT_GROUPS_INFO_STC *portGroupInfoPtr;
    const GT_U32 *activePortGroupsBmpPtr;
} CPSS_SUPPORTED_TYPES_STC;
typedef struct {
    GT_U32 baseRegAddr;
    GT_U32 stepsInBytes;
    GT_U32 startStepIndex;
    GT_U32 numOfSteps;
    GT_U32 regValue;
} DEFAULT_REG_FORMULA_STC;
typedef struct {
    GT_U32 regAddr;
    GT_U32 regValue;
} DEFAULT_REG_STC;
typedef struct {
    GT_U32 numOfPortGroups;
    GT_U32 portsBmp;
    GT_U32 maxNumPorts;
} PORT_GROUPS_INFO_STC;
typedef struct {
    GT_U32 prefix;
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
} PRV_DEV_FAMILY_PREFIX_STC;
typedef struct {
    GT_U32 mg0UnitBaseAddr;
    GT_U32 dfxUnitBaseAddr;
    GT_U32 allowMultiMgSdmaInit;
    GT_U32 regAddr_ACK_F_ASPM_CTRL_OFF;
} PRV_DRV_MG_DFX_INFO_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/config/cpssDrvPpGenDump.c:
typedef union {
    GT_U32 words[4];
    GT_U16 shorts[8];
    GT_U8 bytes[16];
} PRV_DUMP_LINE_UNT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/cpssDriverPpHw.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/cpssDrvPpHwPciCntlSim.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/cpssDrvPpHwPciCntlStandBy.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/cpssDrvPpHwPexMbusCntl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/newdrv_eagleCntl.c:
typedef struct CPSS_HW_DRIVER_GEN_AMAP_WIN64_STCT CPSS_HW_DRIVER_GEN_AMAP_WIN64_STC;
struct CPSS_HW_DRIVER_GEN_AMAP_WIN64_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/newdrv_falconZCntl.c:
typedef struct CPSS_HW_DRIVER_FALCON_Z_STCT CPSS_HW_DRIVER_FALCON_Z_STC;
struct CPSS_HW_DRIVER_FALCON_Z_STCT;
typedef struct FALCON_Z_DEFAULT_REG_STCT FALCON_Z_DEFAULT_REG_STC;
struct FALCON_Z_DEFAULT_REG_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/newdrv_simCntl.c:
typedef struct CPSS_HW_DRIVER_SIMULATION_STCT CPSS_HW_DRIVER_SIMULATION_STC;
struct CPSS_HW_DRIVER_SIMULATION_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/pci/newdrv_sip6MbusCtrl.c:
typedef struct ADDR_SPACE_RANGE_STCT ADDR_SPACE_RANGE_STC;
struct ADDR_SPACE_RANGE_STCT;
typedef struct {
    CPSS_HW_DRIVER_STC common;
    ADDR_SPACE_RANGE_STC addressSpaceArr[19];
} CPSS_HW_DRIVER_SIP6_MBUS_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/prvCpssDrvPpHwApi.c:
typedef struct PRV_CPSS_HW_DRIVER_EMULATOR_CHECK_STCT PRV_CPSS_HW_DRIVER_EMULATOR_CHECK_STC;
struct PRV_CPSS_HW_DRIVER_EMULATOR_CHECK_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/smi/cpssDrvPpHwSmiCntlSim.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/hardware/twsi/cpssDrvPpHwTwsiCntl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/dxExMx/cpssDrvPpIntCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/dxExMx/cpssDrvPpIntDefPxPipe.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/dxExMx/cpssDrvPpIntInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/dxExMx/cpssDrvPpIntInterrupts.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/generic/cpssDrvPpIntGenCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/generic/cpssDrvPpIntGenInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File common/src/cpssDriver/pp/interrupts/generic/cpssDrvPpIntGenInterrupts.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/cpssAppUtils/h/cpssAppUtilsEvents.h:
typedef struct APP_UTILS_UNI_EVENT_COUNTER_STCT APP_UTILS_UNI_EVENT_COUNTER_STC;
struct APP_UTILS_UNI_EVENT_COUNTER_STCT;

File cpssEnabler/cpssAppUtils/src/cpssAppUtilsEvents.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/cpssAppUtils/src/cpssAppUtilsHa.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/h/cmdShell/cmdDb/cmdBase.h:
typedef struct {
    GT_CHAR *commandName;
    cmdWrapperFuncPtr funcReference;
    GT_U32 funcArgs;
    GT_U32 funcFields;
} CMD_COMMAND;
typedef CMD_STATUS (*)(GT_UINTPTR *, GT_UINTPTR *, GT_32, GT_8 *) cmdWrapperFuncPtr;

File cpssEnabler/mainCmd/h/cmdShell/common/cmdCommon.h:
typedef enum {CMD_OK, CMD_AGENT_ERROR = 4096, CMD_SYNTAX_ERROR, CMD_ARG_UNDERFLOW, CMD_ARG_OVERFLOW, CMD_FIELD_UNDERFLOW, CMD_FIELD_OVERFLOW} CMD_STATUS;

File cpssEnabler/mainCmd/h/cmdShell/common/cmdExtServices.h:
typedef GT_STATUS (*)(GT_BOOL) CMD_APP_ALLOW_PROCESSING_OF_AUQ_MESSAGES_FUNC;
typedef GT_STATUS (*)(void) CMD_APP_DB_DUMP_FUNC;
typedef GT_STATUS (*)(GT_CHAR *, GT_U32) CMD_APP_DB_ENTRY_ADD_FUNC;
typedef GT_STATUS (*)(GT_CHAR *, GT_U32 *) CMD_APP_DB_ENTRY_GET_FUNC;
typedef GT_STATUS (*)(APP_UTILS_UNI_EVENT_COUNTER_STC ***) CMD_APP_EVENT_DATA_BASE_GET_FUNC;
typedef GT_STATUS (*)(GT_32) CMD_APP_EVENT_FATAL_ERROR_ENABLE_FUNC;
typedef GT_U32 (*)(void) CMD_APP_GET_HEAP_ALLOC_COUNTER_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_BOOL) CMD_APP_INIT_CONFI_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_U32, GT_U32) CMD_APP_INIT_SYSTEM_FUNC;
typedef void (*)(GT_U32 *, GT_U32 *, GT_U32 *) CMD_APP_INIT_SYSTEM_GET_FUNC;
typedef GT_BOOL (*)(void) CMD_APP_IS_SYSTEM_INITIALIZED_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, CMD_PORT_FWS_RATE_STC *) CMD_APP_PORT_RATE_TABLE_GET_FUNC;
typedef struct {
    CPSS_PP_DEVICE_TYPE deviceId;
    GT_U8 devNum;
    GT_BOOL valid;
    struct {...} wa;
} CMD_APP_PP_CONFIG;
typedef GT_STATUS (*)(GT_U8, CMD_APP_PP_CONFIG *) CMD_APP_PP_CONFIG_GET_FUNC;
typedef GT_STATUS (*)(GT_U8) CMD_APP_PP_CONFIG_PRINT_FUNC;
typedef GT_STATUS (*)(GT_BOOL) CMD_APP_RESET_SYSTEM_FUNC;
typedef GT_STATUS (*)(void) CMD_APP_SHOW_BOARDS_LIST_FUNC;
typedef void (*)(void) CMD_APP_START_HEAP_ALLOC_COUNTER_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_U32, GT_BOOL) CMD_APP_TRACE_HW_ACCESS_ENABLE_FUNC;
typedef GT_STATUS (*)(GT_U32) CMD_APP_TRACE_HW_ACCESS_OUTPUT_MODE_SET_FUNC;
typedef GT_STATUS (*)(CPSS_UNI_EV_CAUSE_ENT *, GT_U32, GT_UINTPTR *) CMD_CPSS_EVENT_BIND_FUNC;
typedef GT_STATUS (*)(GT_U8, CPSS_UNI_EV_CAUSE_ENT, CPSS_EVENT_MASK_SET_ENT) CMD_CPSS_EVENT_DEVICE_MASK_SET_FUNC;
typedef GT_STATUS (*)(GT_UINTPTR, CPSS_UNI_EV_CAUSE_ENT, GT_U32 *, GT_U8 *) CMD_CPSS_EVENT_RECV_FUNC;
typedef GT_STATUS (*)(GT_UINTPTR, GT_U32 *, GT_U32 *, GT_U32) CMD_CPSS_EVENT_SELECT_FUNC;
typedef GT_BOOL (*)(void) CMD_CPU_ETHERNET_IS_CPU_ETHER_PORT_USED;
typedef struct {
    CMD_APP_DB_ENTRY_ADD_FUNC cmdAppDbEntryAdd;
    CMD_APP_DB_ENTRY_GET_FUNC cmdAppDbEntryGet;
    CMD_APP_DB_DUMP_FUNC cmdAppDbDump;
    CMD_APP_PP_CONFIG_GET_FUNC cmdAppPpConfigGet;
    CMD_APP_INIT_SYSTEM_FUNC cmdInitSystem;
    CMD_APP_INIT_SYSTEM_GET_FUNC cmdInitSystemGet;
    CMD_APP_RESET_SYSTEM_FUNC cmdResetSystem;
    CMD_APP_INIT_CONFI_FUNC cmdInitConfi;
    CMD_APP_SHOW_BOARDS_LIST_FUNC cmdAppShowBoardsList;
    CMD_APP_IS_SYSTEM_INITIALIZED_FUNC cmdAppIsSystemInitialized;
    CMD_APP_PP_CONFIG_PRINT_FUNC cmdAppPpConfigPrint;
    CMD_APP_ALLOW_PROCESSING_OF_AUQ_MESSAGES_FUNC cmdAppAllowProcessingOfAuqMessages;
    CMD_APP_TRACE_HW_ACCESS_ENABLE_FUNC cmdAppTraceHwAccessEnable;
    CMD_APP_TRACE_HW_ACCESS_OUTPUT_MODE_SET_FUNC cmdAppTraceHwAccessOutputModeSet;
    CMD_APP_START_HEAP_ALLOC_COUNTER_FUNC cmdAppStartHeapAllocCounter;
    CMD_APP_GET_HEAP_ALLOC_COUNTER_FUNC cmdAppGetHeapAllocCounter;
    CMD_APP_EVENT_FATAL_ERROR_ENABLE_FUNC cmdAppEventFatalErrorEnable;
    CMD_APP_EVENT_DATA_BASE_GET_FUNC cmdAppDemoEventsDataBaseGet;
    CMD_APP_PORT_RATE_TABLE_GET_FUNC cmdPortRateTableGet;
} CMD_FUNC_BIND_APP_DB_STC;
typedef struct {
    CMD_CPU_ETHERNET_IS_CPU_ETHER_PORT_USED cmdIsCpuEtherPortUsed;
} CMD_FUNC_BIND_CPU_ETHERNET_PORT_STC;
typedef struct {
    CMD_CPSS_EVENT_BIND_FUNC cmdCpssEventBind;
    CMD_CPSS_EVENT_SELECT_FUNC cmdCpssEventSelect;
    CMD_CPSS_EVENT_RECV_FUNC cmdCpssEventRecv;
    CMD_CPSS_EVENT_DEVICE_MASK_SET_FUNC cmdCpssEventDeviceMaskSet;
} CMD_FUNC_BIND_EVENTS_STC;
typedef struct {
    CMD_FUNC_BIND_CPU_ETHERNET_PORT_STC cpuEthernetPortBindInfo;
    CMD_FUNC_BIND_EVENTS_STC eventsBindInfo;
    CMD_FUNC_BIND_APP_DB_STC appDbBindInfo;
} CMD_FUNC_BIND_EXTRA_STC;
typedef struct {
    CMD_OS_FUNC_BIND_SOCKETS_STC osSocketsBindInfo;
    CMD_OS_FUNC_BIND_TASKS_STC osTasksBindInfo;
    CMD_OS_FUNC_BIND_POOLS_STC osPoolsBindInfo;
} CMD_OS_FUNC_BIND_EXTRA_STC;
typedef struct {
    CMD_OS_POOL_CREATE_POOL_FUNC gtPoolCreatePool;
    CMD_OS_POOL_CREATE_DMA_POOL_FUNC gtPoolCreateDmaPool;
    CMD_OS_POOL_RE_CREATE_POOL_FUNC gtPoolReCreatePool;
    CMD_OS_POOL_DELETE_POOL_FUNC gtPoolDeletePool;
    CMD_OS_POOL_GET_BUF_FUNC gtPoolGetBuf;
    CMD_OS_POOL_FREE_BUF_FUNC gtPoolFreeBuf;
    CMD_OS_POOL_GET_BUF_SIZE_FUNC gtPoolGetBufSize;
    CMD_OS_POOL_EXPAND_POOL_FUNC gtPoolExpandPool;
    CMD_OS_POOL_GET_BUF_FREE_CNT_FUNC gtPoolGetBufFreeCnt;
    CMD_OS_POOL_PRINT_STATS_FUNC gtPoolPrintStats;
} CMD_OS_FUNC_BIND_POOLS_STC;
typedef struct {
    CPSS_SOCKET_TCP_CREATE_FUNC osSocketTcpCreate;
    CPSS_SOCKET_UDS_CREATE_FUNC osSocketUdsCreate;
    CPSS_SOCKET_UDP_CREATE_FUNC osSocketUdpCreate;
    CPSS_SOCKET_TCP_DESTROY_FUNC osSocketTcpDestroy;
    CPSS_SOCKET_UDP_DESTROY_FUNC osSocketUdpDestroy;
    CPSS_SOCKET_CREATE_ADDR_FUNC osSocketCreateAddr;
    CPSS_SOCKET_DESTROY_ADDR_FUNC osSocketDestroyAddr;
    CPSS_SOCKET_BIND_FUNC osSocketBind;
    CPSS_SOCKET_LISTEN_FUNC osSocketListen;
    CPSS_SOCKET_ACCEPT_FUNC osSocketAccept;
    CPSS_SOCKET_CONNECT_FUNC osSocketConnect;
    CPSS_SOCKET_SET_NONBLOCK_FUNC osSocketSetNonBlock;
    CPSS_SOCKET_SET_BLOCK_FUNC osSocketSetBlock;
    CPSS_SOCKET_SEND_FUNC osSocketSend;
    CPSS_SOCKET_SENDTO_FUNC osSocketSendTo;
    CPSS_SOCKET_RECV_FUNC osSocketRecv;
    CPSS_SOCKET_RECVFROM_FUNC osSocketRecvFrom;
    CPSS_SOCKET_SET_SOCKET_NOLINGER_FUNC osSocketSetSocketNoLinger;
    CPSS_SOCKET_EXTRACT_IPADDR_FROM_SOCKET_ADDR_FUNC osSocketExtractIpAddrFromSocketAddr;
    CPSS_SOCKET_GET_ADDR_SIZE_FUNC osSocketGetSocketAddrSize;
    CPSS_SOCKET_SHUTDOWN_FUNC osSocketShutDown;
    CPSS_SOCKET_SELECT_CREATE_SET_FUNC osSelectCreateSet;
    CPSS_SOCKET_SELECT_ERASE_SET_FUNC osSelectEraseSet;
    CPSS_SOCKET_SELECT_ZERO_SET_FUNC osSelectZeroSet;
    CPSS_SOCKET_SELECT_ADD_FD_TO_SET_FUNC osSelectAddFdToSet;
    CPSS_SOCKET_SELECT_CLEAR_FD_FROM_SET_FUNC osSelectClearFdFromSet;
    CPSS_SOCKET_SELECT_IS_FD_SET_FUNC osSelectIsFdSet;
    CPSS_SOCKET_SELECT_COPY_SET_FUNC osSelectCopySet;
    CPSS_SOCKET_SELECT_FUNC osSelect;
    CPSS_SOCKET_SELECT_GET_SOCKET_FD_SIZE_FUNC osSocketGetSocketFdSetSize;
} CMD_OS_FUNC_BIND_SOCKETS_STC;
typedef struct {
    CPSS_OS_TASK_GET_SELF_FUNC osTaskGetSelf;
    CMD_OS_TASK_SET_TASK_PRIOR_FUNC osSetTaskPrior;
} CMD_OS_FUNC_BIND_TASKS_STC;
typedef GT_STATUS (*)(GT_U32, GT_POOL_ALIGNMENT, GT_U32, GT_BOOL, GT_POOL_ID *) CMD_OS_POOL_CREATE_DMA_POOL_FUNC;
typedef GT_STATUS (*)(GT_U32, GT_POOL_ALIGNMENT, GT_U32, GT_BOOL, GT_POOL_ID *) CMD_OS_POOL_CREATE_POOL_FUNC;
typedef GT_STATUS (*)(GT_POOL_ID) CMD_OS_POOL_DELETE_POOL_FUNC;
typedef GT_STATUS (*)(GT_POOL_ID, GT_U32) CMD_OS_POOL_EXPAND_POOL_FUNC;
typedef GT_STATUS (*)(GT_POOL_ID, void *) CMD_OS_POOL_FREE_BUF_FUNC;
typedef GT_U32 (*)(GT_POOL_ID) CMD_OS_POOL_GET_BUF_FREE_CNT_FUNC;
typedef void *(*)(GT_POOL_ID) CMD_OS_POOL_GET_BUF_FUNC;
typedef GT_U32 (*)(GT_POOL_ID) CMD_OS_POOL_GET_BUF_SIZE_FUNC;
typedef void (*)(GT_POOL_ID) CMD_OS_POOL_PRINT_STATS_FUNC;
typedef GT_STATUS (*)(GT_POOL_ID) CMD_OS_POOL_RE_CREATE_POOL_FUNC;
typedef GT_STATUS (*)(CPSS_TASK, GT_U32, GT_U32 *) CMD_OS_TASK_SET_TASK_PRIOR_FUNC;
typedef struct {
    GT_U32 rxPacketRate;
    GT_U32 txPacketRate;
} CMD_PORT_FWS_RATE_STC;
typedef unsigned long GT_MUTEX;
typedef enum {GT_1_BYTE_ALIGNMENT = 1, GT_4_BYTE_ALIGNMENT = 3, GT_8_BYTE_ALIGNMENT = 7, GT_16_BYTE_ALIGNMENT = 15} GT_POOL_ALIGNMENT;
typedef void * GT_POOL_ID;
typedef unsigned long GT_SEM;

File cpssEnabler/mainCmd/h/cmdShell/common/cmdVersion.h:
typedef struct {
    GT_U8 version[30];
} GT_CMD_SHELL_VERSION;

File cpssEnabler/mainCmd/h/cmdShell/os/cmdOs.h:
typedef enum {CMD_STARTUP_SHELL_CMDSHELL_E, CMD_STARTUP_SHELL_LUACLI_E} CMD_STARTUP_SHELL_TYPE_ENT;

File cpssEnabler/mainCmd/h/cmdShell/os/cmdStreamImpl.h:
typedef GT_STATUS (*)(IOStreamPTR) eventLoopHandlerPTR;

File cpssEnabler/mainCmd/h/cmdShell/shell/cmdParser.h:
typedef enum {tokEOF = -1, tokUNKNOWN, tokDECIMAL, tokHEXADECIMAL, tokIDENTIFIER, tokSTRING, tokDOT, tokCOMMA, tokSEMICOLON, tokLPAREN, tokRPAREN, tokLBRACK, tokRBRACK} CMD_DEFAULT_TOKENS;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px/cmdFS_RAM_embed_files.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px/cmdFS_RAM_embed_files1.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px/cmdFS_RAM_embed_files2.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px/cmdFS_RAM_embed_files3.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px/cmdFS_RAM_lua_cli_examples.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px/cmdFS_RAM_lua_cli_examples1.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/../../../../../mainLuaWrapper/data/px_xml/cpssAPI_xml_embed_file.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/cmdFS_RAM.c:
struct CMD_FS_FDESCR_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/cmdFS_RAM.h:
struct CMD_FS_CHUNK_STC;
struct CMD_FS_INODE_STC;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/adler32.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/crc32.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/deflate.c:
typedef enum {need_more, block_done, finish_started, finish_done} block_state;
typedef char;
typedef block_state (*)(deflate_state *, int) compress_func;
typedef struct config_s config;
struct config_s;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
struct static_tree_desc_s;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/deflate.h:
typedef unsigned int IPos;
typedef unsigned short Pos;
typedef unsigned short Posf;
typedef struct ct_data_s ct_data;
struct ct_data_s;
typedef struct z_internal_state deflate_state;
typedef struct static_tree_desc_s static_tree_desc;
typedef struct tree_desc_s tree_desc;
struct tree_desc_s;
struct z_internal_state;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/inffast.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/inflate.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/inflate.h:
typedef enum {HEAD, FLAGS, TIME, OS, EXLEN, EXTRA, NAME, COMMENT, HCRC, DICTID, DICT, TYPE, TYPEDO, STORED, COPY_, COPY, TABLE, LENLENS, CODELENS, LEN_, LEN, LENEXT, DIST, DISTEXT, MATCH, LIT, CHECK, LENGTH, DONE, BAD, MEM, SYNC} inflate_mode;
struct inflate_state;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/inftrees.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/inftrees.h:
typedef struct {
    unsigned char op;
    unsigned char bits;
    unsigned short val;
} code;
typedef enum {CODES, LENS, DISTS} codetype;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/trees.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
struct static_tree_desc_s;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/zconf.h:
typedef unsigned char z_Byte;
typedef unsigned char z_Bytef;
typedef char z_charf;
typedef unsigned long z_crc_t;
typedef int z_intf;
typedef unsigned int z_uInt;
typedef unsigned long z_uLong;
typedef void * z_voidpf;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/zlib.h:
typedef z_voidpf (*)(z_voidpf, z_uInt, z_uInt) z_alloc_func;
typedef void (*)(z_voidpf, z_voidpf) z_free_func;
typedef struct z_gz_header_s z_gz_header;
struct z_gz_header_s;
typedef z_gz_header * z_gz_headerp;
struct z_internal_state;
typedef struct z_stream_s z_stream;
struct z_stream_s;
typedef z_stream * z_streamp;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/zutil.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/FS/zlib/zutil.h:
typedef unsigned char uch;
typedef unsigned char uchf;
typedef unsigned long ulg;
typedef unsigned short ush;
typedef unsigned short ushf;

File cpssEnabler/mainCmd/src/cmdShell/cmdDb/cmdBase.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/common/cmdExtServices.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/common/cmdVersion.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/common/cmdWrapUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/file_transfer/cmdFileTransfer.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/file_transfer/cmdTFTPC.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/file_transfer/cmdTFTPD.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/lua/cmdLuaCLI.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/lua/cmdLuaConfigFile.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/generic/cmdOsData.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/generic/cmdStream.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/generic/cmdStreamSocket.c:
struct SERVICE_PARAMS_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/generic/u_cmdStreamPipe.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef struct {
    IOStreamSTC common;
    int inFd;
    int outFd;
} * pipeStreamPTR;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/generic/u_cmdStreamSerial.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef struct {
    IOStreamSTC common;
    int fd;
} * serialStreamPTR;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/linux/os_lxData.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/linux/os_lxExecute.c:
typedef int (*)() FUNC_PTR;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/os/linux/os_lxShell.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/shell/cmdConsole.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/shell/cmdEngine.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/shell/cmdMain.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/shell/cmdParser.c:
typedef struct STRUCT_PARS_INSTANCE PARSER_INSTANCE;
typedef struct STRUCT_PARS_TOKEN PARSER_TOKEN;
struct STRUCT_PARS_INSTANCE;
struct STRUCT_PARS_TOKEN;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainCmd/src/cmdShell/shell/userInitCmdDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/h/gtExtDrv/drivers/gtCacheMng.h:
typedef enum {GT_MGMT_INSTRUCTION_CACHE_E, GT_MGMT_DATA_CACHE_E} GT_MGMT_CACHE_TYPE_ENT;

File cpssEnabler/mainExtDrv/h/gtExtDrv/drivers/gtEthPortCtrl.h:
typedef GT_STATUS (*)(GT_U8_PTR, GT_U32, GT_U32) GT_RawSocketRx_FUNCPTR;
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32 *, GT_U32, GT_U32) GT_Rx_FUNCPTR;
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32) GT_Tx_COMPLETE_FUNCPTR;
typedef enum {extDrvEthNetPortType_cpss_E, extDrvEthNetPortType_raw_E, extDrvEthNetPortType_linux_E, extDrvEthNetPortType_numOfTypes} extDrvEthNetPortType_ENT;
typedef enum {extDrvEthTxMode_asynch_E, extDrvEthTxMode_synch_E} extDrvEthTxMode_ENT;

File cpssEnabler/mainExtDrv/h/gtExtDrv/drivers/gtHwIfDrv.h:
typedef union {
    GT_U8 devNum;
    GT_U16 i2cBaseAddr;
} GT_DEV_ID;
typedef enum {GT_MGMT_VIA_PP, GT_MGMT_I2C} GT_MGMT_IF_TYPE;

File cpssEnabler/mainExtDrv/h/gtExtDrv/drivers/gtHwIfOp.h:
typedef void (*)(void *) GT_CALL_BACK_FUN;
typedef struct GT_COPROC_OPER_STCT GT_COPROC_OPER_STC;
struct GT_COPROC_OPER_STCT;
typedef struct GT_HW_IF_NON_BLOCK_CB_STCT GT_HW_IF_NON_BLOCK_CB_STC;
struct GT_HW_IF_NON_BLOCK_CB_STCT;
typedef union {
    GT_COPROC_OPER_STC *coProc;
    GT_SMI_OPER_STC *smiOper;
} GT_HW_IF_UNT;
typedef enum {GT_READ_SMI_BUFFER_E = 1, GT_WRITE_SMI_BUFFER_E, GT_COPROC_READ_COUNTERS_E = 20, GT_COPROC_READ_MIBS_E, GT_COPROC_CLEAR_SRAM_E} GT_OPER_OPCODE_ENT;
typedef struct GT_SMI_OPER_STCT GT_SMI_OPER_STC;
struct GT_SMI_OPER_STCT;

File cpssEnabler/mainExtDrv/h/gtExtDrv/drivers/gtI2cDrv.h:
typedef enum {EXT_DRV_I2C_OFFSET_TYPE_NONE_E, EXT_DRV_I2C_OFFSET_TYPE_8_E, EXT_DRV_I2C_OFFSET_TYPE_16_E} EXT_DRV_I2C_OFFSET_TYPE_ENT;

File cpssEnabler/mainExtDrv/h/gtExtDrv/drivers/gtPciDrv.h:
typedef struct {
    struct {...} regs;
    struct {...} config;
    struct {...} dfx;
    struct {...} sram;
} GT_EXT_DRV_PCI_MAP_STC;
typedef enum {GT_PCI_INT_A = 1, GT_PCI_INT_B, GT_PCI_INT_C, GT_PCI_INT_D} GT_PCI_INT;

File cpssEnabler/mainExtDrv/h/gtExtDrv/version/gtExtDrvVersion.h:
typedef struct {
    GT_U8 version[30];
} GT_EXT_DRV_VERSION;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/../linuxNoKernelModule/noKmDrvUtils.c:
struct SIP6_ATU_FIELD;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32EthPortCtrl.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32Gen.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32HsuDrv.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32IntDrv.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32SmiDrvCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32SmiHwCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32SohoHwIfOp.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsCacheMng.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsDmaDrv.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsGppIsr.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsHwIfDrv.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsI2cDrv.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsPciDrvAsicSim.c:
typedef struct {
    char *name;
    GT_U32 offset;
    GT_U32 startBit;
    GT_U32 numBits;
} FIELD_INFO;
typedef struct {
    char *resname;
    GT_U32 baseHigh;
    GT_U32 baseLow;
    GT_U32 addrInPciConfigSpace;
} RESOURCE_INFO;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
struct prestera_config;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsResetDrv.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32StubsUartDrv.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/simWin32/win32TwsiHwCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainExtDrv/src/gtExtDrv/version/gtExtDrvVersion.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/h/gtOs/globalDb/gtOsEnablerModGlobalNonSharedDb.h:
typedef struct {
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_NON_SHARED_OS_LINUX_MEM_SRC_GLOBAL_DB osLinuxMemSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_NON_SHARED_OS_LINUX_IO_SRC_GLOBAL_DB osLinuxIoSrc;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_NON_SHARED_GLOBAL_DB;
typedef struct {
    OS_BIND_STDOUT_FUNC_PTR writeFunctionPtr;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_NON_SHARED_OS_LINUX_IO_SRC_GLOBAL_DB;
typedef struct {
    GT_32 allocCounter;
    GT_32 reallocCounter;
    GT_32 freeCounter;
    GT_32 tempAllocCounter;
    GT_32 maxAllocCounter;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_NON_SHARED_OS_LINUX_MEM_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_NON_SHARED_GLOBAL_DB mainOsDir;
} PRV_CPSS_ENABLER_MOD_NON_SHARED_GLOBAL_DB;

File cpssEnabler/mainOs/h/gtOs/globalDb/gtOsEnablerModGlobalSharedDb.h:
typedef struct {
    OSMEM_POOL_FREE_ELEM_PTR freeDmaPool;
    SHARED_MEM_STC cdma_mem;
    GT_UINTPTR dmaBaseVirtAddr;
    GT_UINTPTR dmaBaseAddr;
    GT_U32 dmaWindowSize;
} PRV_CPSS_ENABLER_DMA_WINDOW_DB;
typedef struct {
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_OS_LINUX_MEM_SRC_GLOBAL_DB osLinuxMemSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_OS_LINUX_IO_SRC_GLOBAL_DB osLinuxIoSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_MEM_LIB_SRC_GLOBAL_DB gtOsMemLibSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_BM_POOL_SRC_GLOBAL_DB gtBmPoolSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_SHR_MEM_SHR_DATA_SRC_GLOBAL_DB gtShrMemShrDataSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_LINUX_SIM_STUBS_SRC_GLOBAL_DB gtLinuxSimStubsSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_GEN_SRC_GLOBAL_DB gtOsLinuxGenSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_PTHR_LSEM_SRC_GLOBAL_DB gtOsLinuxPthrLsemSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_PTHR_LMSGQLIB_SRC_GLOBAL_DB gtOsLinuxPthrLsmggLibSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_KE_LSEMLIB_SRC_GLOBAL_DB gtOsKeLsemLibSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_MSG_Q_SRC_GLOBAL_DB gtOsLinuxMsgQSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_SIM_ETHER_SRC_GLOBAL_DB gtOsLinuxSimEtherSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_LTASKLIB_SRC_GLOBAL_DB gtOsLtaskLibSrc;
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_SHMEM_MALLOC_SRC_GLOBAL_DB gtOsShmemMallocSrc;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GLOBAL_DB;
typedef struct {
    GT_BOOL isInitialized;
    GT_MUTEX poolMtx;
    void *poolArray;
    GT_U32 freePoolHeaderIdx;
    GT_U32 poolMaxPools;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_BM_POOL_SRC_GLOBAL_DB;
typedef struct {
    SHOSTP_intr_STC SHOSTP_intr_table[32];
    GT_SEM SHOSTP_intr_table_mtx;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_LINUX_SIM_STUBS_SRC_GLOBAL_DB;
typedef struct {
    GT_BOOL gtOsWrapperOpen;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_GEN_SRC_GLOBAL_DB;
typedef struct {
    PRV_PROTECTED_LIST userspaceMutexeList;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_KE_LSEMLIB_SRC_GLOBAL_DB;
typedef struct {
    OS_OBJECT_LIST_STC tasks;
    _V2L_pthread_hash_STC pthreadHashTbl[512];
    char *pthreadHashTblHistory[512];
    int internal_tid;
    pthread_mutex_t tasks_mtx;
    pthread_mutex_t taskLock_mtx;
    pthread_cond_t taskLock_cond;
    int taskLock_count;
    pthread_t taskLock_owner;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_LTASKLIB_SRC_GLOBAL_DB;
typedef struct {
    PRV_PROTECTED_LIST mqList;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_MSG_Q_SRC_GLOBAL_DB;
typedef struct {
    int initialized;
    PRV_PROTECTED_LIST mqList;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_PTHR_LMSGQLIB_SRC_GLOBAL_DB;
typedef struct {
    pthread_mutex_t semaphores_mtx;
    int initialized;
    OS_OBJECT_LIST_STC semaphores;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_PTHR_LSEM_SRC_GLOBAL_DB;
typedef struct {
    GT_Rx_FUNCP userRxCallback;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_LINUX_SIM_ETHER_SRC_GLOBAL_DB;
typedef struct {
    GT_BOOL firstMemInit;
    OSMEM_POOL_HDR_PTR *os_mem_pools_array;
    GT_U32 os_mem_pools_array_size;
    GT_MUTEX os_mem_pools_mtx_id;
    OSMEM_CHUNK_ARRAY os_mem_chunks_array;
    GT_U32 os_mem_poolsLimit;
    DMA_ALLOCATION_STC *globalDmaAllocationsFirstPtr;
    DMA_ALLOCATION_STC *globalDmaAllocationsLastPtr;
    GT_U32 underSystemReset;
    GT_U32 dmaTotalAlloc;
    GT_U32 dmaTotalAlloc_traceEnable;
    GT_U32 heap_start_counter_value;
    GT_32 countDynamic;
    GT_32 countStatic;
    GT_32 countDynamicOver;
    GT_U32 heap_bytes_allocated;
    GT_U32 mallocCounter;
    GT_U32 mallocFailCounterLimit;
    GT_BOOL mallocFailEnable;
    MEM_ALLOCATION_STC globalMemAllocations;
    OSMEM_MEMORY_LEAKAGE_STATE_DBG_ENT globalMemoryLeakageState;
    GT_BOOL dmaOverflowDetectionEnabled;
    GT_U32 lastValue;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_OS_MEM_LIB_SRC_GLOBAL_DB;
typedef struct {
    CPSS_RX_TX_MP_MODE_PARAMS_STC RxTxProcessParams;
    CPSS_RX_TX_PROC_COM_CMD_STC rxTxGaltisCommands;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GT_SHR_MEM_SHR_DATA_SRC_GLOBAL_DB;
typedef struct {
    void *writeFunctionParam;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_OS_LINUX_IO_SRC_GLOBAL_DB;
typedef struct {
    GT_BOOL firstInitialization;
    GT_MUTEX freeDmaPoolMtx;
    GT_SH_MEM_ID simDmaAsSharedMemId;
    GT_MUTEX simDmaMutexId;
    void *simDmaAsSharedMemPtr;
    GT_U32 simDmaAsSharedMemSize;
    GT_U32 simDmaAsSharedMemOffsetUsed;
    PRV_CPSS_ENABLER_DMA_WINDOW_DB dmaWindowsArr[10];
    GT_U32 dmaWindowsNumOfActiveWindows;
    GT_U32 dmaWindowsCurrentWindow;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_OS_LINUX_MEM_SRC_GLOBAL_DB;
typedef struct {
    void *shmFreeBufferList;
    void *prvShrMemBlockList;
} PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_SHMEM_MALLOC_SRC_GLOBAL_DB;
typedef struct {
    PRV_CPSS_ENABLER_MOD_MAIN_OS_DIR_SHARED_GLOBAL_DB mainOsDir;
} PRV_CPSS_ENABLER_MOD_SHARED_GLOBAL_DB;
typedef struct {
    pthread_mutex_t mutex;
    OS_OBJECT_LIST_STC list;
} PRV_PROTECTED_LIST;

File cpssEnabler/mainOs/h/gtOs/globalDb/gtOsGlobalDb.h:
typedef struct {
    GT_U32 magic;
    PRV_CPSS_ENABLER_MOD_NON_SHARED_GLOBAL_DB cpssEnablerMod;
    PRV_OS_NON_SHARED_NON_VOLATILE_DB osNonVolatileDb;
} PRV_OS_NON_SHARED_GLOBAL_DB;
typedef struct {
    GT_BOOL ppMappingStageDone;
    GT_U32 semOwnershipBmp;
    GT_BOOL dmaConfigMultiWindowsSupported;
    GT_MEMORY_DMA_CONFIG dmaConfig[10];
    GT_U32 dmaConfigNumOfActiveWindows;
    GT_U32 dmaConfigCurrentWindow;
    GT_BOOL aslrSupport;
    GT_BOOL verboseMode;
    GT_BOOL isFirst;
    GT_BOOL clientIsInitialised;
} PRV_OS_NON_SHARED_NON_VOLATILE_DB;
typedef struct {
    GT_U32 initializerPid;
    GT_BOOL dbInitialized;
    GT_U32 magic;
    GT_U32 clientNum;
    GT_BOOL sharedMemoryUsed;
    GT_U32 pids[256];
    PRV_CPSS_ENABLER_MOD_SHARED_GLOBAL_DB cpssEnablerMod;
} PRV_OS_SHARED_GLOBAL_DB;

File cpssEnabler/mainOs/h/gtOs/gtOsExc.h:
typedef void (*)(OS_FATAL_ERROR_TYPE, char *) FATAL_FUNC_PTR;
typedef enum {OS_FATAL_RESET, OS_FATAL_MONITOR, OS_FATAL_WARNING} OS_FATAL_ERROR_TYPE;

File cpssEnabler/mainOs/h/gtOs/gtOsIntr.h:
typedef enum {INTR_MODE_LOCK, INTR_MODE_UNLOCK} INTERRUPT_MODE;

File cpssEnabler/mainOs/h/gtOs/gtOsIo.h:
typedef int (*)(void *, const char *, int) OS_BIND_STDOUT_FUNC_PTR;

File cpssEnabler/mainOs/h/gtOs/gtOsMem.h:
typedef struct DMA_ALLOCATION_STCT DMA_ALLOCATION_STC;
struct DMA_ALLOCATION_STCT;
typedef void *(*)(unsigned int) GT_MEMORY_ALLOC_FUNC;
typedef struct {
    void *prvExtDrvDmaPtr;
    GT_U32 prvExtDrvDmaLen;
    uint64_t prvExtDrvDmaPhys64;
    off_t mvDmaDrvOffset;
} GT_MEMORY_DMA_CONFIG;
typedef void (*)(void *) GT_MEMORY_FREE_FUNC;
typedef enum {GT_MEMORY_MANAGE_METHOD_NO_REALLOC_ON_DEMAND_E, GT_MEMORY_MANAGE_METHOD_REALLOC_ON_DEMAND_E} GT_MEMORY_MANAGE_METHOD_ENT;
typedef struct MEM_ALLOCATION_STCT MEM_ALLOCATION_STC;
struct MEM_ALLOCATION_STCT;
typedef struct os_mem_chunk_array OSMEM_CHUNK_ARRAY;
typedef struct os_mem_chunk_pointer * OSMEM_CHUNK_POINTER_PTR;
typedef struct {
    const char *fileNamePtr;
    GT_U32 line;
    OSMEM_MEMORY_LEAKAGE_STATE_DBG_ENT memoryLeakageState;
} OSMEM_MEMORY_LEAKAGE_DBG_INFO;
typedef enum {OSMEM_MEMORY_LEAKAGE_STATE_DBG_OFF_E, OSMEM_MEMORY_LEAKAGE_STATE_DBG_ON_E} OSMEM_MEMORY_LEAKAGE_STATE_DBG_ENT;
typedef struct OSMEM_NOPOOLS_HDR_STCT OSMEM_NOPOOLS_HDR_STC;
struct OSMEM_NOPOOLS_HDR_STCT;
typedef struct os_mem_pool_elem * OSMEM_POOL_ELEM_PTR;
typedef struct os_mem_pool_free_elem * OSMEM_POOL_FREE_ELEM_PTR;
typedef struct {
    GT_U32 poolIndex;
    GT_U32 elem_size;
    GT_U32 free_size;
    GT_U32 overAlloc;
    GT_U32 alloc_times;
    GT_U32 free_times;
    GT_U32 malloc_used;
    GT_U32 size;
    GT_U32 chunkIndex;
    struct os_mem_pool_free_elem *first_free_PTR;
} OSMEM_POOL_HDR;
typedef struct {
    GT_U32 poolIndex;
    GT_U32 elem_size;
    GT_U32 free_size;
    GT_U32 overAlloc;
    GT_U32 alloc_times;
    GT_U32 free_times;
    GT_U32 malloc_used;
    GT_U32 size;
    GT_U32 chunkIndex;
    struct os_mem_pool_free_elem *first_free_PTR;
} * OSMEM_POOL_HDR_PTR;
typedef struct os_mem_var_pool_elem * OSMEM_VAR_POOL_ELEM_PTR;
struct os_mem_chunk_array;
struct os_mem_chunk_pointer;
struct os_mem_pool_elem;
struct os_mem_pool_free_elem;
struct os_mem_var_pool_elem;

File cpssEnabler/mainOs/h/gtOs/gtOsMsgQ.h:
typedef unsigned long GT_MSGQ_ID;

File cpssEnabler/mainOs/h/gtOs/gtOsSem.h:
typedef unsigned long GT_MUTEX;
typedef void * GT_RW_LOCK;
typedef enum {OS_READ_LOCK, OS_WRITE_LOCK} GT_RW_LOCK_TYPE;
typedef unsigned long GT_SEM;
typedef enum {OS_SEMB_EMPTY, OS_SEMB_FULL} GT_SEMB_STATE;

File cpssEnabler/mainOs/h/gtOs/gtOsSemDefs.h:
struct _V2L_semSTC;
typedef enum {SEMTYPE_NONE, SEMTYPE_MUTEX, SEMTYPE_COUNTING, SEMTYPE_BINARY} semType;

File cpssEnabler/mainOs/h/gtOs/gtOsSharedMalloc.h:
typedef struct {
    pthread_mutex_t mutex;
    char *name;
    GT_UINTPTR base;
    GT_UINTPTR curr;
    GT_UINTPTR last;
    GT_UINTPTR end;
} SHARED_MEM_STC;

File cpssEnabler/mainOs/h/gtOs/gtOsSharedMemory.h:
typedef unsigned long GT_SH_MEM_ID;

File cpssEnabler/mainOs/h/gtOs/gtOsSharedUtil.h:
typedef struct {
    GT_BOOL valid;
    CMD_RX_ENTRY *rxEntriesArr;
    GALTIS_RX_MODE_ENT rxTableMode;
    GT_U32 maxRxBufferSize;
    GT_U32 maxNumOfRxEntries;
    GT_U32 indexToInsertPacket;
    GT_U32 doCapture;
    GT_BOOL wasInitDone;
    void *specificDeviceFormatPtr;
    FREE_RX_INFO_FUNC freeRxInfoFunc;
    COPY_RX_INFO_FUNC copyRxInfoFunc;
} CPSS_RX_TX_MP_MODE_PARAMS_STC;
typedef struct {
    GT_BOOL valid;
    GT_U8 mpCmdCpssRxPktClearTbl;
} CPSS_RX_TX_PROC_COM_CMD_STC;

File cpssEnabler/mainOs/h/gtOs/gtOsStdLib.h:
typedef int (*)(const void *, const void *) COMPARE_ITEMS_FUNC_PTR;

File cpssEnabler/mainOs/h/gtOs/gtOsTask.h:
typedef unsigned int GT_TASK;

File cpssEnabler/mainOs/h/gtOs/gtOsVersion.h:
typedef struct {
    GT_U8 version[30];
} GT_OS_VERSION;

File cpssEnabler/mainOs/h/gtOs/linuxLmsgqLib.h:
typedef struct _osMsgQSTC OS_MSGQ_STC;
struct _osMsgQSTC;

File cpssEnabler/mainOs/h/gtOs/linuxLtaskLib.h:
typedef struct {
    pthread_t pthrid;
    GT_32 tid;
} _V2L_pthread_hash_STC;
struct _V2L_taskSTC;

File cpssEnabler/mainOs/h/gtOs/linuxSimEther.h:
typedef GT_BOOL (*)(GT_U8_PTR, GT_U32) GT_Rx_FUNCP;

File cpssEnabler/mainOs/h/gtOs/osObjIdLib.h:
typedef struct osObjectHeaderSTC OS_OBJECT_HEADER_STC;
typedef struct {
    OS_OBJECT_HEADER_STC **list;
    int allocated;
    int allocChunk;
    size_t objSize;
    OS_OBJ_ALLOC_FUNC_TYPE allocFuncPtr;
    OS_OBJ_FREE_FUNC_TYPE freeFuncPtr;
} OS_OBJECT_LIST_STC;
typedef void *(*)(size_t) OS_OBJ_ALLOC_FUNC_TYPE;
typedef void (*)(void *) OS_OBJ_FREE_FUNC_TYPE;
struct osObjectHeaderSTC;

File cpssEnabler/mainOs/h/gtOs/simStubs.h:
typedef unsigned int DWORD;
typedef UINT_32 (void) SHOSTP_intr_FUN;
typedef struct SHOSTP_intr_STCT SHOSTP_intr_STC;
struct SHOSTP_intr_STCT;
typedef UINT_32 (UINT_32) SHOSTP_intr_param_FUN;
typedef unsigned int UINT_32;
typedef unsigned int undef;

File cpssEnabler/mainOs/h/gtStack/gtOsSocket.h:
typedef int GT_SOCKET_FD;
typedef int GT_SOCKET_PORT;
typedef struct {
    GT_32 lOnOff;
    GT_32 lLinger;
} SOCKET_LINGER;
typedef enum {SOCKET_SHUTDOWN_CLOSE_INPUT, SOCKET_SHUTDOWN_CLOSE_OUTPUT, SOCKET_SHUTDOWN_CLOSE_ALL} SOCKET_SHUTDOWN_OPERATION;

File cpssEnabler/mainOs/h/gtStack/gtStackTypes.h:
typedef int GT_FD;

File cpssEnabler/mainOs/h/gtUtil/gtBmPool.h:
typedef enum {GT_1_BYTE_ALIGNMENT = 1, GT_4_BYTE_ALIGNMENT = 3, GT_8_BYTE_ALIGNMENT = 7, GT_16_BYTE_ALIGNMENT = 15} GT_POOL_ALIGNMENT;
typedef void * GT_POOL_ID;

File cpssEnabler/mainOs/h/gtUtil/gtMemoryUsageTrace.h:
typedef struct {
    const char *anchorName;
    GT_U32 allocatedBytes;
} GT_MEMORY_USAGE_TRACE_ANCHOR_STC;

File cpssEnabler/mainOs/h/gtUtil/gtTimeMeasure.h:
typedef struct {
    GT_U32 seconds;
    GT_U32 nanoSeconds;
} GT_TIME_EXACT;
typedef struct _pss_GT_TIME_EXACT_NODE GT_TIME_EXACT_NODE;
struct _pss_GT_TIME_EXACT_NODE;

File cpssEnabler/mainOs/src/gtOs/gtHitlessUpgrd.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/gtMath.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/gtOsMemLib.c:
typedef enum {MEM_REGISTERED_ACTION_DUMP_STATUS_ON_E = 1, MEM_REGISTERED_ACTION_DUMP_STATUS_OFF_E, MEM_REGISTERED_ACTION_DUMP_STATUS_ANY_E, MEM_REGISTERED_ACTION_SET_ALL_ON_TO_OFF_E, MEM_REGISTERED_ACTION___LAST__E} MEM_REGISTERED_ACTION_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/gtOsVersion.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/init/osGlobalNonSharedEnablerInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/init/osGlobalSharedEnablerInitVars.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/linuxSim/miiInf.c:
typedef unsigned long;
typedef unsigned short;
typedef unsigned char;

File cpssEnabler/mainOs/src/gtOs/linux/linuxSim/miiInf.h:
typedef unsigned long GT_BOOL;
typedef GT_BOOL (*)(GT_U8 *, GT_U32) GT_Rx_FUNCP;
typedef unsigned long GT_STATUS;
typedef unsigned long GT_U32;
typedef unsigned char GT_U8;

File cpssEnabler/mainOs/src/gtOs/linux/linuxSim/stubs.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osGlobalDb.c:
typedef void (*)(void) OS_AT_EXIT_FUNC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxExc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxGen.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxInet.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxIntr.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxIo.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxMem.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxRand.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxSem.c:
typedef struct _linuxRwLock GT_LINUX_RW_LOCK;
struct _linuxRwLock;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxStdLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxStr.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osLinuxTimer.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/osObjIdLib.c:
typedef char;
typedef int;
typedef unsigned long;
typedef sizetype;

File cpssEnabler/mainOs/src/gtOs/linux/pthreads/lkernelLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/pthreads/lmsgqLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/pthreads/lsemLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/pthreads/ltaskLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/pthreads/ltest.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/pthreads/ltimerLib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/stubs/mvGpioIntr.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/stubs/mvTwsiDrv.c:
typedef unsigned short;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/linux/stubs/mvTwsiDrv.h:
typedef enum _twsiFreq TWSI_FREQ;
typedef enum _i2cBusStatus TWSI_STATUS;
enum _i2cBusStatus;
enum _twsiFreq;

File cpssEnabler/mainOs/src/gtOs/osTestPerf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtOs/sharedMemory/shrMemCommonMem.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtStack/linux/osLinuxSelect.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtStack/linux/osLinuxSocket.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtUtil/gtBmPool.c:
struct BufHead;
typedef struct _buf_block_node GT_POOL_BLOCK_NODE;
typedef struct BufHead GT_POOL_FREE_BUF_HEAD;
typedef struct gt_pool_head GT_POOL_HEAD;
struct _buf_block_node;
typedef char;
typedef double;
typedef float;
struct gt_pool_head;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtUtil/gtMemoryUsageTrace.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtUtil/gtMutexProfiler.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtUtil/gtStringUtil.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainOs/src/gtUtil/gtTimeMeasure.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/h/appDemo/boardConfig/appDemoBoardConfig.h:
typedef enum {APP_DEMO_CALL_BACK_ON_LINK_STATUS_CHANGE_BEFORE_MAIN_LOGIC_E, APP_DEMO_CALL_BACK_ON_LINK_STATUS_CHANGE_AFTER_MAIN_LOGIC_E} APP_DEMO_CALL_BACK_ON_LINK_STATUS_CHANGE_ENT;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL, APP_DEMO_CALL_BACK_ON_LINK_STATUS_CHANGE_ENT, GT_BOOL *) APP_DEMO_CALL_BACK_ON_LINK_STATUS_CHANGE_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL) APP_DEMO_CALL_BACK_ON_REMOTE_PORTS_FUNC;
typedef enum {APP_DEMO_CPSS_HIR_INSERTION_FULL_INIT_E, APP_DEMO_CPSS_HIR_INSERTION_LAST_E} APP_DEMO_CPSS_HIR_INSERTION_TYPE_ENT;
typedef enum {APP_DEMO_CPSS_HIR_REMOVAL_MANAGED_E, APP_DEMO_CPSS_HIR_REMOVAL_UNMANAGED_E, APP_DEMO_CPSS_HIR_REMOVAL_RESET_E, APP_DEMO_CPSS_HIR_REMOVAL_LAST_E} APP_DEMO_CPSS_HIR_REMOVAL_TYPE_ENT;
typedef enum {APP_DEMO_CPSS_LOG_TASK_ALL_E, APP_DEMO_CPSS_LOG_TASK_SINGLE_E, APP_DEMO_CPSS_LOG_TASK_REF_E} APP_DEMO_CPSS_LOG_TASK_MODE_ENT;
typedef enum {APP_DEMO_HW_PP_TRACING_ADDR_FILTER_BASE_SIZE_E, APP_DEMO_HW_PP_TRACING_ADDR_FILTER_MASK_PATTERN_E, APP_DEMO_HW_PP_TRACING_ADDR_FILTER_TABLE_END_E} APP_DEMO_HW_PP_TRACING_ADDR_FILTER_ENT;
typedef struct {
    GT_U32 applicableId;
    APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_TYPE_ENT ruleType;
    GT_U32 resultApplicableId;
    const char *resultName;
    GT_U32 ruleParam[4];
} APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_STC;
typedef enum {APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_RANGE_E, APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_RANGE_SERIAL_E, APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_ADDR_E, APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_ADDR_SERIAL_E, APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_LAST_E} APP_DEMO_HW_PP_TRACING_ADDR_PARSE_RULE_TYPE_ENT;
typedef struct {
    GT_U32 devType;
    GT_U32 swDevId;
    GT_U32 hwDevId;
    GT_U32 pciBus;
    GT_U32 pciDev;
    GT_U32 pciFunc;
    GT_U32 pciHeaderInfo[16];
} APP_DEMO_INIT_DEV_INFO_STC;
typedef struct {
    GT_U32 deviceId;
    GT_U32 mngInterfaceType;
    GT_U32 coreClock;
    GT_U32 deviceNum;
    GT_U32 featuresBitmap;
} APP_DEMO_MICRO_INIT_STC;
typedef enum {APP_DEMO_SOC_MDC_FREQUENCY_MODE_NORMAL_E, APP_DEMO_SOC_MDC_FREQUENCY_MODE_FAST_E, APP_DEMO_SOC_MDC_FREQUENCY_MODE_ACCELERATED_E} APP_DEMO_SOC_MDC_FREQUENCY_MODE_ENT;
typedef GT_STATUS (*)(GT_U8) FUNCP_AFTER_INIT_CONFIG;
typedef GT_STATUS (*)(GT_U8) FUNCP_AFTER_PHASE1_CONFIG;
typedef GT_STATUS (*)(GT_U8) FUNCP_AFTER_PHASE2_CONFIG;
typedef GT_STATUS (*)(GT_U8) FUNCP_AFTER_STACK_READY_CONFIG;
typedef GT_STATUS (*)(GT_U8) FUNCP_BEFORE_PHASE1_CONFIG;
typedef GT_STATUS (*)(GT_U8) FUNCP_BOARD_CLEAN_DB_DURING_SYSTEM_RESET;
typedef GT_STATUS (*)(GT_U8, GT_U8) FUNCP_DEVICE_AFTER_INIT_CONFIG;
typedef GT_STATUS (*)(GT_U8, GT_U8) FUNCP_DEVICE_AFTER_PHASE1;
typedef GT_STATUS (*)(GT_U8, GT_U8) FUNCP_DEVICE_AFTER_PHASE2;
typedef GT_STATUS (*)(GT_U8, GT_U8) FUNCP_DEVICE_CLEANUP;
typedef GT_STATUS (*)(CPSS_PP_INTERFACE_CHANNEL_ENT, GT_U8, GT_U8, GT_SW_DEV_NUM, GT_SW_DEV_NUM, APP_DEMO_CPSS_HIR_INSERTION_TYPE_ENT) FUNCP_DEVICE_SIMPLE_CPSS_PP_INSERT;
typedef GT_STATUS (*)(GT_U8, GT_U8) FUNCP_DEVICE_SIMPLE_INIT;
typedef GT_STATUS (*)(CPSS_HW_INFO_STC *, GT_PCI_INFO *) FUNCP_GET_BOARD_HW_INFO;
typedef GT_STATUS (*)(GT_U8, GT_U8 *, GT_U8 *, GT_U8 *, GT_BOOL *) FUNCP_GET_BOARD_INFO;
typedef GT_STATUS (*)(GT_U8, GT_U32 *) FUNCP_GET_BOARD_MEMORY_INFO;
typedef GT_STATUS (*)(GT_U8, GT_U8, APP_DEMO_LIB_INIT_PARAMS *) FUNCP_GET_LIB_INIT_PARAMS;
typedef GT_STATUS (*)(GT_U8, GT_U8 *) FUNCP_GET_MNG_PORT_NAME;
typedef GT_STATUS (*)(GT_U8, GT_U8, CPSS_PP_CONFIG_INIT_STC *) FUNCP_GET_PP_LOGICAL_INIT_PARAMS;
typedef GT_STATUS (*)(GT_U8, GT_U8, CPSS_PP_PHASE1_INIT_PARAMS *) FUNCP_GET_PP_PHASE1_PARAMS;
typedef GT_STATUS (*)(GT_U8, GT_U8, CPSS_PP_PHASE2_INIT_PARAMS *) FUNCP_GET_PP_PHASE2_PARAMS;
typedef GT_STATUS (*)(GT_U8, GT_U8, CPSS_REG_VALUE_INFO_STC **, GT_U32 *) FUNCP_GET_PP_REG_CFG_LIST;
typedef GT_STATUS (*)(GT_U8, GT_U32 *, void *) FUNCP_GET_STACK_CONFIG_PARAMS;
typedef GT_STATUS (*)(GT_U8, GT_BOARD_CONFIG_FUNCS *) FUNCP_REGISTER_BOARD_FUNCS;
typedef GT_STATUS (*)(GT_U8) FUNCP_SIMPLE_INIT;
typedef struct {
    FUNCP_GET_BOARD_MEMORY_INFO boardGetMemInfo;
    FUNCP_GET_BOARD_INFO boardGetInfo;
    FUNCP_GET_BOARD_HW_INFO boardGetHwInfo;
    FUNCP_BEFORE_PHASE1_CONFIG boardBeforePhase1Config;
    FUNCP_GET_PP_PHASE1_PARAMS boardGetPpPh1Params;
    FUNCP_AFTER_PHASE1_CONFIG boardAfterPhase1Config;
    FUNCP_GET_PP_PHASE2_PARAMS boardGetPpPh2Params;
    FUNCP_AFTER_PHASE2_CONFIG boardAfterPhase2Config;
    FUNCP_GET_PP_LOGICAL_INIT_PARAMS boardGetPpLogInitParams;
    FUNCP_GET_LIB_INIT_PARAMS boardGetLibInitParams;
    FUNCP_AFTER_INIT_CONFIG boardAfterInitConfig;
    FUNCP_GET_PP_REG_CFG_LIST boardGetPpRegCfgList;
    FUNCP_GET_STACK_CONFIG_PARAMS boardGetStackConfigParams;
    FUNCP_GET_MNG_PORT_NAME boardGetMngPortName;
    FUNCP_AFTER_STACK_READY_CONFIG boardAfterStackReadyConfig;
    FUNCP_BOARD_CLEAN_DB_DURING_SYSTEM_RESET boardCleanDbDuringSystemReset;
    FUNCP_SIMPLE_INIT boardSimpleInit;
    FUNCP_DEVICE_SIMPLE_INIT deviceSimpleInit;
    FUNCP_DEVICE_AFTER_INIT_CONFIG deviceAfterInitConfig;
    FUNCP_DEVICE_AFTER_PHASE1 deviceAfterPhase1;
    FUNCP_DEVICE_AFTER_PHASE2 deviceAfterPhase2;
    FUNCP_DEVICE_CLEANUP deviceCleanup;
    FUNCP_DEVICE_SIMPLE_CPSS_PP_INSERT DeviceSimpleCpssPpInsert;
} GT_BOARD_CONFIG_FUNCS;
typedef struct {
    FUNCP_REGISTER_BOARD_FUNCS registerFunc;
    GT_CHAR boardName[100];
    GT_U8 numOfRevs;
    GT_CHAR boardRevs[40][100];
    GT_BOOL portMgr;
} GT_BOARD_LIST_ELEMENT;
typedef void (*)(void *) appDemoTaskGracefulExitLastOperation_CB_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_TRUNK_ID, CPSS_TRUNK_MEMBER_STC *) appDemo_cpssDxChTrunkMemberAdd_CB_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_TRUNK_ID, CPSS_TRUNK_MEMBER_STC *) appDemo_cpssDxChTrunkMemberRemove_CB_FUNC;
typedef GT_STATUS (*)(GT_U8, GT_TRUNK_ID, GT_U32, CPSS_TRUNK_MEMBER_STC *, GT_U32, CPSS_TRUNK_MEMBER_STC *) appDemo_cpssDxChTrunkMembersSet_CB_FUNC;

File cpssEnabler/mainSysConfig/h/appDemo/boardConfig/appDemoCfgMisc.h:
typedef struct {
    GT_U32 u32_Num;
    GT_CHAR *u32_Str;
} APPDEMO_GT_U32_2_STR_STC;
typedef struct {
    GT_PHY_WRITE_TYPE_ENT allPorts;
    GT_U8 phyRegAddr;
    GT_U16 phyRegData;
} APP_DEMO_QUAD_PHY_CFG_STC;
typedef struct {
    APP_DEMO_QUAD_PHY_CFG_STC *seqPtr;
    GT_U32 sleepTimeAfter_ms;
} APP_DEMO_QUAD_PHY_CFG_STC_PHASE_STC;
enum GT_PHY_WRITE_TYPE_ENT;

File cpssEnabler/mainSysConfig/h/appDemo/boardConfig/gtDbDxBoardTypeConfig.h:
typedef struct {
    GT_U32 laneNum;
    GT_BOOL invertTx;
    GT_BOOL invertRx;
} APPDEMO_SERDES_LANE_POLARITY_STC;

File cpssEnabler/mainSysConfig/h/appDemo/confi/confi2.h:
typedef struct {
    GT_CHAR *buf;
    GT_U32 bufSize;
    GT_U32 dataSize;
} GT_CONFI_BUFFER;

File cpssEnabler/mainSysConfig/h/appDemo/sysHwConfig/gtAppDemoPciConfig.h:
typedef struct {
    GT_U16 vendorId;
    GT_U16 devId;
} GT_PCI_DEV_VENDOR_ID;
typedef struct {
    GT_PCI_DEV_VENDOR_ID pciDevVendorId;
    GT_U32 pciIdSel;
    GT_U32 pciBusNum;
    GT_U32 funcNo;
    GT_U32 pciHeaderInfo[16];
} GT_PCI_INFO;

File cpssEnabler/mainSysConfig/h/appDemo/sysHwConfig/gtAppDemoSmiConfig.h:
typedef struct {
    GT_U16 vendorId;
    GT_U16 devId;
} GT_SMI_DEV_VENDOR_ID;
typedef struct {
    GT_SMI_DEV_VENDOR_ID smiDevVendorId;
    GT_U32 smiIdSel;
} GT_SMI_INFO;

File cpssEnabler/mainSysConfig/h/appDemo/sysHwConfig/gtAppDemoSysConfig.h:
typedef enum {APPDEMO_SERDES_REF_CLOCK_EXTERNAL_25_SINGLE_ENDED_E, APPDEMO_SERDES_REF_CLOCK_EXTERNAL_125_SINGLE_ENDED_E, APPDEMO_SERDES_REF_CLOCK_EXTERNAL_125_DIFF_E, APPDEMO_SERDES_REF_CLOCK_EXTERNAL_156_25_SINGLE_ENDED_E, APPDEMO_SERDES_REF_CLOCK_EXTERNAL_156_25_DIFF_E, APPDEMO_SERDES_REF_CLOCK_INTERNAL_125_E} APPDEMO_SERDES_REF_CLOCK_ENT;
typedef struct {
    CPSS_NET_IF_CFG_STC netIfCfg;
    CPSS_MULTI_NET_IF_CFG_STC multiNetIfCfg;
    CPSS_AUQ_CFG_STC auqCfg;
    CPSS_AUQ_CFG_STC fuqCfg;
} APP_DEMO_CPSS_DMA_INIT_INFO;
typedef enum {APP_DEMO_CPSS_DXCH_POLICY_BASED_ROUTING_ONLY_E, APP_DEMO_CPSS_DXCH_TCAM_ROUTER_BASED_E} APP_DEMO_CPSS_DXCH_ROUTING_MODE_ENT;
typedef struct {
    GT_U32 accessParamsBmp;
    GT_U32 addr;
    GT_U32 mask;
    GT_U32 data;
} APP_DEMO_CPSS_HW_ACCESS_DB_STC;
typedef struct {
    GT_U32 maxSize;
    GT_U32 curSize;
    GT_BOOL outputToDbIsActive;
    GT_BOOL corrupted;
} APP_DEMO_CPSS_HW_ACCESS_INFO_STC;
typedef enum {APP_DEMO_CPSS_INLIF_PORT_MODE_PORT_E, APP_DEMO_CPSS_INLIF_PORT_MODE_VLAN_E} APP_DEMO_CPSS_INLIF_PORT_MODE_ENT;
typedef enum {APP_DEMO_CPSS_MEMORY_LOCATION_INTERNAL_E, APP_DEMO_CPSS_MEMORY_LOCATION_EXTERNAL_E} APP_DEMO_CPSS_MEMORY_LOCATION_ENT;
typedef enum {APP_DEMO_CPSS_MULTI_PORT_GROUP_FDB_MODE_UNIFIED_E, APP_DEMO_CPSS_MULTI_PORT_GROUP_FDB_MODE_UNIFIED_LINKED_E, APP_DEMO_CPSS_MULTI_PORT_GROUP_FDB_MODE_LINKED_E} APP_DEMO_CPSS_MULTI_PORT_GROUP_FDB_MODE_ENT;
typedef struct {
    GT_U8 devNum;
    CPSS_RX_BUF_INFO_STC rxBufInfo;
    GT_U32 *txHdrBufBlock_PTR;
    GT_U32 txHdrBufBlockSize;
    APP_DEMO_ETH_PRT_INIT_NETIF_FUNC initFunc;
} APP_DEMO_CPU_ETHER_PORT_INFO_STC;
typedef GT_STATUS (*)(void) APP_DEMO_ETH_PRT_INIT_NETIF_FUNC;
typedef struct {
    GT_BOOL initBridge;
    GT_BOOL initClassifier;
    GT_BOOL initCos;
    GT_BOOL initIpv4;
    GT_BOOL initIpv6;
    GT_BOOL initIpv4Filter;
    GT_BOOL initIpv4Tunnel;
    GT_BOOL initLif;
    GT_BOOL initMirror;
    GT_BOOL initMpls;
    GT_BOOL initMplsTunnel;
    GT_BOOL initNetworkIf;
    GT_BOOL initI2c;
    GT_BOOL initPhy;
    GT_BOOL initPort;
    GT_BOOL initTc;
    GT_BOOL initTrunk;
    GT_BOOL initPcl;
    GT_BOOL initTcam;
    GT_BOOL initPolicer;
    GT_BOOL initAction;
    GT_BOOL initSflow;
    GT_BOOL initPha;
} APP_DEMO_LIB_INIT_PARAMS;
typedef struct {
    CPSS_PP_DEVICE_TYPE deviceId;
    GT_U32 apiSupportedBmp;
    CPSS_PP_FAMILY_TYPE_ENT devFamily;
    GT_BOOL ppPhase1Done;
    GT_BOOL ppPhase2Done;
    GT_BOOL ppLogicalInitDone;
    GT_BOOL ppGeneralInitDone;
    CPSS_PP_INTERFACE_CHANNEL_ENT channel;
    GT_U32 dmaWindow;
    GT_PCI_INFO pciInfo;
    GT_SMI_INFO smiInfo;
    GT_TWSI_INFO twsiInfo;
    CPSS_HW_INFO_STC hwInfo;
    GT_U8 devNum;
    GT_U8 oldDevNum;
    GT_HW_DEV_NUM hwDevNum;
    GT_PCI_INT intLine;
    GT_BOOL valid;
    APP_DEMO_SYS_CONFIG_FUNCS sysConfigFuncs;
    FUNCP_PORT_CONFIG internal10GPortConfigFuncPtr;
    GT_PHYSICAL_PORT_NUM ports10GToConfigureArr[1024];
    GT_U32 numberOf10GPortsToConfigure;
    GT_U8 numberOfCscdTrunks;
    GT_U8 numberOfCscdTargetDevs;
    GT_U32 numberOfCscdPorts;
    CSCD_INIT_UC_TBL_STC cscdTargetDevsArr[1];
    CSCD_INIT_PORT_DESC_STC cscdPortsArr[1024];
    FUNCP_PORT_CONFIG internalCscdPortConfigFuncPtr;
    GT_BOOL externalTcamUsed;
    struct APP_DEMO_EXTERNAL_TCAM_KEY_LOOKUP_STCT *extTcamMngPtr;
    GT_BOOL flowControlDisable;
    GT_U32 numOfPortGroups;
    struct {...} portGroupsInfo[8];
    CPSS_PORTS_BMP_STC multiPortGroupRingPortsBmp;
    CPSS_PORTS_BMP_STC relayPortGroupPortsBmp;
    CPSS_PORTS_BMP_STC uplinkPortGroupPortsBmp;
    APP_DEMO_CPSS_MULTI_PORT_GROUP_FDB_MODE_ENT fdbMode;
    CPSS_NET_CPU_PORT_MODE_ENT cpuPortMode;
    CPSS_RX_BUFF_ALLOC_METHOD_ENT allocMethod;
    APP_DEMO_CPSS_DMA_INIT_INFO allocDmaInfo;
    struct {...} wa;
    GT_U32 maxPortNumber;
    GT_BOOL devSupportSystemReset_HwSoftReset;
    GT_BOOL devSupportSystemReset_forbid_gtShutdownAndCoreRestart;
    GT_U32 portInitlist_AllPorts_used;
    GT_U32 portsMapArrLen;
    void *portsMapArrPtr;
    CPSS_SYSTEM_RECOVERY_PROCESS_ENT systemRecoveryProcess;
    BANK_PARTITION_INFO_STC *ttiTcamPartitionInfoPtr;
} APP_DEMO_PP_CONFIG;
typedef struct {
    FUNCP_CPSS_HW_PP_PHASE1_INIT cpssHwPpPhase1Init;
    FUNCP_CPSS_HW_PP_START_INIT cpssHwPpStartInit;
    FUNCP_CPSS_HW_PP_PHASE2_INIT cpssHwPpPhase2Init;
    FUNCP_CPSS_PP_LOGICAL_INIT cpssPpLogicalInit;
    FUNCP_CPSS_LIBRARIES_INIT cpssLibrariesInit;
    FUNCP_CPSS_TRAFFIC_ENABLE cpssTrafficEnable;
    FUNCP_CPSS_PP_GENERAL_INIT cpssPpGeneralInit;
} APP_DEMO_SYS_CONFIG_FUNCS;
typedef GT_STATUS (*)(GT_U32, APP_DEMO_SYS_CONFIG_FUNCS *, GT_U32 *) APP_DEMO_SYS_CONFIG_FUNCS_EXTENTION_GET_FUNC;
typedef struct {
    GT_BOOL cpuEtherPortUsed;
    APP_DEMO_CPU_ETHER_PORT_INFO_STC cpuEtherInfo;
    GT_U8 firstDevNum;
    GT_BOOL supportAaMessage;
    GT_BOOL forceAutoLearn;
    GT_U32 appDemoActiveDeviceBmp;
} APP_DEMO_SYS_CONFIG_STC;
typedef struct {
    GT_U32 floorNum;
    GT_U32 bankIndex;
    GT_U32 hitNum;
} BANK_PARTITION_INFO_STC;
typedef struct {
    GT_U32 devType;
    GT_U8 deviceRevision;
    GT_U32 coreClock;
} CPSS_HA_2_PHASES_INIT_PHASE1_STC;
typedef struct {
    GT_BOOL maxLengthSrcIdInFdbEn;
    GT_BOOL tag1VidFdbEn;
    GT_U32 portVlanfltTabAccessMode;
    GT_U32 portIsolationLookupPortBits;
    GT_U32 portIsolationLookupDeviceBits;
    GT_U32 portIsolationLookupTrunkBits;
    GT_U32 portIsolationLookupTrunkIndexBase;
} CPSS_HA_2_PHASES_INIT_PHASE2_STC;
typedef struct {
    GT_U32 maxNumOfLifs;
    APP_DEMO_CPSS_INLIF_PORT_MODE_ENT inlifPortMode;
    GT_U32 maxNumOfPolicerEntries;
    GT_BOOL policerConformCountEn;
    GT_U32 maxNumOfNhlfe;
    GT_U32 maxNumOfMplsIfs;
    APP_DEMO_CPSS_MEMORY_LOCATION_ENT ipMplsMemLocation;
    GT_U32 maxNumOfPclAction;
    GT_U32 pclActionSize;
    GT_U32 maxNumOfPceForIpPrefixes;
    GT_BOOL usePolicyBasedRouting;
    GT_BOOL usePolicyBasedDefaultMc;
    GT_U32 maxNumOfPbrEntries;
    GT_U16 maxVid;
    GT_U16 maxMcGroups;
    GT_U32 maxNumOfVirtualRouters;
    GT_U32 maxNumOfIpNextHop;
    GT_U32 maxNumOfIpv4Prefixes;
    GT_U32 maxNumOfIpv4McEntries;
    GT_U32 maxNumOfMll;
    GT_U32 maxNumOfIpv6Prefixes;
    GT_U32 maxNumOfIpv6McGroups;
    GT_U32 maxNumOfTunnelEntries;
    GT_U32 maxNumOfIpv4TunnelTerms;
    GT_U32 maxNumOfTunnelTerm;
    GT_U32 vlanInlifEntryType;
    GT_BOOL ipMemDivisionOn;
    APP_DEMO_CPSS_DXCH_ROUTING_MODE_ENT routingMode;
    GT_U32 ipv6MemShare;
    GT_U32 numOfTrunks;
    GT_U32 defIpv6McPclRuleIndex;
    GT_U32 vrIpv6McPclId;
    GT_BOOL lpmDbPartitionEnable;
    GT_U32 lpmDbFirstTcamLine;
    GT_U32 lpmDbLastTcamLine;
    GT_BOOL lpmDbSupportIpv4;
    GT_BOOL lpmDbSupportIpv6;
    CPSS_DXCH_LPM_RAM_CONFIG_STC lpmRamMemoryBlocksCfg;
    GT_U32 miiNumOfTxDesc;
    GT_U32 miiTxInternalBufBlockSize;
    GT_U32 miiBufferPercentage[8];
    GT_U32 miiRxBufSize;
    GT_U32 miiHeaderOffset;
    GT_U32 miiRxBufBlockSize;
    GT_BOOL pha_packetOrderChangeEnable;
} CPSS_PP_CONFIG_INIT_STC;
typedef struct {
    GT_U32 pciBus;
    GT_U32 pciDev;
    GT_U32 pciFunc;
    GT_U32 devType;
    GT_U32 pciHeaderInfo[16];
    GT_U32 deviceRevision;
    GT_U32 coreClock;
    GT_BOOL maxLengthSrcIdInFdbEn;
    GT_BOOL tag1VidFdbEn;
    GT_U32 portVlanfltTabAccessMode;
    GT_U32 portIsolationLookupPortBits;
    GT_U32 portIsolationLookupDeviceBits;
    GT_U32 portIsolationLookupTrunkBits;
    GT_U32 portIsolationLookupTrunkIndexBase;
} CPSS_PP_HA_2_PHASES_INIT_PHASE1_STC;
typedef struct {
    GT_U8 devNum;
    CPSS_HW_INFO_STC hwInfo[8];
    GT_U32 numOfPortGroups;
    GT_U32 deviceId;
    GT_U32 revision;
    GT_U32 coreClk;
    CPSS_PP_INTERFACE_CHANNEL_ENT mngInterfaceType;
    CPSS_BUF_MODE_ENT maxBufSize;
    CPSS_SYS_HA_MODE_ENT sysHAState;
    APPDEMO_SERDES_REF_CLOCK_ENT serdesRefClock;
    GT_BOOL tcamParityCalcEnable;
    GT_U32 isrAddrCompletionRegionsBmp;
    GT_U32 appAddrCompletionRegionsBmp;
    GT_BOOL enableLegacyVplsModeSupport;
    CPSS_HA_2_PHASES_INIT_PHASE1_STC ha2phaseInitParams;
} CPSS_PP_PHASE1_INIT_PARAMS;
typedef struct {
    GT_U8 devNum;
    CPSS_PP_DEVICE_TYPE deviceId;
    CPSS_NET_IF_CFG_STC netIfCfg;
    CPSS_AUQ_CFG_STC auqCfg;
    GT_HW_DEV_NUM hwDevNum;
    CPSS_AUQ_CFG_STC fuqCfg;
    GT_BOOL fuqUseSeparate;
    GT_U32 rxBufSize;
    GT_U32 headerOffset;
    GT_BOOL noTraffic2CPU;
    GT_U32 netifSdmaPortGroupId;
    CPSS_AU_MESSAGE_LENGTH_ENT auMessageLength;
    GT_BOOL useSecondaryAuq;
    GT_BOOL useDoubleAuq;
    GT_BOOL useMultiNetIfSdma;
    CPSS_MULTI_NET_IF_CFG_STC multiNetIfCfg;
    CPSS_HA_2_PHASES_INIT_PHASE2_STC ha2phaseInitParams;
} CPSS_PP_PHASE2_INIT_PARAMS;
typedef struct {
    CPSS_CSCD_PORT_TYPE_ENT cscdPortType;
    GT_TRUNK_ID trunkId;
    GT_U8 portNum;
} CSCD_INIT_PORT_DESC_STC;
typedef struct {
    CPSS_CSCD_LINK_TYPE_STC linkToTargetDev;
    GT_U8 targetDevNum;
} CSCD_INIT_UC_TBL_STC;
typedef GT_STATUS (*)(GT_U8, CPSS_PP_PHASE1_INIT_PARAMS *, CPSS_PP_DEVICE_TYPE *) FUNCP_CPSS_HW_PP_PHASE1_INIT;
typedef GT_STATUS (*)(GT_U8, CPSS_PP_PHASE2_INIT_PARAMS *) FUNCP_CPSS_HW_PP_PHASE2_INIT;
typedef GT_STATUS (*)(GT_U8, CPSS_REG_VALUE_INFO_STC *, GT_U32) FUNCP_CPSS_HW_PP_START_INIT;
typedef GT_STATUS (*)(GT_U8, APP_DEMO_LIB_INIT_PARAMS *, CPSS_PP_CONFIG_INIT_STC *) FUNCP_CPSS_LIBRARIES_INIT;
typedef GT_STATUS (*)(GT_U8) FUNCP_CPSS_PP_GENERAL_INIT;
typedef GT_STATUS (*)(GT_U8, CPSS_PP_CONFIG_INIT_STC *) FUNCP_CPSS_PP_LOGICAL_INIT;
typedef GT_STATUS (*)(GT_U8) FUNCP_CPSS_TRAFFIC_ENABLE;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM) FUNCP_PORT_CONFIG;

File cpssEnabler/mainSysConfig/h/appDemo/sysHwConfig/gtAppDemoTwsiConfig.h:
typedef struct {
    GT_U16 vendorId;
    GT_U16 devId;
} GT_TWSI_DEV_VENDOR_ID;
typedef struct {
    GT_TWSI_DEV_VENDOR_ID twsiDevVendorId;
    GT_U32 twsiIdSel;
} GT_TWSI_INFO;

File cpssEnabler/mainSysConfig/h/appDemo/sysHwConfig/nonSwitchStubs.h:
typedef enum {CPSS_AU_MESSAGE_LENGTH_ENT_E} CPSS_AU_MESSAGE_LENGTH_ENT;
typedef enum {CPSS_BUF_MODE_ENT_E} CPSS_BUF_MODE_ENT;
typedef struct {
    GT_U32 dummy;
} CPSS_CSCD_LINK_TYPE_STC;
typedef enum {CPSS_CSCD_PORT_TYPE_ENT_E} CPSS_CSCD_PORT_TYPE_ENT;
typedef struct {
    GT_U32 dummy;
} CPSS_DXCH_LPM_RAM_CONFIG_STC;
typedef struct {
    GT_U32 dummy;
} CPSS_REG_VALUE_INFO_STC;

File cpssEnabler/mainSysConfig/h/appDemo/userExit/px/appDemoPxDiagDataIntegrityAux.h:
typedef GT_STATUS (GT_U8, CPSS_PX_DIAG_DATA_INTEGRITY_EVENT_STC *) PX_DATA_INTEGRITY_EVENT_COUNTER_INCREMENT_FUNC;
typedef struct {
    GT_U16 eventCounterArr[131072];
    GT_U16 memTypeArr[131072];
} TEST_PX_DIAG_DATA_INTEGRITY_COUNTER_DB_STC;
typedef struct {
    GT_U16 eventCounterArr[64];
} TEST_PX_DIAG_DATA_INTEGRITY_MPPM_COUNTER_DB_STC;

File cpssEnabler/mainSysConfig/h/appDemo/userExit/userEventHandler.h:
typedef struct {
    GT_U8 devNum;
    GT_U8 queue;
    GT_U32 numOfBuff;
    GT_U8 *packetBuffs[20];
    GT_U32 buffLenArr[20];
} APP_DEMO_RX_PACKET_PARAMS;
typedef GT_STATUS (GT_U8, GT_U32, GT_U32) EVENT_COUNTER_INCREMENT_FUNC;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/appDemoBoardConfig.c:
typedef enum {APP_DEMO_CPSS_LOG_MODE_PRINT_E, APP_DEMO_CPSS_LOG_MODE_MEMFS_FILE_E, APP_DEMO_CPSS_LOG_MODE_LOCAL_FILE_E} APP_DEMO_CPSS_LOG_MODE_ENT;
typedef struct {
    GT_U32 valid;
    GT_CHAR threadName[50];
    CPSS_TASK tid;
    GT_U32 forbidCpssLog;
    GT_U32 forbidCpssRegisterAccessTrace;
    GT_U32 taskSupportsGracefulExit;
    GT_U32 askTaskToGracefullyExit;
    GT_U32 taskGracefullyReadyFor_osTaskDelete;
    struct {...} fracefulExitInfo;
} APP_DEMO_OS_TASK_INFO_STC;
typedef enum {CPSS_SYSTEM_RESET_TYPE_HW_SOFT_RESET_AND_SW_E, CPSS_SYSTEM_RESET_TYPE_RESET_SW_AFTER_FAST_BOOT_E, CPSS_SYSTEM_RESET_TYPE_RESET_SW_IN_gtShutdownAndCoreRestart_E, CPSS_SYSTEM_RESET_TYPE_GRACEFUL_EXIT_E, CPSS_SYSTEM_RESET_TYPE___last___E} CPSS_SYSTEM_RESET_TYPE_ENT;
typedef int (*)(const char *, ...) FUNCP_TRACE_PRINTF_DATA;
typedef struct __TRACE_ENABLE_SEGMENT_STC TRACE_ENABLE_SEGMENT_STC;
struct __TRACE_ENABLE_SEGMENT_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/appDemoBoardConfig2.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/appDemoCfgMisc.c:
typedef struct {
    GT_U32 speedMbps;
    CPSS_PORT_SPEED_ENT speedEnm;
} APPDEMO_SPEED_MBPS_2_CPSS_SPEED_STC;
typedef struct {
    GT_BOOL useMultiNetIfSdma;
    CPSS_MULTI_NET_IF_CFG_STC multiNetIfCfg;
} APP_DEMO_DB_gtShutdownAndCoreRestart_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/appDemoPortInit.c:
typedef struct {
    APPDEMO_PORTMGR_LOW_LEVEL_FUNC_PTR appDemoPrtMgrLowLevelFunc;
} APPDEMO_PORTMGR_FUNC_PTRS;
typedef GT_STATUS (*)(GT_U8, GT_UOPT, CPSS_PORT_MANAGER_STATUS_STC *, GT_BOOL *) APPDEMO_PORTMGR_LOW_LEVEL_FUNC_PTR;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/gtDbPxPipe.c:
typedef struct {
    GT_U32 coreClock;
    GT_U32 totalBW;
    GT_U32 dq0BW;
    GT_U32 dq1BW;
} CORE_CLOCK_BW_INFO;
typedef struct {
    GT_PHYSICAL_PORT_NUM portNum;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_INTERFACE_MODE_ENT interfaceMode;
} PortInitInternal_STC;
typedef struct {
    PortListType_ENT entryType;
    GT_PHYSICAL_PORT_NUM portList[32];
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_INTERFACE_MODE_ENT interfaceMode;
} PortInitList_STC;
typedef PortInitList_STC * PortInitList_STC_PTR;
typedef enum {PORT_LIST_TYPE_EMPTY, PORT_LIST_TYPE_INTERVAL, PORT_LIST_TYPE_LIST} PortListType_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/gtDbPxUtils.c:
typedef struct PA_UNIT_2_STR_STCT PA_UNIT_2_STR_STC;
struct PA_UNIT_2_STR_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/boardConfig/pxFamilyBoards.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/confi/confi2.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/dragonite/appDemoDragonite.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/entryPoints/LinuxSim/main.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/appDemoDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/appDemoStaticDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/gtAppDemoGenSysConfig.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
struct prvPciDeviceQuirks;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/gtAppDemoI2cConfig.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/gtAppDemoPciConfig.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/gtAppDemoSmiConfig.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/gtAppDemoZarlinkConfig.c:
typedef enum {APP_DEMO_ZARLINK_FREQ_10M_E, APP_DEMO_ZARLINK_FREQ_25M_E, APP_DEMO_ZARLINK_FREQ_31_25M_E, APP_DEMO_ZARLINK_FREQ_39_0625M_E, APP_DEMO_ZARLINK_FREQ_50M_E, APP_DEMO_ZARLINK_FREQ_62_5M_E, APP_DEMO_ZARLINK_FREQ_64_453125M_E, APP_DEMO_ZARLINK_FREQ_78_125M_E, APP_DEMO_ZARLINK_FREQ_100M_E, APP_DEMO_ZARLINK_FREQ_125M_E} APP_DEMO_ZARLINK_FREQ_E;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/sysHwConfig/gtAppInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/userExit/appDemoGenEventHandle.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/userExit/px/appDemoPxDiagDataIntegrityAux.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/userExit/px/appDemoPxEventHandle.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/userExit/userEventHandler.c:
typedef struct {
    GT_UINTPTR evHndl;
    GT_U32 hndlrIndex;
} EV_HNDLR_PARAM;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/utils/fastBoot/appDemoPxFastBootUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/mainSysConfig/src/appDemo/utils/port/appDemoPxPortUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File cpssEnabler/utfWrappers/h/utfExtHelpers.h:
typedef enum {APP_DEMO_CPSS_LOG_MODE_PRINT_E, APP_DEMO_CPSS_LOG_MODE_MEMFS_FILE_E, APP_DEMO_CPSS_LOG_MODE_LOCAL_FILE_E} APP_DEMO_CPSS_LOG_MODE_ENT;

File cpssEnabler/utfWrappers/src/utfExtHelpers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/common/all_ec_lua_c_type_manual_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/common/all_ec_lua_c_type_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/common/auxEmbeddedCommands.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/common/cpssEmbComCommon.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/h/cpssEmbComCommon.h:
typedef enum {CPSS_EMBEDDED_COMMANDS_MTI_COUNTER_E, CPSS_EMBEDDED_COMMANDS_CG_COUNTER_E, CPSS_EMBEDDED_COMMANDS_MAC_COUNTER_E} CPSS_EMBEDDED_COMMANDS_COUNTER_TYPE_ENT;
typedef enum {CPSS_EMBEDDED_COMMANDS_MAC_UNIT_E, CPSS_EMBEDDED_COMMANDS_PCS_UNIT_E, CPSS_EMBEDDED_COMMANDS_SERDES_UNIT_E} CPSS_EMBEDDED_COMMANDS_HW_UNIT_ENT;
typedef enum {CPSS_EMBEDDED_COMMANDS_PORT_ENABLE_DISABLE_TEST_TYPE_E, CPSS_EMBEDDED_COMMANDS_TX_ENABLE_DISABLE_TEST_TYPE_E, CPSS_EMBEDDED_COMMANDS_TX_ENABLE_DISABLE_TEST_TYPE_LAST_E} CPSS_EMBEDDED_COMMANDS_TEST_TYPE_ENT;
typedef struct {
    GT_U32 speedModeListLength;
    CPSS_EMBEDDED_COMMAND_AP_MODE_SPEED_STC speedModeList[20];
} CPSS_EMBEDDED_COMMAND_AP_MODE_SPEED_LIST_STC;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT mode;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_FEC_MODE_ENT fecSupported;
    CPSS_PORT_FEC_MODE_ENT fecRequested;
} CPSS_EMBEDDED_COMMAND_AP_MODE_SPEED_STC;
typedef struct {
    GT_IPADDR grpLastIpAddr;
    GT_IPADDR srcLastIpAddr;
    GT_IPADDR failedIpAddr;
    GT_U32 numOfPrefixes;
} CPSS_EMBEDDED_COMMAND_IPV4_MULTUPLE_ACTIONS_RESULTS_STC;
typedef struct {
    GT_IPV6ADDR grpLastIpv6Addr;
    GT_IPV6ADDR srcLastIpv6Addr;
    GT_IPV6ADDR failedIpv6Addr;
    GT_U32 numOfPrefixes;
} CPSS_EMBEDDED_COMMAND_IPV6_MULTUPLE_ACTIONS_RESULTS_STC;
typedef struct {
    GT_U32 speedModeListLength;
    CPSS_EMBEDDED_COMMAND_MODE_SPEED_STC speedModeList[20];
} CPSS_EMBEDDED_COMMAND_MODE_SPEED_LIST_STC;
typedef struct {
    CPSS_PORT_INTERFACE_MODE_ENT mode;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_FEC_MODE_ENT fec;
} CPSS_EMBEDDED_COMMAND_MODE_SPEED_STC;
typedef struct {
    GT_SW_DEV_NUM devNum;
    GT_PHYSICAL_PORT_NUM portNum;
} CPSS_EMBEDDED_COMMAND_PORT_ID_STC;
typedef struct {
    GT_U64 rxCounter;
    GT_U64 txCounter;
    GT_U32 timeStamp;
} CPSS_EMBEDDED_COMMAND_RATE_CALCULATION_STC;
typedef struct {
    GT_SW_DEV_NUM devNum;
    GT_PHYSICAL_PORT_NUM portNum;
    CPSS_EMBEDDED_COMMAND_TEST_STATE_TYPE_ENT testState;
    CPSS_PORT_INTERFACE_MODE_ENT mode;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_FEC_MODE_ENT fec;
    GT_U32 definedPorts;
    GT_U32 rc;
} CPSS_EMBEDDED_COMMAND_SET_MODE_TEST_RESULTS_STC;
typedef struct {
    GT_U32 portListLength;
    CPSS_EMBEDDED_COMMAND_PORT_ID_STC portList[255];
} CPSS_EMBEDDED_COMMAND_TEST_LIST_STC;
typedef struct {
    GT_SW_DEV_NUM devNum;
    GT_PHYSICAL_PORT_NUM portNum;
    GT_U32 lastFailedIteration;
    GT_U32 numberOfFails;
    CPSS_EMBEDDED_COMMAND_TEST_STATE_TYPE_ENT testState;
    GT_U32 rc;
} CPSS_EMBEDDED_COMMAND_TEST_RESULT_STC;
typedef struct {
    GT_PHYSICAL_PORT_NUM portNum;
    GT_U32 counter;
    char *testStateString;
    char *rcString;
} CPSS_EMBEDDED_COMMAND_TEST_RESULT_STR_STC;
typedef enum {CPSS_EMBEDDED_COMMAND_TEST_STATE_COMPLETED_SUCCESSFULY_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_INIT_SET_MODE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_SET_FEC_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_AUTOTUNE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_GET_LINK_STATUS_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_LINK_IS_DOWN_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_DOWN_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_SET_MODE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_NOT_COMPLETED_E, 
    CPSS_EMBEDDED_COMMAND_TEST_STATE_LINKSTATUS_AFTER_FLAPPING_FAIL_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_LINK_IS_DOWN_AFTER_FLAPPING_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_TX_DISABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_TX_ENABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_LOOPBACK_DISABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_LOOPBACK_ENABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_LINK_DISABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_LINK_ENABLE_FAILURE_E, 
    CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_DISABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_ENABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_MANAGER_PORT_CREATE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_MANAGER_PORT_DELETE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_MANAGER_PARAM_SET_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_MANAGER_EVENTN_SET_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_MANAGER_EVENTP_SET_FAILURE_E, 
    CPSS_EMBEDDED_COMMAND_TEST_STATE_SET_CLOCK_SOURCE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PARAMS_OVERRIDE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_CPLL_CFG_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_AUTONEG_DISABLE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_AP_DOWN_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_SET_AP_MODE_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_PORT_DETAILED_MAP_GET_FAILURE_E, CPSS_EMBEDDED_COMMAND_TEST_STATE_ALL_PORTS_MODE_SET_FAILURE_E, 
    CPSS_EMBEDDED_COMMAND_TEST_STATE_SET_LAST_E} CPSS_EMBEDDED_COMMAND_TEST_STATE_TYPE_ENT;
typedef enum {EMB_COM_I2C_OFFSET_TYPE_NONE_E, EMB_COM_I2C_OFFSET_TYPE_8_E, EMB_COM_I2C_OFFSET_TYPE_16_E} EMB_COM_I2C_OFFSET_TYPE_ENT;

File embeddedCommands/px/pxEC/lua/data/cmdFS_RAM_embed_files_embCom.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/px/pxEC/lua/wrappers/wraplCpssPxEmbeddedCommands.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File embeddedCommands/px/pxEC/src/../h/cpssPxEmbCom.h:
typedef struct {
    CPSS_EMBEDDED_COMMAND_TEST_RESULT_FOR_PYTHON_STC resArray[17];
} CPSS_EMBEDDED_COMMAND_TEST_RESULT_ARR_STC;
typedef struct {
    GT_PHYSICAL_PORT_NUM portNum;
    GT_U32 counter;
    char testStateString[35];
    char rcString[70];
} CPSS_EMBEDDED_COMMAND_TEST_RESULT_FOR_PYTHON_STC;

File embeddedCommands/px/pxEC/src/cpssPxEmbeddedCommands.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/h/extUtils/FS/genFS.h:
struct GEN_FS_DIRENT_STC;
struct GEN_FS_STAT_STC;
typedef struct genFS_STC * genFS_PTR;
struct genFS_STC;

File mainExtUtils/h/extUtils/IOStream/IOStream.h:
typedef struct IOStreamSTC * IOStreamPTR;
struct IOStreamSTC;

File mainExtUtils/h/extUtils/common/cpssEnablerUtils.h:
enum APP_DEMO_AU_MESSAGE_HANDLER_METHORD_ENT;
typedef struct {
    GT_CHAR name[128];
    GT_U32 value;
} CPSS_ENABLER_DB_ENTRY_STC;
typedef enum {CPSS_ENABLER_FATAL_ERROR_NOTIFY_ONLY_TYPE_E, CPSS_ENABLER_FATAL_ERROR_EXECUTE_TYPE_E, CPSS_ENABLER_FATAL_ERROR_SILENT_TYPE_E} CPSS_ENABLER_FATAL_ERROR_TYPE;
typedef enum {CPSS_ENABLER_TRACE_HW_ACCESS_TYPE_READ_E, CPSS_ENABLER_TRACE_HW_ACCESS_TYPE_WRITE_E, CPSS_ENABLER_TRACE_HW_ACCESS_TYPE_BOTH_E, CPSS_ENABLER_TRACE_HW_ACCESS_TYPE_WRITE_DELAY_E, CPSS_ENABLER_TRACE_HW_ACCESS_TYPE_ALL_E} CPSS_ENABLER_TRACE_HW_ACCESS_TYPE_ENT;
typedef enum {CPSS_ENABLER_TRACE_OUTPUT_MODE_DIRECT_E, CPSS_ENABLER_TRACE_OUTPUT_MODE_DIRECT_SYNC_E, CPSS_ENABLER_TRACE_OUTPUT_MODE_DB_E, CPSS_ENABLER_TRACE_OUTPUT_MODE_FILE_E, CPSS_ENABLER_TRACE_OUTPUT_MODE_LAST_E} CPSS_ENABLER_TRACE_OUTPUT_MODE_ENT;
typedef void (GT_U8, GT_U32, GT_U32) EVENT_NOTIFY_FUNC;

File mainExtUtils/h/extUtils/luaCLI/luaCLIEngine.h:
typedef void (*)(void) LUA_CLI_FUNC_PTR_T;
typedef LUA_CLI_FUNC_PTR_T (*)(const char *) LUA_CLI_GETFUNCBYNAME_T;
typedef struct LUA_CLI_MALLOC_STCT LUA_CLI_MALLOC_STC;
struct LUA_CLI_MALLOC_STCT;
typedef struct lua_State lua_State;

File mainExtUtils/h/extUtils/luaCLI/luaCLIEngineCLI.h:
typedef enum {STATE_WRITE_CONSOLE_CLI_E, STATE_READKEY_CLI_E, STATE_LUA_E} CONSOLE_STATE;
typedef struct {
    lua_State *L;
    const char *prompt;
    int flags;
    char *line;
    CONSOLE_STATE state;
    int history_len;
    int history_pos;
    int len;
    int pos;
} CPSS_LUACLI_INSTANCE_STC;

File mainExtUtils/h/extUtils/rxEventHandler/rxEventHandler.h:
typedef enum {RX_EV_HANDLER_TYPE_RX_E, RX_EV_HANDLER_TYPE_RX_ERR_E, RX_EV_HANDLER_TYPE_ANY_E} RX_EV_HANDLER_EV_TYPE_ENT;
typedef GT_STATUS (*)(GT_UINTPTR, RX_EV_HANDLER_EV_TYPE_ENT, GT_U8, GT_U8, GT_U32, GT_U8 **, GT_U32 *, void *) RX_EV_PACKET_RECEIVE_CB_FUN;

File mainExtUtils/h/extUtils/tgf/tgfCommonList.h:
typedef struct {
    PRV_TGF_LIST_ITEM_PTR lastPtr;
    PRV_TGF_LIST_ITEM_PTR firstPtr;
    GT_U32 itemSize;
    GT_U32 count;
    GT_U32 max;
} * PRV_TGF_LIST_HEAD_PTR;
typedef struct PRV_TGF_LIST_ITEM_STCT * PRV_TGF_LIST_ITEM_PTR;
struct PRV_TGF_LIST_ITEM_STCT;

File mainExtUtils/h/extUtils/trafficEngine/prvTgfLog.h:
typedef GT_BOOL (*)(GT_UINTPTR, GT_UINTPTR, GT_32, GT_CHAR *) TGF_EQUAL_VERIFY_FUNC;
typedef GT_BOOL (*)(const GT_CHAR *, const GT_UINTPTR *, GT_U32) TGF_FAILURE_MSG_LOG_FUNC;
typedef struct {
    TGF_LOG_MESSAGE_FUNC logMessageFunc;
    TGF_EQUAL_VERIFY_FUNC equalVerifyFunc;
    TGF_FAILURE_MSG_LOG_FUNC failureMgsLogFunc;
    TGF_PRINT_KEEPALIVE_FUNC printKeepAliveFunc;
    TGF_LOG_PRINT_MODE_FINAL_FUNC logPrintModeFinalFunc;
    TGF_LOG_PRINT_MODE_RESTORE_FUNC logPrintModeRestoreFunc;
} TGF_LOG_BINDINGS_STC;
typedef void (*)(const GT_CHAR *, const GT_UINTPTR *, GT_U32) TGF_LOG_MESSAGE_FUNC;
typedef GT_U32 (*)(void) TGF_LOG_PRINT_MODE_FINAL_FUNC;
typedef GT_U32 (*)(GT_U32) TGF_LOG_PRINT_MODE_RESTORE_FUNC;
typedef void (*)(void) TGF_PRINT_KEEPALIVE_FUNC;

File mainExtUtils/h/extUtils/trafficEngine/tgfTrafficEngine.h:
typedef enum {CPSS_NET_RX_CPU_CODE_ENT_E} CPSS_NET_RX_CPU_CODE_ENT;
typedef enum {PRV_TGF_BRG_VLAN_PORT_UNTAGGED_CMD_E, PRV_TGF_BRG_VLAN_PORT_TAG0_CMD_E, PRV_TGF_BRG_VLAN_PORT_TAG1_CMD_E, PRV_TGF_BRG_VLAN_PORT_OUTER_TAG0_INNER_TAG1_CMD_E, PRV_TGF_BRG_VLAN_PORT_OUTER_TAG1_INNER_TAG0_CMD_E, PRV_TGF_BRG_VLAN_PORT_PUSH_TAG0_CMD_E, PRV_TGF_BRG_VLAN_PORT_POP_OUTER_TAG_CMD_E, PRV_TGF_BRG_VLAN_PORT_DO_NOT_MODIFY_TAG_CMD_E} PRV_TGF_BRG_VLAN_PORT_TAG_CMD_ENT;
typedef unsigned short TGF_ARP_HW_TYPE;
typedef struct {
    struct {...} pseudo;
    GT_BOOL isIpv4;
    GT_U8 *startL3HeadrPtr;
    GT_U8 *udpLengthFieldPtr;
} TGF_AUTO_CHECKSUM_EXTRA_INFO_STC;
typedef struct {
    TGF_AUTO_CHECKSUM_INFO_STC singleInfoArr[4];
} TGF_AUTO_CHECKSUM_FULL_INFO_STC;
typedef struct {
    GT_BOOL enable;
    GT_U8 *startPtr;
    GT_U32 numBytes;
    GT_U8 *checkSumPtr;
} TGF_AUTO_CHECKSUM_INFO_STC;
typedef unsigned char TGF_CFI;
typedef enum {TGF_DSA_CMD_TO_CPU_E, TGF_DSA_CMD_FROM_CPU_E, TGF_DSA_CMD_TO_ANALYZER_E, TGF_DSA_CMD_FORWARD_E} TGF_DSA_CMD_ENT;
typedef struct {
    GT_U8 vpt;
    GT_U8 cfiBit;
    GT_U16 vid;
    GT_BOOL dropOnSource;
    GT_BOOL packetIsLooped;
} TGF_DSA_DSA_COMMON_STC;
typedef struct {
    PRV_TGF_BRG_VLAN_PORT_TAG_CMD_ENT srcIsTagged;
    GT_HW_DEV_NUM srcHwDev;
    GT_BOOL srcIsTrunk;
    union {...} source;
    GT_U32 srcId;
    GT_BOOL egrFilterRegistered;
    GT_BOOL wasRouted;
    GT_U32 qosProfileIndex;
    CPSS_INTERFACE_INFO_STC dstInterface;
    GT_BOOL isTrgPhyPortValid;
    GT_PORT_NUM dstEport;
    GT_U32 tag0TpidIndex;
    GT_BOOL origSrcPhyIsTrunk;
    union {...} origSrcPhy;
    GT_BOOL phySrcMcFilterEnable;
    GT_U32 hash;
    GT_BOOL skipFdbSaLookup;
} TGF_DSA_DSA_FORWARD_STC;
typedef struct {
    CPSS_INTERFACE_INFO_STC dstInterface;
    GT_U8 tc;
    CPSS_DP_LEVEL_ENT dp;
    GT_BOOL egrFilterEn;
    GT_BOOL cascadeControl;
    GT_BOOL egrFilterRegistered;
    GT_U32 srcId;
    GT_HW_DEV_NUM srcHwDev;
    union {...} extDestInfo;
    GT_BOOL isTrgPhyPortValid;
    GT_PORT_NUM dstEport;
    GT_U32 tag0TpidIndex;
} TGF_DSA_DSA_FROM_CPU_STC;
typedef struct {
    GT_BOOL rxSniffer;
    GT_BOOL isTagged;
    struct {...} devPort;
    CPSS_INTERFACE_TYPE_ENT analyzerTrgType;
    union {...} extDestInfo;
    GT_U32 tag0TpidIndex;
} TGF_DSA_DSA_TO_ANALYZER_STC;
typedef struct {
    GT_BOOL isEgressPipe;
    GT_BOOL isTagged;
    GT_HW_DEV_NUM hwDevNum;
    GT_BOOL srcIsTrunk;
    struct {...} interface;
    CPSS_NET_RX_CPU_CODE_ENT cpuCode;
    GT_BOOL wasTruncated;
    GT_U32 originByteCount;
    GT_U32 timestamp;
    GT_BOOL packetIsTT;
    union {...} flowIdTtOffset;
    GT_U32 tag0TpidIndex;
} TGF_DSA_DSA_TO_CPU_STC;
typedef enum {TGF_DSA_1_WORD_TYPE_E, TGF_DSA_2_WORD_TYPE_E, TGF_DSA_3_WORD_TYPE_E, TGF_DSA_4_WORD_TYPE_E, TGF_DSA_LAST_TYPE_E} TGF_DSA_TYPE_ENT;
typedef unsigned short TGF_ETHER_TYPE;
typedef struct {
    GT_PHYSICAL_PORT_NUM portNum;
    GT_U32 burstCount;
    GT_U32 numBytes;
    TGF_PACKET_STC *pktInfo;
    GT_U32 *byteNumMaskListPtr;
    GT_U32 byteNumMaskSize;
} TGF_EXPECTED_EGRESS_INFO_STC;
typedef unsigned char TGF_FLAG;
typedef unsigned int TGF_FLOW_LABEL;
typedef unsigned short TGF_HEADER_CRC;
typedef unsigned char TGF_HOP_LIMIT;
typedef unsigned short TGF_ICMP_ID_FIELD;
typedef GT_U8 [4] TGF_IPV4_ADDR;
typedef unsigned short TGF_IPV4_ID_FIELD;
typedef GT_U16 [8] TGF_IPV6_ADDR;
typedef unsigned short TGF_L4_PORT;
typedef GT_U8 [6] TGF_MAC_ADDR;
typedef unsigned char TGF_MPLS_EXP;
typedef unsigned int TGF_MPLS_LBL;
typedef unsigned char TGF_MPLS_STACK;
typedef unsigned short TGF_NEXT_HEADER;
typedef struct {
    TGF_ARP_HW_TYPE hwType;
    TGF_PROT_TYPE protType;
    GT_U8 hwLen;
    GT_U8 protLen;
    GT_U16 opCode;
    TGF_MAC_ADDR srcMac;
    TGF_IPV6_ADDR srcIp;
    TGF_MAC_ADDR dstMac;
    TGF_IPV6_ADDR dstIp;
} TGF_PACKET_ARPV6_STC;
typedef struct {
    TGF_ARP_HW_TYPE hwType;
    TGF_PROT_TYPE protType;
    GT_U8 hwLen;
    GT_U8 protLen;
    GT_U16 opCode;
    TGF_MAC_ADDR srcMac;
    TGF_IPV4_ADDR srcIp;
    TGF_MAC_ADDR dstMac;
    TGF_IPV4_ADDR dstIp;
} TGF_PACKET_ARP_STC;
typedef struct WILDCARD_STC TGF_PACKET_CRC_STC;
typedef struct {
    TGF_DSA_CMD_ENT dsaCommand;
    TGF_DSA_TYPE_ENT dsaType;
    TGF_DSA_DSA_COMMON_STC commonParams;
    union {...} dsaInfo;
} TGF_PACKET_DSA_TAG_STC;
typedef struct {
    TGF_ETHER_TYPE etherType;
} TGF_PACKET_ETHERTYPE_STC;
typedef struct {
    GT_BOOL checkSumPresent;
    GT_U16 reserved0;
    TGF_PROT_VER version;
    GT_U16 protocol;
    GT_U16 checksum;
    GT_U16 reserved1;
} TGF_PACKET_GRE_STC;
typedef struct {
    TGF_TYPE_OF_SERVICE typeOfService;
    GT_U8 code;
    TGF_HEADER_CRC csum;
    TGF_ICMP_ID_FIELD id;
    GT_U16 sequenceNum;
    GT_U32 getwayAddr;
    GT_U8 errorPointer;
} TGF_PACKET_ICMP_STC;
typedef struct {
    TGF_PROT_VER version;
    GT_U8 headerLen;
    TGF_TYPE_OF_SERVICE typeOfService;
    GT_U16 totalLen;
    TGF_IPV4_ID_FIELD id;
    TGF_FLAG flags;
    GT_U16 offset;
    TGF_TTL timeToLive;
    TGF_PROT protocol;
    TGF_HEADER_CRC csum;
    TGF_IPV4_ADDR srcAddr;
    TGF_IPV4_ADDR dstAddr;
} TGF_PACKET_IPV4_STC;
typedef struct {
    TGF_PROT_VER version;
    TGF_TRAFFIC_CLASS trafficClass;
    TGF_FLOW_LABEL flowLabel;
    GT_U16 payloadLen;
    TGF_NEXT_HEADER nextHeader;
    TGF_HOP_LIMIT hopLimit;
    TGF_IPV6_ADDR srcAddr;
    TGF_IPV6_ADDR dstAddr;
} TGF_PACKET_IPV6_STC;
typedef struct {
    TGF_MAC_ADDR daMac;
    TGF_MAC_ADDR saMac;
} TGF_PACKET_L2_STC;
typedef struct {
    TGF_MPLS_LBL label;
    TGF_MPLS_EXP exp;
    TGF_MPLS_STACK stack;
    TGF_TTL timeToLive;
} TGF_PACKET_MPLS_STC;
typedef struct {
    GT_U32 baseHdr;
    GT_U32 servicePathHdr;
    GT_U32 metaDataWord3Hdr;
    GT_U32 metaDataWord2Hdr;
    GT_U32 metaDataWord1Hdr;
    GT_U32 metaDataWord0Hdr;
} TGF_PACKET_NSH_STC;
typedef enum {TGF_PACKET_PART_L2_E, TGF_PACKET_PART_VLAN_TAG_E, TGF_PACKET_PART_SGT_TAG_E, TGF_PACKET_PART_DSA_TAG_E, TGF_PACKET_PART_ETHERTYPE_E, TGF_PACKET_PART_MPLS_E, TGF_PACKET_PART_IPV4_E, TGF_PACKET_PART_IPV6_E, TGF_PACKET_PART_TCP_E, TGF_PACKET_PART_UDP_E, TGF_PACKET_PART_ARP_E, TGF_PACKET_PART_ICMP_E, TGF_PACKET_PART_WILDCARD_E, TGF_PACKET_PART_PAYLOAD_E, TGF_PACKET_PART_TRILL_E, TGF_PACKET_PART_TRILL_FIRST_OPTION_E, TGF_PACKET_PART_TRILL_GENERAL_OPTION_E, TGF_PACKET_PART_GRE_E, 
    TGF_PACKET_PART_TUNNEL_HEADER_FORCE_TILL_PASSENGER_E, TGF_PACKET_PART_CRC_E, TGF_PACKET_PART_PTP_V2_E, TGF_PACKET_PART_TEMPLATE_E, TGF_PACKET_PART_VXLAN_GPE_E, TGF_PACKET_PART_NSH_E, TGF_PACKET_PART_SRH_E, TGF_PACKET_PART_SKIP_E, TGF_PACKET_PART_MAX_E} TGF_PACKET_PART_ENT;
typedef struct {
    TGF_PACKET_PART_ENT type;
    void *partPtr;
} TGF_PACKET_PART_STC;
typedef struct {
    GT_U32 dataLength;
    GT_U8 *dataPtr;
} TGF_PACKET_PAYLOAD_STC;
typedef struct {
    GT_U32 messageType;
    GT_U32 transportSpecific;
    GT_U32 ptpVersion;
    GT_U32 reserved4;
    GT_U32 messageLength;
    GT_U32 domainNumber;
    GT_U32 reserved8;
    GT_U32 flagField;
    GT_U32 correctionField[2];
    GT_U32 reserved32;
    GT_U8 sourcePortIdentify[10];
    GT_U32 sequenceId;
    GT_U32 controlField;
    GT_U32 logMessageInterval;
} TGF_PACKET_PTP_V2_STC;
typedef struct {
    TGF_ETHER_TYPE etherType;
    GT_U8 version;
    GT_U16 length;
    GT_U16 optionType;
    GT_U16 sgtValue;
} TGF_PACKET_SGT_TAG_STC;
typedef struct {
    GT_U8 nextHeader;
    GT_U8 headerLength;
    GT_U8 routingType;
    GT_U8 segmentsLeft;
    GT_U8 lastEntry;
    GT_U8 flags;
    GT_U16 tag;
} TGF_PACKET_SRH_STC;
typedef struct {
    GT_U32 totalLen;
    GT_U32 numOfParts;
    TGF_PACKET_PART_STC *partsArray;
} TGF_PACKET_STC;
typedef struct {
    TGF_L4_PORT srcPort;
    TGF_L4_PORT dstPort;
    GT_U32 sequenceNum;
    GT_U32 acknowledgeNum;
    GT_U8 dataOffset;
    GT_U8 reserved;
    TGF_TCP_FLAGS flags;
    GT_U16 windowSize;
    TGF_HEADER_CRC csum;
    TGF_TCP_URGENT_PTR urgentPtr;
} TGF_PACKET_TCP_STC;
typedef struct {
    GT_U32 dataLength;
    GT_U8 *dataPtr;
} TGF_PACKET_TEMPLATE16_STC;
typedef struct {
    GT_BOOL chbh;
    GT_BOOL clte;
    GT_U32 info;
} TGF_PACKET_TRILL_FIRST_OPTION_STC;
typedef struct {
    GT_U32 info;
} TGF_PACKET_TRILL_GEN_OPTION_STC;
typedef struct {
    TGF_PROT_VER version;
    GT_BOOL mBit;
    GT_U32 opLength;
    GT_U32 hopCount;
    GT_U16 eRbid;
    GT_U16 iRbid;
} TGF_PACKET_TRILL_STC;
typedef struct WILDCARD_STC TGF_PACKET_TUNNEL_HEADER_FORCE_TILL_PASSENGER_STC;
typedef struct {
    TGF_L4_PORT srcPort;
    TGF_L4_PORT dstPort;
    GT_U16 length;
    TGF_HEADER_CRC csum;
} TGF_PACKET_UDP_STC;
typedef struct {
    TGF_ETHER_TYPE etherType;
    TGF_PRI pri;
    TGF_CFI cfi;
    TGF_VLAN_ID vid;
} TGF_PACKET_VLAN_TAG_STC;
typedef struct {
    GT_U8 flags;
    GT_U16 reserved0;
    GT_U8 nextProtocol;
    GT_U32 vni;
    GT_U8 reserved1;
} TGF_PACKET_VXLAN_GPE_STC;
typedef struct WILDCARD_STC TGF_PACKET_WILDCARD_STC;
typedef unsigned char TGF_PRI;
typedef unsigned char TGF_PROT;
typedef enum {TGF_PROTOCOL_HOPOPT_E, TGF_PROTOCOL_ICMP_E, TGF_PROTOCOL_IGMP_E, TGF_PROTOCOL_IP_E = 4, TGF_PROTOCOL_TCP_E = 6, TGF_PROTOCOL_UDP_E = 17, TGF_PROTOCOL_ICMPV6_E = 58, TGF_PROTOCOL_MAX_E = 255} TGF_PROTOCOL_ENT;
typedef unsigned short TGF_PROT_TYPE;
typedef unsigned char TGF_PROT_VER;
typedef unsigned char TGF_TCP_FLAGS;
typedef unsigned short TGF_TCP_URGENT_PTR;
typedef unsigned char TGF_TRAFFIC_CLASS;
typedef unsigned char TGF_TTL;
typedef unsigned char TGF_TYPE_OF_SERVICE;
typedef struct {
    TGF_VFD_MODE_ENT mode;
    GT_U32 modeExtraInfo;
    GT_U32 incValue;
    GT_U32 offset;
    GT_U8 patternPtr[16];
    GT_U8 bitMaskPtr[16];
    GT_U32 cycleCount;
    GT_U8 *arrayPatternPtr;
    GT_U32 arrayPatternOffset;
    GT_U32 arrayPatternSize;
} TGF_VFD_INFO_STC;
typedef enum {TGF_VFD_MODE_OFF_E, TGF_VFD_MODE_STATIC_E, TGF_VFD_MODE_INCREMENT_E, TGF_VFD_MODE_DECREMENT_E, TGF_VFD_MODE_RANDOM_E, TGF_VFD_MODE_ARRAY_PATTERN_E, TGF_VFD_MODE_INCREMENT_VALUE_E, TGF_VFD_MODE_DECREMENT_VALUE_E, TGF_VFD_MODE_STATIC_EXPECTED_NO_MATCH_E, TGF_VFD_MODE_STATIC_NO_MATCH_IGNORED_E, TGF_VFD_MODE___LAST___E} TGF_VFD_MODE_ENT;
typedef unsigned short TGF_VLAN_ID;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32 *) UTF_DMA_WINDOW_GET_FUN;
typedef GT_STATUS (*)(GT_BOOL) UTF_MEMORY_LEAK_PAUSE_SET_FUN;
struct WILDCARD_STC;

File mainExtUtils/h/extUtils/trafficEngine/tgfTrafficGenerator.h:
typedef enum {CPSS_ETHER_MODE_ENT_E} CPSS_ETHER_MODE_ENT;
typedef struct {
    GT_U8 devNum;
    GT_PORT_NUM portNum;
} PRV_TGF_DEV_PORT_STC;
typedef enum {PRV_TGF_EXPECTED_INTERFACE_TYPE_PHYSICAL_PORT_NUM_E, PRV_TGF_EXPECTED_INTERFACE_TYPE_EPORT_NUM_E, PRV_TGF_EXPECTED_INTERFACE_TYPE_FORCE_PHYSICAL_PORT_NUM_E} PRV_TGF_EXPECTED_INTERFACE_TYPE_ENT;
typedef enum {PRV_TGF_LOOPBACK_UNIT_MAC_E, PRV_TGF_LOOPBACK_UNIT_SERDES_E, PRV_TGF_LOOPBACK_UNIT_MAX_E} PRV_TGF_LOOPBACK_UNIT_ENT;
typedef struct {
    PRV_TGF_DEV_PORT_STC member;
    GT_BOOL forceToVlan;
    GT_BOOL forceToVidx;
    struct {...} vlanInfo;
} PRV_TGF_MEMBER_FORCE_INFO_STC;
typedef struct {
    CPSS_INTERFACE_INFO_STC interface;
} PRV_TGF_MIRROR_ANALYZER_INTERFACE_STC;
typedef enum {PRV_TGF_TX_CONT_MODE_UNIT_WS_E, PRV_TGF_TX_CONT_MODE_UNIT_KBPS_SEC_E, PRV_TGF_TX_CONT_MODE_UNIT_PERCENT_E} PRV_TGF_TX_CONT_MODE_UNIT_ENT;
typedef struct {
    GT_U8 devNum;
    GT_PHYSICAL_PORT_NUM portNum;
    PRV_TGF_TX_CONT_MODE_UNIT_ENT unitsType;
    GT_U32 units;
    PRV_TGF_MIRROR_ANALYZER_INTERFACE_STC analyzerInf;
} PRV_TGF_TX_DEV_PORT_STC;
typedef enum {PRV_TGF_TX_MODE_SINGLE_BURST_E, PRV_TGF_TX_MODE_CONTINUOUS_E, PRV_TGF_TX_MODE_CONTINUOUS_FWS_E} PRV_TGF_TX_MODE_ENT;
typedef enum {TGF_CAPTURE_MODE_PCL_E, TGF_CAPTURE_MODE_MIRRORING_E} TGF_CAPTURE_MODE_ENT;
typedef struct {
    GT_BOOL dsaCmdIsToCpu;
    CPSS_NET_RX_CPU_CODE_ENT cpuCode;
    GT_BOOL srcIsTrunk;
    GT_HW_DEV_NUM hwDevNum;
    GT_PHYSICAL_PORT_NUM portNum;
    GT_U32 originByteCount;
    GT_TRUNK_ID trunkId;
    GT_PORT_NUM ePortNum;
    GT_BOOL packetIsTT;
    union {...} flowIdTtOffset;
} TGF_NET_DSA_STC;
typedef enum {TGF_PACKET_TYPE_REGULAR_E, TGF_PACKET_TYPE_CAPTURE_E, TGF_PACKET_TYPE_ANY_E} TGF_PACKET_TYPE_ENT;
typedef GT_STATUS (*)(GT_CHAR *, GT_U32 *) appDemoDbEntryGet_TYPE;
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL, CPSS_PORT_INTERFACE_MODE_ENT, CPSS_PORT_SPEED_ENT) appDemoDxChPortMgrPortModeSpeedSet_TYPE;

File mainExtUtils/h/extUtils/trafficEngine/tgfTrafficTable.h:
typedef GT_STATUS (*)(const void *, void *) TGF_COPY_RX_INFO_FUNC;
typedef GT_STATUS (*)(void *) TGF_FREE_RX_INFO_FUNC;
typedef enum {TGF_RE_RUN_STATUS_DISABLED_E, TGF_RE_RUN_STATUS_CAPABLE_E, TGF_RE_RUN_STATUS_DO_RE_RUN_E} TGF_RE_RUN_STATUS_ENT;
typedef struct {
    GT_BOOL isEmpty;
    GT_U8 devNum;
    GT_U8 queue;
    void *specificDeviceFormatPtr;
    TGF_FREE_RX_INFO_FUNC freeRxInfoFunc;
    TGF_COPY_RX_INFO_FUNC copyRxInfoFunc;
    GT_U8 *packetBufferPtr;
    GT_U32 packetOriginalLen;
    GT_U32 bufferLen;
} TGF_RX_ENTRY;
typedef enum {TGF_RX_CYCLIC_E, TGF_RX_ONCE_E} TGF_RX_MODE_ENT;

File mainExtUtils/src/extUtils/IOStream/IOStream.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/IOStream/IOStreamTCP.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef struct {
    IOStreamSTC common;
    CPSS_SOCKET_FD socket;
    GT_BOOL isConnected;
} * socketStreamPTR;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/IOStream/IOStreamTelnet.c:
typedef enum {OPT_DISABLED, OPT_ENABLED, OPT_DISABLED_WAIT_ACK, OPT_ENABLED_WAIT_ACK} TELNET_OPTION_STATUS_T;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef struct {
    IOStreamSTC common;
    IOStreamPTR transport;
    enum {...} readState;
    TELNET_OPTION_STATUS_T opt_TRANSMIT_BINARY;
    TELNET_OPTION_STATUS_T opt_ECHO;
    TELNET_OPTION_STATUS_T opt_SGA;
} * telnetStreamPTR;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/iterators/extUtilDevPort.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lapi.c:
struct CCallS;
struct CallS;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lauxlib.c:
struct LoadF;
struct LoadS;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lauxlib.h:
struct luaL_Buffer;
struct luaL_Reg;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lbaselib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lcode.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lcode.h:
enum BinOpr;
enum UnOpr;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ldblib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ldebug.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ldo.c:
struct SParser;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
struct lua_longjmp;
typedef short;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ldo.h:
typedef void (*)(lua_State *, void *) Pfunc;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ldump.c:
typedef struct {
    lua_State *L;
    lua_Writer writer;
    void *data;
    int strip;
    int status;
} DumpState;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lfunc.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lgc.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/linit.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/liolib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/llex.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/llex.h:
struct LexState;
enum RESERVED;
typedef union {
    lua_Number r;
    TString *ts;
} SemInfo;
struct Token;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/llimits.h:
typedef unsigned int Instruction;
typedef union {
    double u;
    void *s;
    long l;
} L_Umaxalign;
typedef long l_mem;
typedef unsigned char lu_byte;
typedef unsigned int lu_int32;
typedef unsigned long lu_mem;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lmathlib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lmem.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/loadlib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lobject.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lobject.h:
struct CClosure;
union Closure;
typedef union GCObject GCObject;
struct GCheader;
struct LClosure;
struct LocVar;
struct Node;
struct Proto;
typedef TValue * StkId;
union TKey;
union TString;
typedef struct lua_TValue TValue;
struct Table;
union Udata;
struct UpVal;
typedef union {
    GCObject *gc;
    void *p;
    lua_Number n;
    int b;
} Value;
struct lua_TValue;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lopcodes.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lopcodes.h:
enum OpArgMask;
typedef enum {OP_MOVE, OP_LOADK, OP_LOADBOOL, OP_LOADNIL, OP_GETUPVAL, OP_GETGLOBAL, OP_GETTABLE, OP_SETGLOBAL, OP_SETUPVAL, OP_SETTABLE, OP_NEWTABLE, OP_SELF, OP_ADD, OP_SUB, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_UNM, OP_NOT, OP_LEN, OP_CONCAT, OP_JMP, OP_EQ, OP_LT, OP_LE, OP_TEST, OP_TESTSET, OP_CALL, OP_TAILCALL, OP_RETURN, OP_FORLOOP, OP_FORPREP, OP_TFORLOOP, OP_SETLIST, OP_CLOSE, OP_CLOSURE, OP_VARARG} OpCode;
enum OpMode;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/loslib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lparser.c:
struct BlockCnt;
struct ConsControl;
struct LHS_assign;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lparser.h:
struct FuncState;
struct expdesc;
typedef enum {VVOID, VNIL, VTRUE, VFALSE, VK, VKNUM, VLOCAL, VUPVAL, VGLOBAL, VINDEXED, VJMP, VRELOCABLE, VNONRELOC, VCALL, VVARARG} expkind;
struct upvaldesc;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lstate.c:
struct LG;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lstate.h:
struct CallInfo;
union GCObject;
struct global_State;
struct lua_State;
struct stringtable;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lstring.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lstrlib.c:
struct MatchState;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ltable.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ltablib.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ltm.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/ltm.h:
typedef enum {TM_INDEX, TM_NEWINDEX, TM_GC, TM_MODE, TM_EQ, TM_ADD, TM_SUB, TM_MUL, TM_DIV, TM_MOD, TM_POW, TM_UNM, TM_LEN, TM_LT, TM_LE, TM_CONCAT, TM_CALL, TM_N} TMS;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lua.h:
typedef void *(*)(void *, void *, size_t, size_t) lua_Alloc;
typedef int (*)(lua_State *) lua_CFunction;
typedef struct lua_Debug lua_Debug;
typedef void (*)(lua_State *, lua_Debug *) lua_Hook;
typedef long lua_Integer;
typedef double lua_Number;
typedef const char *(*)(lua_State *, void *, size_t *) lua_Reader;
typedef struct lua_State lua_State;
typedef int (*)(lua_State *, const void *, size_t, void *) lua_Writer;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lundump.c:
typedef struct {
    lua_State *L;
    ZIO *Z;
    Mbuffer *b;
    const char *name;
} LoadState;
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lvm.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lzio.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef unsigned short;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/lua-5.1/src/lzio.h:
struct Mbuffer;
typedef struct Zio ZIO;
struct Zio;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngine.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngineCLI.c:
typedef void *(*)(int) LUACLI_MALLOC_T;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngineFS.c:
struct LoadF;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngineNet.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngineStorage.c:
struct STORAGE_NODE_STC;
typedef struct STORAGE_NODE_STC STORAGE_NODE_STCT;
struct STORAGE_SHARED_DATA_STC;
typedef struct STORAGE_SHARED_DATA_STC STORAGE_SHARED_DATA_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngine_C_API.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef struct outBufferStreamSTCT outBufferStreamSTC;
struct outBufferStreamSTCT;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/luaCLI/luaCLIEngine_genWrapper.c:
typedef enum {PARAM_DIRECTION_IN_E, PARAM_DIRECTION_OUT_E, PARAM_DIRECTION_INOUT_E, PARAM_DIRECTION_WRONG_E} PARAM_DIRECTION_ENT;
typedef enum {PARAM_TYPE_VAL_U32_E, PARAM_TYPE_VAL_U16_E, PARAM_TYPE_VAL_U8_E, PARAM_TYPE_VAL_U64_E, PARAM_TYPE_PTR_U32_E, PARAM_TYPE_PTR_U16_E, PARAM_TYPE_PTR_U8_E, PARAM_TYPE_PTR_U64_E, PARAM_TYPE_PTR_32_E, PARAM_TYPE_PTR_16_E, PARAM_TYPE_PTR_8_E, PARAM_TYPE_PTR_PTR_E, PARAM_TYPE_PTR_E, PARAM_TYPE_ARR_NUM_E, PARAM_TYPE_ARR_PTR_E, PARAM_TYPE_UNKNOWN_E} PARAM_TYPE_ENT;
typedef struct PRV_PARAM_DATA_STCT PRV_PARAM_DATA_STC;
struct PRV_PARAM_DATA_STCT;
typedef enum {FALSE, TRUE} bool;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/osNetworkStack/osNetworkStack.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/osNetworkStack/prvOsNetworkStackLinux.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/rxEventHandler/rxEventHandler.c:
typedef struct RX_EV_HANDLER_CB_STCT RX_EV_HANDLER_CB_STC;
struct RX_EV_HANDLER_CB_STCT;
typedef enum {RX_EV_HANDLER_CB_TYPE_UNKNOWN_E, RX_EV_HANDLER_CB_TYPE_DIRECT_E, RX_EV_HANDLER_CB_TYPE_REMOTE_E} RX_EV_HANDLER_CB_TYPE_ENT;
typedef struct RX_EV_HANDLER_STCT RX_EV_HANDLER_STC;
struct RX_EV_HANDLER_STCT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/tgf/tgfCommonList.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/tgf/utfExtras.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/trafficEngine/prvTgfLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/trafficEngine/prvTgfTrafficParser.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/trafficEngine/tgfTrafficEngine.c:
typedef struct {
    TGF_TRACE_FIELD_INFO_STC fieldsArr[20];
    GT_U32 fieldsArrLength;
} TGF_TRACE_FIELD_INFO_DB_STC;
typedef struct {
    GT_U32 offsetInStc;
    GT_U8 doTrace;
    GT_CHAR *nameString;
    TGF_TRACE_FIELD_TYPE_ENT fieldType;
} TGF_TRACE_FIELD_INFO_STC;
typedef enum {TGF_TRACE_NUMERIC_DEC_E, TGF_TRACE_NUMERIC_HEX_E, TGF_TRACE_IPV4_ADDR_E, TGF_TRACE_IPV6_ADDR_E, TGF_TRACE_MAC_ADDR_E, TGF_TRACE_TYPE_MAX_E} TGF_TRACE_FIELD_TYPE_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/trafficEngine/tgfTrafficGenerator.c:
typedef GT_STATUS (*)(GT_U8, GT_PHYSICAL_PORT_NUM, GT_BOOL *, GT_BOOL *, GT_U8 *, GT_PHYSICAL_PORT_NUM *) APP_DEMO_CONVERT_DX_PORT_TO_PX_PORT_FUNC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainExtUtils/src/extUtils/trafficEngine/tgfTrafficTable.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/h/galtisAgent/wrapCpss/Gen/networkIf/wrapCpssGenNetIf.h:
typedef struct {
    GT_U32 cyclesNum;
    GT_U32 gap;
} CPSS_TX_MODE_SETITNGS_STC;
typedef struct {
    GT_BOOL valid;
    GT_U32 entryId;
    GT_U8 devNum;
    GT_BOOL packetIsTagged;
    GT_U16 vid;
    CPSS_DP_LEVEL_ENT dropPrecedence;
    GT_U8 trafficClass;
    GT_BOOL recalcCrc;
    GT_BOOL txSyncMode;
    GT_U8 txQueue;
    GT_BOOL invokeTxBufferQueueEvent;
    GT_U32 numPacketsToSend;
    GT_U32 gap;
    GT_U32 waitTime;
    GT_U8 *pcktData[24];
    GT_U32 pcktDataLen[24];
    GT_U32 numOfBuffers;
    GT_U32 numSentPackets;
    CPSS_INTERFACE_INFO_STC dstInterface;
    GT_BOOL dstIsTagged;
    GT_BOOL excludeInterface;
    CPSS_INTERFACE_INFO_STC excludedInterface;
    void *specificDeviceTypeInfo;
    GT_BOOL srcIsTrunk;
    union {...} source;
    GT_U8 srcDevice;
    GT_BOOL wasRouted;
} CPSS_TX_PKT_DESC;

File mainGaltisWrapper/h/galtisAgent/wrapCpss/px/networkif/cmdCpssPxNetTransmit.h:
typedef struct {
    GT_SW_DEV_NUM devNum;
    GT_BOOL valid;
    GT_U32 entryId;
    CPSS_PX_NET_TX_PARAMS_STC sdmaInfo;
    GT_U32 pcktsNum;
    GT_U32 gap;
    GT_U32 waitTime;
    GT_U8 *pcktData[64];
    GT_U32 pcktDataLen[64];
    GT_U32 numOfBuffers;
    GT_U32 numSentPackets;
} PX_PKT_DESC_STC;
typedef struct {
    GT_U32 packetGenDescIndex;
    GT_U32 packetId;
} PX_PKT_GEN_DESC_STC;

File mainGaltisWrapper/h/galtisAgent/wrapUtil/cmdCpssLinkedList.h:
typedef enum {GT_LL_EQUAL, GT_LL_GREATER, GT_LL_SMALLER} GT_LL_COMP_RES;
typedef void STRUCT_LL_DATA;
typedef struct _llHead STRUCT_LL_HEAD;
typedef struct _linkedListNode STRUCT_LL_NODE;
struct _linkedListNode;
struct _llHead;

File mainGaltisWrapper/h/galtisAgent/wrapUtil/cmdCpssNetReceive.h:
typedef struct {
    GT_BOOL isEmpty;
    GT_U8 devNum;
    GT_U8 queue;
    void *specificDeviceFormatPtr;
    FREE_RX_INFO_FUNC freeRxInfoFunc;
    COPY_RX_INFO_FUNC copyRxInfoFunc;
    GT_U8 *packetBufferPtr;
    GT_U32 packetOriginalLen;
    GT_U32 bufferLen;
    GT_RX_ENTRY_TYPE_ENT entryType;
} CMD_RX_ENTRY;
typedef void (*)(const void *, void *) COPY_RX_INFO_FUNC;
typedef void (*)(void *) FREE_RX_INFO_FUNC;
typedef enum {GALTIS_RX_CYCLIC_E, GALTIS_RX_ONCE_E} GALTIS_RX_MODE_ENT;
typedef enum {GT_RX_ENTRY_TYPE_GENERIC_E, GT_RX_ENTRY_TYPE_CAPTURED_BY_ENH_UT_E, GT_RX_ENTRY_TYPE___LAST___E} GT_RX_ENTRY_TYPE_ENT;

File mainGaltisWrapper/h/galtisAgent/wrapUtil/cmdCpssPresteraUtils.h:
typedef struct {
    GT_U8 *data;
    GT_U32 length;
} GT_BYTE_ARRY;
typedef enum {GT_UTIL_HEX_DATA_STORE_NETWORK_ORDERED_E, GT_UTIL_HEX_DATA_STORE_REVERSE_ORDERED_E, GT_UTIL_HEX_DATA_STORE_CPU_INTEGER_E} GT_UTIL_HEX_DATA_STORE_FORMAT_ENT;
typedef enum {GT_UTIL_PP_FAMILY_TWISTC_E = 1, GT_UTIL_PP_FAMILY_TWISTD_E, GT_UTIL_PP_FAMILY_SAMBA_E, GT_UTIL_PP_FAMILY_TIGER_E, GT_UTIL_PP_FAMILY_SALSA_E = 7, GT_UTIL_PP_FAMILY_CHEETAH_E = 10, GT_UTIL_PP_FAMILY_CHEETAH2_E, GT_UTIL_PP_FAMILY_CHEETAH3_E, GT_UTIL_PP_FAMILY_DXCH_XCAT_E, GT_UTIL_PP_FAMILY_DXCH_LION_E, GT_UTIL_PP_FAMILY_DXCH_XCAT2_E, GT_UTIL_PP_FAMILY_DXCH_LION2_E, GT_UTIL_PP_FAMILY_DXCH_LION3_E, GT_UTIL_PP_FAMILY_DXCH_BOBCAT2_E, GT_UTIL_PP_FAMILY_PUMA_E = 20, GT_UTIL_PP_FAMILY_PUMA3_E, 
    GT_UTIL_PP_FAMILY_DXCH_XCAT3_E = 30, GT_UTIL_PP_FAMILY_DXCH_BOBCAT3_E, GT_UTIL_PP_FAMILY_DXCH_ALDRIN_E, GT_UTIL_PP_FAMILY_DXCH_AC3X_E, GT_UTIL_PP_FAMILY_DXCH_ALDRIN2_E, GT_UTIL_PP_FAMILY_DXCH_FALCON_E, GT_UTIL_PP_FAMILY_DXCH_AC5P_E, GT_UTIL_PP_FAMILY_DXCH_PHOENIX_E, GT_UTIL_PP_FAMILY_DXCH_AC5_E, GT_UTIL_PP_FAMILY_DXCH_HARRIER_E, GT_UTIL_PP_FAMILY_DXCH_IRONMAN_E, GT_UTIL_PP_FAMILY_DXCH_LAST_E} GT_UTIL_PP_FAMILY_TYPE_ENT;
typedef enum {GT_UTIL_PP_SUB_FAMILY_NONE_E, GT_UTIL_PP_SUB_FAMILY_BOBCAT2_BOBK_E, GT_UTIL_MAX_SUB_FAMILY = 2147483647} GT_UTIL_PP_SUB_FAMILY_TYPE_ENT;
typedef struct _stc_GT_UTIL_STC_ELEMENT_DSC_STC GT_UTIL_STC_ELEMENT_DSC_STC;
struct _stc_GT_UTIL_STC_ELEMENT_DSC_STC;
typedef void (*)(void) wrCpssResetLibFuncPtr;

File mainGaltisWrapper/h/galtisAgent/wrapUtil/cmdCpssSysConfig.h:
typedef struct {
    GT_U32 id;
    GT_U8 revision[30];
    GT_U8 subRev[30];
    GT_U32 deviceId;
    GT_U32 fatherId;
    GT_U32 fatherType;
    GT_U32 sonIndex;
    GT_U32 sonType;
} CMD_SYSCONF_INFO;

File mainGaltisWrapper/src/galtisAgent/cmdBaseInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cmdCpss.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssDriver/pp/hardware/wrapCpssDriverPpHw.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/Events/wrapCpssGenEvents.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/cpssHwInit/wrapCpssHwInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/cpssLog/wrapCpssLog.c:
typedef enum {WR_CPSS_LOG_LIB_APP_DRIVER_CALL_E, WR_CPSS_LOG_LIB_BRIDGE_E, WR_CPSS_LOG_LIB_CNC_E, WR_CPSS_LOG_LIB_CONFIG_E, WR_CPSS_LOG_LIB_COS_E, WR_CPSS_LOG_LIB_HW_INIT_E, WR_CPSS_LOG_LIB_CSCD_E, WR_CPSS_LOG_LIB_CUT_THROUGH_E, WR_CPSS_LOG_LIB_DIAG_E, WR_CPSS_LOG_LIB_FABRIC_E, WR_CPSS_LOG_LIB_IP_E, WR_CPSS_LOG_LIB_IPFIX_E, WR_CPSS_LOG_LIB_IP_LPM_E, WR_CPSS_LOG_LIB_L2_MLL_E, WR_CPSS_LOG_LIB_LOGICAL_TARGET_E, WR_CPSS_LOG_LIB_LPM_E, WR_CPSS_LOG_LIB_MIRROR_E, WR_CPSS_LOG_LIB_MULTI_PORT_GROUP_E, 
    WR_CPSS_LOG_LIB_NETWORK_IF_E, WR_CPSS_LOG_LIB_NST_E, WR_CPSS_LOG_LIB_OAM_E, WR_CPSS_LOG_LIB_PCL_E, WR_CPSS_LOG_LIB_PHY_E, WR_CPSS_LOG_LIB_POLICER_E, WR_CPSS_LOG_LIB_PORT_E, WR_CPSS_LOG_LIB_PROTECTION_E, WR_CPSS_LOG_LIB_PTP_E, WR_CPSS_LOG_LIB_SYSTEM_RECOVERY_E, WR_CPSS_LOG_LIB_TCAM_E, WR_CPSS_LOG_LIB_TM_GLUE_E, WR_CPSS_LOG_LIB_TRUNK_E, WR_CPSS_LOG_LIB_TTI_E, WR_CPSS_LOG_LIB_TUNNEL_E, WR_CPSS_LOG_LIB_VNT_E, WR_CPSS_LOG_LIB_RESOURCE_MANAGER_E, WR_CPSS_LOG_LIB_VERSION_E, WR_CPSS_LOG_LIB_TM_E, 
    WR_CPSS_LOG_LIB_SMI_E, WR_CPSS_LOG_LIB_INIT_E, WR_CPSS_LOG_LIB_DRAGONITE_E, WR_CPSS_LOG_LIB_VIRTUAL_TCAM_E, WR_CPSS_LOG_LIB_ALL_E, WR_CPSS_LOG_LIB_INGRESS_E, WR_CPSS_LOG_LIB_EGRESS_E} WR_CPSS_LOG_LIB_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/networkIf/wrapCpssGenNetIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/networkIf/wrapCpssGenNetIfTx.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/smi/wrapCpssGenSmi.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/cpssGen/systemRecovery/wrapCpssSystemRecovery.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/cnc/wrapCpssPxCnc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/cos/wrapCpssPxCos.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/cpssHwInit/wrapCpssPxHwInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/cpssHwInit/wrapCpssPxHwInitLedCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/cpssHwInit/wrapCpssPxHwInitMisc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/cutThrough/wrapCpssPxCutThrough.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/diag/wrapCpssPxDiag.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/diag/wrapCpssPxDiagPacketGenerator.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/egress/wrapCpssPxEgress.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/ingress/wrapCpssPxIngress.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/ingress/wrapCpssPxIngressHash.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/networkif/wrapCpssPxNetIf.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/networkif/wrapCpssPxNetIfTx.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPfc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortAp.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortBufMg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortCn.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortEcn.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortFWS.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortManager.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortMapping.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortStat.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortTxDebug.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortTxScheduler.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortTxShaper.c:
typedef struct {
    GT_BOOL tokenBucketEn;
    GT_BOOL slowRateEn;
    GT_U32 tbUpdateRatio;
    GT_U32 tokens;
    GT_U32 maxBucketSize;
    GT_U32 currentBucketSize;
    GT_BOOL tokenBucketAvbEnabled;
} PORT_TX_SHAPER_TOKEN_BUCKET_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/port/wrapCpssPxPortTxTailDrop.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/px/ptp/wrapCpssPxPtp.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/systemLab/wrHwsCommon.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/systemLab/wrHwsMac.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/systemLab/wrHwsPcs.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/systemLab/wrHwsPort.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/systemLab/wrHwsSerdes.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapCpss/systemLab/wrSerdesExt.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapSimulation/wrapCpssAsicSim.c:
typedef struct {
    GT_U32 memRangeBaseAddr;
    GT_U32 memRangeRegsNum;
    GT_U32 memRangeStep;
} REG_MEMORY_INFO;
typedef struct {
    GT_U32 ctrlRegAddr;
    GT_U32 targetTbl;
    GT_U32 tblDataRegAddr;
    GT_U32 tblEntrySize;
    GT_U32 tblSize;
    GT_U32 commonFields;
    GT_U8 tblName[80];
} TABLE_CTRL_REG_INFO;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/cmdCpssLinkedList.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef GT_COMP_RES (*)(void *, void *) prototypeCmpFunc;
typedef void (*)(void *) prototypeDataFreeFunc;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/cmdCpssNetReceive.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/cmdCpssPresteraUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/cmdCpssSysConfig.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/cmdGenNetReceive.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/px/cmdPxNetReceive.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/wrAppDemoZarlink.c:
typedef enum {CMD_APP_DEMO_ZARLINK_FREQ_10M_E, CMD_APP_DEMO_ZARLINK_FREQ_25M_E, CMD_APP_DEMO_ZARLINK_FREQ_31_25M_E, CMD_APP_DEMO_ZARLINK_FREQ_39_0625M_E, CMD_APP_DEMO_ZARLINK_FREQ_50M_E, CMD_APP_DEMO_ZARLINK_FREQ_62_5M_E, CMD_APP_DEMO_ZARLINK_FREQ_64_453125M_E, CMD_APP_DEMO_ZARLINK_FREQ_78_125M_E, CMD_APP_DEMO_ZARLINK_FREQ_100M_E, CMD_APP_DEMO_ZARLINK_FREQ_125M_E} CMD_APP_DEMO_ZARLINK_FREQ_E;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/wrapAppDemoDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainGaltisWrapper/src/galtisAgent/wrapUtil/wrapCpssSysconfig.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/h/generic/private/prvWraplGeneral.h:
typedef struct {
    GT_HW_DEV_NUM hwDevNum;
    GT_PORT_NUM portNum;
} WRAP_DEV_PORT_STC;

File mainLuaWrapper/h/mainLuaWrapper/wraplNetIf.h:
typedef struct {
    int len;
    GT_U8 data[1500];
} PACKET_STC;
typedef struct {
    GT_U8 devNum;
    GT_PHYSICAL_PORT_NUM portNum;
    GT_U32 originByteCount;
    GT_U32 timestamp;
    PACKET_STC packet;
} PX_RX_DATA_STC;
typedef struct {
    GT_MSGQ_ID replyQ;
    CPSS_INTERFACE_INFO_STC srcInterface;
    PACKET_STC packet;
} TX_PARAMS_STC;

File mainLuaWrapper/src/cpssCommon/transmit_task.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/cpssCommon/wraplCpssCommon.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/cpssCommon/wraplCpssDeviceInfo.c:
typedef enum {PORT_ITERATOR_TYPE_MAC_E, PORT_ITERATOR_TYPE_RXDMA_E, PORT_ITERATOR_TYPE_TXQ_E, PORT_ITERATOR_TYPE_CNC_PORT_E} PORT_ITERATOR_TYPE_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/cpssCommon/wraplCpssExtras.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/cpssCommon/wraplCpssTrunk.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/cpssCommon/wraplGtOs.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/../../../cpssEnabler/mainCmd/src/cmdShell/FS/zlib/zconf.h:
typedef unsigned char z_Byte;
typedef unsigned char z_Bytef;
typedef unsigned int z_uInt;
typedef unsigned long z_uLong;
typedef void * z_voidpf;

File mainLuaWrapper/src/generic/../../../cpssEnabler/mainCmd/src/cmdShell/FS/zlib/zlib.h:
typedef z_voidpf (*)(z_voidpf, z_uInt, z_uInt) z_alloc_func;
typedef void (*)(z_voidpf, z_voidpf) z_free_func;
struct z_internal_state;
typedef struct z_stream_s z_stream;
struct z_stream_s;

File mainLuaWrapper/src/generic/all_common_noppdrv_lua_c_type_manual_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/all_common_noppdrv_lua_c_type_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/cider/luaCiderPpAccess.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/cider/mxml/luaCider_mxml.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/cider/mxml/luaGenericCpssAPI_mxml.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/cider/mxml/luaMxmlParserWrapper.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;
struct xml_opened_data_t;

File mainLuaWrapper/src/generic/cmdLuaBitwizeFunctions.c:
typedef char;
typedef double;
typedef int;
typedef long;
typedef unsigned long;
typedef sizetype;
typedef unsigned int;

File mainLuaWrapper/src/generic/private/prvWraplGeneral.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplCpssGenEvents.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplGaltisWrapper.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplGtU64.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplIncrement.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplOsMsgQ.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplOsSem.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplReadJSON.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplTFTPC.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplTaskCreate.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplTrace.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplWriteBin.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplXmodem.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/generic/wraplZlib.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/all_px_lua_c_type_manual_wrappers.c:
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT table;
    GT_BOOL errorCountEnable;
    CPSS_EVENT_MASK_SET_ENT eventMask;
    CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_ENT errorType;
    GT_BOOL injectEnable;
    CPSS_DIAG_DATA_INTEGRITY_ERROR_INJECT_MODE_ENT injectMode;
    CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_ENT protectionType;
} CPSS_PX_DIAG_DATA_INTEGRITY_CONFIG_STATUS_STC;
typedef struct {
    CPSS_PX_DIAG_DATA_INTEGRITY_EVENT_STC eventInfo;
    GT_U32 errorCounter;
    GT_U32 failedRow;
    GT_U32 failedSegment;
    GT_U32 failedSyndrome;
} CPSS_PX_DIAG_DATA_INTEGRITY_EVENT_FULL_INFO_STC;
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT table;
    GT_U32 tableSize;
} CPSS_PX_DIAG_DATA_INTEGRITY_SHADOW_SIZE_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/all_px_lua_c_type_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxDataIntegrity.c:
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT table;
    GT_BOOL errorCountEnable;
    CPSS_EVENT_MASK_SET_ENT eventMask;
    CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_ENT errorType;
    GT_BOOL injectEnable;
    CPSS_DIAG_DATA_INTEGRITY_ERROR_INJECT_MODE_ENT injectMode;
    CPSS_DIAG_DATA_INTEGRITY_MEM_ERROR_PROTECTION_TYPE_ENT protectionType;
} CPSS_PX_DIAG_DATA_INTEGRITY_CONFIG_STATUS_STC;
typedef struct {
    CPSS_PX_DIAG_DATA_INTEGRITY_EVENT_STC eventInfo;
    GT_U32 errorCounter;
    GT_U32 failedRow;
    GT_U32 failedSegment;
    GT_U32 failedSyndrome;
} CPSS_PX_DIAG_DATA_INTEGRITY_EVENT_FULL_INFO_STC;
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT table;
    GT_U32 tableSize;
} CPSS_PX_DIAG_DATA_INTEGRITY_SHADOW_SIZE_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxDeviceInfo.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxEgress.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxIngressHash.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxPortControl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxPortMapping.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/px/wraplCpssPxRx.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/simulation/wraplSimUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/tgf/wraplTgfPxUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/tgf/wraplTgfTypeWrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/tgf/wraplTgfTypes.c:
struct __structEncl_TGF_IPV4_ADDR;
struct __structEncl_TGF_IPV6_ADDR;
struct __structEncl_TGF_MAC_ADDR;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainLuaWrapper/src/tgf/wraplTgfUtils.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/h/cpss/px/cnc/cpssPxCnc.h:
typedef enum {CPSS_PX_CNC_BYTE_COUNT_MODE_L2_E, CPSS_PX_CNC_BYTE_COUNT_MODE_L3_E} CPSS_PX_CNC_BYTE_COUNT_MODE_ENT;
typedef enum {CPSS_PX_CNC_CLIENT_INGRESS_PROCESSING_E, CPSS_PX_CNC_CLIENT_EGRESS_PROCESSING_E, CPSS_PX_CNC_CLIENT_EGRESS_QUEUE_PASS_DROP_QCN_E} CPSS_PX_CNC_CLIENT_ENT;
typedef enum {CPSS_PX_CNC_COUNTER_FORMAT_MODE_0_E, CPSS_PX_CNC_COUNTER_FORMAT_MODE_1_E, CPSS_PX_CNC_COUNTER_FORMAT_MODE_2_E, CPSS_PX_CNC_COUNTER_FORMAT_MODE_3_E, CPSS_PX_CNC_COUNTER_FORMAT_MODE_4_E} CPSS_PX_CNC_COUNTER_FORMAT_ENT;
typedef struct {
    GT_U64 byteCount;
    GT_U64 packetCount;
} CPSS_PX_CNC_COUNTER_STC;
typedef enum {CPSS_PX_CNC_EGRESS_QUEUE_CLIENT_MODE_TAIL_DROP_E, CPSS_PX_CNC_EGRESS_QUEUE_CLIENT_MODE_CN_E, CPSS_PX_CNC_EGRESS_QUEUE_CLIENT_MODE_TAIL_DROP_REDUCED_E} CPSS_PX_CNC_EGRESS_QUEUE_CLIENT_MODE_ENT;

File mainPxDrv/h/cpss/px/config/cpssPxCfgInit.h:
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, CPSS_PX_TABLE_ENT, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT, GT_STATUS) CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_FIELD_READ_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, CPSS_PX_TABLE_ENT, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT, GT_STATUS) CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_FIELD_WRITE_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, CPSS_PX_TABLE_ENT, GT_U32, GT_U32 *, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT, GT_STATUS) CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_READ_FUNC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, GT_U32, CPSS_PX_TABLE_ENT, GT_U32, GT_U32 *, GT_U32 *, GT_U32, CPSS_DRV_HW_ACCESS_STAGE_ENT, GT_STATUS) CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_WRITE_FUNC;
typedef enum {CPSS_PX_CFG_CNTR_RECEIVED_PFC_E, CPSS_PX_CFG_CNTR_RECEIVED_MC_E, CPSS_PX_CFG_CNTR_RECEIVED_UC_E, CPSS_PX_CFG_CNTR_RECEIVED_QCN_E, CPSS_PX_CFG_CNTR_RECEIVED_MC_QCN_E, CPSS_PX_CFG_CNTR_INGRESS_DROP_E, CPSS_PX_CFG_CNTR_OUT_MC_PACKETS_E, CPSS_PX_CFG_CNTR_OUT_QCN_TO_PFC_MSG_E, CPSS_PX_CFG_CNTR_OUT_QCN_PACKETS_E, CPSS_PX_CFG_CNTR_OUT_PFC_PACKETS_E, CPSS_PX_CFG_CNTR_OUT_UC_PACKETS_E, CPSS_PX_CFG_CNTR_OUT_MC_QCN_PACKETS_E, CPSS_PX_CFG_CNTR_LAST_E} CPSS_PX_CFG_CNTR_ENT;
typedef struct {
    CPSS_GEN_CFG_DEV_INFO_STC genDevInfo;
} CPSS_PX_CFG_DEV_INFO_STC;
typedef struct {
    CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_READ_FUNC hwAccessTableEntryReadFunc;
    CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_WRITE_FUNC hwAccessTableEntryWriteFunc;
    CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_FIELD_READ_FUNC hwAccessTableEntryFieldReadFunc;
    CPSS_PX_CFG_ACCESS_PORT_GROUP_TABLE_ENTRY_FIELD_WRITE_FUNC hwAccessTableEntryFieldWriteFunc;
} CPSS_PX_CFG_HW_ACCESS_OBJ_STC;

File mainPxDrv/h/cpss/px/config/private/prvCpssPxErrataMng.h:
typedef struct {
    GT_U32 FErArray[1];
} PRV_CPSS_PX_ERRATA_STC;

File mainPxDrv/h/cpss/px/config/private/prvCpssPxInfo.h:
typedef struct {
    GT_UINTPTR block;
    GT_U32 blockSize;
    GT_U32 curIdx;
    GT_U32 unreadCount;
} PRV_CPSS_PX_CNC_INFO_STC;
typedef struct {
    GT_U32 *hwTableMemPtr;
    CPSS_PX_SHADOW_TYPE_ENT shadowType;
    GT_U32 hwTableMemSize;
} PRV_CPSS_PX_HW_TABLES_SHADOW_STC;
typedef struct {
    CPSS_RX_BUFF_ALLOC_METHOD_ENT allocMethod;
    GT_BOOL buffersInCachedMem;
} PRV_CPSS_PX_NET_INFO_STC;
typedef struct {
    PRV_CPSS_PX_PORT_PA_PORT_DB_STC paPortDB;
    GT_U32 paUnitPipeBWInGBitArr[5];
    GT_U32 paMinSliceResolutionMbps;
    struct PRV_CPSS_PX_PA_WORKSPACE_STCT *paWsPtr;
    struct PRV_CPSS_PX_PA_UNIT_STCT *paUnitDrvList;
} PRV_CPSS_PX_PIZZA_ARBITER_STC;
typedef struct {
    PRV_CPSS_PX_PORT_XLG_MIB_SHADOW_STC *portsMibShadowArr[16];
    CPSS_PX_DETAILED_PORT_MAP_STC portsMapInfoShadowArr[17];
    GT_PHYSICAL_PORT_NUM portsMac2PhyscalConvArr[16];
    CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_ENT egressSourcePortEntryTypeArr[17];
    CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE_ENT egressTargetPortEntryTypeArr[17];
    CPSS_PORTS_BMP_STC portForceLinkDownBmp;
    CPSS_PX_PP_SERDES_REF_CLOCK_ENT serdesRefClock;
    CPSS_PX_DIAG_TRANSMIT_MODE_ENT prbsMode[1024];
    GT_BOOL prbsSerdesCountersClearOnReadEnable[272][8];
    PRV_CPSS_PX_RESOURCES_STATUS_STC resourcesStatus;
    PRV_CPSS_PORT_MNG_DB_STC portManagerDb;
} PRV_CPSS_PX_PORT_INFO_STC;
typedef struct {
    GT_U32 numInitPorts;
    PRV_CPSS_PX_PORT_PA_SINGLE_PORT_DB_STC prv_portDB[17];
} PRV_CPSS_PX_PORT_PA_PORT_DB_STC;
typedef struct {
    GT_PHYSICAL_PORT_NUM physicalPortNum;
    GT_BOOL isInitilized;
    GT_U32 portSpeedInMBit;
} PRV_CPSS_PX_PORT_PA_SINGLE_PORT_DB_STC;
typedef struct {
    GT_BOOL txPolarity;
    GT_BOOL rxPolarity;
} PRV_CPSS_PX_PORT_SERDES_POLARITY_CONFIG_STC;
typedef struct {
    GT_U32 mibShadow[60];
    GT_U32 captureMibShadow[60];
    GT_BOOL clearOnReadEnable;
} PRV_CPSS_PX_PORT_XLG_MIB_SHADOW_STC;
typedef struct {
    PRV_CPSS_GEN_PP_CONFIG_STC genInfo;
    PRV_CPSS_PX_PP_REGS_ADDR_VER1_STC regsAddrVer1;
    PRV_CPSS_PX_ERRATA_STC errata;
    PRV_CPSS_PX_PP_CONFIG_FINE_TUNING_STC fineTuning;
    PRV_CPSS_PX_TABLES_INFO_STC *accessTableInfoPtr;
    GT_U32 accessTableInfoSize;
    PRV_CPSS_PX_NET_INFO_STC netIf;
    PRV_CPSS_PX_PORT_INFO_STC port;
    PRV_CPSS_PX_PP_HW_INFO_STC hwInfo;
    CPSS_PORT_SERDES_TUNE_STC_PTR *serdesCfgDbArrPtr;
    PRV_CPSS_PX_PORT_SERDES_POLARITY_CONFIG_STC *serdesPolarityPtr;
    PRV_CPSS_PX_PP_TABLE_FORMAT_INFO_STC tableFormatInfo[1];
    PRV_CPSS_PX_HW_TABLES_SHADOW_STC shadowInfoArr[26];
    PRV_CPSS_PX_PIZZA_ARBITER_STC paData;
    PRV_CPSS_PX_CNC_INFO_STC cncDmaDesc;
} PRV_CPSS_PX_PP_CONFIG_STC;
typedef struct {
    GT_U32 usedDescCredits[2];
    GT_U32 maxDescCredits[2];
    GT_U32 usedPayloadCredits[2];
    GT_U32 maxPayloadCredits[2];
    GT_U32 usedHeaderCredits[2];
    GT_U32 maxHeaderCredits[2];
    GT_U32 coreOverallSpeedSummary[2];
} PRV_CPSS_PX_RESOURCES_STATUS_STC;

File mainPxDrv/h/cpss/px/config/private/prvCpssPxInfoEnhanced.h:
typedef enum {PRV_CPSS_PX_PORT_TYPE_INVALID_E = -1, PRV_CPSS_PX_PORT_TYPE_PHYS_E, PRV_CPSS_PX_PORT_TYPE_RxDMA_E, PRV_CPSS_PX_PORT_TYPE_TxDMA_E, PRV_CPSS_PX_PORT_TYPE_MAC_E, PRV_CPSS_PX_PORT_TYPE_TXQ_E, PRV_CPSS_PX_PORT_TYPE_MAX_E} PRV_CPSS_PX_PORT_TYPE_ENT;
typedef struct {
    struct {...} tableSize;
} PRV_CPSS_PX_PP_CONFIG_FINE_TUNING_STC;
typedef struct {
    struct {...} cnc;
    struct {...} smi_support;
    struct {...} multiDataPath;
} PRV_CPSS_PX_PP_HW_INFO_STC;

File mainPxDrv/h/cpss/px/cos/cpssPxCos.h:
typedef struct {
    GT_U32 trafficClass;
    CPSS_DP_LEVEL_ENT dropPrecedence;
    GT_U32 userPriority;
    GT_U32 dropEligibilityIndication;
} CPSS_PX_COS_ATTRIBUTES_STC;
typedef struct {
    CPSS_PX_COS_MODE_ENT cosMode;
    GT_U32 cosByteOffset;
    GT_U32 cosBitOffset;
    GT_U32 cosNumOfBits;
    CPSS_PX_COS_ATTRIBUTES_STC cosAttributes;
} CPSS_PX_COS_FORMAT_ENTRY_STC;
typedef enum {CPSS_PX_COS_MODE_PORT_E, CPSS_PX_COS_MODE_PACKET_DSA_E, CPSS_PX_COS_MODE_PACKET_L2_E, CPSS_PX_COS_MODE_PACKET_L3_E, CPSS_PX_COS_MODE_PACKET_MPLS_E, CPSS_PX_COS_MODE_FORMAT_ENTRY_E, CPSS_PX_COS_MODE_LAST_E} CPSS_PX_COS_MODE_ENT;

File mainPxDrv/h/cpss/px/cpssHwInit/cpssPxHwInit.h:
typedef struct {
    CPSS_HW_INFO_STC hwInfo;
    CPSS_PP_INTERFACE_CHANNEL_ENT mngInterfaceType;
    GT_U32 isrAddrCompletionRegionsBmp;
    GT_U32 appAddrCompletionRegionsBmp;
    GT_U32 numOfDataIntegrityElements;
    CPSS_PX_LOGICAL_TABLES_SHADOW_STC *dataIntegrityShadowPtr;
    GT_BOOL allowHwAccessOnly;
    CPSS_PX_PHA_FIRMWARE_TYPE_ENT phaFirmwareType;
    CPSS_PX_POWER_SUPPLIES_NUMBER_ENT powerSuppliesNumbers;
} CPSS_PX_INIT_INFO_STC;
typedef enum {CPSS_PX_PHA_FIRMWARE_TYPE_DEFAULT_E, CPSS_PX_PHA_FIRMWARE_TYPE_NOT_USED_E} CPSS_PX_PHA_FIRMWARE_TYPE_ENT;
typedef enum {CPSS_PX_POWER_SUPPLIES_DUAL_E, CPSS_PX_POWER_SUPPLIES_SINGLE_E} CPSS_PX_POWER_SUPPLIES_NUMBER_ENT;

File mainPxDrv/h/cpss/px/cpssHwInit/cpssPxHwInitLedCtrl.h:
typedef struct {
    GT_BOOL blinkEnable;
    CPSS_LED_BLINK_SELECT_ENT blinkSelect;
    GT_BOOL forceEnable;
    GT_U32 forceData;
    GT_BOOL pulseStretchEnable;
    GT_BOOL disableOnLinkDown;
} CPSS_PX_LED_CLASS_MANIPULATION_STC;
typedef struct {
    CPSS_LED_ORDER_MODE_ENT ledOrganize;
    CPSS_LED_BLINK_DUTY_CYCLE_ENT blink0DutyCycle;
    CPSS_LED_BLINK_DURATION_ENT blink0Duration;
    CPSS_LED_BLINK_DUTY_CYCLE_ENT blink1DutyCycle;
    CPSS_LED_BLINK_DURATION_ENT blink1Duration;
    CPSS_LED_PULSE_STRETCH_ENT pulseStretch;
    GT_U32 ledStart;
    GT_U32 ledEnd;
    GT_BOOL invertEnable;
    CPSS_LED_CLOCK_OUT_FREQUENCY_ENT ledClockFrequency;
} CPSS_PX_LED_CONF_STC;

File mainPxDrv/h/cpss/px/cpssHwInit/cpssPxTables.h:
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT logicalTableName;
    CPSS_PX_SHADOW_TYPE_ENT shadowType;
} CPSS_PX_LOGICAL_TABLES_SHADOW_STC;
typedef enum {CPSS_PX_LOGICAL_TABLE_INGRESS_DST_PORT_MAP_TABLE_E, CPSS_PX_LOGICAL_TABLE_INGRESS_PORT_FILTERING_TABLE_E, CPSS_PX_LOGICAL_TABLE_EGRESS_HEADER_ALTERATION_TABLE_E, CPSS_PX_LOGICAL_TABLE_TAIL_DROP_LIMITS_E, CPSS_PX_LOGICAL_TABLE_BUFFERS_MANAGER_MULTICAST_COUNTERS_E, CPSS_PX_LOGICAL_TABLE_CNC_0_COUNTERS_E, CPSS_PX_LOGICAL_TABLE_CNC_1_COUNTERS_E, CPSS_PX_LOGICAL_TABLE_TXQ_QCN_CN_SAMPLE_INTERVALS_E, CPSS_PX_LOGICAL_TABLE_PHA_SHARED_DMEM_E, CPSS_PX_LOGICAL_TABLE_PHA_FW_IMAGE_E, 
    CPSS_PX_LOGICAL_INTERNAL_TABLE_MANAGEMENT_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_PACKET_DATA_ECC_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_PACKET_DATA_PARITY_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_CM3_RAM_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_PHA_RAM_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_PACKET_DATA_CONTROL_ECC_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_PACKET_DATA_CONTROL_PARITY_E, CPSS_PX_LOGICAL_INTERNAL_TABLE_DESCRIPTORS_CONTROL_E, CPSS_PX_LOGICAL_TABLE_LAST_E} CPSS_PX_LOGICAL_TABLE_ENT;
typedef enum {CPSS_PX_SHADOW_TYPE_NONE_E, CPSS_PX_SHADOW_TYPE_CPSS_E} CPSS_PX_SHADOW_TYPE_ENT;
typedef enum {CPSS_PX_TABLE_BMA_PORT_MAPPING_E, CPSS_PX_TABLE_BMA_MULTICAST_COUNTERS_E, CPSS_PX_TABLE_TXQ_DQ_SHAPER_PER_PORT_PER_PRIO_TOKEN_BUCKET_CONFIG_E, CPSS_PX_TABLE_TXQ_DQ_SHAPER_PER_PORT_TOKEN_BUCKET_CONFIG_E, CPSS_PX_TABLE_TXQ_DQ_PFC_RESPONSE_PORT_MAPPING_E, CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_MAX_QUEUE_LIMITS_E, CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_LIMITS_DP0_E, CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_LIMITS_DP1_E, CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_LIMITS_DP2_E, 
    CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_BUF_LIMITS_E, CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_DESC_LIMITS_E, CPSS_PX_TABLE_TXQ_QUEUE_TAIL_DROP_COUNTERS_Q_MAIN_BUFF_E, CPSS_PX_TABLE_TXQ_QCN_CN_SAMPLE_INTERVALS_E, CPSS_PX_TABLE_PFC_LLFC_COUNTERS_E, CPSS_PX_TABLE_CNC_0_COUNTERS_E, CPSS_PX_TABLE_CNC_1_COUNTERS_E, CPSS_PX_TABLE_PCP_DST_PORT_MAP_TABLE_E, CPSS_PX_TABLE_PCP_PORT_FILTERING_TABLE_E, CPSS_PX_TABLE_PHA_HA_TABLE_E, CPSS_PX_TABLE_PHA_SRC_PORT_DATA_E, CPSS_PX_TABLE_PHA_TARGET_PORT_DATA_E, 
    CPSS_PX_TABLE_PHA_SHARED_DMEM_E, CPSS_PX_MULTI_INSTANCE_TXQ_DQ_SHAPER_PER_PORT_PER_PRIO_TOKEN_BUCKET_CONFIG____DQ_1___E, CPSS_PX_MULTI_INSTANCE_TXQ_DQ_SHAPER_PER_PORT_TOKEN_BUCKET_CONFIG____DQ_1___E, CPSS_PX_MULTI_INSTANCE_TXQ_DQ_PFC_RESPONSE_PORT_MAPPING_E____DQ_1___E, CPSS_PX_TABLE_PHA_FW_IMAGE_E, CPSS_PX_TABLE_LAST_E, CPSS_PX_INTERNAL_TABLE_MANAGEMENT_E = 26, CPSS_PX_INTERNAL_TABLE_PACKET_DATA_ECC_E, CPSS_PX_INTERNAL_TABLE_PACKET_DATA_PARITY_E, CPSS_PX_INTERNAL_TABLE_PACKET_DATA_CONTROL_ECC_E, 
    CPSS_PX_INTERNAL_TABLE_PACKET_DATA_CONTROL_PARITY_E, CPSS_PX_INTERNAL_TABLE_DESCRIPTORS_CONTROL_E, CPSS_PX_INTERNAL_TABLE_CM3_RAM_E, CPSS_PX_INTERNAL_TABLE_PHA_RAM_E, CPSS_PX_HW_TABLE_LAST_E} CPSS_PX_TABLE_ENT;

File mainPxDrv/h/cpss/px/cpssHwInit/private/prvCpssPxHwTables.h:
typedef struct {
    GT_U32 numFields;
    PRV_CPSS_ENTRY_FORMAT_TABLE_STC *fieldsInfoPtr;
    GT_U32 patternNum;
    GT_U32 patternBits;
} PRV_CPSS_PX_PP_TABLE_FORMAT_INFO_STC;
typedef struct {
    GT_U32 baseAddress;
    GT_U32 numOfBits;
    GT_U32 maxNumOfEntries;
    GT_U32 alignmentWidthInBytes;
    GT_U32 entryWidthInWords;
} PRV_CPSS_PX_TABLES_INFO_DIRECT_STC;
typedef struct {
    CPSS_PX_TABLE_ENT globalIndex;
    PRV_CPSS_PX_TABLE_NAME tableName;
    PRV_CPSS_DXCH_UNIT_ENT unitIndex;
    PRV_CPSS_PX_TABLES_INFO_DIRECT_STC directAccessInfo;
} PRV_CPSS_PX_TABLES_INFO_STC;
typedef GT_CHAR * PRV_CPSS_PX_TABLE_NAME;

File mainPxDrv/h/cpss/px/cpssHwInit/private/prvCpssPxRegsVer1.h:
struct PRV_CPSS_PX_MAC_PACKET_GEN_VER1_CONFIG_STC;
typedef struct {
    GT_U32 LLFCDatabase[8];
    GT_U32 portSpeedTimer[8];
    GT_U32 lastSentTimer[8];
    GT_U32 FCACtrl;
    GT_U32 DBReg0;
    GT_U32 DBReg1;
    GT_U32 LLFCFlowCtrlWindow0;
    GT_U32 LLFCFlowCtrlWindow1;
    GT_U32 MACDA0To15;
    GT_U32 MACDA16To31;
    GT_U32 MACDA32To47;
    GT_U32 MACSA0To15;
    GT_U32 MACSA16To31;
    GT_U32 MACSA32To47;
    GT_U32 L2CtrlReg0;
    GT_U32 L2CtrlReg1;
    GT_U32 DSATag0To15;
    GT_U32 DSATag16To31;
    GT_U32 DSATag32To47;
    GT_U32 DSATag48To63;
    GT_U32 PFCPriorityMask;
    GT_U32 sentPktsCntrLSb;
    GT_U32 sentPktsCntrMSb;
    GT_U32 periodicCntrLSB;
    GT_U32 periodicCntrMSB;
} PRV_CPSS_PX_PORT_FCA_REGS_ADDR_STC;
typedef struct {
    GT_U32 macCtrl;
    GT_U32 macCtrl1;
    GT_U32 macCtrl2;
    GT_U32 macCtrl3;
    GT_U32 macCtrl4;
    GT_U32 macCtrl5;
    GT_U32 miscConfig;
    GT_U32 fcDsaTag2;
    GT_U32 fcDsaTag3;
    GT_U32 macIntMask;
} PRV_CPSS_PX_PORT_MAC_REGS_ADDR_STC;
typedef struct PRV_CPSS_PX_PP_DP_PIZZA_ARBITER_STCT PRV_CPSS_PX_PP_DP_PIZZA_ARBITER_STC;
struct PRV_CPSS_PX_PP_DP_PIZZA_ARBITER_STCT;
typedef struct PRV_CPSS_PX_PP_MPPM_PIZZA_ARBITER_STCT PRV_CPSS_PX_PP_MPPM_PIZZA_ARBITER_STC;
struct PRV_CPSS_PX_PP_MPPM_PIZZA_ARBITER_STCT;
typedef struct {
    struct {...} PCP;
    struct {...} MCFC;
    struct {...} PHA;
    struct {...} rxDMA;
    struct {...} txDMA;
    struct {...} txFIFO;
    struct {...} BM;
    struct {...} BMA;
    struct {...} GOP;
    PRV_CPSS_PX_SERDES_REGS_ADDR_STC serdesConfig[16];
    struct {...} CNC;
    struct {...} TXQ;
    struct {...} MG;
    struct PRV_CPSS_PX_MAC_PACKET_GEN_VER1_CONFIG_STC packGenConfig[4];
    struct {...} MPPM;
    struct px_addrSpace addrSpace;
} PRV_CPSS_PX_PP_REGS_ADDR_VER1_STC;
typedef struct {
    GT_U32 macStatus;
    GT_U32 macCounters;
    GT_U32 macCaptureCounters;
    GT_U32 autoNegCtrl;
    GT_U32 serdesCnfg;
    GT_U32 serdesCnfg2;
    GT_U32 serdesCnfg3;
    GT_U32 xgGlobalConfReg0;
    GT_U32 xgGlobalConfReg1;
    GT_U32 xgXpcsGlobalStatus;
    GT_U32 xpcsGlobalMaxIdleCounter;
    GT_U32 metalFix;
    GT_U32 miscConfig;
    GT_U32 xgMibCountersCtrl;
    GT_U32 mibCountersCtrl;
    GT_U32 serialParameters;
    GT_U32 serialParameters1;
    GT_U32 prbsCheckStatus;
    GT_U32 prbsErrorCounter;
    PRV_CPSS_PX_PORT_MAC_REGS_ADDR_STC macRegsPerType[12];
    GT_U32 xlgMibCountersCtrl;
    GT_U32 mpcs40GCommonStatus;
    GT_U32 xlgPortFIFOsThresholdsConfig;
    GT_U32 gePortFIFOConfigReg0;
    GT_U32 gePortFIFOConfigReg1;
    GT_U32 eeeLpiControl[3];
    GT_U32 eeeLpiStatus;
    GT_U32 eeeLpiCounter;
    GT_U32 xlgDicPpmIpgReduce;
    GT_U32 laneConfig0[6];
    GT_U32 laneConfig1[6];
    GT_U32 disparityErrorCounter[6];
    GT_U32 prbsErrorCounterLane[6];
    GT_U32 laneStatus[6];
    GT_U32 cyclicData[6];
} PRV_CPSS_PX_PP_REGS_PER_PORT_REGS;
typedef struct {
    GT_U32 serdesExternalReg1;
    GT_U32 serdesExternalReg2;
    GT_U32 serdesExternalReg3;
} PRV_CPSS_PX_SERDES_REGS_ADDR_STC;
struct px_addrSpace;
struct px_global;

File mainPxDrv/h/cpss/px/cpssPxTypes.h:
typedef unsigned int CPSS_PX_PACKET_TYPE;

File mainPxDrv/h/cpss/px/diag/cpssPxDiag.h:
typedef struct {
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_ENT memType;
    CPSS_DIAG_DATA_INTEGRITY_MEMORY_LOCATION_STC location;
} CPSS_PX_DIAG_BIST_RESULT_STC;
typedef enum {CPSS_PX_DIAG_BIST_STATUS_NOT_READY_E, CPSS_PX_DIAG_BIST_STATUS_PASS_E, CPSS_PX_DIAG_BIST_STATUS_FAIL_E} CPSS_PX_DIAG_BIST_STATUS_ENT;
typedef enum {CPSS_PX_DIAG_TEMPERATURE_SENSOR_0_E, CPSS_PX_DIAG_TEMPERATURE_SENSOR_AVERAGE_E, CPSS_PX_DIAG_TEMPERATURE_SENSOR_MAX_E} CPSS_PX_DIAG_TEMPERATURE_SENSOR_ENT;
typedef enum {CPSS_PX_DIAG_TRANSMIT_MODE_REGULAR_E, CPSS_PX_DIAG_TRANSMIT_MODE_PRBS_E, CPSS_PX_DIAG_TRANSMIT_MODE_ZEROS_E, CPSS_PX_DIAG_TRANSMIT_MODE_ONES_E, CPSS_PX_DIAG_TRANSMIT_MODE_CYCLIC_E, CPSS_PX_DIAG_TRANSMIT_MODE_PRBS7_E, CPSS_PX_DIAG_TRANSMIT_MODE_PRBS9_E, CPSS_PX_DIAG_TRANSMIT_MODE_PRBS15_E, CPSS_PX_DIAG_TRANSMIT_MODE_PRBS23_E, CPSS_PX_DIAG_TRANSMIT_MODE_PRBS31_E, CPSS_PX_DIAG_TRANSMIT_MODE_1T_E, CPSS_PX_DIAG_TRANSMIT_MODE_2T_E, CPSS_PX_DIAG_TRANSMIT_MODE_5T_E, CPSS_PX_DIAG_TRANSMIT_MODE_10T_E, 
    CPSS_PX_DIAG_TRANSMIT_MODE_DFETraining, CPSS_PX_DIAG_TRANSMIT_MODE_MAX_E} CPSS_PX_DIAG_TRANSMIT_MODE_ENT;

File mainPxDrv/h/cpss/px/diag/cpssPxDiagDataIntegrity.h:
typedef union {
    CPSS_DIAG_DATA_INTEGRITY_MEMORY_LOCATION_STC memLocation;
    CPSS_DIAG_DATA_INTEGRITY_MPPM_MEMORY_LOCATION_STC mppmMemLocation;
} CPSS_DIAG_DATA_INTEGRITY_PX_MEMORY_LOCATION_UNT;
typedef struct {
    CPSS_DIAG_DATA_INTEGRITY_ERROR_CAUSE_TYPE_ENT eventsType;
    CPSS_PX_LOCATION_FULL_INFO_STC location;
    CPSS_DIAG_DATA_INTEGRITY_MEMORY_USAGE_TYPE_ENT memoryUseType;
    CPSS_DIAG_DATA_INTEGRITY_CORRECTION_METHOD_ENT correctionMethod;
} CPSS_PX_DIAG_DATA_INTEGRITY_EVENT_STC;
typedef enum {CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MG_MGCAM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_PEX2_RXDATA_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_PEX2_RXHDR_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MG_SDMA_TX_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_PEX2_TXDATA_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MG_CONFI_PROCESSOR_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MUNIT_MUNIT_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_PPA_IMEM_BANK_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_PPA_PPN_SCRATCHPAD_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_PPA_SHARED_DMEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_PHA_HA_TABLE_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_BC_CT_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_CLEAR_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BMA_FINAL_UDB_CLEAR_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BM_FREE_BUFFERS_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_HA_DESC_IDDB_FREE_ID_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_HA_DESC_IDDB_MEM_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_HEADER_REORDER_MEM_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_INTERNAL_DESC_IDDB_FREE_ID_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_INTERNAL_DESC_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BMA_MC_CLEAR_SHIFTER_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BMA_MC_COUNTERS_FLOOR_BANK_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_NEXT_CT_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BM_NEXT_TABLE_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BM_NUMBER_OF_BUFFERS_TABLE_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_PAYLOAD_REORDER_MEM_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXDMA_PREF_MEM_ID_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_BM_VALID_TABLE_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_QCN_BUFFER_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_BMX_DATA_BASE_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_Q_DQ_Q_BUF_LIMIT_DP0_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_Q_DQ_Q_DESC_LIMIT_DP0_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_Q_EQ_Q_LIMIT_DP0_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_Q_EQ_Q_LIMIT_DP12_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_BMX_FREE_ENTRY_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_CPFC_IND_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_LL_LINK_LIST_PTR_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_QCN_SAMPLE_INTERVALS_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXQ_Q_SHARED_Q_LIMIT_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MPPM_BANK_RAM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MPPM_RX_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_MPPM_TXDMA_RD_BURST_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_CT_BC_IDDB_FREE_ID_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_CT_BC_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_DESCRIPTOR_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_HEADER_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_HEADER_LL_FREE_BUFS_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_HEADER_LL_LINK_LIST_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_RXDMA_IBUF_HDR_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_PAYLOAD_IDDB_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_PAYLOAD_LL_FREE_BUFS_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TXFIFO_PAYLOAD_LL_LINK_LIST_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_CG_CG_RX_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_CG_CG_TX_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_CG_DESKEW_MEM_E, 
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_CG_RS_FEC_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_CG_RX_PREAMBLE_MEM_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_CNC_IP_COUNTERS_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_PCP_IP_DST_PORT_MAP_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_SIP_PCP_IP_SRC_PORT_MAP_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_DDU_FIFO_E, CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_TABLE_LAST_E} CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_ENT;
typedef struct {
    CPSS_PX_TABLE_ENT hwTableType;
    GT_U32 hwTableEntryIndex;
} CPSS_PX_HW_INDEX_INFO_STC;
typedef enum {CPSS_PX_LOCATION_HW_INDEX_INFO_TYPE, CPSS_PX_LOCATION_LOGICAL_INDEX_INFO_TYPE, CPSS_PX_LOCATION_RAM_INDEX_INFO_TYPE} CPSS_PX_LOCATION_ENT;
typedef struct {
    CPSS_PX_LOGICAL_TABLE_INFO_STC logicalEntryInfo;
    CPSS_PX_HW_INDEX_INFO_STC hwEntryInfo;
    CPSS_PX_RAM_INDEX_INFO_STC ramEntryInfo;
    GT_BOOL isMppmInfoValid;
    CPSS_DIAG_DATA_INTEGRITY_MPPM_MEMORY_LOCATION_STC mppmMemLocation;
} CPSS_PX_LOCATION_FULL_INFO_STC;
typedef struct {
    CPSS_PX_LOCATION_ENT type;
    CPSS_PX_LOCATION_UNT info;
} CPSS_PX_LOCATION_SPECIFIC_INFO_STC;
typedef union {
    CPSS_PX_LOGICAL_TABLE_INFO_STC logicalEntryInfo;
    CPSS_PX_HW_INDEX_INFO_STC hwEntryInfo;
    CPSS_PX_RAM_INDEX_INFO_STC ramEntryInfo;
} CPSS_PX_LOCATION_UNT;
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT logicalTableType;
    GT_U32 logicalTableEntryIndex;
} CPSS_PX_LOGICAL_TABLE_INFO_STC;
typedef struct {
    CPSS_PX_DIAG_DATA_INTEGRITY_MEM_TYPE_ENT memType;
    GT_U32 ramRow;
    CPSS_DIAG_DATA_INTEGRITY_MEMORY_LOCATION_STC memLocation;
} CPSS_PX_RAM_INDEX_INFO_STC;

File mainPxDrv/h/cpss/px/diag/cpssPxDiagDataIntegrityTables.h:
typedef struct {
    GT_U32 numOfDataIntegrityElements;
    CPSS_PX_LOGICAL_TABLE_SHADOW_INFO_STC *logicalTablesArr;
} CPSS_PX_LOGICAL_SHADOW_TABLES_INFO_STC;
typedef struct {
    CPSS_PX_LOGICAL_TABLE_ENT logicalTableName;
    CPSS_PX_SHADOW_TYPE_ENT shadowType;
    GT_U32 numOfBytes;
    GT_STATUS isSupported;
} CPSS_PX_LOGICAL_TABLE_SHADOW_INFO_STC;

File mainPxDrv/h/cpss/px/diag/cpssPxDiagPacketGenerator.h:
typedef struct {
    GT_ETHERADDR macDa;
    GT_BOOL macDaIncrementEnable;
    GT_U32 macDaIncrementLimit;
    GT_ETHERADDR macSa;
    GT_BOOL vlanTagEnable;
    GT_U8 vpt;
    GT_U8 cfi;
    GT_U16 vid;
    GT_U16 etherType;
    CPSS_DIAG_PG_PACKET_PAYLOAD_TYPE_ENT payloadType;
    GT_U8 cyclicPatternArr[64];
    CPSS_DIAG_PG_PACKET_LENGTH_TYPE_ENT packetLengthType;
    GT_U32 packetLength;
    GT_BOOL undersizeEnable;
    CPSS_DIAG_PG_TRANSMIT_MODE_ENT transmitMode;
    GT_U32 packetCount;
    CPSS_DIAG_PG_PACKET_COUNT_MULTIPLIER_ENT packetCountMultiplier;
    GT_U32 ifg;
    CPSS_DIAG_PG_IF_SIZE_ENT interfaceSize;
} CPSS_PX_DIAG_PG_CONFIGURATIONS_STC;

File mainPxDrv/h/cpss/px/egress/cpssPxEgress.h:
typedef struct {
    GT_BOOL srcTagged;
    GT_HW_DEV_NUM hwSrcDev;
    GT_U32 tpIdIndex;
    GT_BOOL tag1SrcTagged;
} CPSS_PX_EDSA_FORWARD_STC;
typedef union {
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_EXTENDED_PORT_TO_UPSTREAM_PORT_STC info_802_1br_E2U;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_EXTENDED_PORT_MC_STC info_802_1br_U2E_MC;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_EXTENDED_PORT_TAGGED_TO_UPSTREAM_PORT_STC info_dsa_ET2U;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_EXTENDED_PORT_UNTAGGED_TO_UPSTREAM_PORT_STC info_dsa_EU2U;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EDSA_EXTENDED_PORT_TO_UPSTREAM_PORT_STC info_edsa_E2U;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_QCN_STC info_dsa_QCN;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EVB_QCN_STC info_evb_QCN;
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_PRE_DA_PTP_DATA_STC info_pre_da_PTP;
    GT_U32 notNeeded;
} CPSS_PX_EGRESS_HEADER_ALTERATION_ENTRY_UNT;
typedef struct {
    CPSS_802_1BR_ETAG_STC eTag;
    GT_U32 vlanTagTpid;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_EXTENDED_PORT_TO_UPSTREAM_PORT_STC;
typedef struct {
    GT_U32 pcid[7];
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_EXTENDED_PORT_MC_STC;
typedef struct {
    CPSS_PX_REGULAR_DSA_FORWARD_STC dsaForward;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_EXTENDED_PORT_TAGGED_TO_UPSTREAM_PORT_STC;
typedef struct {
    CPSS_PX_REGULAR_DSA_FORWARD_STC dsaForward;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_EXTENDED_PORT_UNTAGGED_TO_UPSTREAM_PORT_STC;
typedef struct {
    GT_ETHERADDR macSa;
    CPSS_PX_EXTENDED_DSA_FORWARD_STC dsaExtForward;
    GT_U16 cnmTpid;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_QCN_STC;
typedef struct {
    CPSS_PX_EDSA_FORWARD_STC eDsaForward;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EDSA_EXTENDED_PORT_TO_UPSTREAM_PORT_STC;
typedef enum {CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_EXTENDED_PORT_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_EXTENDED_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_CASCADE_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_CASCADE_PORT_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_CPU_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_CPU_PORT_TO_UPSTREAM_PORT_E, 
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_EXTENDED_PORT_TAGGED_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_EXTENDED_PORT_UNTAGGED_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_UPSTREAM_PORT_TO_EXTENDED_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_UPSTREAM_PORT_MIRRORING_TO_EXTENDED_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_CPU_PORT_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DSA_QCN_E, 
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_IPL_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_IPL_PORT_TO_IPL_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_EXTENDED_PORT_TO_UPSTREAM_PORT_UNTAGGED_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_EXTENDED_M4_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_802_1BR_UPSTREAM_PORT_TO_EXTENDED_M8_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DROP_PACKET_E, 
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EVB_E2U_PACKET_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EVB_U2E_PACKET_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EVB_QCN_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_PRE_DA_EXTENDED_PORT_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_PRE_DA_UPSTREAM_PORT_TO_EXTENDED_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_DO_NOT_MODIFY_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EDSA_EXTENDED_PORT_UNTAGGED_TO_UPSTREAM_PORT_E, 
    CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EDSA_EXTENDED_PORT_TAG1_TAGGED_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EDSA_EXTENDED_PORT_TAGGED_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EDSA_EXTENDED_PORT_DTAGGED_TO_UPSTREAM_PORT_E, CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE___MUST_BE_LAST___E} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_ENT;
typedef struct {
    GT_ETHERADDR macSa;
    GT_U16 qcnTpid;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_EVB_QCN_STC;
typedef struct {
    GT_U32 messageType;
    GT_U32 ptpVersion;
    GT_U32 domainNumber;
    GT_U32 udpDestPort;
    GT_U32 ipv4ProtocolIpv6NextHeader;
} CPSS_PX_EGRESS_HEADER_ALTERATION_TYPE_PRE_DA_PTP_DATA_STC;
typedef struct {
    GT_U32 pcid;
    CPSS_PX_EGRESS_SRC_PORT_INFO_STC srcPortInfo;
    GT_BOOL upstreamPort;
    CPSS_PX_EGRESS_SOURCE_PORT_PTP_STC ptpPortInfo;
} CPSS_PX_EGRESS_SOURCE_PORT_802_1BR_STC;
typedef struct {
    GT_U32 srcPortNum;
    CPSS_PX_EGRESS_SOURCE_PORT_PTP_STC ptpPortInfo;
} CPSS_PX_EGRESS_SOURCE_PORT_DSA_STC;
typedef enum {CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_802_1BR_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_802_1BR_UNTAGGED_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_DSA_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_NOT_USED_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_EVB_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_EDSA_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_PRE_DA_E, CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE___MUST_BE_LAST___E} CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_TYPE_ENT;
typedef union {
    CPSS_PX_EGRESS_SOURCE_PORT_802_1BR_STC info_802_1br;
    CPSS_PX_EGRESS_SOURCE_PORT_DSA_STC info_dsa;
    CPSS_PX_EGRESS_SOURCE_PORT_EVB_STC info_evb;
    CPSS_PX_EGRESS_SOURCE_PORT_PRE_DA_STC info_pre_da;
    CPSS_PX_EGRESS_SOURCE_PORT_PTP_STC ptpPortInfo;
} CPSS_PX_EGRESS_SOURCE_PORT_ENTRY_UNT;
typedef struct {
    GT_U32 vid;
    CPSS_PX_EGRESS_SOURCE_PORT_PTP_STC ptpPortInfo;
} CPSS_PX_EGRESS_SOURCE_PORT_EVB_STC;
typedef struct {
    GT_U32 port;
    CPSS_PX_EGRESS_SOURCE_PORT_PTP_STC ptpPortInfo;
} CPSS_PX_EGRESS_SOURCE_PORT_PRE_DA_STC;
typedef enum {CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE_TC_E, CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE_OC_BC_INGRESS_E, CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE_OC_BC_EGRESS_E, CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE_OC_BC_EGRESS_CF_TIMESTAMP_E, CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE___MUST_BE_LAST___E} CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE_ENT;
typedef struct {
    GT_BOOL ptpOverMplsEn;
    CPSS_PX_EGRESS_SOURCE_PORT_PTP_MODE_ENT ptpPortMode;
} CPSS_PX_EGRESS_SOURCE_PORT_PTP_STC;
typedef struct {
    CPSS_PX_PORTS_BMP srcFilteringVector;
    CPSS_PX_VLAN_TAG_STC vlanTag;
} CPSS_PX_EGRESS_SRC_PORT_INFO_STC;
typedef struct {
    GT_U16 tpid;
    GT_U32 pcid;
    GT_U32 egressDelay;
} CPSS_PX_EGRESS_TARGET_PORT_COMMON_STC;
typedef enum {CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE_COMMON_E, CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE_DSA_QCN_E, CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE_DO_NOT_MODIFY_E, CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE_EVB_E, CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE___MUST_BE_LAST___E} CPSS_PX_EGRESS_TARGET_PORT_ENTRY_TYPE_ENT;
typedef union {
    CPSS_PX_EGRESS_TARGET_PORT_COMMON_STC info_common;
    GT_U32 notNeeded;
} CPSS_PX_EGRESS_TARGET_PORT_ENTRY_UNT;
typedef struct {
    GT_BOOL srcTagged;
    GT_HW_DEV_NUM hwSrcDev;
    GT_U32 srcPortOrTrunk;
    GT_BOOL srcIsTrunk;
    GT_U32 cfi;
    GT_U32 up;
    GT_U32 vid;
    GT_BOOL egrFilterRegistered;
    GT_BOOL dropOnSource;
    GT_BOOL packetIsLooped;
    GT_BOOL wasRouted;
    GT_U32 srcId;
    GT_U32 qosProfileIndex;
    GT_BOOL useVidx;
    GT_U32 trgVidx;
    GT_U32 trgPort;
    GT_HW_DEV_NUM hwTrgDev;
} CPSS_PX_EXTENDED_DSA_FORWARD_STC;
typedef struct {
    GT_BOOL srcTagged;
    GT_HW_DEV_NUM hwSrcDev;
    GT_U32 srcPortOrTrunk;
    GT_BOOL srcIsTrunk;
    GT_U32 cfi;
    GT_U32 up;
    GT_U32 vid;
} CPSS_PX_REGULAR_DSA_FORWARD_STC;
typedef struct {
    GT_U32 pcp;
    GT_U32 dei;
    GT_U32 vid;
} CPSS_PX_VLAN_TAG_STC;

File mainPxDrv/h/cpss/px/ingress/cpssPxIngress.h:
typedef enum {CPSS_PX_INGRESS_ETHERTYPE_IPV4_E, CPSS_PX_INGRESS_ETHERTYPE_IPV6_E, CPSS_PX_INGRESS_ETHERTYPE_MPLS1_E, CPSS_PX_INGRESS_ETHERTYPE_MPLS2_E, CPSS_PX_INGRESS_ETHERTYPE_IPV6_EH_E, CPSS_PX_INGRESS_ETHERTYPE_LAST_E} CPSS_PX_INGRESS_ETHERTYPE_ENT;
typedef struct {
    GT_BOOL valid;
    GT_U32 prefixLength;
    GT_BOOL isIpv6;
    union {...} ipAddr;
} CPSS_PX_INGRESS_IP2ME_ENTRY_STC;
typedef struct {
    GT_U32 byteOffset;
    GT_U32 startBit;
    GT_U32 numBits;
} CPSS_PX_INGRESS_PACKET_BIT_FIELD_OFFSET_STC;
typedef struct {
    GT_ETHERADDR macDa;
    GT_U16 etherType;
    GT_BOOL isLLCNonSnap;
    GT_U32 profileIndex;
    CPSS_PX_UDB_PAIR_DATA_STC udbPairsArr[4];
    GT_U32 ip2meIndex;
} CPSS_PX_INGRESS_PACKET_TYPE_KEY_FORMAT_STC;
typedef struct {
    CPSS_PX_INGRESS_PACKET_BIT_FIELD_OFFSET_STC bitFieldArr[4];
    GT_32 indexConst;
    GT_U32 indexMax;
} CPSS_PX_INGRESS_PORT_MAP_PACKET_TYPE_FORMAT_STC;
typedef enum {CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_PORT_FILTERING_E, CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_DESTINATION_E, CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_LAST} CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_ENT;
typedef struct {
    GT_U32 srcPortProfile;
    CPSS_PX_UDB_PAIR_KEY_STC portUdbPairArr[4];
} CPSS_PX_INGRESS_PORT_PACKET_TYPE_KEY_STC;
typedef struct {
    GT_U16 val;
    GT_U32 size;
    GT_BOOL valid;
} CPSS_PX_INGRESS_TPID_ENTRY_STC;
typedef enum {CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_L2_E, CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_L3_E, CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_L4_E, CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_PTP_E} CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_ENT;
typedef struct {
    CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_ENT udbAnchorType;
    GT_U32 udbByteOffset;
} CPSS_PX_UDB_KEY_STC;
typedef struct {
    GT_U8 udb[2];
} CPSS_PX_UDB_PAIR_DATA_STC;
typedef struct {
    CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_ENT udbAnchorType;
    GT_U32 udbByteOffset;
} CPSS_PX_UDB_PAIR_KEY_STC;

File mainPxDrv/h/cpss/px/ingress/cpssPxIngressHash.h:
typedef enum {CPSS_PX_INGRESS_HASH_LAG_TABLE_SINGLE_MODE_E, CPSS_PX_INGRESS_HASH_LAG_TABLE_DUAL_MODE_E} CPSS_PX_INGRESS_HASH_LAG_TABLE_MODE_ENT;
typedef enum {CPSS_PX_INGRESS_HASH_MODE_CRC32_E, CPSS_PX_INGRESS_HASH_MODE_SELECTED_BITS_E} CPSS_PX_INGRESS_HASH_MODE_ENT;
typedef enum {CPSS_PX_INGRESS_HASH_PACKET_TYPE_IPV4_TCP_UDP_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_IPV6_TCP_UDP_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_IPV4_NO_TCP_UDP_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_IPV6_NO_TCP_UDP_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_MPLS_SINGLE_LABEL_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_MPLS_MULTI_LABEL_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_UDE1_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_UDE2_E, CPSS_PX_INGRESS_HASH_PACKET_TYPE_ETHERNET_E, 
    CPSS_PX_INGRESS_HASH_PACKET_TYPE_LAST_E} CPSS_PX_INGRESS_HASH_PACKET_TYPE_ENT;
typedef enum {CPSS_PX_INGRESS_HASH_PORT_INDEX_MODE_HASH_E, CPSS_PX_INGRESS_HASH_PORT_INDEX_MODE_PRNG_E} CPSS_PX_INGRESS_HASH_PORT_INDEX_MODE_ENT;
typedef struct {
    CPSS_PX_INGRESS_UDB_ANCHOR_TYPE_ENT anchor;
    GT_U32 offset;
    GT_BOOL nibbleMaskArr[4];
} CPSS_PX_INGRESS_HASH_UDBP_STC;

File mainPxDrv/h/cpss/px/networkIf/cpssPxNetIfTypes.h:
typedef enum {CPSS_PX_NET_RESOURCE_ERROR_MODE_RETRY_E, CPSS_PX_NET_RESOURCE_ERROR_MODE_ABORT_E} CPSS_PX_NET_RESOURCE_ERROR_MODE_ENT;
typedef struct {
    GT_U32 rxInPkts;
    GT_U32 rxInOctets;
} CPSS_PX_NET_SDMA_RX_COUNTERS_STC;
typedef struct {
    GT_U32 txQueue;
    GT_BOOL recalcCrc;
} CPSS_PX_NET_TX_PARAMS_STC;

File mainPxDrv/h/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/cpssPxPortDynamicPAUnitBW.h:
typedef enum {CPSS_PX_MIN_SPEED_INVALID_E, CPSS_PX_MIN_SPEED_500_Mbps_E, CPSS_PX_MIN_SPEED_1000_Mbps_E, CPSS_PX_MIN_SPEED_2000_Mbps_E, CPSS_PX_MIN_SPEED_5000_Mbps_E, CPSS_PX_MIN_SPEED_10000_Mbps_E, CPSS_PX_MIN_SPEED_MAX} CPSS_PX_MIN_SPEED_ENT;

File mainPxDrv/h/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAUnitDrv.h:
typedef struct {
    GT_U32 baseAddressPtrOffs;
    PRV_CPSS_PX_PA_REG_FIELDC_STC fldSliceNum2run;
    PRV_CPSS_PX_PA_REG_FIELDC_STC fldMapLoadEn;
    PRV_CPSS_PX_PA_REG_FIELDC_STC fldWorkConservModeEn;
} PRV_CPSS_PX_PA_CTRL_REG_STC;
typedef struct {
    GT_U32 baseAddressPtrOffs;
    PRV_CPSS_PX_PA_REG_FIELDC_STC fldSlice2PortMap;
    PRV_CPSS_PX_PA_REG_FIELDC_STC fldSliceEn;
    GT_U32 totalReg;
    GT_U32 numberFldsPerReg;
    GT_U32 totalFlds;
} PRV_CPSS_PX_PA_MAP_REG_STC;
typedef struct {
    GT_U32 offset;
    GT_U32 len;
} PRV_CPSS_PX_PA_REG_FIELDC_STC;
typedef struct PRV_CPSS_PX_PA_UNIT_STCT PRV_CPSS_PX_PA_UNIT_STC;
struct PRV_CPSS_PX_PA_UNIT_STCT;

File mainPxDrv/h/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPizzaArbiterWS.h:
typedef GT_STATUS (*)(GT_FLOAT64 *, GT_U32, GT_U32, GT_U32, GT_U32, GT_U32 *, GT_U32 *) PRV_CPSS_PX_BUILD_PIZZA_DISTRBUTION_FUN;
typedef struct {
    GT_U32 coreClock;
    GT_U32 sysBwGbps;
    GT_U32 dataPathN;
    GT_U32 coreBWGbps[10];
    GT_U32 txqDqN;
    GT_U32 txqDqBWGbps[10];
} PRV_CPSS_PX_CC_x_DEVICE_BW_STC;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, CPSS_PX_DETAILED_PORT_MAP_STC *, GT_U32 *) PRV_CPSS_PX_MAPPING_2_UNIT_LIST_CONV_FUN;
typedef struct PRV_CPSS_PX_PA_WORKSPACE_STCT PRV_CPSS_PX_PA_WORKSPACE_STC;
struct PRV_CPSS_PX_PA_WORKSPACE_STCT;
typedef struct {
    GT_BOOL isInit;
    PRV_CPSS_PX_PA_WORKSPACE_STC paWorkSpace_pipe;
} PRV_CPSS_PX_PA_WS_SET_STC;
typedef struct {
    GT_U32 revision;
    PRV_CPSS_PX_CC_x_DEVICE_BW_STC *devBWPtr;
} PRV_CPSS_PX_REV_x_DEVICE_BW_STC;

File mainPxDrv/h/cpss/px/port/PizzaArbiter/cpssPxPortPizzaArbiter.h:
typedef struct {
    CPSS_PP_FAMILY_TYPE_ENT devType;
    union {...} devState;
} CPSS_PX_DEV_PIZZA_ARBITER_STATE_STC;
typedef struct {
    CPSS_PX_PA_UNIT_ENT unitList[6];
    CPSS_PX_PIZZA_ARBITER_UNIT_STATE_STC unitState[5];
} CPSS_PX_DEV_UNITS_PIZZA_ARBITER_STATE_STC;
typedef struct {
    GT_U32 totalConfiguredSlices;
    GT_U32 totalSlicesOnUnit;
    GT_BOOL workConservingBit;
    GT_BOOL pizzaMapLoadEnBit;
    GT_BOOL slice_enable[340];
    GT_U32 slice_occupied_by[340];
} CPSS_PX_PIZZA_ARBITER_UNIT_STATE_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortAp.h:
typedef enum {CPSS_PX_PORT_AP_FLOW_CONTROL_SYMMETRIC_E, CPSS_PX_PORT_AP_FLOW_CONTROL_ASYMMETRIC_E} CPSS_PX_PORT_AP_FLOW_CONTROL_ENT;
typedef struct {
    GT_U16 attrBitMask;
    GT_U16 txDisDuration;
    GT_U16 abilityDuration;
    GT_U16 abilityMaxInterval;
    GT_U16 abilityFailMaxInterval;
    GT_U16 apLinkDuration;
    GT_U16 apLinkMaxInterval;
    GT_U16 pdLinkDuration;
    GT_U16 pdLinkMaxInterval;
} CPSS_PX_PORT_AP_INTROP_STC;
typedef struct {
    GT_BOOL fcPause;
    CPSS_PX_PORT_AP_FLOW_CONTROL_ENT fcAsmDir;
    GT_BOOL fecSupported;
    GT_BOOL fecRequired;
    GT_BOOL noneceDisable;
    GT_U32 laneNum;
    CPSS_PORT_MODE_SPEED_STC modesAdvertiseArr[10];
    CPSS_PORT_FEC_MODE_ENT fecAbilityArr[10];
    CPSS_PORT_FEC_MODE_ENT fecRequestedArr[10];
} CPSS_PX_PORT_AP_PARAMS_STC;
typedef struct {
    GT_U16 txDisCnt;
    GT_U16 abilityCnt;
    GT_U16 abilitySuccessCnt;
    GT_U16 linkFailCnt;
    GT_U16 linkSuccessCnt;
    GT_U32 hcdResoultionTime;
    GT_U32 linkUpTime;
} CPSS_PX_PORT_AP_STATS_STC;
typedef struct {
    GT_U32 postApPortNum;
    CPSS_PORT_MODE_SPEED_STC portMode;
    GT_BOOL hcdFound;
    GT_BOOL fecEnabled;
    GT_BOOL fcRxPauseEn;
    GT_BOOL fcTxPauseEn;
    CPSS_PORT_FEC_MODE_ENT fecType;
} CPSS_PX_PORT_AP_STATUS_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortCn.h:
typedef struct {
    CPSS_PX_PACKET_TYPE packetType;
    GT_U32 priority;
    CPSS_DP_LEVEL_ENT dropPrecedence;
    GT_U32 tc4pfc;
    GT_BOOL localGeneratedPacketTypeAssignmentEnable;
    CPSS_PX_PACKET_TYPE localGeneratedPacketType;
} CPSS_PX_PORT_CNM_GENERATION_CONFIG_STC;
typedef struct {
    GT_32 wExp;
    GT_U32 fbLsb;
    GT_BOOL deltaEnable;
    GT_U32 fbMin;
    GT_U32 fbMax;
} CPSS_PX_PORT_CN_FB_CALCULATION_CONFIG_STC;
typedef enum {CPSS_PX_PORT_CN_MESSAGE_TYPE_QCN_E, CPSS_PX_PORT_CN_MESSAGE_TYPE_CCFC_E} CPSS_PX_PORT_CN_MESSAGE_TYPE_ENT;
typedef enum {CPSS_PX_PORT_CN_LENGTH_ORIG_PACKET_E, CPSS_PX_PORT_CN_LENGTH_1_5_KB_E, CPSS_PX_PORT_CN_LENGTH_2_KB_E, CPSS_PX_PORT_CN_LENGTH_10_KB_E} CPSS_PX_PORT_CN_PACKET_LENGTH_ENT;
typedef struct {
    GT_BOOL cnAware;
    GT_U32 threshold;
    CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT alpha;
} CPSS_PX_PORT_CN_PROFILE_CONFIG_STC;
typedef struct {
    GT_U32 interval;
    GT_U32 randBitmap;
} CPSS_PX_PORT_CN_SAMPLE_INTERVAL_ENTRY_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortCtrl.h:
typedef enum {CPSS_PX_PA_UNIT_UNDEFINED_E = -1, CPSS_PX_PA_UNIT_RXDMA_0_E, CPSS_PX_PA_UNIT_TXQ_0_E, CPSS_PX_PA_UNIT_TXQ_1_E, CPSS_PX_PA_UNIT_TXDMA_0_E, CPSS_PX_PA_UNIT_TX_FIFO_0_E, CPSS_PX_PA_UNIT_MAX_E} CPSS_PX_PA_UNIT_ENT;
typedef struct {
    GT_U32 startAlign90;
    GT_U32 rxTrainingCfg;
    GT_U32 osDeltaMax;
    GT_U32 adaptedFfeR;
    GT_U32 adaptedFfeC;
} CPSS_PX_PORT_ALIGN90_PARAMS_STC;
typedef struct {
    GT_BOOL link;
    CPSS_PORT_SPEED_ENT speed;
    CPSS_PORT_DUPLEX_ENT duplex;
} CPSS_PX_PORT_AUTONEG_ADVERTISMENT_STC;
typedef enum {CPSS_PX_PORT_CPLL_INPUT_FREQUENCY_25M_E, CPSS_PX_PORT_CPLL_INPUT_FREQUENCY_156M_E} CPSS_PX_PORT_CPLL_INPUT_FREQUENCY_ENT;
typedef enum {CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_78M_E, CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_156M_E, CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_200M_E, CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_312M_E, CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_161M_E, CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_164M_E} CPSS_PX_PORT_CPLL_OUTPUT_FREQUENCY_ENT;
typedef enum {CPSS_PX_PORT_CTLE_BIAS_NORMAL_E, CPSS_PX_PORT_CTLE_BIAS_HIGH_E} CPSS_PX_PORT_CTLE_BIAS_MODE_ENT;
typedef enum {CPSS_PX_PORT_FC_MODE_802_3X_E, CPSS_PX_PORT_FC_MODE_PFC_E, CPSS_PX_PORT_FC_MODE_LL_FC_E} CPSS_PX_PORT_FC_MODE_ENT;
typedef enum {CPSS_PX_PORT_PCS_LOOPBACK_DISABLE_E, CPSS_PX_PORT_PCS_LOOPBACK_TX2RX_E, CPSS_PX_PORT_PCS_LOOPBACK_RX2TX_E} CPSS_PX_PORT_PCS_LOOPBACK_MODE_ENT;
typedef struct {
    GT_U32 min_dwell_bits;
    GT_U32 max_dwell_bits;
} CPSS_PX_PORT_SERDES_EYE_INPUT_STC;
typedef struct {
    GT_CHAR *matrixPtr;
    GT_U32 x_points;
    GT_U32 y_points;
    GT_CHAR *vbtcPtr;
    GT_CHAR *hbtcPtr;
    GT_U32 height_mv;
    GT_U32 width_mui;
    GT_U32 globalSerdesNum;
} CPSS_PX_PORT_SERDES_EYE_RESULT_STC;
typedef enum {CPSS_PX_PORT_SERDES_LOOPBACK_DISABLE_E, CPSS_PX_PORT_SERDES_LOOPBACK_ANALOG_TX2RX_E, CPSS_PX_PORT_SERDES_LOOPBACK_DIGITAL_TX2RX_E, CPSS_PX_PORT_SERDES_LOOPBACK_DIGITAL_RX2TX_E, CPSS_PX_PORT_SERDES_LOOPBACK_MAX_E} CPSS_PX_PORT_SERDES_LOOPBACK_MODE_ENT;
typedef enum {CPSS_PX_PP_SERDES_REF_CLOCK_EXTERNAL_25_SINGLE_ENDED_E, CPSS_PX_PP_SERDES_REF_CLOCK_EXTERNAL_125_SINGLE_ENDED_E, CPSS_PX_PP_SERDES_REF_CLOCK_EXTERNAL_125_DIFF_E, CPSS_PX_PP_SERDES_REF_CLOCK_EXTERNAL_156_25_SINGLE_ENDED_E, CPSS_PX_PP_SERDES_REF_CLOCK_EXTERNAL_156_25_DIFF_E, CPSS_PX_PP_SERDES_REF_CLOCK_INTERNAL_125_E} CPSS_PX_PP_SERDES_REF_CLOCK_ENT;

File mainPxDrv/h/cpss/px/port/cpssPxPortEcn.h:
typedef struct {
    GT_BOOL tcDpLimit;
    GT_BOOL portLimit;
    GT_BOOL tcLimit;
    GT_BOOL sharedPoolLimit;
} CPSS_PX_PORT_ECN_ENABLERS_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortMapping.h:
typedef struct {
    GT_BOOL valid;
    CPSS_PX_SHADOW_PORT_MAP_STC portMap;
} CPSS_PX_DETAILED_PORT_MAP_STC;
typedef enum {CPSS_PX_PORT_MAPPING_TYPE_ETHERNET_MAC_E, CPSS_PX_PORT_MAPPING_TYPE_CPU_SDMA_E, CPSS_PX_PORT_MAPPING_TYPE_MAX_E, CPSS_PX_PORT_MAPPING_TYPE_INVALID_E = -1} CPSS_PX_PORT_MAPPING_TYPE_ENT;
typedef struct {
    GT_PHYSICAL_PORT_NUM physicalPortNumber;
    CPSS_PX_PORT_MAPPING_TYPE_ENT mappingType;
    GT_U32 interfaceNum;
} CPSS_PX_PORT_MAP_STC;
typedef struct {
    CPSS_PX_PORT_MAPPING_TYPE_ENT mappingType;
    GT_U32 macNum;
    GT_U32 dmaNum;
    GT_U32 txqNum;
} CPSS_PX_SHADOW_PORT_MAP_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortPfc.h:
typedef enum {CPSS_PX_PORT_PFC_COUNT_BUFFERS_MODE_E, CPSS_PX_PORT_PFC_COUNT_PACKETS_E} CPSS_PX_PORT_PFC_COUNT_MODE_ENT;
typedef enum {CPSS_PX_PORT_PFC_ENABLE_TRIGGERING_ONLY_E, CPSS_PX_PORT_PFC_ENABLE_TRIGGERING_AND_RESPONSE_E} CPSS_PX_PORT_PFC_ENABLE_ENT;
typedef struct {
    GT_U32 xonThreshold;
    GT_U32 xoffThreshold;
    CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT xonAlpha;
    CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT xoffAlpha;
} CPSS_PX_PORT_PFC_PROFILE_CONFIG_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortStat.h:
typedef struct {
    GT_U32 outFrames;
    GT_U32 txqFilterDisc;
} CPSS_PX_PORT_EGRESS_CNTR_STC;
typedef struct {
    GT_U64 mibCounter[28];
} CPSS_PX_PORT_MAC_COUNTERS_STC;
typedef enum {CPSS_PX_PORT_MAC_COUNTER_GOOD_OCTETS_RECEIVED_E, CPSS_PX_PORT_MAC_COUNTER_BAD_OCTETS_RECEIVED_E, CPSS_PX_PORT_MAC_COUNTER_CRC_ERRORS_SENT_E, CPSS_PX_PORT_MAC_COUNTER_GOOD_UNICAST_FRAMES_RECEIVED_E, CPSS_PX_PORT_MAC_COUNTER_BROADCAST_FRAMES_RECEIVED_E, CPSS_PX_PORT_MAC_COUNTER_MULTICAST_FRAMES_RECEIVED_E, CPSS_PX_PORT_MAC_COUNTER_FRAMES_64_OCTETS_E, CPSS_PX_PORT_MAC_COUNTER_FRAMES_65_TO_127_OCTETS_E, CPSS_PX_PORT_MAC_COUNTER_FRAMES_128_TO_255_OCTETS_E, 
    CPSS_PX_PORT_MAC_COUNTER_FRAMES_256_TO_511_OCTETS_E, CPSS_PX_PORT_MAC_COUNTER_FRAMES_512_TO_1023_OCTETS_E, CPSS_PX_PORT_MAC_COUNTER_FRAMES_1024_TO_MAX_OCTETS_E, CPSS_PX_PORT_MAC_COUNTER_FRAMES_1024_TO_1518_OCTETS_E, CPSS_PX_PORT_MAC_COUNTER_GOOD_OCTETS_SENT_E, CPSS_PX_PORT_MAC_COUNTER_UNICAST_FRAME_SENT_E, CPSS_PX_PORT_MAC_COUNTER_MULTICAST_FRAMES_SENT_E, CPSS_PX_PORT_MAC_COUNTER_BROADCAST_FRAMES_SENT_E, CPSS_PX_PORT_MAC_COUNTER_FC_SENT_E, CPSS_PX_PORT_MAC_COUNTER_FC_RECEIVED_E, 
    CPSS_PX_PORT_MAC_COUNTER_RECEIVED_FIFO_OVERRUN_E, CPSS_PX_PORT_MAC_COUNTER_UNDERSIZE_E, CPSS_PX_PORT_MAC_COUNTER_FRAGMENTS_E, CPSS_PX_PORT_MAC_COUNTER_OVERSIZE_E, CPSS_PX_PORT_MAC_COUNTER_JABBER_E, CPSS_PX_PORT_MAC_COUNTER_RX_ERROR_FRAME_RECEIVED_E, CPSS_PX_PORT_MAC_COUNTER_BAD_CRC_E, CPSS_PX_PORT_MAC_COUNTER_COLLISION_E, CPSS_PX_PORT_MAC_COUNTER_LATE_COLLISION_E, CPSS_PX_PORT_MAC_COUNTER____LAST____E} CPSS_PX_PORT_MAC_COUNTER_ENT;
typedef enum {CPSS_PX_PORT_MAC_OVERSIZED_PACKETS_COUNTER_MODE_NORMAL_E, CPSS_PX_PORT_MAC_OVERSIZED_PACKETS_COUNTER_MODE_HISTOGRAM_1518_E, CPSS_PX_PORT_MAC_OVERSIZED_PACKETS_COUNTER_MODE_HISTOGRAM_1522_E} CPSS_PX_PORT_MAC_OVERSIZED_PACKETS_COUNTER_MODE_ENT;
typedef struct {
    GT_U32 egrMirrorDropCntr;
    GT_U32 egrStcDropCntr;
    GT_U32 egrQcnDropCntr;
    GT_U32 dropPfcEventsCntr;
    GT_U32 clearPacketsDroppedCounter;
} CPSS_PX_PORT_STAT_TX_DROP_COUNTERS_STC;

File mainPxDrv/h/cpss/px/port/cpssPxPortSyncEther.h:
typedef enum {CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_1_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_2_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_3_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_4_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_5_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_8_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_16_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_2_5_E} CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_DIVIDER_ENT;
typedef enum {CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK0_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK1_E} CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLK_TYPE_ENT;
typedef enum {CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLOCK_SELECT_0_E, CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLOCK_SELECT_1_E} CPSS_PX_PORT_SYNC_ETHER_RECOVERY_CLOCK_SELECT_ENT;

File mainPxDrv/h/cpss/px/port/cpssPxPortTxScheduler.h:
typedef enum {CPSS_PX_PORT_TX_SCHEDULER_WRR_ARB_GROUP_0_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_ARB_GROUP_1_E, CPSS_PX_PORT_TX_SCHEDULER_SP_ARB_GROUP_E} CPSS_PX_PORT_TX_SCHEDULER_ARB_GROUP_ENT;
typedef enum {CPSS_PX_PORT_TX_SCHEDULER_BC_CHANGE_DISABLE_ALL_E, CPSS_PX_PORT_TX_SCHEDULER_BC_CHANGE_ENABLE_SHAPER_ONLY_E, CPSS_PX_PORT_TX_SCHEDULER_BC_CHANGE_ENABLE_SCHEDULER_ONLY_E, CPSS_PX_PORT_TX_SCHEDULER_BC_CHANGE_ENABLE_SHAPER_AND_SCHEDULER_E} CPSS_PX_PORT_TX_SCHEDULER_BC_CHANGE_ENABLE_ENT;
typedef enum {CPSS_PX_PORT_TX_SCHEDULER_PROFILE_0_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_1_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_2_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_3_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_4_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_5_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_6_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_7_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_8_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_9_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_10_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_11_E, 
    CPSS_PX_PORT_TX_SCHEDULER_PROFILE_12_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_13_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_14_E, CPSS_PX_PORT_TX_SCHEDULER_PROFILE_15_E} CPSS_PX_PORT_TX_SCHEDULER_PROFILE_SET_ENT;
typedef enum {CPSS_PX_PORT_TX_SCHEDULER_WRR_PACKET_MODE_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_BYTE_MODE_E} CPSS_PX_PORT_TX_SCHEDULER_WRR_MODE_ENT;
typedef enum {CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_64_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_128_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_256_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_512_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_1K_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_2K_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_4K_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_8K_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_16K_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_32K_E, CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_64K_E} CPSS_PX_PORT_TX_SCHEDULER_WRR_MTU_ENT;

File mainPxDrv/h/cpss/px/port/cpssPxPortTxShaper.h:
typedef struct {
    GT_U32 tokensRate;
    GT_U32 slowRateRatio;
    CPSS_PX_PORT_TX_SHAPER_GRANULARITY_ENT tokensRateGran;
    GT_U32 portsPacketLength;
    GT_U32 cpuPacketLength;
} CPSS_PX_PORT_TX_SHAPER_CONFIG_STC;
typedef enum {CPSS_PX_PORT_TX_SHAPER_GRANULARITY_64_CORE_CLOCKS_E, CPSS_PX_PORT_TX_SHAPER_GRANULARITY_1024_CORE_CLOCKS_E, CPSS_PX_PORT_TX_SHAPER_GRANULARITY_128_CORE_CLOCKS_E, CPSS_PX_PORT_TX_SHAPER_GRANULARITY_256_CORE_CLOCKS_E} CPSS_PX_PORT_TX_SHAPER_GRANULARITY_ENT;
typedef enum {CPSS_PX_PORT_TX_SHAPER_BYTE_MODE_E, CPSS_PX_PORT_TX_SHAPER_PACKET_MODE_E} CPSS_PX_PORT_TX_SHAPER_MODE_ENT;

File mainPxDrv/h/cpss/px/port/cpssPxPortTxTailDrop.h:
typedef enum {CPSS_PX_PORT_TX_TAIL_DROP_BUFFER_CONSUMPTION_MODE_BYTE_E, CPSS_PX_PORT_TX_TAIL_DROP_BUFFER_CONSUMPTION_MODE_PACKET_E} CPSS_PX_PORT_TX_TAIL_DROP_BUFFER_CONSUMPTION_MODE_ENT;
typedef enum {CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_0_E, CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_0_25_E, CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_0_5_E, CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_1_E, CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_2_E, CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_4_E} CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT;
typedef enum {CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_0_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_1_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_2_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_3_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_4_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_5_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_6_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_7_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_8_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_9_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_10_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_11_E, 
    CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_12_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_13_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_14_E, CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_15_E} CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_SET_ENT;
typedef struct {
    GT_U32 dp0MaxBuffNum;
    GT_U32 dp0MaxDescNum;
    GT_U32 dp1MaxBuffNum;
    GT_U32 dp1MaxDescNum;
    GT_U32 dp2MaxBuffNum;
    GT_U32 dp2MaxDescNum;
    GT_U32 tcMaxBuffNum;
    GT_U32 tcMaxDescNum;
    CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT dp0QueueAlpha;
    CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT dp1QueueAlpha;
    CPSS_PX_PORT_TX_TAIL_DROP_DBA_ALPHA_ENT dp2QueueAlpha;
} CPSS_PX_PORT_TX_TAIL_DROP_PROFILE_TC_STC;
typedef enum {CPSS_PX_PORT_TX_TAIL_DROP_SHARED_DP_MODE_DISABLE_E, CPSS_PX_PORT_TX_TAIL_DROP_SHARED_DP_MODE_ALL_E, CPSS_PX_PORT_TX_TAIL_DROP_SHARED_DP_MODE_DP0_E, CPSS_PX_PORT_TX_TAIL_DROP_SHARED_DP_MODE_DP0_DP1_E} CPSS_PX_PORT_TX_TAIL_DROP_SHARED_DP_MODE_ENT;
typedef enum {CPSS_PX_PORT_TX_TAIL_DROP_SHARED_POLICY_UNCONSTRAINED_E, CPSS_PX_PORT_TX_TAIL_DROP_SHARED_POLICY_CONSTRAINED_E} CPSS_PX_PORT_TX_TAIL_DROP_SHARED_POLICY_ENT;
typedef struct {
    GT_BOOL tcDpLimit;
    GT_BOOL portLimit;
    GT_BOOL tcLimit;
    GT_BOOL sharedPoolLimit;
} CPSS_PX_PORT_TX_TAIL_DROP_WRTD_ENABLER_STC;
typedef struct {
    GT_U32 tcDp;
    GT_U32 port;
    GT_U32 tc;
    GT_U32 pool;
} CPSS_PX_PORT_TX_TAIL_DROP_WRTD_MASK_LSB_STC;

File mainPxDrv/h/cpss/px/port/private/prvCpssPxPort.h:
typedef enum {PRV_CPSS_PX_PORT_TX_REG_TYPE_TX_CONFIG_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_TOKEN_BUCK_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_TOKEN_BUCK_LEN_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_PRIO_TOKEN_BUCK_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_PRIO_TOKEN_BUCK_LEN_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_DESCR_COUNTER_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_BUFFER_COUNTER_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_TC_DESCR_COUNTER_E, PRV_CPSS_PX_PORT_TX_REG_TYPE_TC_BUFFER_COUNTER_E, PRV_CPSS_PX_PROFILE_TX_REG_TYPE_WRR_WEIGHTS_0_E, 
    PRV_CPSS_PX_PROFILE_TX_REG_TYPE_WRR_WEIGHTS_1_E, PRV_CPSS_PX_PROFILE_TX_REG_TYPE_WRR_STRICT_PRIO_E, PRV_CPSS_PX_PROFILE_TX_REG_TYPE_WRR_STRICT_PRIO_EN_E, PRV_CPSS_PX_PROFILE_TX_REG_TYPE_DESCR_LIMIT_E} PRV_CPSS_PX_PORT_TX_REG_TYPE_ENT;

File mainPxDrv/h/cpss/px/port/private/prvCpssPxPortCtrl.h:
typedef struct {
    GT_BOOL valid;
    MV_HWS_INPUT_SRC_CLOCK inputSrcClk;
    MV_HWS_CPLL_OUTPUT_FREQUENCY outFreq;
    MV_HWS_CPLL_INPUT_FREQUENCY inFreq;
} PRV_CPSS_PX_PORT_CPLL_CONFIG_STC;
typedef struct {
    GT_BOOL portEnableState;
    GT_BOOL egfPortLinkStatusState;
} PRV_CPSS_PX_PORT_STATE_STC;

File mainPxDrv/h/cpss/px/port/private/prvCpssPxPortIfModeCfgPipeResource.h:
typedef struct {
    GT_U32 real_coreClockMHz;
    GT_U32 computation_coreClockMHz;
    GT_U32 placeInArr;
} PRV_CPSS_PX_CORECLOCK_PLACE_STC;
typedef struct {
    GT_U32 rxdmaScdmaIncomingBusWidth;
    GT_U32 txqQPortDescriptorsCounter;
    GT_U32 txqDqPortCreditCounter;
    GT_U32 txqDqCreditCountersReset;
    GT_U32 txfifoScdmaPayloadStartTransmThreshold;
    GT_U32 txfifoScdmaShiftersOutgoingBusWidth;
    GT_U32 txdmaScdmaResetDescCreditsCounter;
    GT_U32 txdmaDescCreditScdma;
    GT_U32 txdmaScdmaHeaderTxfifoCounter;
    GT_U32 txdmaScdmaPayloadTxfifoCounter;
    GT_U32 txdmaScdmaHeaderTxfifoThrshold;
    GT_U32 txdmaScdmaPayloadTxfifoThrshold;
    GT_U32 txdmaScdmaBurstAmostFullThrshold;
    GT_U32 txdmaScdmaBurstFullThrshold;
    GT_U32 txdmaScdmaRateLimitIntegerThreshold;
    GT_U32 txdmaScdmaRateLimitResidueVectThreshold;
    GT_U32 txdmaGlobalSourceDmaSpeed;
    GT_U32 txdmaGlobalTargetDmaSpeed;
    GT_U32 xlgMacFifoTxWriteThreshold;
} PRV_CPSS_PX_PIPE_PORT_RESOURCE_STC;
typedef enum {PRV_CPSS_PX_REG_FIELDS_RXDMA_SCDMA_INCOMING_BUS_WIDTH_E, PRV_CPSS_PX_REG_FIELDS_TXQ_Q_PORT_DESC_COUNTER_E, PRV_CPSS_PX_REG_FIELDS_TXQ_DQ_TXDMA_PORT_CREDIT_COUNTER_E, PRV_CPSS_PX_REG_FIELDS_TXQ_DQ_TXDMA_CREDIT_COUNTERS_RESET_E, PRV_CPSS_PX_REG_FIELDS_TXFIFO_SCDMA_PAYLOAD_MIN_THRESHOLD_4_TRANSM_E, PRV_CPSS_PX_REG_FIELDS_TXFIFO_SCDMA_SHIFTERS_OUTGOING_BUS_WIDTH_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_RESET_DESC_CREDITS_COUNTER_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_DESC_CREDITS_SCDMA_E, 
    PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_HEADER_TXFIFO_COUNTER_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_PAYLOAD_TXFIFO_COUNTER_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_TXFIFO_HEADER_THRESHOLD_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_TXFIFO_PAYLOAD_THRESHOLD_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_BURST_ALMOST_FULL_THRESHOLD_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_BURST_FULL_THRESHOLD_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_RATE_LIMIT_INTEGER_THRESHOLD_E, 
    PRV_CPSS_PX_REG_FIELDS_TXDMA_SCDMA_RATE_LIMIT_RESIDUE_VECT_THRESHOLD_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_GLOBAL_SOURCE_DMA_SPEED_TBL_E, PRV_CPSS_PX_REG_FIELDS_TXDMA_GLOBAL_TARGET_DMA_SPEED_TBL_E, PRV_CPSS_PX_REG_FIELDS_XLG_MAC_FIFO_TX_WRITE_THRESHOLD_E, PRV_CPSS_PX_REG_FIELDS_LAST} PRV_CPSS_PX_REG_FIELDS_ENT;
typedef enum {PRV_CPSS_PX_RXDMA_IfWidth_64_E, PRV_CPSS_PX_RXDMA_IfWidth_256_E = 2, PRV_CPSS_PX_RXDMA_IfWidth_512_E, PRV_CPSS_PX_RXDMA_IfWidth_MAX_E} PRV_CPSS_PX_RXDMA_IfWidth_ENT;
typedef struct {
    CPSS_PORT_SPEED_ENT speedEnm;
    GT_U32 speedMbps;
    GT_U32 placeInArr;
} PRV_CPSS_PX_SPEED_PLACE_STC;
typedef enum {PRV_CPSS_PX_TxFIFO_OutGoingBusWidth_8B_E = 3, PRV_CPSS_PX_TxFIFO_OutGoingBusWidth_32B_E = 5, PRV_CPSS_PX_TxFIFO_OutGoingBusWidth_64B_E, PRV_CPSS_PX_TxFIFO_OutGoingBusWidth_MAX_E} PRV_CPSS_PX_TxFIFO_OutGoingBusWidth_ENT;

File mainPxDrv/h/cpss/px/ptp/cpssPxPtp.h:
typedef enum {CPSS_PX_PTP_10_FREQ_E, CPSS_PX_PTP_20_FREQ_E, CPSS_PX_PTP_25_FREQ_E} CPSS_PX_PTP_TAI_CLOCK_FREQ_ENT;
typedef enum {CPSS_PX_PTP_TAI_CLOCK_MODE_DISABLED_E, CPSS_PX_PTP_TAI_CLOCK_MODE_OUTPUT_E, CPSS_PX_PTP_TAI_CLOCK_MODE_INPUT_E} CPSS_PX_PTP_TAI_CLOCK_MODE_ENT;
typedef enum {CPSS_PX_PTP_TAI_CLOCK_SELECT_PTP_PLL_E, CPSS_PX_PTP_TAI_CLOCK_SELECT_CORE_PLL_E} CPSS_PX_PTP_TAI_CLOCK_SELECT_ENT;
typedef enum {CPSS_PX_PTP_TAI_PULSE_IN_IS_PTP_PULSE_IN_E, CPSS_PX_PTP_TAI_PULSE_IN_IS_PTP_CLOCK_IN_E, CPSS_PX_PTP_TAI_PULSE_IN_DISABLED_E} CPSS_PX_PTP_TAI_PULSE_IN_MODE_ENT;
typedef enum {CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_UPDATE_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_INCREMENT_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_CAPTURE_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_DECREMENT_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_GRACEFULLY_INCREMENT_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_GRACEFULLY_DECREMENT_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_FREQUENCE_UPDATE_E, CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_NOP_E} CPSS_PX_PTP_TAI_TOD_COUNTER_FUNC_ENT;
typedef struct {
    GT_U32 nanoSeconds;
    GT_U64 seconds;
    GT_U32 fracNanoSeconds;
} CPSS_PX_PTP_TAI_TOD_COUNT_STC;
typedef struct {
    GT_U32 nanoSeconds;
    GT_U32 fracNanoSeconds;
} CPSS_PX_PTP_TAI_TOD_STEP_STC;
typedef enum {CPSS_PX_PTP_TAI_TOD_TYPE_TRIGGER_GENERATION_E, CPSS_PX_PTP_TAI_TOD_TYPE_TRIGGER_GENERATION_MASK_E, CPSS_PX_PTP_TAI_TOD_TYPE_LOAD_VALUE_E, CPSS_PX_PTP_TAI_TOD_TYPE_CAPTURE_VALUE0_E, CPSS_PX_PTP_TAI_TOD_TYPE_CAPTURE_VALUE1_E} CPSS_PX_PTP_TAI_TOD_TYPE_ENT;
typedef struct {
    GT_BOOL unitEnable;
} CPSS_PX_PTP_TSU_CONTROL_STC;
typedef enum {CPSS_PX_PTP_TSU_PACKET_COUNTER_TYPE_TOTAL_E, CPSS_PX_PTP_TSU_PACKET_COUNTER_TYPE_PTP_V1_E, CPSS_PX_PTP_TSU_PACKET_COUNTER_TYPE_PTP_V2_E, CPSS_PX_PTP_TSU_PACKET_COUNTER_TYPE_ADD_CORR_TIME_E} CPSS_PX_PTP_TSU_PACKET_COUNTER_TYPE_ENT;
typedef unsigned int CPSS_PX_PTP_TYPE_INDEX;
typedef struct {
    GT_BOOL isUdp;
    GT_U32 srcPortProfile;
    CPSS_PX_UDB_PAIR_DATA_STC udbPairsArr[2];
    GT_U8 udbArr[6];
} CPSS_PX_PTP_TYPE_KEY_FORMAT_STC;
typedef struct {
    CPSS_PX_UDB_PAIR_KEY_STC portUdbPairArr[2];
    CPSS_PX_UDB_KEY_STC portUdbArr[6];
} CPSS_PX_PTP_TYPE_KEY_STC;

File mainPxDrv/h/cpss/px/systemRecovery/catchUp/private/prvCpssPxCatchUp.h:
typedef GT_STATUS (*)(GT_U8) prvCpssCatchUpFuncPtr;

File mainPxDrv/src/cpss/generic/log/prvCpssGenPxTypesManualLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/generic/log/prvCpssPxGenDbLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cnc/cpssPxCnc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cnc/prvCpssPxCncLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cnc/prvCpssPxCncManualLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/config/cpssPxCfgInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/config/prvCpssPxConfigLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cos/cpssPxCos.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cos/prvCpssPxCosLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/cpssPxHwInit.c:
typedef struct {
    GT_U32 addr;
    GT_U32 startBit;
    GT_U32 length;
} PLL0_FLD_DEF_STC;
typedef struct {
    GT_U32 coreClockMHz;
    GT_U32 gopBWGpbs;
} PRV_CPSS_PX_CORECLOCK_BW_STC;
typedef struct {
    CPSS_PP_FAMILY_TYPE_ENT family;
    GT_U32 revision;
    PRV_CPSS_PX_CORECLOCK_BW_STC *coreClockBWListPtr;
} PRV_CPSS_PX_DEV_REV_x_CC_BW_STC;
typedef struct {
    CPSS_PP_DEVICE_TYPE *devTypePtr;
    PRV_CPSS_PX_PP_CONFIG_FINE_TUNING_STC config;
} PRV_PX_FINE_TUNING_STC;
typedef struct {
    CPSS_PP_FAMILY_TYPE_ENT family;
    CPSS_PP_SUB_FAMILY_TYPE_ENT subFamily;
    GT_U32 revision;
    PLL0_FLD_DEF_STC sar1_pll0_def;
    GT_U16 *tablePtr;
    GT_U16 tableSize;
} REV_x_CORECLOCK_LIST_CONV_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/cpssPxHwInitLedCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/prvCpssPxCpssHwInitLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/prvCpssPxHwLogicalTables.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/prvCpssPxHwRegAddrVer1.c:
typedef struct {
    GT_U32 *registerOffsetPtr;
    GT_U32 numOfRegisters;
} OFFSET_IN_REG_DB1_INFO_STC;
typedef struct {
    CPSS_PX_TABLE_ENT tableType;
    GT_U32 numOfEntries;
} OFFSET_IN_TABLE_INFO_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/prvCpssPxHwRegAddrVer1_ppDb.c:
typedef struct {
    PRV_CPSS_DXCH_UNIT_ENT unitId;
    GT_U32 unitBaseAdrr;
} PRV_CPSS_PX_UNITID_UNITBASEADDR_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cpssHwInit/prvCpssPxHwTables.c:
typedef struct {
    CPSS_PX_TABLE_ENT origTable;
    CPSS_PX_TABLE_ENT multiInstanceTable;
    PRV_CPSS_PX_TABLE_NAME multiInstanceTableName;
    GT_U32 multiInstanceBaseAddr;
} MULTI_INSTANCE_ADDR_INFO;
typedef struct {
    CPSS_PX_TABLE_ENT origTable;
    CPSS_PX_TABLE_ENT multiInstanceTable;
    PRV_CPSS_PX_TABLE_NAME multiInstanceTableName;
    PRV_CPSS_DXCH_UNIT_ENT multiInstanceUnit;
} MULTI_INSTANCE_UNITS_INFO;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cutThrough/cpssPxCutThrough.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/cutThrough/prvCpssPxCutThroughLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/diag/cpssPxDiag.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/diag/cpssPxDiagDataIntegrity.c:
typedef struct {
    GT_U32 bitmap[4];
} PRV_CPSS_PX_DIAG_DATA_INTEGRITY_CLIENT_STATUS_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/diag/cpssPxDiagDataIntegrityTables.c:
typedef struct {
    const CPSS_PX_LOGICAL_TABLE_ENT logicalName;
    const CPSS_PX_TABLE_ENT hwNameArr[6];
} PRV_CPSS_PX_LOGICAL_ENTRY_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/diag/cpssPxDiagPacketGenerator.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/diag/prvCpssPxDiagDataIntegrityMainMappingDb.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/diag/prvCpssPxDiagLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/egress/cpssPxEgress.c:
typedef unsigned int FW_THREAD_ID;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/egress/prvCpssPxEgressLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/egress/prvCpssPxEgressManualLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/ingress/cpssPxIngress.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/ingress/cpssPxIngressHash.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/ingress/prvCpssPxIngressLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/log/prvCpssPxLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/networkIf/cpssPxNetIfCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/networkIf/cpssPxNetIfInit.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/networkIf/cpssPxNetIfRxHandling.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/networkIf/cpssPxNetIfTxHandling.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/networkIf/prvCpssPxNetworkIfLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/networkIf/prvCpssPxNetworkIfManualLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/phy/cpssPxPhySmi.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/cpssPxPortDynamicPAUnitBW.c:
typedef struct {
    CPSS_PX_MIN_SPEED_ENT minSpeedMbpsEnt;
    GT_U32 minSpeedMbps;
} CPSS_PX_MIN_SPEED_CON_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/cpssPxPortDynamicPizzaArbiterWorkConserving.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAGCDAlgo.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAPortSpeedDB.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAUnitBW.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAUnitCfg.c:
typedef enum {PRV_CPSS_PX_PA_PORT_STATE_NOT_STARTED_E, PRV_CPSS_PX_PA_PORT_STATE_IN_PROCCESS_E, PRV_CPSS_PX_PA_PORT_STATE_COMPLETED_E} PRV_CPSSS_PX_PA_PORT_STATE_ENT;
typedef struct {
    GT_U32 number;
    GT_FLOAT64 speed;
} PortsConfig_STC;
typedef struct {
    PortsConfig_STC portsConfigArray[1024];
    PRV_CPSSS_PX_PA_PORT_STATE_ENT portStateArr[1024];
    GT_FLOAT64 idealDistArr[1024];
    GT_FLOAT64 nextIdealPlaceArr[1024];
    GT_FLOAT64 weightArr[1024];
    GT_U32 numberOfSlicesToConfigureArr[1024];
    GT_U32 numberOfConfiguredSlicesArr[1024];
    GT_U32 numberOfPorts;
    GT_U32 portInProcessIdxArr[1024];
    GT_FLOAT64 DistFromSliceArr[1024];
    GT_FLOAT64 DistFromSliceWeightArr[1024];
} UnitPortConfigList_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAUnitCfgDummySlices.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPAUnitDrv.c:
typedef struct {
    CPSS_PP_FAMILY_TYPE_ENT family;
    PRV_CPSS_PX_PA_UNIT_DEF_STC **unitDefListPtr;
    PRV_CPSS_PX_PA_UNIT_STC *unitsDescrAllPtr;
} PRV_CPSS_PX_DEV_X_UNITDEFLIST;
typedef struct PRV_CPSS_PX_PA_UNITS_DRV_STCT PRV_CPSS_PX_PA_UNITS_DRV_STC;
struct PRV_CPSS_PX_PA_UNITS_DRV_STCT;
typedef struct {
    GT_U32 ctrlRegSliceNum2Run_Offs;
    GT_U32 ctrlRegSliceNum2Run_Len;
    GT_U32 ctrlRegMapLoadEn_Offs;
    GT_U32 ctrlRegMapLoadEn_Len;
    GT_U32 ctrlRegWorkConservEn_Offs;
    GT_U32 ctrlRegWorkConservEn_Len;
} PRV_CPSS_PX_PA_UNIT_CTRL_REG_FLD_DESCR_STC;
typedef struct {
    CPSS_PX_PA_UNIT_ENT unitType;
    GT_U32 ctrlRegBaseAddrOffs;
    PRV_CPSS_PX_PA_UNIT_CTRL_REG_FLD_DESCR_STC *ctrlRegFldDefPtr;
    GT_U32 mapRegBaseAddrOffs;
    PRV_CPSS_PX_PA_UNIT_MAP_REG_FLD_DESCR_STC *mapRegFldDefPtr;
} PRV_CPSS_PX_PA_UNIT_DEF_STC;
typedef struct {
    GT_U32 paMapRegNum;
    GT_U32 paMapFldPerReg;
    GT_U32 paMapTotalFlds;
    GT_U32 paMapRegWorkSliceMapOffs;
    GT_U32 paMapRegWorkSliceMapLen;
    GT_U32 paMapRegWorkSliceEnOffs;
    GT_U32 paMapRegWorkSliceEnLen;
} PRV_CPSS_PX_PA_UNIT_MAP_REG_FLD_DESCR_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPizzaArbiter.c:
typedef char;
typedef double;
typedef struct {
    GT_FLOAT64 prv_clientSpeedConfigArr[5][1024];
    GT_U32 prv_sliceNum2Config[5];
    GT_PORT_NUM prv_pizzaArray[5][340];
} dynamicPxPaConfigList_STC;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/DynamicPizzaArbiter/prvCpssPxPortDynamicPizzaArbiterWS.c:
typedef struct {
    CPSS_PX_PORT_MAPPING_TYPE_ENT mappingType;
    CPSS_PX_PA_UNIT_ENT *unitList2ConfigurePtr;
} PRV_CPSS_PX_MAPPING_2_UNITLIST_STC;
typedef struct {
    CPSS_PORT_SPEED_ENT speedEnm;
    GT_U32 speedGbps;
} PRV_CPSS_PX_PA_SPEEDENM_SPEEDGBPS_STC;
typedef struct {
    PRV_CPSS_PX_REV_x_DEVICE_BW_STC *devBwPtr;
    CPSS_PX_PA_UNIT_ENT *supportedUnitListPtr;
    CPSS_PX_PA_UNIT_ENT *unitListConfByPipeBwSetListPtr;
    PRV_CPSS_PX_PA_SPEEDENM_SPEEDGBPS_STC *speedEnm2GbpsPtr;
    prvCpssPxMapping2UnitConvFUN mapping2UnitConvFun;
    PRV_CPSS_PX_MAPPING_2_UNITLIST_STC *mapping2UnitListPtr;
    PRV_CPSS_PX_UNIT_2_PIZZA_FUN_STC *unit_2_pizzaCompFun;
    CPSS_PX_PA_UNIT_ENT *workConservingModeOnUnitListPtr;
    CPSS_PORT_SPEED_ENT cpuSpeedEnm;
} PRV_CPSS_PX_PA_WS_INIT_PARAMS_STC;
typedef struct {
    CPSS_PX_PA_UNIT_ENT unit;
    PRV_CPSS_PX_BUILD_PIZZA_DISTRBUTION_FUN fun;
} PRV_CPSS_PX_UNIT_2_PIZZA_FUN_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef GT_STATUS (*)(GT_SW_DEV_NUM, CPSS_PX_DETAILED_PORT_MAP_STC *, GT_U32 *) prvCpssPxMapping2UnitConvFUN;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/cpssPxPortPizzaArbiter.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PizzaArbiter/prvCpssPxPortPizzaArbiter.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/PortMapping/prvCpssPxPortMappingShadowDB.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortAp.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortAutoDtct.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortBufMg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortCn.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortEcn.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortIfModeCfg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
struct prvIfModeSupportedPxPortsModes_STC;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortManager.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortManagerSamples.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortMapping.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortPcsCfg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortPfc.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortSerdesCfg.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortSpeed.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortStat.c:
typedef enum {PRV_PX_PORT_MAC_CNTR_READ_MODE_USUAL_E, PRV_PX_PORT_MAC_CNTR_READ_MODE_UPDATE_SHADOW_E, PRV_PX_PORT_MAC_CNTR_READ_MODE_RESET_HW_E} PRV_PX_PORT_MAC_CNTR_READ_MODE_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortSyncEther.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortTxDebug.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortTxScheduler.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortTxShaper.c:
typedef struct {
    GT_BOOL tokenBucketEn;
    GT_BOOL slowRateEn;
    GT_U32 tbUpdateRatio;
    GT_U32 tokens;
    GT_U32 maxBucketSize;
    GT_U32 currentBucketSize;
    GT_BOOL tokenBucketAvbEnabled;
} PORT_TX_SHAPER_TOKEN_BUCKET_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/cpssPxPortTxTailDrop.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/private/prvCpssPxPortIfModeCfgPipeResourceTables.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/private/prvCpssPxPortIfModeCfgResource.c:
typedef struct {
    GT_PHYSICAL_PORT_NUM portNum;
    CPSS_PORT_SPEED_ENT speed;
    GT_U32 txqCredits;
} PORT_MANULAL_TXQ_CREDIT_STC;
typedef struct {
    GT_U32 dpIdx;
    GT_U32 txqCredits;
    GT_U32 txFifoHeaders;
    GT_U32 txFifoPayloads;
} PRV_CPSS_PX_DP_RESOURCE_LIMIT_STC;
typedef struct {
    CPSS_PORT_SPEED_ENT speed;
    PRV_CPSS_PX_RXDMA_IfWidth_ENT rxDmaIfWidth;
    PRV_CPSS_PX_TxFIFO_OutGoingBusWidth_ENT txFifoOutGoingBusWidth;
} PRV_CPSS_PX_SPEED_2_RES_STC;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/prvCpssPxPortLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/port/prvCpssPxPortMacCtrl.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/ptp/cpssPxPtp.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/ptp/prvCpssPxPtpLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/systemRecovery/catchUp/prvCpssPxCatchUp.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/version/cpssPxVersion.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File mainPxDrv/src/cpss/px/version/prvCpssPxVersionLog.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File referenceCode/referenceHal/px/bpe/h/cpssPxHalBpe.h:
typedef struct {
    GT_U16 etherType;
    GT_ETHERADDR macDa;
    GT_U32 dscp;
    GT_IPADDR dip;
    GT_U32 ipProtocol;
    GT_IPV6ADDR dipv6;
} CPSS_PX_HAL_BPE_CTRL_DATA_CLASSIFIER_STC;
typedef enum {CPSS_PX_HAL_BPE_CTRL_DATA_ENCAP_ANY_E, CPSS_PX_HAL_BPE_CTRL_DATA_ENCAP_IPV4_E, CPSS_PX_HAL_BPE_CTRL_DATA_ENCAP_IPV6_E, CPSS_PX_HAL_BPE_CTRL_DATA_ENCAP_ETHERNET_OR_LLC_SNAP_E, CPSS_PX_HAL_BPE_CTRL_DATA_ENCAP_LLC_NOT_SNAP_E} CPSS_PX_HAL_BPE_CTRL_DATA_ENCAP_TYPE_ENT;
typedef struct {
    CPSS_PX_HAL_BPE_INTERFACE_TYPE_ENT type;
    struct {...} devPort;
    GT_TRUNK_ID trunkId;
} CPSS_PX_HAL_BPE_INTERFACE_INFO_STC;
typedef enum {CPSS_PX_HAL_BPE_INTERFACE_MODE_IDLE_E, CPSS_PX_HAL_BPE_INTERFACE_MODE_TRUSTED_E, CPSS_PX_HAL_BPE_INTERFACE_MODE_UPSTREAM_E, CPSS_PX_HAL_BPE_INTERFACE_MODE_EXTENDED_E, CPSS_PX_HAL_BPE_INTERFACE_MODE_CASCADE_E, CPSS_PX_HAL_BPE_INTERFACE_MODE_INTERNAL_E} CPSS_PX_HAL_BPE_INTERFACE_MODE_ENT;
typedef enum {CPSS_PX_HAL_BPE_INTERFACE_PORT_E, CPSS_PX_HAL_BPE_INTERFACE_TRUNK_E, CPSS_PX_HAL_BPE_INTERFACE_NONE_E = 255} CPSS_PX_HAL_BPE_INTERFACE_TYPE_ENT;
typedef enum {CPSS_PX_HAL_BPE_PORT_MODE_IDLE_E, CPSS_PX_HAL_BPE_PORT_MODE_TRUSTED_E, CPSS_PX_HAL_BPE_PORT_MODE_UPSTREAM_E, CPSS_PX_HAL_BPE_PORT_MODE_EXTENDED_E, CPSS_PX_HAL_BPE_PORT_MODE_CASCADE_E, CPSS_PX_HAL_BPE_PORT_MODE_INTERNAL_E} CPSS_PX_HAL_BPE_PORT_MODE_ENT;
typedef struct {
    CPSS_PX_HAL_BPE_QOSMAP_STC defaultQos;
    CPSS_PX_HAL_BPE_QOSMAP_STC qosMap[8][2];
} CPSS_PX_HAL_BPE_PORT_QOS;
typedef struct {
    GT_U32 newPcp;
    GT_U32 newDei;
    GT_U8 queue;
} CPSS_PX_HAL_BPE_QOSMAP_DATA_STC;
typedef struct {
    GT_U32 newPcp;
    GT_U32 newDei;
} CPSS_PX_HAL_BPE_QOSMAP_STC;
typedef enum {CPSS_PX_HAL_BPE_TRUNK_LOAD_BALANCE_MODE_MAC_IP_TCP_E, CPSS_PX_HAL_BPE_TRUNK_LOAD_BALANCE_MODE_PORT_BASE_E, CPSS_PX_HAL_BPE_TRUNK_LOAD_BALANCE_MODE_MAC_E, CPSS_PX_HAL_BPE_TRUNK_LOAD_BALANCE_MODE_IP_E} CPSS_PX_HAL_BPE_TRUNK_LOAD_BALANCE_MODE_ENT;
typedef enum {CPSS_PX_HAL_BPE_TRUNK_UPSTREAM_E, CPSS_PX_HAL_BPE_TRUNK_EXTENDED_E, CPSS_PX_HAL_BPE_TRUNK_CASCADE_E, CPSS_PX_HAL_BPE_TRUNK_INTERNAL_E} CPSS_PX_HAL_BPE_TRUNK_TYPE_ENT;

File referenceCode/referenceHal/px/bpe/lua/data/cmdFS_RAM_embed_files_refHal.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File referenceCode/referenceHal/px/bpe/lua/wrappers/all_refhal_lua_c_type_manual_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File referenceCode/referenceHal/px/bpe/lua/wrappers/all_refhal_lua_c_type_wrappers.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File referenceCode/referenceHal/px/bpe/lua/wrappers/wraplCpssPxBpe.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File referenceCode/referenceHal/px/bpe/src/cpssPxHalBpe.c:
typedef struct CPSS_PX_HAL_BPE_CHANNEL_INFO_STC_ CPSS_PX_HAL_BPE_CHANNEL_INFO_STC;
struct CPSS_PX_HAL_BPE_CHANNEL_INFO_STC_;
typedef struct {
    CPSS_PX_HAL_BPE_TRUNK_INFO_STC trunkDbArr[17];
    CPSS_PX_HAL_BPE_PORT_INFO_STC portDbArr[17];
    CPSS_PX_HAL_BPE_CHANNEL_INFO_STC *channelDbPtr;
    GT_BOOL valid;
    GT_U32 numOfUpstreamPorts;
    GT_U32 maxBpeUnicastEChannels;
    GT_U32 maxBpeMulticastEChannels;
    GT_U32 numBpeUnicastEChannel;
    GT_U32 numBpeMulticastEChannel;
    GT_U32 cncBitmap;
    CPSS_PX_CNC_CLIENT_ENT cncClientConfig[2];
    GT_U32 ucDstIndexCns;
    GT_U32 mcDstIndexCns;
    GT_U32 ip2MeIndex[21];
} CPSS_PX_HAL_BPE_DEV_INFO_STC;
typedef struct {
    CPSS_PX_HAL_BPE_INTERFACE_INFO_STC interfce;
    CPSS_PX_HAL_BPE_PORT_MODE_ENT mode;
    GT_U32 pcid;
    CPSS_PX_HAL_BPE_INTERFACE_INFO_STC upstream;
    CPSS_PX_HAL_BPE_PORT_QOS portQos;
} CPSS_PX_HAL_BPE_PORT_INFO_STC;
typedef struct {
    CPSS_PX_HAL_BPE_TRUNK_TYPE_ENT trunkType;
    CPSS_PX_PORTS_BMP portsBmpArr[128];
    GT_U32 numOfPortsArr[128];
    GT_BOOL valid;
    GT_U32 cid;
} CPSS_PX_HAL_BPE_TRUNK_INFO_STC;
typedef enum {PRV_CPSS_PX_HAL_BPE_PKT_TYPE_UPSTREAM_TO_DOWNSTREAM_UC_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_UPSTREAM_TO_DOWNSTREAM_MC_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_UPSTREAM_TO_CPU_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_CASCADE_TO_UPSTREAM_E_TAGGED_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_CASCADE_TO_UPSTREAM_UNTAGGED_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_EXTENDED_TO_UPSTREAM_E_TAGGED_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_EXTENDED_TO_UPSTREAM_C_TAGGED_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_EXTENDED_TO_UPSTREAM_UNTAGGED_E, 
    PRV_CPSS_PX_HAL_BPE_PKT_TYPE_CPU_TO_UPSTREAM_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_RESERVED_1_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_RESERVED_2_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_CTRL_DATA_FIRST_E, PRV_CPSS_PX_HAL_BPE_PKT_TYPE_LAST_E = 11} PRV_CPSS_PX_HAL_BPE_PKT_TYPE_ENT;
typedef enum {PRV_CPSS_PX_HAL_BPE_SRC_PORT_PROFILE_IDLE_E, PRV_CPSS_PX_HAL_BPE_SRC_PORT_PROFILE_UPSTREAM_E, PRV_CPSS_PX_HAL_BPE_SRC_PORT_PROFILE_CASCADE_E, PRV_CPSS_PX_HAL_BPE_SRC_PORT_PROFILE_EXTENDED_E, PRV_CPSS_PX_HAL_BPE_SRC_PORT_PROFILE_CPU_E} PRV_CPSS_PX_HAL_BPE_SRC_PORT_PROFILE_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/Default/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;
struct thr59_sls_test_in_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/Image01/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr48_srv6_best_effort_in_hdr;
struct thr49_srv6_source_node_1_container_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/ppa_fw_common_strc_defs_little_endian.h:
struct IPv4_Header;
struct IPv6_Header;
struct SRv6_Header;
struct ppa_in_desc;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Default/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;
struct thr59_sls_test_in_hdr;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_cfg;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_in_hdr;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_cfg;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_in_hdr;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_cfg;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_in_hdr;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_cfg;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_in_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image01/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr48_srv6_best_effort_in_hdr;
struct thr49_srv6_source_node_1_container_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_cfg;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_in_hdr;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_cfg;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_in_hdr;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_cfg;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_in_hdr;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_cfg;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_in_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_cfg;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_in_hdr;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_cfg;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_in_hdr;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_cfg;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_in_hdr;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_cfg;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_in_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02Oldest/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_cfg;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_in_hdr;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_cfg;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_in_hdr;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_cfg;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_in_hdr;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_cfg;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_in_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02Previous/ppa_fw_threads_strc_defs_little_endian.h:
struct thr11_vxlan_gpb_cfg;
struct thr11_vxlan_gpb_in_hdr_ipv4;
struct thr11_vxlan_gpb_in_hdr_ipv6;
struct thr12_MPLS_NO_EL_in_hdr;
struct thr13_MPLS_ONE_EL_in_hdr;
struct thr14_MPLS_TWO_EL_in_hdr;
struct thr15_MPLS_THREE_EL_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_cfg;
struct thr53_SRV6_End_Node_GSID_COC32_in_hdr;
struct thr53_SRV6_End_Node_GSID_COC32_out_hdr;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_cfg;
struct thr6_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv4_in_hdr;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_cfg;
struct thr7_Cc_Erspan_TypeII_TrgDevLcMirroring_Ipv6_in_hdr;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_cfg;
struct thr8_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv4_in_hdr;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_cfg;
struct thr9_Cc_Erspan_TypeII_TrgDevDirectMirroring_Ipv6_in_hdr;

File simulation/simDevices/h/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/ppa_fw_common_strc_defs_little_endian.h:
struct IPv4_Header;
struct IPv6_Header;
struct SRv6_Header;
struct ppa_in_desc;

File simulation/simDevices/h/asicSimulation/SKernel/sfdb/sfdb.h:
typedef enum {SFDB_UPDATE_MSG_NA_E, SFDB_UPDATE_MSG_QA_E, SFDB_UPDATE_MSG_QR_E, SFDB_UPDATE_MSG_AA_E, SFDB_UPDATE_MSG_TA_E, SFDB_UPDATE_MSG_FU_E, SFDB_UPDATE_MSG_QI_E, SFDB_UPDATE_MSG_HR_E} SFDB_UPDATE_MSG_TYPE;

File simulation/simDevices/h/asicSimulation/SKernel/sfdb/sfdbCheetah.h:
typedef enum {SFDB_CHT_BANK_COUNTER_ACTION_NONE_E, SFDB_CHT_BANK_COUNTER_ACTION_INCREMENT_E, SFDB_CHT_BANK_COUNTER_ACTION_DECREMENT_E} SFDB_CHT_BANK_COUNTER_ACTION_ENT;
typedef enum {SFDB_CHT_BANK_COUNTER_UPDATE_CLIENT_CPU_AU_MSG_E, SFDB_CHT_BANK_COUNTER_UPDATE_CLIENT_CPU_EXACT_BANK_E, SFDB_CHT_BANK_COUNTER_UPDATE_CLIENT_PP_AGING_DAEMON_E, SFDB_CHT_BANK_COUNTER_UPDATE_CLIENT_PP_AUTO_LEARN_E} SFDB_CHT_BANK_COUNTER_UPDATE_CLIENT_ENT;
typedef struct {
    GT_U32 srcId;
    GT_U32 udb;
    GT_U32 origVid1;
    GT_U32 daAccessLevel;
    GT_U32 saAccessLevel;
} SFDB_LION3_FDB_SPECIAL_MUXED_FIELDS_STC;

File simulation/simDevices/h/asicSimulation/SKernel/skernel.h:
typedef GT_STATUS (*)(GT_U8_PTR *, GT_U32 *, GT_U32) SKERNEL_NIC_RX_CB_FUN;

File simulation/simDevices/h/asicSimulation/SKernel/smain/sRemoteTm.h:
typedef enum {PP_TMSIM_DROP_QUERY, PP_TMSIM_DROP_RESPONSE, PP_TMSIM_START_PACKET_PROCESS, PP_TMSIM_PACKET_DONE, PP_TMSIM_REGISTER_WRITE, PP_TMSIM_REGISTER_READ, PP_TMSIM_REGISTER_READ_RESPONSE, PP_TMSIM_ACK_RESPONSE} PPMsim_msg_type;
typedef struct {
    GT_U64 packet_id;
    GT_U32 dropProbabilitySelect;
    GT_U32 cos;
    GT_U32 color;
    GT_U32 queue;
} PPTMsim_drop_query;
typedef struct {
    GT_U64 packet_id;
    GT_U32 queue;
    GT_U32 tailQueueRecommendation;
    GT_U32 wredQueueRecommendation;
    GT_U32 tailAnodeRecommendation;
    GT_U32 wredAnodeRecommendation;
    GT_U32 tailBnodeRecommendation;
    GT_U32 wredBnodeRecommendation;
    GT_U32 tailCnodeRecommendation;
    GT_U32 wredCnodeRecommendation;
    GT_U32 tailPortRecommendation;
    GT_U32 wredPortRecommendation;
    GT_U32 bufferRsv;
    GT_U32 outOfRsv;
    GT_U32 dropProbability;
    GT_U32 aNode;
    GT_U32 bNode;
    GT_U32 cNode;
    GT_U32 port;
} PPTMsim_drop_response;
typedef struct {
    GT_U32 version;
    GT_U32 message_type;
    GT_U32 length;
    GT_U32 tid;
    GT_U32 ack_needed;
    GT_U32 error_code;
} PPTMsim_header;
typedef struct {
    GT_U64 packet_id;
    GT_U32 egress_port;
} PPTMsim_packet_done_header;
typedef struct {
    GT_U32 color;
    GT_U32 cos;
    GT_U32 pk_len;
    GT_U32 queue;
    GT_U64 packet_id;
} PPTMsim_packet_header;
typedef struct {
    GT_U64 address;
    GT_U64 value;
} PPTMsim_register;
typedef struct {
    GT_U32 dropProbabilitySelect;
    GT_U32 cos;
    GT_U32 color;
    GT_U32 queue;
} SREMOTE_TM_PP_TO_TM_INPUT_DROP_INFO_STC;
typedef struct {
    GT_U32 queue;
    GT_U32 tailQueueRecommendation;
    GT_U32 wredQueueRecommendation;
    GT_U32 tailAnodeRecommendation;
    GT_U32 wredAnodeRecommendation;
    GT_U32 tailBnodeRecommendation;
    GT_U32 wredBnodeRecommendation;
    GT_U32 tailCnodeRecommendation;
    GT_U32 wredCnodeRecommendation;
    GT_U32 tailPortRecommendation;
    GT_U32 wredPortRecommendation;
    GT_U32 bufferRsv;
    GT_U32 outOfRsv;
    GT_U32 dropProbability;
    GT_U32 aNode;
    GT_U32 bNode;
    GT_U32 cNode;
    GT_U32 port;
} SREMOTE_TM_PP_TO_TM_OUTPUT_DROP_INFO_STC;
typedef struct {
    void *cookiePtr;
    GT_U32 color;
    GT_U32 cos;
    GT_U32 pk_len;
    GT_U32 queue;
} SREMOTE_TM_PP_TO_TM_PACKET_INFO_STC;
typedef void (GT_U32, void *, GT_U32) SREMOTE_TM_RECEIVED_PACKET_DONE_FROM_TM_CALLBACK_FUNC;

File simulation/simDevices/h/asicSimulation/SKernel/smain/smain.h:
typedef struct ACCEL_INFO_STC_ ACCEL_INFO_STC;
typedef struct ACTIVE_MEMORY_RANGE_ ACTIVE_MEMORY_RANGE;
typedef enum {CHT_PACKET_CLASSIFICATION_TYPE_IPV4_TCP_E, CHT_PACKET_CLASSIFICATION_TYPE_IPV4_UDP_E, CHT_PACKET_CLASSIFICATION_TYPE_MPLS_E, CHT_PACKET_CLASSIFICATION_TYPE_IPV4_FRAG_E, CHT_PACKET_CLASSIFICATION_TYPE_IPV4_OTHER_E, CHT_PACKET_CLASSIFICATION_TYPE_ETH_OTHER_E, CHT_PACKET_CLASSIFICATION_TYPE_UDE0_E, CHT_PACKET_CLASSIFICATION_TYPE_IPV6_E, CHT_PACKET_CLASSIFICATION_TYPE_UDE1_E, CHT_PACKET_CLASSIFICATION_TYPE_UDE2_E, CHT_PACKET_CLASSIFICATION_TYPE_UDE3_E, 
    CHT_PACKET_CLASSIFICATION_TYPE_UDE4_E} CHT_PACKET_CLASSIFICATION_TYPE_ENT;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR, SKERNEL_FRAME_CHEETAH_DESCR_STCT_PTR) CONVERT_PHA_DESC_TO_SIMULATION_DESC_FUNC;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR, SKERNEL_FRAME_CHEETAH_DESCR_STCT_PTR, GT_U32) CONVERT_SIMULATION_DESC_TO_PHA_DESC_FUNC;
typedef struct {
    GT_U32 dataPathFirstPort;
    GT_U32 dataPathNumOfPorts;
    GT_U32 cpuPortDmaNum;
    GT_U32 tmDmaNum;
    GT_U32 *localDmaMapArr;
} DATA_PATH_INFO_STC;
typedef enum {MTAG_STANDARD_E, MTAG_EXTENDED_E, MTAG_3_WORDS_E, MTAG_4_WORDS_E, MTAG_TYPE_NONE_E = 255} DSA_TAG_TYPE_E;
typedef struct {
    SIMPLE_PORT_INFO_STC simplePortInfo;
    GT_U32 sip6_MTI_EXTERNAL_representativePortIndex;
    GT_U32 sip6_MTI_bmpPorts[2];
} ENHANCED_PORT_INFO_STC;
typedef enum {enum_THR0_DoNothing, enum_THR1_E2U, enum_THR2_U2E, enum_THR3_U2C, enum_THR4_ET2U, enum_THR5_EU2U, enum_THR6_U2E, enum_THR7_Mrr2E, enum_THR8_E_V2U, enum_THR9_E2U, enum_THR10_C_V2U, enum_THR11_C2U, enum_THR12_U_UC2C, enum_THR13_U_MC2C, enum_THR14_U_MR2C, enum_THR15_QCN, enum_THR16_U2E, enum_THR17_U2IPL, enum_THR18_IPL2IPL, enum_THR19_E2U_Untagged, enum_THR20_U2E_M4, enum_THR21_U2E_M8, enum_THR22_Discard, enum_THR23_EVB_E2U, enum_THR24_EVB_U2E, enum_THR25_EVB_QCN, enum_THR26_PRE_DA_U2E, 
    enum_THR27_PRE_DA_E2U, enum_THR45_VariableCyclesLengthWithAcclCmd = 45, enum_THR46_RemoveAddBytes, enum_THR47_Add20Bytes, enum_THR48_Remove20Bytes, enum_THR49_VariableCyclesLength} ENUM_TREADS_ENT;
typedef enum {EPCL_ACTION_MODIFY_NO_DSCP_EXP_E, EPCL_ACTION_MODIFY_OUTER_DSCP_EXP_E, EPCL_ACTION_MODIFY_INNER_DSCP_E} EPCL_ACTION_MODIFY_DSCP_EXP_ENT;
typedef enum {EPCL_ACTION_MODIFY_NO_TAG_E, EPCL_ACTION_MODIFY_OUTER_TAG_E, EPCL_ACTION_MODIFY_TAG0_E} EPCL_ACTION_MODIFY_TAG_ENT;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U8 *, GT_U32) GENERIC_MSG_FUNC;
typedef struct {
    GT_BIT tunnelStart;
    GT_BIT tunnelStartPassengerType;
    GT_BIT doRouterHa;
    GT_U32 arpPointer;
    GT_BIT routed;
    GT_BIT retainCrc;
    GT_U8 *tsIpv4HeaderPtr;
    GT_U8 *tsIpv6HeaderPtr;
    GT_U8 *tsUdpHeaderPtr;
    struct {...} tsVlanTagInfo;
    GT_U32 tunnelAssigningMode;
    GT_U8 *evbBpeTagPtr;
    GT_U32 evbBpeTagLength;
    GT_BIT evbBpeIsPassenger;
    GT_U32 tag0Length;
    GT_U32 tag1Length;
} HA_INTERNAL_INFO_STC;
typedef enum {IPV4_LPM_REGULAR_BUCKET_E, IPV4_LPM_COMPRESS_1_BUCKET_E, IPV4_LPM_COMPRESS_2_BUCKET_E, IPV4_LPM_NEXT_HOP_BUCKET_E} IPV4_LPM_BUCKET_TYPE_ENT;
typedef enum {IPV4_LPM_RESULT_NOT_FOUND_E, IPV4_LPM_RESULT_FOUND_E} IPV4_LPM_RESULT_ENT;
typedef enum {IPV4_LPM_ECMP_ROUT_METHOD_E, IPV4_LPM_QOS_ROUT_METHOD_E, IPV4_LPM_REGULAR_ROUT_METHOD_E} IPV4_LPM_ROUT_METHOD_ENT;
typedef enum {IP_ECN_NOT_ECT_E, IP_ECN_ECT_1_E, IP_ECN_ECT_0_E, IP_ECN_CE_E} IP_ECN_ENT;
typedef struct {
    GT_U32 globalMacNum;
    SIMPLE_PORT_INFO_STC macInfo;
    SIMPLE_PORT_INFO_STC channelInfo;
    GT_U32 sip6_MTI_EXTERNAL_representativePortIndex;
} MAC_NUM_INFO_STC;
typedef struct MEMORY_RANGE_ MEMORY_RANGE;
typedef struct {
    GT_U32 label;
    GT_U8 exp;
    GT_U8 sbit;
    GT_U8 ttl;
} MPLS_LABELINFO_STC;
typedef enum {PCL_TTI_ACTION_REDIRECT_CMD_NONE_E, PCL_TTI_ACTION_REDIRECT_CMD_OUT_IF_E, PCL_TTI_ACTION_REDIRECT_CMD_LTT_ROUTER_E, PCL_TTI_ACTION_REDIRECT_CMD_PBR_OR_VPLS_E, PCL_TTI_ACTION_REDIRECT_CMD_VIRT_ROUTER_E, PCL_TTI_ACTION_REDIRECT_CMD_ASSIGN_SOURCE_LOGICAL_PORT_E, PCL_TTI_ACTION_REDIRECT_CMD_REPLACE_MAC_SA_E, PCL_TTI_ACTION_REDIRECT_CMD_LTT_ROUTER_AND_ASSIGN_VRF_ID_E, PCL_TTI_ACTION_REDIRECT_CMD_GENERIC_ACTION_E} PCL_TTI_ACTION_REDIRECT_CMD_ENT;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR, GT_BOOL) PHA_FW_APPLY_CHANGES_IN_DESCRIPTOR_FUNC;
typedef struct {
    GT_U32 instruction_pointer;
    GT_U32 threadId;
    THREAD_TYPE threadType;
    char *threadDescription;
} PHA_THREAD_INFO;
typedef enum {POLICY_NO_SWITCH_E, POLICY_ROUTE_E, POLICY_SWITCH_E} POLICY_SWITCH_TYPE_ENT;
typedef enum {PRP_CMD_DO_NOTHING_E, PRP_CMD_ADD60_E, PRP_CMD_ADD64_E, PRP_CMD_REMOVE_E} PRP_CMD_ENT;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U8 *) SFDB_DEV_MAC_ENTRIES_AUTO_AGING_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *) SFDB_DEV_MAC_TBL_AGING_PROC_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U8 *) SFDB_DEV_MAC_TBL_TRIG_ACT_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U8 *) SFDB_DEV_MAC_TBL_UPLOAD_ACT_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U8 *) SFDB_DEV_MSG_PROC_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *) SFDB_DEV_OAM_TBL_AGING_PROC_FUN;
typedef enum {SHT_PACKET_CLASS_1_E, SHT_PACKET_CLASS_2_E, SHT_PACKET_CLASS_3_E} SHT_PACKET_CLASS_ENT;
typedef struct {
    GT_U32 unitIndex;
    GT_U32 indexInUnit;
} SIMPLE_PORT_INFO_STC;
typedef struct SIM_TRANSMIT_QUEUE_STCT SIM_TRANSMIT_QUEUE_STC;
struct SIM_TRANSMIT_QUEUE_STCT;
typedef enum {SIP5_PACKET_CLASSIFICATION_TYPE_IPV4_TCP_E, SIP5_PACKET_CLASSIFICATION_TYPE_IPV4_UDP_E, SIP5_PACKET_CLASSIFICATION_TYPE_MPLS_E, SIP5_PACKET_CLASSIFICATION_TYPE_IPV4_FRAG_E, SIP5_PACKET_CLASSIFICATION_TYPE_IPV4_OTHER_E, SIP5_PACKET_CLASSIFICATION_TYPE_ETH_OTHER_E, SIP5_PACKET_CLASSIFICATION_TYPE_IPV6_E, SIP5_PACKET_CLASSIFICATION_TYPE_IPV6_TCP_E, SIP5_PACKET_CLASSIFICATION_TYPE_IPV6_UDP_E, SIP5_PACKET_CLASSIFICATION_TYPE_UDE0_E, SIP5_PACKET_CLASSIFICATION_TYPE_UDE1_E, 
    SIP5_PACKET_CLASSIFICATION_TYPE_UDE2_E, SIP5_PACKET_CLASSIFICATION_TYPE_UDE3_E, SIP5_PACKET_CLASSIFICATION_TYPE_UDE4_E, SIP5_PACKET_CLASSIFICATION_TYPE_UDE5_E, SIP5_PACKET_CLASSIFICATION_TYPE_UDE6_E} SIP5_PACKET_CLASSIFICATION_TYPE_ENT;
typedef enum {SIP6_TRUNK_HASH_MODE_CRC32_E, SIP6_TRUNK_HASH_MODE_EXTRACT_FROM_HASH_KEY_E} SIP6_TRUNK_HASH_MODE_ENT;
typedef enum {SKERNEL_ADDRESS_COMPLETION_TYPE_4_REGIONS_E, SKERNEL_ADDRESS_COMPLETION_TYPE_8_REGIONS_E, SKERNEL_ADDRESS_COMPLETION_TYPE_NONE_E} SKERNEL_ADDRESS_COMPLETION_TYPE_ENT;
typedef enum {SKERNEL_BITWISE_OPERATOR_NONE_E, SKERNEL_BITWISE_OPERATOR_XOR_E, SKERNEL_BITWISE_OPERATOR_AND_E, SKERNEL_BITWISE_OPERATOR_OR_E, SKERNEL_BITWISE_OPERATOR_NOT_E = 4096} SKERNEL_BITWISE_OPERATOR_ENT;
typedef enum {SKERNEL_CAPWAP_NOT_SUPPORTED_E, SKERNEL_CAPWAP_LOOKUP_PCL_TCAM_E, SKERNEL_CAPWAP_LOOKUP_ROUTER_TCAM_E} SKERNEL_CAPWAP_LOOKUP_SUPPORT_ENT;
typedef struct {
    SKERNEL_CAPWAP_REASSEMBLY_KEY_STC key;
    GT_BIT isUsed;
    GT_U32 ageValue;
    void *descriptorPtr;
    SBUF_BUF_ID frameBufferPtr;
    GT_U32 totalLength;
} SKERNEL_CAPWAP_REASSEMBLY_ENTRY_STC;
typedef struct {
    GT_BIT isIpv4;
    GT_U32 srcIp[4];
    GT_U32 dstIp[4];
    GT_U16 fragmentId;
} SKERNEL_CAPWAP_REASSEMBLY_KEY_STC;
typedef struct {
    char *nameString;
    GT_U32 baseAddress;
    GT_U32 firstValidAddress;
    struct SMEM_CHUNK_STCT *memChunkPtr;
    SKERNEL_MULTI_INSTANCE_TABLE_INFO_STC multiInstanceInfo;
} SKERNEL_COMMON_TABLE_INFO_STC;
typedef enum {SKERNEL_CONFORM_GREEN, SKERNEL_CONFORM_YELLOW, SKERNEL_CONFORM_RED, SKERNEL_CONFORM_DROP} SKERNEL_CONFORMANCE_LEVEL_ENT;
typedef struct {
    struct SKERNEL_DEVICE_OBJECT_T *devObjPtr;
    SMEM_ACTIVE_MEM_ENTRY_STC_PTR currentActiveMemoryEntryPtr;
    GT_U32 startPortNum;
    GT_BIT validPortGroup;
} SKERNEL_CORE_DEVICE_INFO_STC;
typedef enum {SKERNEL_NOT_INITIALIZED_FAMILY, SKERNEL_SALSA_FAMILY, SKERNEL_NIC_FAMILY, SKERNEL_COM_MODULE_FAMILY, SKERNEL_TWIST_D_FAMILY, SKERNEL_TWIST_C_FAMILY, SKERNEL_SAMBA_FAMILY, SKERNEL_SOHO_FAMILY, SKERNEL_CHEETAH_1_FAMILY, SKERNEL_CHEETAH_2_FAMILY, SKERNEL_CHEETAH_3_FAMILY, SKERNEL_LION_PORT_GROUP_SHARED_FAMILY, SKERNEL_LION_PORT_GROUP_FAMILY, SKERNEL_XCAT_FAMILY, SKERNEL_XCAT2_FAMILY, SKERNEL_TIGER_FAMILY, SKERNEL_FA_FOX_FAMILY, SKERNEL_FAP_DUNE_FAMILY, SKERNEL_XBAR_CAPOEIRA_FAMILY, 
    SKERNEL_FE_DUNE_FAMILY, SKERNEL_PUMA_FAMILY, SKERNEL_EMBEDDED_CPU_FAMILY, SKERNEL_PHY_SHELL_FAMILY, SKERNEL_PHY_CORE_FAMILY, SKERNEL_MACSEC_FAMILY, SKERNEL_LION2_PORT_GROUP_SHARED_FAMILY, SKERNEL_LION2_PORT_GROUP_FAMILY, SKERNEL_LION3_PORT_GROUP_SHARED_FAMILY, SKERNEL_LION3_PORT_GROUP_FAMILY, SKERNEL_PUMA3_SHARED_FAMILY, SKERNEL_PUMA3_NETWORK_FABRIC_FAMILY, SKERNEL_BOBCAT2_FAMILY, SKERNEL_BOBK_CAELUM_FAMILY, SKERNEL_BOBK_CETUS_FAMILY, SKERNEL_BOBK_ALDRIN_FAMILY, SKERNEL_AC3X_FAMILY, 
    SKERNEL_BOBCAT3_FAMILY, SKERNEL_ALDRIN2_FAMILY, SKERNEL_FALCON_FAMILY, SKERNEL_HAWK_FAMILY, SKERNEL_PHOENIX_FAMILY, SKERNEL_XCAT3_FAMILY, SKERNEL_AC5_FAMILY, SKERNEL_HARRIER_FAMILY, SKERNEL_IRONMAN_FAMILY, SKERNEL_PIPE_FAMILY, SKERNEL_EMPTY_FAMILY, SKERNEL_LAST_FAMILY} SKERNEL_DEVICE_FAMILY_TYPE;
typedef struct SKERNEL_DEVICE_MEMORY_ALLOCATION_STCT SKERNEL_DEVICE_MEMORY_ALLOCATION_STC;
struct SKERNEL_DEVICE_MEMORY_ALLOCATION_STCT;
typedef struct {
    GT_U32 policer[3];
    GT_U32 gts[2];
    GT_U32 mll;
    GT_U32 oam[2];
    GT_U32 CNC[4];
    GT_U32 lms[3];
    GT_U32 txqDq[6];
    GT_U32 lpm[4];
    GT_U32 raven[16];
    GT_U32 lmu[4];
    GT_U32 tsu[4];
    GT_U32 macMib[10];
    GT_U32 macWrap[10];
    GT_U32 macPcs[10];
    GT_U32 cpuMacMib[4];
    GT_U32 cpuMacWrap[4];
    GT_U32 cpuMacPcs[4];
    GT_U32 mif[7];
    GT_U32 anp[17];
} SKERNEL_DEVICE_MEMORY_UNIT_BASE_ADDR_STC;
typedef struct SKERNEL_DEVICE_OBJECT_T SKERNEL_DEVICE_OBJECT;
struct SKERNEL_DEVICE_OBJECT_T;
typedef struct SKERNEL_DEVICE_OBJECT_T * SKERNEL_DEVICE_OBJECT_T_PTR;
typedef struct {
    GT_U32 numEntriesIpv4;
    GT_U32 numEntriesIpv6;
    GT_U32 offsetBetweenBulks;
    GT_U32 entryWidth;
    GT_U32 bankWidth;
} SKERNEL_DEVICE_ROUTE_TCAM_INFO_STC;
typedef struct SKERNEL_DEVICE_TCAM_INFO_STCT SKERNEL_DEVICE_TCAM_INFO_STC;
struct SKERNEL_DEVICE_TCAM_INFO_STCT;
typedef GT_U32 (struct SKERNEL_DEVICE_OBJECT_T *, struct SKERNEL_DEVICE_TCAM_INFO_STCT *, struct SNET_CHT_POLICY_KEY_STCT *, GT_U32, GT_U32) SKERNEL_DEVICE_TCAM_LOOK_UP_KEY_WORD_BUILD_FUNC;
typedef enum {SKERNEL_EMPTY, SKERNEL_NIC, SKERNEL_COM_MODULE, SKERNEL_DXCH, SKERNEL_DXCH_B0, SKERNEL_DXCH2, SKERNEL_DXCH3, SKERNEL_DXCH3_XG, SKERNEL_DXCH3P, SKERNEL_EMBEDDED_CPU, SKERNEL_XCAT_24_AND_4, SKERNEL_XCAT3_24_AND_6, SKERNEL_AC5_24_AND_6, SKERNEL_XCAT2_24_AND_4, SKERNEL_LION_PORT_GROUP_12, SKERNEL_LION_48, SKERNEL_PHY_SHELL, SKERNEL_PHY_CORE_1540M_1548M, SKERNEL_MACSEC, SKERNEL_LION2_PORT_GROUP_12, SKERNEL_LION2_96, SKERNEL_LION3_PORT_GROUP_12, SKERNEL_LION3_96, SKERNEL_PUMA3_NETWORK_FABRIC, 
    SKERNEL_PUMA3_64, SKERNEL_BOBCAT2, SKERNEL_BOBK_CAELUM, SKERNEL_BOBK_CETUS, SKERNEL_BOBK_ALDRIN, SKERNEL_AC3X, SKERNEL_BOBCAT3, SKERNEL_ALDRIN2, SKERNEL_FALCON_SINGLE_TILE, SKERNEL_FALCON_2_TILES, SKERNEL_FALCON_4_TILES, SKERNEL_HAWK, SKERNEL_PHOENIX, SKERNEL_HARRIER, SKERNEL_IRONMAN_L, SKERNEL_IRONMAN_S, SKERNEL_PIPE, SKERNEL_SAPPHIRE = 6704, SKERNEL_RUBY = 2352, SKERNEL_OPAL = 2384, SKERNEL_OPAL_PLUS = 2448, SKERNEL_JADE = 421, SKERNEL_PERIDOT = 912, SKERNEL_98DX120 = 219550123, 
    SKERNEL_98DX121 = 219287979, SKERNEL_98DX160 = 218436011, SKERNEL_98DX161 = 218173867, SKERNEL_98DX240 = 218370475, SKERNEL_98DX241 = 218108331, SKERNEL_98DX1602 = 219484587, SKERNEL_98DX1612 = 219222443, SKERNEL_98DX2402 = 219419051, SKERNEL_98DX2412 = 219156907, SKERNEL_98EX100D = 15667627, SKERNEL_98EX110D = 15143339, SKERNEL_98EX115D = 14750123, SKERNEL_98EX110DS = 16191915, SKERNEL_98EX115DS = 15798699, SKERNEL_98EX120D = 14094763, SKERNEL_98EX125D = 13701547, SKERNEL_98EX130D = 30871979, 
    SKERNEL_98EX135D = 30478763, SKERNEL_98MX615D = 27267499, SKERNEL_98MX625D = 25170347, SKERNEL_98MX625V0 = 26218923, SKERNEL_98MX635D = 30413227, SKERNEL_98MX635 = 30413227, SKERNEL_98MX618 = 10490283, SKERNEL_98MX628 = 9441707, SKERNEL_98MX638 = 13636011, SKERNEL_98MX610B = 7344555, SKERNEL_98MX620B = 4198827, SKERNEL_98MX610BS = 6295979, SKERNEL_98EX110BS = 6754731, SKERNEL_98EX111BS = 6492587, SKERNEL_98EX112BS = 6623659, SKERNEL_98EX110B = 7803307, SKERNEL_98EX120B = 5706155, 
    SKERNEL_98EX120B_ = 5640619, SKERNEL_98EX111B = 7541163, SKERNEL_98EX112B = 7672235, SKERNEL_98EX121B = 5444011, SKERNEL_98EX122B = 5575083, SKERNEL_98EX128B = 5247403, SKERNEL_98EX129B = 5378475, SKERNEL_98DX270 = 3624145323, SKERNEL_98DX260 = 3624669611, SKERNEL_98DX250 = 3625193899, SKERNEL_98DX803 = 3624276395, SKERNEL_98DX249 = 3626373547, SKERNEL_98DX269 = 3626242475, SKERNEL_98DX169 = 3626439083, SKERNEL_98DX248 = 3629388203, SKERNEL_98DX262 = 3628994987, SKERNEL_98DX268 = 3628863915, 
    SKERNEL_98DX163 = 3537179051, SKERNEL_98DX166 = 3625259435, SKERNEL_98DX167 = 3624997291, SKERNEL_98DX243 = 3537113515, SKERNEL_98DX253 = 3624931755, SKERNEL_98DX263 = 3624407467, SKERNEL_98DX273 = 3623883179, SKERNEL_98DX247 = 3624931755, SKERNEL_98DX107B0 = 3553825195, SKERNEL_98DX106 = 3553825195, SKERNEL_98DX107 = 3625128363, SKERNEL_98DX133 = 3624735147, SKERNEL_98EX116 = 18944427, SKERNEL_98EX106 = 19534251, SKERNEL_98EX108 = 19599787, SKERNEL_98EX126 = 17895851, SKERNEL_98EX136 = 22090155, 
    SKERNEL_98EX126V0 = 18026923, SKERNEL_98EX116DI = 19206571, SKERNEL_98EX126DI = 18157995, SKERNEL_98EX136DI = 22352299, SKERNEL_98FX900 = 2304, SKERNEL_98FX910 = 2320, SKERNEL_98FX915 = 2325, SKERNEL_98FX920 = 2336, SKERNEL_98FX930 = 2362, SKERNEL_98FX950 = 1024526, SKERNEL_98FX9110 = 37136, SKERNEL_98FX9210 = 37392, SKERNEL_98FX9310 = 37648, SKERNEL_98DX255 = 3641971115, SKERNEL_98DX265 = 3641446827, SKERNEL_98DX275 = 3640922539, SKERNEL_98DX285 = 3642495403, SKERNEL_98DX804 = 3642233259, 
    SKERNEL_98DX125 = 3642036651, SKERNEL_98DX145 = 3641512363, SKERNEL_98DX806 = 3675197867, SKERNEL_98DX5128 = 3674214827, SKERNEL_98DX5128_1 = 3675263403, SKERNEL_98DX5124 = 3678409131, SKERNEL_98DX5126 = 3680506283, SKERNEL_98DX5127 = 3681554859, SKERNEL_98DX5129 = 3683652011, SKERNEL_98DX5151 = 3675394475, SKERNEL_98DX5152 = 3676443051, SKERNEL_98DX5154 = 3678540203, SKERNEL_98DX5155 = 3679588779, SKERNEL_98DX5156 = 3680637355, SKERNEL_98DX5157 = 3681685931, SKERNEL_98DX8110 = 3674280363, 
    SKERNEL_98DX8108 = 3682668971, SKERNEL_98DX8109 = 3683717547, SKERNEL_98DX8110_1 = 3675328939, SKERNEL_98DX287 = 3675197867, SKERNEL_98EX240 = 3258978731, SKERNEL_98EX240_1 = 3254784427, SKERNEL_98EX241 = 3259044267, SKERNEL_98MX840 = 572658091, SKERNEL_98EX2106 = 3271561643, SKERNEL_98EX2206 = 3275755947, SKERNEL_98MX2306 = 3277853099, SKERNEL_98EX8261 = 3275887019, SKERNEL_98EX8301 = 3276018091, SKERNEL_98EX8303 = 3271823787, SKERNEL_98EX8501 = 3271954859, SKERNEL_98EX260 = 3259044267, 
    SKERNEL_98MX860 = 1145311659, SKERNEL_98EX2110 = 3271627179, SKERNEL_98EX2210 = 3275821483, SKERNEL_98MX2310 = 3277918635, SKERNEL_98EX8262 = 3275952555, SKERNEL_98EX8302 = 3276083627, SKERNEL_98EX8305 = 3271889323, SKERNEL_98EX8502 = 3272020395, SKERNEL_98DX1101 = 3696300459, SKERNEL_98DX1111 = 3697349035, SKERNEL_98DX1122 = 3702591915, SKERNEL_98DX1123 = 3702722987, SKERNEL_98DX1142 = 3703116203, SKERNEL_98DX2101 = 3713077675, SKERNEL_98DX2112 = 3718320555, SKERNEL_98DX2122 = 3719369131, 
    SKERNEL_98DX2123 = 3719500203, SKERNEL_98DX2142 = 3719893419, SKERNEL_98DX2151 = 3715436971, SKERNEL_98DX2161 = 3715961259, SKERNEL_98DX3001 = 3729789355, SKERNEL_98DX3010 = 3726643627, SKERNEL_98DX3011 = 3730837931, SKERNEL_98DX3020 = 3727692203, SKERNEL_98DX3021 = 3731886507, SKERNEL_98DX3022 = 3736080811, SKERNEL_98DX3101 = 3696234923, SKERNEL_98DX3110 = 3693089195, SKERNEL_98DX3111 = 3705672107, SKERNEL_98DX3120 = 3694137771, SKERNEL_98DX3121 = 3706720683, SKERNEL_98DX3122 = 3702788523, 
    SKERNEL_98DX3123 = 3702919595, SKERNEL_98DX3124 = 3698594219, SKERNEL_98DX3125 = 3698725291, SKERNEL_98DX3141 = 3707244971, SKERNEL_98DX3142 = 3703312811, SKERNEL_98DX4101 = 3713012139, SKERNEL_98DX4102 = 3717206443, SKERNEL_98DX4103 = 3716157867, SKERNEL_98DX4110 = 3718255019, SKERNEL_98DX4120 = 3719303595, SKERNEL_98DX4121 = 3715371435, SKERNEL_98DX4122 = 3719565739, SKERNEL_98DX4123 = 3719696811, SKERNEL_98DX4140 = 3719827883, SKERNEL_98DX4141 = 3715895723, SKERNEL_98DX4142 = 3720090027, 
    SKERNEL_98CX8525 = 2216235435, SKERNEL_98CX8514 = 2216169899, SKERNEL_98EX5614 = 2216038827, SKERNEL_98CX8535 = 2215645611, SKERNEL_DEVICE_TYPE_LAST} SKERNEL_DEVICE_TYPE;
typedef enum {SKERNEL_ECMP_ROUTE_INDEX_FORMULA_TYPE_0_E, SKERNEL_ECMP_ROUTE_INDEX_FORMULA_TYPE_1_E, SKERNEL_ECMP_ROUTE_INDEX_FORMULA_TYPE_2_E} SKERNEL_ECMP_ROUTE_INDEX_FORMULA_TYPE_ENT;
typedef enum {SKERNEL_EGRESS_PACKET_IPV4_E, SKERNEL_EGRESS_PACKET_IPV6_E, SKERNEL_EGRESS_PACKET_MPLS_E, SKERNEL_EGRESS_PACKET_OTHER_E} SKERNEL_EGRESS_PACKET_TYPE_ENT;
typedef enum {SKERNEL_EGR_PACKET_CNTRL_UCAST_E, SKERNEL_EGR_PACKET_CNTRL_MCAST_E, SKERNEL_EGR_PACKET_BRG_UCAST_E, SKERNEL_EGR_PACKET_BRG_REG_MCAST_BCAST_E, SKERNEL_EGR_PACKET_BRG_UNK_UCAST_E, SKERNEL_EGR_PACKET_BRG_UNREG_MCAST_E, SKERNEL_EGR_PACKET_ROUT_UCAST_E, SKERNEL_EGR_PACKET_ROUT_MCAST_E} SKERNEL_EGR_PACKET_TYPE_ENT;
typedef enum {SKERNEL_EXT_DSA_TAG_1_WORDS_E, SKERNEL_EXT_DSA_TAG_2_WORDS_E, SKERNEL_EXT_DSA_TAG_3_WORDS_E, SKERNEL_EXT_DSA_TAG_4_WORDS_E, SKERNEL_EXT_DSA_TAG_LAST_E} SKERNEL_EXT_DSA_TAG_TYPE_ENT;
typedef enum {SKERNEL_EXT_PKT_CMD_FORWARD_E, SKERNEL_EXT_PKT_CMD_MIRROR_TO_CPU_E, SKERNEL_EXT_PKT_CMD_TRAP_TO_CPU_E, SKERNEL_EXT_PKT_CMD_HARD_DROP_E, SKERNEL_EXT_PKT_CMD_SOFT_DROP_E, SKERNEL_EXT_PKT_CMD_TO_TRG_SNIFFER_E, SKERNEL_EXT_PKT_CMD_FROM_CSCD_TO_CPU_E, SKERNEL_EXT_PKT_CMD_FROM_CPU_E, SKERNEL_EXT_PKT_CMD_LAST_E} SKERNEL_EXT_PACKET_CMD_ENT;
typedef struct {
    GT_U32 vidx;
    GT_U32 trgPhyPort;
    GT_BIT isTrgPhyPortValid;
    GT_U32 defaultSrcEPort;
    GT_U32 localDevSrcEPort;
    struct {...} toTargetSniffInfo;
    GT_U32 srcTrgEPort;
    GT_U32 *ttiPhysicalPortAttributePtr;
    GT_U32 *ttiPhysicalPort2AttributePtr;
    GT_U32 *ttiPreTtiLookupIngressEPortTablePtr;
    GT_U32 *ttiPostTtiLookupIngressEPortTablePtr;
    GT_U32 *bridgeIngressEPortTablePtr;
    GT_U32 *ipvxIngressEPortTablePtr;
    GT_U32 *ipvxIngressEVlanTablePtr;
    GT_U32 *eqIngressEPortTablePtr;
    GT_U32 *txqEgressEPortTablePtr;
    GT_U32 *egfShtEgressEPortTablePtr;
    SHT_PACKET_CLASS_ENT egfShtEgressClass;
    GT_U32 *egfQagEgressEPortTablePtr;
    GT_U32 egfQagEgressEPortTable_index;
    GT_U32 *haEgressEPortAtt1TablePtr;
    GT_U32 haEgressEPortAtt1Table_index;
    GT_U32 *haEgressEPortAtt2TablePtr;
    GT_U32 haEgressEPortAtt2Table_index;
    GT_U32 *haEgressPhyPort1TablePtr;
    GT_U32 haEgressPhyPort1Table_index;
    GT_U32 *haEgressPhyPort2TablePtr;
    GT_U32 haEgressPhyPort2Table_index;
    GT_U32 *haEgressVlanTablePtr;
    struct {...} eqInfo;
    struct {...} fromCpu;
    GT_BIT assignTrgEPortAttributesLocally;
    struct {...} haInfo;
    GT_BIT packetIsTT;
    GT_BIT origSrcPhyIsTrunk;
    GT_U32 origSrcPhyPortTrunk;
    GT_BIT phySrcMcFilterEn;
} SKERNEL_E_ARCH_EXT_INFO_STC;
typedef enum {SKERNEL_FLOW_NO_REDIRECT_E, SKERNEL_FLOW_MPLS_REDIRECT_E, SKERNEL_FLOW_IPV4_REDIRECT_E, SKERNEL_FLOW_OUTLIF_REDIRECT_E} SKERNEL_FLOW_REDIRECT_ENT;
typedef struct {
    GT_BIT tunnelTerminate;
    GT_U32 passengerPacketType;
    GT_U32 vlanAssignmentCmd;
    GT_U16 vlanId;
    GT_BIT enableRssiUpdate;
    GT_BIT enableBridgeAutolearn;
    GT_BIT enableNaToCpu;
    SKERNEL_EXT_PACKET_CMD_ENT unknownSaCmd;
    GT_U32 qosMode;
    GT_U32 qosProfile;
    GT_U32 up;
    GT_U32 qosTidMappingProfile;
    SKERNEL_VIRT_PORT_STC srcVirtualPortAssignment;
    GT_BIT enableLocalSwitching;
    SKERNEL_EXT_PACKET_CMD_ENT arpCmd;
    GT_U32 ieeeReservedMcastCmdProfile;
    GT_U32 sstId;
    GT_BIT ingressOsmRedirect;
} SKERNEL_FRAME_CHEETAH_CAPWAP_ACTION_STC;
typedef struct {
    GT_U32 frameControlType;
    GT_U32 frameControlSubType;
    GT_BIT frameControlToDs;
    GT_BIT frameControlFromDs;
    GT_BIT frameControlWep;
    GT_U8 *address1Ptr;
    GT_U8 *address2Ptr;
    GT_U8 *address3Ptr;
    GT_U8 *address4Ptr;
    GT_U8 *frameBodyPtr;
    GT_U8 *payloadPtr;
    GT_U8 *bssidPtr;
    GT_U8 *macSaPtr;
    GT_U8 *macDaPtr;
    GT_U32 etherType;
    GT_BOOL hasTid;
    GT_U32 tid802dot11e;
} SKERNEL_FRAME_CHEETAH_CAPWAP_DESCR_802_11_STC;
typedef struct {
    GT_U8 *macDa;
    GT_U8 *payloadPtr;
} SKERNEL_FRAME_CHEETAH_CAPWAP_DESCR_802_3_STC;
typedef struct {
    GT_BOOL doLookup;
    GT_BOOL tunnelTerminated;
    GT_U8 *preamblePtr;
    GT_U32 preambleVersion;
    GT_U32 preamblePayloadType;
    GT_U8 *dtlsPtr;
    GT_U8 *headerPtr;
    GT_U32 word0;
    GT_U32 version;
    GT_U32 radioId;
    GT_U32 headerLen;
    SKERNEL_FRAME_WIRELESS_BINDING_IDENTIFIER_ENT wirelessBindId;
    GT_BIT tBit;
    GT_BIT fBit;
    GT_BIT lBit;
    GT_BIT wBit;
    GT_BIT mBit;
    GT_BIT kBit;
    GT_U32 flags;
    GT_U32 fragmentId;
    GT_U32 fragmentOffset;
    GT_U32 radioMacAddressLength;
    GT_U8 *radioMacAddressPtr;
    SKERNEL_FRAME_WIRELESS_BINDING_IDENTIFIER_ENT wirelessSpecificInformationWirelessId;
    GT_U32 wirelessSpecificInformationLength;
    GT_U32 wirelessSpecificInformationData;
    GT_BOOL rssiValid;
    GT_U32 rssi;
    GT_U8 *payloadHeaderPtr;
    SKERNEL_FRAME_CHEETAH_CAPWAP_DESCR_802_11_STC frame802dot11Info;
    SKERNEL_FRAME_CHEETAH_CAPWAP_DESCR_802_3_STC frame802dot3Info;
    GT_U8 *passengerL3Ptr;
    GT_U8 *bssidOrTaOrRadioMacPtr;
    GT_BOOL validAction;
    SKERNEL_FRAME_CHEETAH_CAPWAP_ACTION_STC action;
    struct {...} descOriginal;
    struct {...} egressInfo;
} SKERNEL_FRAME_CHEETAH_DESCR_CAPWAP_STC;
typedef struct SKERNEL_FRAME_CHEETAH_DESCR_STCT SKERNEL_FRAME_CHEETAH_DESCR_STC;
struct SKERNEL_FRAME_CHEETAH_DESCR_STCT;
typedef struct SKERNEL_FRAME_CHEETAH_DESCR_STCT * SKERNEL_FRAME_CHEETAH_DESCR_STCT_PTR;
typedef struct {
    SBUF_BUF_ID frameBuf;
    GT_U8 *dstMacPtr;
    GT_U8 *ipHeaderPtr;
    GT_U8 *l4HeaderPtr;
    GT_U16 byteCount;
    GT_U16 frameType;
    GT_U16 srcTrunkId;
    GT_U32 srcPort;
    GT_BIT dsaTagged;
    GT_U32 uplink;
    GT_U8 appendCrc;
    GT_U8 mdb;
    GT_U8 dropPrecedence;
    GT_U8 inputIncapsulation;
    GT_U8 srcVlanTagged;
    GT_U8 dstVlanTagged;
    GT_U8 vlanCmd;
    GT_U8 userPriorityTag;
    GT_U16 vid;
    GT_U8 trafficClass;
    GT_U8 controlTrap;
    GT_U8 pbduTrap;
    GT_U8 arpTrap;
    GT_U8 igmpTrap;
    GT_U8 macRangeTrap;
    GT_U8 macRangeDrop;
    GT_U8 macSaLookupResult;
    GT_U8 macRangeCmd;
    GT_U8 saLookUpCmd;
    GT_U8 daLookUpCmd;
    GT_U8 islockPort;
    GT_U8 lockPortCmd;
    GT_U8 invalidSaDrop;
    GT_U8 ingressFilterOut;
    GT_U8 stpState;
    GT_U8 l2Move;
    GT_U8 learnEn;
    GT_U8 pktCmd;
    GT_U8 rxSniffed;
    GT_U8 txSniffed;
    GT_U8 excludeInPort;
    GT_U8 useVidx;
    union {...} bits15_2;
    GT_U8 macDaLookupResult;
    GT_U8 macDaType;
    GT_U8 flowMirrorCause;
    GT_U8 flowTemplate;
    SKERNEL_FLOW_REDIRECT_ENT flowRedirectCmd;
    GT_U32 flowNhlfeOffset;
    GT_U8 flowCmd;
    GT_U8 doHa;
    GT_U32 ipv4SIP;
    GT_U32 ipv4DIP;
    GT_U8 doRout;
    GT_U8 doClassify;
    GT_U8 ipm;
    void *ipmPointer;
    GT_U16 ipmDeviceMembers;
    GT_U8 srcDevice;
    GT_U32 vidHasNoLocalMember;
    GT_U32 vidHasNoUplinkMember;
    GT_U8 llt;
    GT_U8 outLifType;
    GT_U8 outLinkLayer;
    GT_U8 outTunnelLayer;
    GT_U8 ipm_1;
    GT_U8 sniffed;
    GT_U16 flowId;
    GT_U8 decTtl;
    GT_U8 removeIPv4Tunnel;
    GT_U8 mplsCmd;
    GT_U8 nlpAboveMpls;
    GT_U32 label;
    void *arpOrTunnelPrt;
    GT_U8 modifyDscpOrExp;
    GT_U8 dscp;
    GT_U8 exp;
    GT_U8 copyTtl;
    GT_U8 l2ce;
    GT_U8 majorTemplate;
    GT_U8 setVrId;
    GT_U16 vrId;
    GT_U16 inLifNumber;
    GT_U16 pclBaseAddr;
    GT_U16 pclMaxHops;
    GT_U16 pclNum;
    SKERNEL_TIGER_INLIF_CALSSIFICATION_TYPE_ENT inLifClassify;
    GT_U16 doMirrorToCpu;
    GT_U8 trapMcLocalScope;
    GT_U8 trapReservedDip;
    GT_U8 trapIntDip;
    GT_U16 ecmpHash;
    GT_U32 nextHopPtr;
    POLICY_SWITCH_TYPE_ENT policySwitchType;
    IPV4_LPM_ROUT_METHOD_ENT nextHopRoutMethod;
    GT_U8 nextHopEcpQosSize;
    GT_U8 isGIpm;
    GT_U8 isGSIpm;
    GT_U8 isDefaultIpm;
    GT_U8 doIpv4Lpm;
    GT_U8 doIpmRout;
    GT_U32 lpmKey;
    GT_U8 enReservedDip;
    GT_U8 enRestrictedDip;
    GT_U8 trapReservedSip;
    GT_U8 trapRestrictedSip;
    GT_U8 mcLocalScopeEn;
    GT_U8 ipV6site;
    GT_U8 ipv6Icmp;
    GT_U8 igmpDetect;
    GT_U8 defNextHop;
    GT_U8 ipV4Mgmt;
    GT_U8 ipV6Mgmt;
    GT_U8 ipv4Ripv1;
    IPV4_LPM_BUCKET_TYPE_ENT rootBucketType;
    GT_U32 nextLookupPtr;
    GT_U8 bvIdx;
    IPV4_LPM_RESULT_ENT lpmResult;
    GT_U8 ipv4Done;
    GT_U8 ttlDecrement;
    GT_U8 ttl;
    GT_U8 ipv4CounterSet;
    GT_U32 LLL_outLif;
    GT_U32 arpPointer;
    GT_U32 mll;
    GT_U32 deviceVidx;
    GT_U32 Tunnel_outLif0To31;
    GT_U16 Tunnel_outLif32To41;
    GT_BOOL tcbDidDrop;
    GT_U16 traffCondOffset;
    GT_BOOL activateTC;
    GT_BOOL activateCount;
    GT_U32 pclId0;
    GT_U32 pclId1;
    GT_U8 doPcl;
    GT_U8 pclProfile;
    GT_U8 pclLongLkup0;
    GT_U8 pclLongLkup1;
    GT_U8 doMpls;
    GT_U8 *mplsTopLablePtr;
    MPLS_LABELINFO_STC mplsLabels[2];
    GT_U8 mplsDone;
    GT_U8 mplsMtuExceed;
    GT_U32 mplsPtr;
    GT_BOOL portProtMatch;
    GT_U8 portProtTc;
    GT_U8 forceL3Cos;
    GT_U8 saDaTc;
    GT_BOOL privEdgeVlanEn;
    GT_U32 *extendTxPktPtr;
} SKERNEL_FRAME_DESCR_STC;
typedef struct SKERNEL_FRAME_PIPE_DESCR_STCT SKERNEL_FRAME_PIPE_DESCR_STC;
struct SKERNEL_FRAME_PIPE_DESCR_STCT;
typedef struct SKERNEL_FRAME_PIPE_DESCR_STCT * SKERNEL_FRAME_PIPE_DESCR_STCT_PTR;
typedef struct {
    SBUF_BUF_ID frameBuf;
    GT_U16 byteCount;
    GT_U8 *dstMacPtr;
    GT_U8 *ipHeaderPtr;
    GT_U32 srcPort;
    GT_U16 vid;
    struct {...} priorityInfo;
    struct {...} ipPriority;
    struct {...} daType;
    GT_U8 igmpSnoop;
    GT_U32 destPortVector;
    GT_U8 notRateLimit;
    GT_U32 dbNum;
    GT_U8 saHit;
    GT_U8 saUpdate;
    GT_U8 daHit;
    GT_U8 vtuHit;
    GT_U8 vtuMiss;
    GT_U8 spOk;
    GT_U32 vtuVector;
    GT_U8 Mgmt;
    GT_U8 daStatic;
    GT_U8 fPri;
    GT_U8 qPri;
    GT_U8 pktCmd;
    GT_BOOL oversizeDrop;
    GT_U8 srcVlanTagged;
    GT_U8 srcDevice;
    GT_U8 cascade;
    TAG_COMMAND_E marvellTagCmd;
    GT_U32 origSrcPortOrTrnk;
    GT_U8 rxSnif;
    GT_U8 txSnif;
    GT_U8 pauseTime;
    GT_U16 tagVal;
    GT_U8 filtered;
    GT_U8 xdrop;
    GT_U32 tpv;
    GT_U8 mcfi;
    GT_U8 yellow;
    GT_U8 tagOut;
    GT_U8 srcTrunk;
    GT_U8 trunkId;
    GT_U8 useDt;
    GT_U8 dtPri;
    GT_U8 dtDei;
    GT_U16 dtVid;
    GT_U8 modified;
    GT_U8 arp;
    GT_U8 fcIn;
    GT_U8 fcSpd;
    GT_U32 atuEntry[2];
    GT_U32 atuEntryAddr;
    GT_U8 priOnlyTag;
    GT_U8 pppOE;
    GT_U8 vBas;
    GT_U8 eType;
    GT_U8 iHl;
    GT_U32 sBit;
    GT_U32 policyVid;
    GT_U32 policyDa;
    GT_U32 policySa;
    GT_U8 overLimit;
    GT_U8 saNoDpv;
    GT_U32 uDPpolicy;
    GT_U32 oPt82policy;
    GT_U32 vBaspolicy;
    GT_U32 pPppolicy;
    GT_U32 eTypepolicy;
    GT_U32 vTupolicy;
    GT_U32 sApolicy;
    GT_U32 dAPpolicy;
    GT_U8 polMirror;
    GT_U8 polTrap;
    GT_U32 pvt;
    GT_U8 rmtMngmt;
    GT_U16 remethrtype;
    GT_U16 reqFormat;
    GT_U16 reqCode;
    GT_U8 reqData[490];
    GT_BIT isProviderPort;
    GT_BOOL calcCrc;
} SKERNEL_FRAME_SOHO_DESCR_STC;
typedef enum {SKERNEL_FRAME_TR101_VLAN_EGR_TAG_UNTAGGED_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_TAG0_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_TAG1_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_OUT_TAG0_IN_TAG1_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_OUT_TAG1_IN_TAG0_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_PUSH_TAG0_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_POP_OUT_TAG_E, SKERNEL_FRAME_TR101_VLAN_EGR_TAG_DO_NOT_MODIFIED_E} SKERNEL_FRAME_TR101_VLAN_EGR_TAG_STATE_ENT;
typedef enum {SKERNEL_FRAME_TR101_VLAN_INGR_TAG_UNTAGGED_E, SKERNEL_FRAME_TR101_VLAN_INGR_TAG_TAG0_E, SKERNEL_FRAME_TR101_VLAN_INGR_TAG_TAG1_E, SKERNEL_FRAME_TR101_VLAN_INGR_TAG_OUT_TAG0_IN_TAG1_E, SKERNEL_FRAME_TR101_VLAN_INGR_TAG_OUT_TAG1_IN_TAG0_E} SKERNEL_FRAME_TR101_VLAN_INGR_TAG_STATE_ENT;
typedef enum {SKERNEL_FRAME_TR101_VLAN_TAG_INNER_E, SKERNEL_FRAME_TR101_VLAN_TAG_OUTER_E, SKERNEL_FRAME_TR101_VLAN_TAG_NOT_FOUND_E} SKERNEL_FRAME_TR101_VLAN_TAG_CLASS_ENT;
typedef enum {SKERNEL_FRAME_TUNNEL_START_TYPE_MPLS_E, SKERNEL_FRAME_TUNNEL_START_TYPE_IPV4_E, SKERNEL_FRAME_TUNNEL_START_TYPE_MIM_E, SKERNEL_FRAME_TUNNEL_START_TYPE_TRILL_E, SKERNEL_FRAME_TUNNEL_START_TYPE_GENERIC_E, SKERNEL_FRAME_TUNNEL_START_TYPE_IPV6_E, SKERNEL_FRAME_TUNNEL_START_TYPE_GENERIC_IPV4_E, SKERNEL_FRAME_TUNNEL_START_TYPE_GENERIC_IPV6_E} SKERNEL_FRAME_TUNNEL_START_TYPE_ENT;
typedef enum {SKERNEL_FRAME_WIRELESS_BINDING_IDENTIFIER_IEEE_802_11_E = 1, SKERNEL_FRAME_WIRELESS_BINDING_IDENTIFIER_IEEE_802_16_E, SKERNEL_FRAME_WIRELESS_BINDING_IDENTIFIER_EPCGLOBAL_E} SKERNEL_FRAME_WIRELESS_BINDING_IDENTIFIER_ENT;
typedef struct {
    GT_U8 *macDaSaPtr;
    GT_U8 *outerVlanTagPtr;
    GT_U8 *timeStampTagPtr;
    GT_U8 *vlanTag0Ptr;
    GT_U8 *vlanTag1Ptr;
    GT_U8 *l3StartOffsetPtr;
    GT_U8 *tunnelStartL3StartOffsetPtr;
    GT_U8 *tunnelStartL2StartOffsetPtr;
    GT_BIT xponChanges;
    GT_U32 xPonVid;
    GT_BIT modifyVid;
    GT_U32 outerVid;
    GT_U32 prePendLength;
    GT_U32 evbBpeRspanTagSize;
    struct {...} qos;
    GT_BOOL useArpForDa;
    GT_BOOL useArpForSa;
    GT_U32 paddingZeroForLess64BytesLength;
    GT_U32 epclKeyVid;
    struct {...} bpe_802_1br_ingressInfo;
    GT_U32 dsaTagLength;
    GT_U8 *forcedFromCpuDsaPtr;
} SKERNEL_HA_TO_EPCL_INFO_STC;
typedef enum {SKERNEL_INNER_PACKET_TYPE_IP, SKERNEL_INNER_PACKET_TYPE_MPLS, SKERNEL_INNER_PACKET_TYPE_ETHERNET_WITH_CRC, SKERNEL_INNER_PACKET_TYPE_ETHERNET, SKERNEL_INNER_PACKET_TYPE_UNKNOWN} SKERNEL_INNER_PACKET_TYPE_ENT;
typedef struct {
    GT_BOOL usePeerInfo;
    GT_U8 peerDeviceId;
    GT_U8 peerPortNum;
} SKERNEL_INTERNAL_CONNECTION_INFO_STC;
typedef struct {
    SKERNEL_REGISTERS_DB_TYPE_ENT registersDbType;
    GT_U32 registerOffsetInDb;
    GT_CHAR *registerName;
    GT_U32 registerAddrOffset;
    GT_U32 mgUnitIndex;
} SKERNEL_INTERRUPT_BASIC_REG_INFO_STC;
typedef struct SKERNEL_INTERRUPT_REG_INFO_STCT SKERNEL_INTERRUPT_REG_INFO_STC;
struct SKERNEL_INTERRUPT_REG_INFO_STCT;
typedef struct {
    GT_U32 myBitIndex;
    struct SKERNEL_INTERRUPT_REG_INFO_STCT *interruptPtr;
    struct {...} interruptFatherReplace;
} SKERNEL_INTERRUPT_REG_MY_FATHER_INFO;
typedef struct {
    GT_U32 bmpOfMyBitsToTriggerFather;
    GT_U32 bitInFather;
} SKERNEL_INTERRUPT_REG_SPLIT_INFO_STC;
typedef enum {SKERNEL_ETHERNET_II_E = 1, SKERNEL_LLC_E, SKERNEL_LLC_SNAP_E = 4} SKERNEL_L2_ENCAPSULATION_TYPE_ENT;
typedef enum {SKERNEL_LTT_MAX_NUMBER_OF_PATHS_8_E, SKERNEL_LTT_MAX_NUMBER_OF_PATHS_64_E} SKERNEL_LTT_MAX_NUMBER_OF_PATHS_ENT;
typedef enum {SKERNEL_UNICAST_MAC_E, SKERNEL_MULTICAST_MAC_E, SKERNEL_BROADCAST_MAC_E, SKERNEL_BROADCAST_ARP_E} SKERNEL_MAC_TYPE_ENT;
typedef struct {
    GT_U32 portNum;
} SKERNEL_MIB_COUNTER_INFO_STC;
typedef enum {SKERNEL_MIRROR_MODE_HOP_BY_HOP_E, SKERNEL_MIRROR_MODE_SRC_BASED_OVERRIDE_SRC_TRG_E, SKERNEL_MIRROR_MODE_END_TO_END_E} SKERNEL_MIRROR_MODE_ENT;
typedef unsigned int SKERNEL_MIRROR_TYPE_BMP;
typedef enum {SKERNEL_MLL_SELECT_EXTERNAL_E, SKERNEL_MLL_SELECT_INTERNAL_E} SKERNEL_MLL_SELECT_ENT;
typedef enum {SKERNEL_MTAG_CMD_TO_CPU_E, SKERNEL_MTAG_CMD_FROM_CPU_E, SKERNEL_MTAG_CMD_TO_TRG_SNIFFER_E, SKERNEL_MTAG_CMD_FORWARD_E} SKERNEL_MTAG_CMD_ENT;
typedef struct {
    GT_U32 numBaseAddresses;
    GT_U32 *multiUnitsBaseAddressPtr;
    GT_BOOL *multiUnitsBaseAddressValidPtr;
} SKERNEL_MULTI_INSTANCE_TABLE_INFO_STC;
typedef struct {
    GT_U32 oamProfile;
    GT_U32 opCode;
    GT_U32 megLevel;
    GT_BIT oamProcessEnable;
    GT_BIT oamEgressProcessEnable;
    GT_BIT lmCounterCaptureEnable;
    GT_BIT lmCounterInsertEnable;
    GT_U32 lmCounter;
    GT_BIT timeStampEnable;
    GT_U32 timeStampTagged;
    GT_U32 offsetIndex;
    GT_U64 hashIndex;
    GT_U32 oamTxPeriod;
    GT_U32 oamRdi;
} SKERNEL_OAM_INFO_STC;
typedef enum {SKERNEL_PKT_FORWARD_E, SKERNEL_PKT_DROP_E, SKERNEL_PKT_TRAP_CPU_E, SKERNEL_PKT_MIRROR_CPU_E} SKERNEL_PACKET_CMD_ENT;
typedef struct {
    GT_U32 step;
    GT_U32 divider;
    GT_U32 modulo;
    GT_U32 outOfRangeIndex;
} SKERNEL_PARAMETER_INFO_STC;
typedef enum {SKERNEL_PBR_MODE_PBR_E, SKERNEL_PBR_MODE_PBR_LPM_E} SKERNEL_PBR_MODE_ENT;
typedef enum {SKERNEL_PCL_LOOKUP_MODE_PORT_E, SKERNEL_PCL_LOOKUP_MODE_VID_E, SKERNEL_PCL_LOOKUP_MODE_EPORT_E, SKERNEL_PCL_LOOKUP_MODE_SRC_TRG_E, SKERNEL_PCL_LOOKUP_MODE_DESCRIPTOR_INDEX_E = 255} SKERNEL_PCL_LOOKUP_MODE_ENT;
typedef enum {SKERNEL_POLICER_TRIGGER_MODE_NONE_E, SKERNEL_POLICER_TRIGGER_MODE_PORT_E, SKERNEL_POLICER_TRIGGER_MODE_FLOW_E, SKERNEL_POLICER_TRIGGER_MODE_E_PORT_E, SKERNEL_POLICER_TRIGGER_MODE_E_VLAN_E} SKERNEL_POLICER_TRIGGER_MODE_ENT;
typedef struct SKERNEL_PORTS_BMP_STCT SKERNEL_PORTS_BMP_STC;
struct SKERNEL_PORTS_BMP_STCT;
typedef struct {
    SKERNEL_PORT_STATE_ENT state;
    GT_BOOL supportMultiState;
    SKERNEL_PORT_NATIVE_LINK_ENT linkStateWhenNoForce;
    GT_BOOL isForcedLinkUp;
    GT_BOOL isForcedLinkDown;
    SKERNEL_INTERNAL_CONNECTION_INFO_STC peerInfo;
    GT_U32 portCurrentTimeWindow;
    SKERNEL_PORT_LOOPBACK_FORCE_MODE_ENT loopbackForceMode;
    GT_BOOL isMibCountersCaptured;
    GT_U32 mtiTxCountersCapture;
    SKERNEL_TIMESTAMP_QUEUE_STC timestampEgressQueue[2];
    SKERNEL_TIMESTAMP_QUEUE_STC timestampMacEgressQueue;
    GT_BOOL physicalToVirtualPortMappingEn;
    GT_U32 virtualMapping;
    struct {...} goldenModelInfo;
    GT_U32 mibBaseAddr;
    SKERNEL_PORT_MIF_INFO_STC mifInfo[4];
    GT_BOOL portSupportPreemption;
    GT_BOOL isOnBoardInternalPort;
    GT_BOOL usedByOtherConnection;
    GT_BIT forbidSlan;
} SKERNEL_PORT_INFO_STC;
typedef enum {SKERNEL_PORT_LOOPBACK_NOT_FORCED_E, SKERNEL_PORT_LOOPBACK_FORCE_ENABLE_E} SKERNEL_PORT_LOOPBACK_FORCE_MODE_ENT;
typedef struct {
    GT_U32 txEnabled;
    GT_U32 mifType;
    GT_U32 txMacNum;
    GT_U32 egress_isPreemptiveChannel;
} SKERNEL_PORT_MIF_INFO_STC;
typedef enum {SKERNEL_PORT_NATIVE_LINK_DOWN_E, SKERNEL_PORT_NATIVE_LINK_UP_E} SKERNEL_PORT_NATIVE_LINK_ENT;
typedef enum {SKERNEL_PORT_SPEED_10_E, SKERNEL_PORT_SPEED_100_E, SKERNEL_PORT_SPEED_1000_E, SKERNEL_PORT_SPEED_10000_E, SKERNEL_PORT_SPEED_100_G_E, SKERNEL_PORT_SPEED_NA_E} SKERNEL_PORT_SPEED_ENT;
typedef enum {SKERNEL_PORT_STATE_NOT_EXISTS_E, SKERNEL_PORT_STATE_FE_E, SKERNEL_PORT_STATE_GE_E, SKERNEL_PORT_STATE_GE_STACK_A0_E, SKERNEL_PORT_STATE_GE_STACK_A1_E, SKERNEL_PORT_STATE_XG_E, SKERNEL_PORT_STATE_XLG_40G_E, SKERNEL_PORT_STATE_CG_100G_E, SKERNEL_PORT_STATE_MTI___START___E, SKERNEL_PORT_STATE_MTI_50_E, SKERNEL_PORT_STATE_MTI_100_E, SKERNEL_PORT_STATE_MTI_200_E, SKERNEL_PORT_STATE_MTI_400_E, SKERNEL_PORT_STATE_MTI_USX_E, SKERNEL_PORT_STATE_MTI_CPU_E, 
    SKERNEL_PORT_STATE_MTI___END___E} SKERNEL_PORT_STATE_ENT;
typedef enum {SKERNEL_PRECEDENCE_ORDER_SOFT, SKERNEL_PRECEDENCE_ORDER_HARD} SKERNEL_PRECEDENCE_ORDER_ENT;
typedef enum {SKERNEL_PTP_PRECISION_MODE_TSTF_E, SKERNEL_PTP_PRECISION_MODE_USX_E, SKERNEL_PTP_PRECISION_MODE_CF_E, SKERNEL_PTP_PRECISION_MODE_TS_DISABLE_E} SKERNEL_PTP_PRECISION_MODE_ENT;
typedef enum {SKERNEL_PTP_TRIGGER_TYPE_PTP_OVER_L2_E, SKERNEL_PTP_TRIGGER_TYPE_PTP_OVER_IPV4_UDP_E, SKERNEL_PTP_TRIGGER_TYPE_PTP_OVER_IPV6_UDP_E, SKERNEL_PTP_TRIGGER_TYPE_RESERVED_E} SKERNEL_PTP_TRIGGER_TYPE_ENT;
typedef enum {SKERNEL_QOS_PROF_PRECED_SOFT, SKERNEL_QOS_PROF_PRECED_HARD} SKERNEL_QOS_PROF_PRECED_ENT;
typedef enum {SKERNEL_QOS_ROUTE_INDEX_FORMULA_TYPE_0_E, SKERNEL_QOS_ROUTE_INDEX_FORMULA_TYPE_1_E} SKERNEL_QOS_ROUTE_INDEX_FORMULA_TYPE_ENT;
typedef enum {SKERNEL_REGISTERS_DB_TYPE_LEGACY_E, SKERNEL_REGISTERS_DB_TYPE_SIP5_E, SKERNEL_REGISTERS_DB_TYPE_DFX_E, SKERNEL_REGISTERS_DB_TYPE_INTERNAL_PCI_E, SKERNEL_REGISTERS_DB_TYPE_PIPE_E, SKERNEL_REGISTERS_DB_TYPE_NOT_VALID_E, SKERNEL_REGISTERS_DB_TYPE__LAST___E} SKERNEL_REGISTERS_DB_TYPE_ENT;
typedef struct {
    GT_BIT supportTasks;
    SKERNEL_SDMA_TRANSMIT_DATA_STC sdmaTransmitData[8];
} SKERNEL_SDMA_SUPPORT_STC;
typedef struct {
    struct SKERNEL_DEVICE_OBJECT_T *devObjPtr;
    GT_U32 mgUnit;
    GT_TASK_HANDLE taskHandle;
    GT_U32 txQueue;
    GT_BOOL txQueueEn;
    GT_U32 txQueuePacketGenCfgReg;
    GT_U32 txQueuePacketCountCfgReg;
    GT_U32 txQueueCounterReg;
} SKERNEL_SDMA_TRANSMIT_DATA_STC;
typedef GT_BOOL (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U32) SKERNEL_SMEM_IS_DEVICE_MEMORY_OWNER;
typedef enum {SKERNEL_SRC_RX_NOT_REPLICATED_TYPE_E, SKERNEL_SRC_RX_REPLICATED_TYPE_E, SKERNEL_SRC_TX_REPLICATED_TYPE_E} SKERNEL_SRC_TYPE_ENT;
typedef enum {SKERNEL_STP_DISABLED_E, SKERNEL_STP_BLOCK_LISTEN_E, SKERNEL_STP_LEARN_E, SKERNEL_STP_FORWARD_E} SKERNEL_STP_ENT;
typedef struct {
    GT_UINTPTR placeHolderFor1Parameter;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC stp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC mcast;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC vlan;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ingrStc;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressStc;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC statisticalRateLimit;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC cpuCode;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC qosProfile;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC fdb;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC portVlanQosConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pclActionTcamData;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC arp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC vlanPortMacSa;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pclAction;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipProtCpuCode;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tunnelStart;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tunnelStartGenericIpProfile;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC vrfId;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ingressVlanTranslation;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressVlanTranslation;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC macToMe;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC mll;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC mllOutInterfaceConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC mllOutInterfaceCounter;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC trunkNumOfMembers;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC nonTrunkMembers;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC designatedPorts;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC cfiUpQoSProfileSelect;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ieeeTblSelect;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ieeeRsrvMcCpuIndex;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC routeNextHopAgeBits;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC xgPortMibCounters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC xgPortMibCounters_1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressPolicerMeters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressPolicerCounters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressPolicerConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policer1Config;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerTblAccessData;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerMeterPointer;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerIpfixWaAlert;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerIpfixAgingAlert;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerTimer;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerReMarking;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerManagementCounters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerHierarchicalQos;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerQosAttributes;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressVlan;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressStp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC l2PortIsolation;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC l3PortIsolation;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC sst;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC secondTargetPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipclUserDefinedBytesConf;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiUserDefinedBytesConf;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pearsonHash;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC crcHashMask;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC crcHashMode;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tcamBistArea;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tcamArrayCompareEn;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haUp0PortKeepVlan1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPhysicalPortAttribute;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPhysicalPort2Attribute;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiQcnToPauseTimerMap;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPreTtiLookupIngressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPostTtiLookupIngressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiTrillAdjacencyTcam;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiTrillRbid;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPort2QueueTranslation;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bridgeIngressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bridgeIngressEPortLearnPrio;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bridgeIngressTrunk;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bridgePhysicalPortEntry;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bridgePhysicalPortRateLimitCountersEntry;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bridgeIngressPortMembership;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ingressSpanStateGroupIndex;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egressAndTxqIngressEcid;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxIngressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxIngressEVlan;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxQoSProfileOffsets;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxAccessMatrix;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxNextHop;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxEcmpPointer;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipvxEcmp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC l2MllLtt;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqIngressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqL2EcmpLtt;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqTrunkLtt;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqL2Ecmp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pathUtilization0;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pathUtilization1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pathUtilization2;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pathUtilization3;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC sourcePortHash;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqE2Phy;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC txqEgressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC txqDistributorDeviceMapTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haEgressEPortAttr1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haEgressEPortAttr2;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haEgressPhyPort1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haEgressPhyPort2;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haGlobalMacSa;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haQosProfileToExp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haEpclUserDefinedBytesConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerEPortEVlanTrigger;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerIpfix1StNPackets;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC l2MllVirtualPortToMllMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC l2MllVidxToMllMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqLogicalPortEgressVlanMember;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqVlanMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC eqPhysicalPortIngressMirrorIndexTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagTargetPortMapper;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagEVlanDescriptorAssignmentAttributes;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfShtVidMapper;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfShtEportEVlanFilter;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfShtEgressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagEgressEPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfShtEVlanAttribute;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfShtEVlanSpanning;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC nonTrunkMembers2;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagPortTargetAttribute;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagPortSourceAttribute;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagTcDpMapper;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagCpuCodeToLbMapper;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagFwdFromCpuToLbMapper;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC egfQagVlanQOffsetMappingTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamAgingTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamMegExceptionTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamSrcInterfaceExceptionTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamInvalidKeepAliveHashTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamRdiStatusChangeExceptionTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamExcessKeepAliveTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamExceptionSummaryTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamOpCodePacketCommandTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamLmOffsetTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamTimeStampOffsetTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamTxPeriodExceptionTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamProtectionLocStatusTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC oamTxProtectionLocStatusTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ePortToLocMappingTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC txProtectionSwitchingTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ptpPacketCommandTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ptpTargetPortTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ptpSourcePortTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ERMRKQosMapTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lpmIpv4VrfId;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lpmIpv6VrfId;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lpmFcoeVrfId;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lpmEcmp;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lpmAgingMemory;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tcamMemory;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC globalActionTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclConfigTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl0UdbSelect;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl1UdbSelect;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl2UdbSelect;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl0UdbReplacement;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl1UdbReplacement;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl2UdbReplacement;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclUdbReplacement;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclUdbSelect;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclExactMatchProfileIdMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclPortLatencyMonitoring;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclSourcePhysicalPortMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC epclTargetPhysicalPortMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC Shared_Queue_Maximum_Queue_Limits;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC Queue_Limits_DP0_Enqueue;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC Queue_Buffer_Limits_Dequeue;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC Queue_Descriptor_Limits_Dequeue;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC Queue_Limits_DP12_Enqueue;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC FC_Mode_Profile_TC_XOff_Thresholds;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC CN_Sample_Intervals;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC Scheduler_State_Variable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqQueuePortMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqProfiles;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqQueueConfiguration;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqPortProfile;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqTargetPhyPort;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqSrfMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqSrfConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqDaemons;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqHistoryBuffer;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqSrfCounters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqZeroBitVector0;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC preqZeroBitVector1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC efuseFeaturesDisableBypass;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC efuseDevIdBypass;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC idEfuseSlave;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC hdEfuseSlave;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC debugUnit;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC PHA_PPAThreadsConf1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC PHA_PPAThreadsConf2;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC PHA_targetPortData;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC PHA_sourcePortData;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ppuActionTable0;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ppuActionTable1;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ppuActionTable2;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ppuDauProfileTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC smuSngIrf;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC smuIrfCounters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tmDropQueueProfileId;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tmDropDropMasking;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tmEgressGlueTargetInterface;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC bmaPortMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pipe_PCP_dstPortMapTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pipe_PCP_portFilterTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pipe_PHA_haTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pipe_PHA_targetPortData;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pipe_PHA_srcPortData;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lmuStatTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lmuCfgTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC exactMatchAutoLearnedEntryIndexTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC queueGroupLatencyProfileConfigTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiEmProfileId1Mapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiEmProfileId2Mapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPacketTypeTcamProfileIdMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiPortAndPacketTypeTcamProfileIdMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl0SourcePortConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl1SourcePortConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ipcl2SourcePortConfig;
    GT_UINTPTR placeHolderFor2Parameters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pclTcam;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pclTcamMask;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tcpUdpDstPortRangeCpuCode;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC routerTcam;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiAction;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC trunkMembers;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC deviceMapTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policer;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerCounters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC policerConformanceLevelSign;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ieeeRsrvMcConfTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC logicalTrgMappingTable;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC pclConfig;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC portProtocolVidQoSConf;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC dscpToQoSProfile;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC expToQoSProfile;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC dscpToDscpMap;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC haPtpDomain;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC cncMemory;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC lpmMemory;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC txqPdxQueueGroupMap;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ttiVrfidEvlanMapping;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tcamProfileSubkeySizeAndMux;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC tcamSubkeyMux2byteUnits;
    GT_UINTPTR placeHolderFor3Parameters;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC upToQoSProfile;
    SKERNEL_TABLE_4_PARAMETERS_INFO_STC ptpLocalActionTable;
    GT_UINTPTR placeHolderFor4Parameters;
    GT_UINTPTR placeHolder_MUST_BE_LAST;
} SKERNEL_TABLES_INFO_STC;
typedef struct {
    SKERNEL_COMMON_TABLE_INFO_STC commonInfo;
    SKERNEL_PARAMETER_INFO_STC paramInfo[4];
} SKERNEL_TABLE_4_PARAMETERS_INFO_STC;
typedef struct {
    GT_U32 numFields;
    struct SNET_ENTRY_FORMAT_TABLE_STCT *fieldsInfoPtr;
    char **fieldsNamePtr;
    char *formatNamePtr;
} SKERNEL_TABLE_FORMAT_INFO_STC;
typedef struct {
    SIM_OS_TASK_COOKIE_INFO_STC generic;
    struct SIM_LOG_FRAME_INFO_STCT *logInfoPtr;
} SKERNEL_TASK_COOKIE_INFO_STC;
typedef enum {SKERNEL_TIGER_INLIF_PER_PORT_ENTRY_E, SKERNEL_TIGER_INLIF_PER_VLAN_ENTRY_E, SKERNEL_TIGER_INLIF_PER_VLAN_PORT_HYBRID_ENRTY_E, SKERNEL_TIGER_INLIF_PER_UNKNOWN_E} SKERNEL_TIGER_INLIF_CALSSIFICATION_TYPE_ENT;
typedef enum {SKERNEL_TIMESTAMP_ACTION_NONE_E, SKERNEL_TIMESTAMP_ACTION_FORWARD_E, SKERNEL_TIMESTAMP_ACTION_DROP_E, SKERNEL_TIMESTAMP_ACTION_CAPTURE_E, SKERNEL_TIMESTAMP_ACTION_ADD_TIME_E, SKERNEL_TIMESTAMP_ACTION_ADD_CORRECTED_TIME_E, SKERNEL_TIMESTAMP_ACTION_CAPTURE_ADD_TIME_E, SKERNEL_TIMESTAMP_ACTION_CAPTURE_ADD_CORRECTED_TIME_E, SKERNEL_TIMESTAMP_ACTION_ADD_INGRESS_TIME_E, SKERNEL_TIMESTAMP_ACTION_CAPTURE_ADD_INGRESS_TIME_E, SKERNEL_TIMESTAMP_ACTION_CAPTURE_INGRESS_TIME_E, 
    SKERNEL_TIMESTAMP_ACTION_ADD_INGRESS_EGRESS_TIME_E, SKERNEL_TIMESTAMP_ACTION_ALL_E = 15} SKERNEL_TIMESTAMP_ACTION_ENT;
typedef enum {SKERNEL_TIMESTAMP_PACKET_FORMAT_PTPV2_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_PTPV1_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_Y1731_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_NTP_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_NTPR_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_NTPT_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_WAMP_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_RESERVED_E, SKERNEL_TIMESTAMP_PACKET_FORMAT_ALL_E = 15} SKERNEL_TIMESTAMP_PACKET_FORMAT_ENT;
typedef struct {
    GT_U32 theQueue[256][3];
    GT_U32 actualSize;
    GT_U32 insertIndex;
    GT_U32 removeIndex;
    GT_BOOL isFull;
    GT_BOOL isEmpty;
    GT_BOOL overwriteEnable;
} SKERNEL_TIMESTAMP_QUEUE_STC;
typedef enum {SKERNEL_TIMESTAMP_TAG_TYPE_UNTAGGED_E, SKERNEL_TIMESTAMP_TAG_TYPE_NON_EXTENDED_E, SKERNEL_TIMESTAMP_TAG_TYPE_EXTENDED_E, SKERNEL_TIMESTAMP_TAG_TYPE_HYBRID_E, SKERNEL_TIMESTAMP_TAG_TYPE_PIGGY_BACKED_E} SKERNEL_TIMESTAMP_TAG_TYPE_ENT;
typedef enum {SKERNEL_TIME_UNITS_NOT_VALID_E, SKERNEL_TIME_UNITS_MILI_SECONDS_E, SKERNEL_TIME_UNITS_MICRO_SECONDS_E, SKERNEL_TIME_UNITS_NANO_SECONDS_E, SKERNEL_TIME_UNITS_PICO_SECONDS_E, SKERNEL_TIME_UNITS__LAST__E} SKERNEL_TIME_UNITS_ENT;
typedef struct {
    SKERNEL_TIME_UNITS_ENT timeUnit;
    GT_U32 timeBetweenPackets;
} SKERNEL_TIME_UNIT_STC;
typedef struct {
    struct SKERNEL_DEVICE_OBJECT_T *deviceObjPtr;
    GT_U32 trafficGenNumber;
    GT_U8 *dataPatternPtr;
    GT_BOOL trafficGenActive;
} SKERNEL_TRAFFIC_GEN_STC;
typedef struct {
    SIM_TRANSMIT_QUEUE_STC onHoldPacketsArr[8];
    GT_U32 sip6NumPacketsPerTxDmaInTheTxq;
} SKERNEL_TXQ_PORT_INFO_STC;
typedef struct {
    SKERNEL_UPLINK_TYPE_ENT type;
    GT_U32 partnerDeviceID;
} SKERNEL_UPLINK_STC;
typedef enum {SKERNEL_UPLINK_TYPE_NONE_E, SKERNEL_UPLINK_TYPE_B2B_E, SKERNEL_UPLINK_TYPE_TO_FA_E, SKERNEL_UPLINK_TYPE_TO_PP_E} SKERNEL_UPLINK_TYPE_ENT;
typedef struct {
    GT_BOOL disableFatalError;
    SKERNEL_CONFORMANCE_LEVEL_ENT policerConformanceLevel;
    SKERNEL_TIME_UNIT_STC enhancedPolicerIfgTime;
    GT_BOOL printGeneralAllowed;
    GT_U32 printWarningAllowed;
} SKERNEL_USER_DEBUG_INFO_STC;
typedef struct {
    GT_U8 virtPort;
    GT_U8 virtDevNum;
} SKERNEL_VIRT_PORT_STC;
typedef enum {SKERNEL_VLAN_DEI_CFI_KEEP_E, SKERNEL_VLAN_DEI_CFI_SET_1_E, SKERNEL_VLAN_DEI_CFI_SET_0_E} SKERNEL_VLAN_DEI_CFI_ENT;
typedef struct {
    GT_BIT egressTagStateAssigned;
    GT_U32 egressTagState;
    GT_BIT unknownSaCmdAssigned;
    GT_U32 unknownSaCmd;
    GT_U32 srcMeshId;
    GT_U32 pwHasCw;
    GT_U32 pwTagMode;
    GT_U32 userTaggedAcEnable;
    GT_BIT targetLogicalPortIsNotVlanMember;
} SKERNEL_VPLS_INFO_STC;
typedef enum {SKERNEL_XCAT_TTI_MPLS_NOP_E, SKERNEL_XCAT_TTI_MPLS_SWAP_E, SKERNEL_XCAT_TTI_MPLS_PUSH_E, SKERNEL_XCAT_TTI_MPLS_POP_1_E, SKERNEL_XCAT_TTI_MPLS_POP_2_E, SKERNEL_XCAT_TTI_MPLS_POP_3_E, SKERNEL_XCAT_TTI_MPLS_POP_SWAP_E = 7, SKERNEL_XCAT_TTI_MPLS_POP2_SWAP_E, SKERNEL_XCAT_TTI_MPLS_POP3_SWAP_E} SKERNEL_XCAT_TTI_MPLS_COMMAND_ENT;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U32, GT_BOOL, GT_BOOL) SMAIN_DEV_SLAN_BIND_POST_FUNC;
typedef enum {SMAIN_DIRECTION_INGRESS_E, SMAIN_DIRECTION_EGRESS_E} SMAIN_DIRECTION_ENT;
typedef struct {
    SKERNEL_DEVICE_OBJECT_T_PTR deviceObj;
    GT_U32 portNumber;
    SBUF_BUF_ID buffId;
    SMAIN_SLAN_ID slanIdRx;
    SMAIN_SLAN_ID slanIdTx;
    GT_CHAR slanName[20];
} SMAIN_PORT_SLAN_INFO;
typedef void * SMAIN_SLAN_ID;
typedef struct SMEM_ACTIVE_MEM_ENTRY_T * SMEM_ACTIVE_MEM_ENTRY_STC_PTR;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR, SKERNEL_INTERRUPT_REG_INFO_STC **) SMEM_DEVICE_INTERRUPT_TREE_INIT_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_BOOL) SMEM_DEV_BACKUP_MEM_PROC_FUN;
typedef GT_U32 (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_BOOL) SMEM_DEV_HSR_PRP_TIMER_GET_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U32, GT_U32) SMEM_DEV_INTERRUPT_MPP_FUN;
typedef GT_U32 (*)(SKERNEL_DEVICE_OBJECT_T_PTR, GT_U32) SMEM_GET_MG_UNIT_INDEX_FROM_ADDRESS_FUN;
typedef GT_BOOL (*)(GT_U32, GT_U32, GT_U32) SMEM_GM_HW_IS_UNIT_USED_PROC_FUN;
typedef GT_U32 (*)(SKERNEL_DEVICE_OBJECT_T_PTR, GT_U32) SMEM_GOP_PORT_BY_ADDR_GET_FUN;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR) SMEM_GOP_REG_DB_INIT_FUN;
typedef struct SMEM_LINK_LIST_REGISTER_DEFAULT_VALUE_STCT SMEM_LINK_LIST_REGISTER_DEFAULT_VALUE_STC;
struct SMEM_LINK_LIST_REGISTER_DEFAULT_VALUE_STCT;
typedef GT_U32 (*)(SKERNEL_DEVICE_OBJECT_T_PTR, GT_U32) SMEM_MIB_PORT_BY_ADDR_GET_FUN;
typedef GT_STATUS (*)(SKERNEL_DEVICE_OBJECT_T_PTR, SMEM_UNIT_TYPE_ENT, GT_U32, ENHANCED_PORT_INFO_STC *) SMEM_PORT_INFO_GET_FUN;
typedef GT_U32 (*)(struct SMEM_REGISTER_DEFAULT_VALUE_STRUCT *, GT_U32) SMEM_REGISTER_DEFAULT_VALUE_FUNC_PTR;
typedef struct SMEM_REGISTER_DEFAULT_VALUE_STRUCT SMEM_REGISTER_DEFAULT_VALUE_STC;
struct SMEM_REGISTER_DEFAULT_VALUE_STRUCT;
typedef enum {SMEM_SIP5_PP_PLR_UNIT_IPLR_0_E, SMEM_SIP5_PP_PLR_UNIT_IPLR_1_E, SMEM_SIP5_PP_PLR_UNIT_EPLR_E, SMEM_SIP5_PP_PLR_UNIT__LAST__E} SMEM_SIP5_PP_PLR_UNIT_ENT;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR) SMEM_SPECIFIC_DEV_MEM_INIT_PART1_FUN;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR) SMEM_SPECIFIC_DEV_MEM_INIT_PART2_FUN;
typedef void (*)(SKERNEL_DEVICE_OBJECT_T_PTR) SMEM_SPECIFIC_DEV_UNIT_ALLOC_FUN;
typedef SKERNEL_DEVICE_OBJECT_T_PTR (*)(SKERNEL_DEVICE_OBJECT_T_PTR, GT_U32) SMEM_SUB_UNIT_MEMORY_GET;
typedef struct {
    GT_U32 unitBaseAddr;
    GT_U32 unitSizeInBytes;
} SMEM_UNIT_BASE_AND_SIZE_STC;
typedef struct {
    GT_CHAR *unitNameStr;
    GT_U32 numOfUnits;
} SMEM_UNIT_DUPLICATION_INFO_STC;
typedef struct {
    GT_CHAR *unitNameStr;
    GT_U32 unitNameIndex;
    GT_U32 unitTileId;
} SMEM_UNIT_NAME_AND_INDEX_STC;
typedef GT_U32 (*)(SKERNEL_DEVICE_OBJECT_T_PTR, GT_U32, GT_U32 *) SMEM_UNIT_PIPE_OFFSET_GET_FUN;
typedef enum {SMEM_UNIT_TYPE_PCA_TSU_CHANNEL_E, SMEM_UNIT_TYPE_PCA_LMU_CHANNEL_E, SMEM_UNIT_TYPE_EPI_MIF_TYPE_E, SMEM_UNIT_TYPE_EPI_MIF_CHANNEL_E, SMEM_UNIT_TYPE_MTI_MAC_50G_E, SMEM_UNIT_TYPE_MTI_MAC_USX_E, SMEM_UNIT_TYPE_MTI_MAC_CPU_E, SMEM_UNIT_TYPE_EPI_MIF_UNIT_ID_TO_DP_E} SMEM_UNIT_TYPE_ENT;
typedef struct {
    GT_U32 drop;
    EPCL_ACTION_MODIFY_TAG_ENT modifyUp;
    GT_U32 up;
    EPCL_ACTION_MODIFY_DSCP_EXP_ENT modifyDscp;
    GT_U32 dscp;
    EPCL_ACTION_MODIFY_TAG_ENT modifyVid0;
    GT_U32 vid0;
    EPCL_ACTION_MODIFY_DSCP_EXP_ENT modifyExp;
    GT_U32 exp;
    GT_BIT modifyTc;
    GT_U32 tc;
    GT_BIT modifyDp;
    GT_U32 dp;
    GT_U32 vlan1Cmd;
    GT_U32 vid1;
    GT_U32 modifyUp1;
    GT_U32 up1;
} SNET_CHEETAH_AFTER_HA_COMMON_ACTION_STC;
typedef struct {
    GT_BIT mcLocalEn;
    GT_U32 portIsolationVlanCmd;
} SNET_CHEETAH_EGR_VLAN_INFO;
typedef enum {SNET_CHEETAH_IPM_SEARCH_SIP_DIP_E, SNET_CHEETAH_IPM_SEARCH_DIP_E} SNET_CHEETAH_IPM_SEARCH_ENT;
typedef struct {
    GT_BIT valid;
    GT_BIT unknownIsNonSecurityEvent;
    GT_BIT portIsMember;
    SKERNEL_STP_ENT spanState;
    SKERNEL_EXT_PACKET_CMD_ENT unregNonIpMcastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT unregIPv4McastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT unregIPv6McastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT unknownUcastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT unregNonIp4BcastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT unregIp4BcastCmd;
    GT_BIT igmpTrapEnable;
    GT_BIT ipv4IpmBrgEn;
    SNET_CHEETAH_IPM_SEARCH_ENT ipv4IpmBrgMode;
    GT_BIT ipv6IpmBrgEn;
    SNET_CHEETAH_IPM_SEARCH_ENT ipv6IpmBrgMode;
    GT_BIT ingressMirror;
    GT_BIT icmpIpv6TrapMirror;
    GT_BIT ipInterfaceEn;
    GT_BIT ipv4UcRoutEn;
    GT_BIT ipv6UcRoutEn;
    GT_U32 mruIndex;
    GT_BIT bcUdpTrapMirrorEn;
    GT_BIT autoLearnDisable;
    GT_BIT naMsgToCpuEn;
    GT_BIT ipV6InterfaceEn;
    GT_BIT ipV6SiteID;
    GT_BIT ipv4McRoutEn;
    GT_BIT ipv6McRoutEn;
    GT_BIT floodVidxMode;
    GT_U32 floodVidx;
    GT_BIT ucLocalEn;
    GT_U32 vrfId;
    SKERNEL_EXT_PACKET_CMD_ENT unknownSaCmd;
    GT_U32 analyzerIndex;
    GT_U32 ipv4McBcMirrorToAnalyzerIndex;
    GT_U32 ipv6McMirrorToAnalyzerIndex;
    GT_U32 fid;
    GT_U32 fdbLookupKeyMode;
} SNET_CHEETAH_L2I_VLAN_INFO;
typedef enum {SNET_CHT_FRAME_PARSE_MODE_PORT_E, SNET_CHT_FRAME_PARSE_MODE_TRILL_E, SNET_CHT_FRAME_PARSE_MODE_FROM_TTI_PASSENGER_E, SNET_CHT_FRAME_PARSE_MODE_LAST_E} SNET_CHT_FRAME_PARSE_MODE_ENT;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U32 *) SNET_CNC_DEV_FAST_UPLOAD_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, SBUF_BUF_ID, GT_U32) SNET_DEV_FRAME_PROC_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, SBUF_BUF_ID) SNET_DEV_FROM_CPU_DMA_PROC_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, SBUF_BUF_ID) SNET_DEV_FROM_EMBEDDED_CPU_PROC_FUN;
typedef void (*)(struct SKERNEL_DEVICE_OBJECT_T *, GT_U32, GT_U32) SNET_DEV_LINK_UPD_PROC_FUN;
typedef struct SKERNEL_DEVICE_OBJECT_T *(*)(struct SKERNEL_DEVICE_OBJECT_T *) SNET_DEV_SOFT_RESET_FUN;
typedef enum {SNET_DST_INTERFACE_PORT_E, SNET_DST_INTERFACE_TRUNK_E, SNET_DST_INTERFACE_VIDX_E} SNET_DST_INTERFACE_ENT;
typedef struct {
    SNET_DST_INTERFACE_ENT dstInterface;
    SNET_DST_INTERFACE_UNT interfaceInfo;
} SNET_DST_INTERFACE_STC;
typedef union {
    struct {...} devPort;
    GT_U16 trunkId;
    GT_U16 vidx;
} SNET_DST_INTERFACE_UNT;
typedef struct {
    struct SKERNEL_DEVICE_OBJECT_T *txDmaDevObjPtr;
    GT_U32 txDmaMacPort;
    GT_U32 localPortIndex;
    GT_U32 globalPortIndex;
    GT_U32 egressPipeId;
    GT_U32 egressDpIndexId;
    GT_U32 egressTxqDqIndexId;
    GT_U32 sip6_queue_group_index;
    GT_U32 sip6_queue_group_offset;
    GT_U32 egressVlanTagMode;
    GT_U32 sip6_txq_couneter_was_incrmented;
} SNET_EGRESS_PHYSICAL_PORT_INFO_STC;
typedef enum {SNET_DST_INTERFACE_EGRESS_E, SNET_DST_INTERFACE_LLT_INDEX_E, SNET_DST_INTERFACE_VIRTUAL_ROUTER_E} SNET_EXT_DST_INTERFACE_ENT;
typedef struct {
    SNET_EXT_DST_INTERFACE_ENT dstInterface;
    SNET_EXT_DST_INTERFACE_UNT interfaceInfo;
} SNET_EXT_DST_INTERFACE_STC;
typedef union {
    SNET_DST_INTERFACE_UNT egressInterface;
    GT_U32 routerLLTIndex;
    GT_U32 virtualRouterId;
} SNET_EXT_DST_INTERFACE_UNT;
typedef struct {
    GT_BIT origIsTrunk;
    GT_U32 origSrcEPortOrTrnk;
    GT_U32 srcDev;
    GT_U32 qosProfile;
    GT_U32 srcId;
    GT_U32 dsaWords[4];
    GT_BIT fromCpu_egressFilterEn;
} SNET_INGRESS_DSA_STC;
typedef struct {
    SNET_INGRESS_TUNNEL_TRANSIT_TYPE_ENT transitType;
    struct SKERNEL_FRAME_CHEETAH_DESCR_STCT *origDescrPtr;
    struct SKERNEL_FRAME_CHEETAH_DESCR_STCT *passengerDescrPtr;
    struct SKERNEL_FRAME_CHEETAH_DESCR_STCT *fixedFieldsTypeDescrPtr;
    struct SKERNEL_FRAME_CHEETAH_DESCR_STCT *udbDescrPtr;
    struct SKERNEL_FRAME_CHEETAH_DESCR_STCT *innerFrameDescrPtr;
    GT_BIT innerPacketL2FieldsAreValid;
    GT_U8 *innerMacDaPtr;
    GT_BIT innerTag0Exists;
    GT_U32 innerPacketTag0Vid;
    GT_U32 innerPacketTag0CfiDei;
    GT_U32 innerPacketTag0Up;
} SNET_INGRESS_TUNNEL_INFO_STC;
typedef enum {SNET_INGRESS_TUNNEL_TRANSIT_TYPE__NONE__E, SNET_INGRESS_TUNNEL_TRANSIT_TYPE_LEGACY_IP_OVER_MPLS_TUNNEL_E, SNET_INGRESS_TUNNEL_TRANSIT_TYPE_X_OVER_MPLS_E, SNET_INGRESS_TUNNEL_TRANSIT_TYPE_X_OVER_NON_MPLS_E} SNET_INGRESS_TUNNEL_TRANSIT_TYPE_ENT;
typedef struct {
    GT_U32 ptpVersion;
    GT_U32 seqID;
    GT_U32 msgType;
    GT_U32 transportSpecific;
    GT_U32 srcTrgPort;
    GT_U32 V2DomainNumber;
    GT_U32 V1Subdomain[4];
} SNET_LION_GTS_ENTRY_STC;
typedef struct {
    GT_BIT ptpPacketTriggered;
    GT_U8 *ptpMessageHeaderPtr;
    SNET_LION_GTS_ENTRY_STC gtsEntry;
} SNET_LION_PTP_GTS_INFO_STC;
typedef struct {
    GT_BIT portProtMatch;
    GT_U32 *portProtMatchedMemoryPointer;
} SNET_PER_PROTOCOL_INFO_STC;
typedef enum {SNET_PRE_ROUTE_DIP_DA_MISMATCH_NONE_E, SNET_PRE_ROUTE_DIP_DA_MISMATCH_IPV4_UC_E, SNET_PRE_ROUTE_DIP_DA_MISMATCH_IPV4_MC_E, SNET_PRE_ROUTE_DIP_DA_MISMATCH_IPV6_UC_E, SNET_PRE_ROUTE_DIP_DA_MISMATCH_IPV6_MC_E} SNET_PRE_ROUTE_DIP_DA_MISMATCH_ENT;
typedef enum {SNET_IPV4_UC_HDR_CHKSUM_ERR_MASK_E, SNET_IPV4_MC_HDR_CHKSUM_ERR_MASK_E, SNET_IPV4_UC_HDR_VER_ERR_MASK_E, SNET_IPV4_MC_HDR_VER_ERR_MASK_E, SNET_IPV4_UC_HDR_LENGTH_ERR_MASK_E, SNET_IPV4_MC_HDR_LENGTH_ERR_MASK_E, SNET_IPV4_UC_HDR_SIP_NE_DIP_ERR_MASK_E, SNET_IPV4_MC_HDR_SIP_NE_DIP_ERR_MASK_E, SNET_IPV6_UC_HDR_VER_ERR_MASK_E, SNET_IPV6_MC_HDR_VER_ERR_MASK_E, SNET_IPV6_UC_HDR_LENGTH_ERR_MASK_E, SNET_IPV6_MC_HDR_LENGTH_ERR_MASK_E, SNET_IPV6_UC_HDR_SIP_NE_DIP_ERR_MASK_E, 
    SNET_IPV6_MC_HDR_SIP_NE_DIP_ERR_MASK_E} SNET_PRE_ROUT_HEADER_EXCEPTION_CHECK_ENT;
typedef struct {
    GT_BOOL tstfEnable;
    GT_U32 futureTimeNanoSec;
    SNET_PTP_PHY_STEP_TYPE_ENT step;
    GT_U16 mchSignature;
    GT_U32 cfOffset;
    GT_U32 taiSelect;
    GT_BOOL ChecksumUpdate;
    GT_BIT ingTimeSecLsb;
} SNET_PTP_PHY_INFO_STC;
typedef enum {SNET_PTP_PHY_STEP_TYPE_ONE_STEP_E, SNET_PTP_PHY_STEP_TYPE_TWO_STEP_E} SNET_PTP_PHY_STEP_TYPE_ENT;
typedef enum {SNET_PTP_UDP_CHECKSUM_MODE_CLEAR_E, SNET_PTP_UDP_CHECKSUM_MODE_UPDATE_E, SNET_PTP_UDP_CHECKSUM_MODE_RESERVED_E, SNET_PTP_UDP_CHECKSUM_MODE_NOP_E} SNET_PTP_UDP_CHECKSUM_MODE_ENT;
typedef struct {
    GT_U32 qosProfile;
    GT_BIT ingressExtendedMode;
    GT_BIT egressExtendedMode;
    struct {...} fromCpuQos;
} SNET_QOS_INFO_STC;
typedef enum {SNET_RXDMA_PARSER_PACKET_TYPE_LLC_E, SNET_RXDMA_PARSER_PACKET_TYPE_MPLS_E, SNET_RXDMA_PARSER_PACKET_TYPE_IPV4_E, SNET_RXDMA_PARSER_PACKET_TYPE_IPV6_E, SNET_RXDMA_PARSER_PACKET_TYPE_GENERIC_E, SNET_RXDMA_PARSER_PACKET_TYPE_LATENCY_SENSITIVE_E, SNET_RXDMA_PARSER_PACKET_TYPE_ETHERNET_E, SNET_RXDMA_PARSER_PACKET_TYPE___LAST___E} SNET_RXDMA_PARSER_PACKET_TYPE_ENT;
typedef struct {
    SKERNEL_TIMESTAMP_ACTION_ENT action;
    GT_BOOL ingressLinkDelayEnable;
    GT_BOOL packetDispatchingEnable;
    SKERNEL_TIMESTAMP_PACKET_FORMAT_ENT packetFormat;
    SKERNEL_PTP_TRIGGER_TYPE_ENT transportType;
    GT_U32 offset;
    GT_U32 offset2;
    GT_U32 ptpMessageType;
    GT_U32 ptpDomain;
    GT_BOOL doCountIngressTimeStampEgressPort;
    GT_BOOL doEgressTimeStampEgressPort;
    struct {...} egressInfo;
} SNET_TIMESTAMP_ACTION_INFO_STC;
typedef struct {
    GT_BIT U;
    GT_BIT T;
    GT_U32 OffsetProfile;
    GT_BIT OE;
    SNET_TOD_TIMER_STC timestamp;
} SNET_TIMESTAMP_TAG_INFO_STC;
typedef struct {
    GT_32 fractionalNanoSecondTimer;
    GT_U32 nanoSecondTimer;
    GT_U64 secondTimer;
} SNET_TOD_TIMER_STC;
typedef struct {
    GT_U32 trillCpuCodeBase;
    GT_U32 trillMcDescriptorInstance;
    GT_U32 V;
    GT_BIT M;
    GT_U32 opLength;
    GT_U32 hopCount;
    GT_U32 eRbid;
    GT_U32 iRbid;
    GT_BIT CHbH;
    GT_BIT CItE;
} SNET_TRILL_INFO_STC;
typedef struct {
    GT_U32 freezeCounter;
    GT_U32 prevPckts[2];
    GT_U64 prevBytesCnt;
} SNET_XCAT_IPFIX_ERRATA_STC;
typedef struct {
    GT_U32 srcIsTrunk;
    GT_U32 srcTrunkOrPortNum;
    GT_U32 srcDevice;
} SNET_XCAT_TTI_ASSIGN_LOGIC_PORT_ACTION_STC;
typedef struct {
    GT_U32 globalPortNumber;
    GT_U32 localPortNumber;
    GT_U32 unitIndex;
} SPECIAL_PORT_MAPPING_CNS;
typedef struct {
    GT_U32 globalPortNumber;
    GT_U32 localPortNumber;
    GT_U32 unitIndex;
    GT_U32 extParamArr[4];
} SPECIAL_PORT_MAPPING_ENHANCED_CNS;
typedef enum {TAG_CMD_TO_CPU_E, TAG_CMD_FROM_CPU_E, TAG_CMD_TO_TARGET_SNIFFER_E, TAG_CMD_FORWARD_E} TAG_COMMAND_E;
typedef void (*)() THREAD_TYPE;
typedef struct {
    GT_BIT use_egressDpIndex;
    GT_U32 egressDpIndex;
} TXQ_DQ_INFO_STC;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smem.h:
struct ACCEL_INFO_STC_;
struct ACTIVE_MEMORY_RANGE_;
typedef GT_U32 (GT_U32, GT_U32 *, GT_U32) ACTIVE_MEM_FUNC;
typedef struct {
    GT_CHAR *tableName;
    GT_U32 baseAddr;
    GT_U32 memType;
    GT_U32 entrySize;
    GT_U32 lineAddrAlign;
    GT_U32 numOfEntries;
} DEV_TABLE_INFO_STC;
struct MEMORY_RANGE_;
typedef enum {READ_OPER, WRITE_OPER} READ_OR_WRITE;
typedef struct {
    GT_U32 oldAddress;
    SMEM_ACTIVE_MEM_ENTRY_STC newEntry;
} SMEM_ACTIVE_MEM_ENTRY_REPLACEMENT_STC;
typedef struct SMEM_ACTIVE_MEM_ENTRY_T SMEM_ACTIVE_MEM_ENTRY_STC;
struct SMEM_ACTIVE_MEM_ENTRY_T;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, GT_U32, GT_U32 *, GT_UINTPTR, GT_U32 *) SMEM_ACTIVE_MEM_READ_FUN;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, GT_U32, GT_U32 *, GT_UINTPTR, GT_U32 *) SMEM_ACTIVE_MEM_WRITE_FUN;
typedef struct {
    GT_U32 memFirstAddr;
    GT_U32 numOfRegisters;
    GT_U32 enrtySizeBits;
    GT_U32 enrtyNumBytesAlignement;
    GT_BIT tableOffsetValid;
    GT_U32 tableOffsetInBytes;
    GT_BOOL forbidDirectWriteToChunk;
} SMEM_CHUNK_BASIC_STC;
typedef struct {
    SMEM_CHUNK_BASIC_STC memChunkBasic;
    SMEM_FORMULA_DIM_STC formulaCellArr[6];
} SMEM_CHUNK_EXTENDED_STC;
typedef struct SMEM_CHUNK_STCT SMEM_CHUNK_STC;
struct SMEM_CHUNK_STCT;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SMEM_UNIT_CHUNKS_STC *) SMEM_DEVICE_UNIT_ALLOCATION_FUNC;
typedef struct {
    GT_CHAR *unitNameStr;
    SMEM_DEVICE_UNIT_ALLOCATION_FUNC allocUnitFunc;
} SMEM_DEVICE_UNIT_ALLOCATION_STC;
typedef void *(*)(struct SKERNEL_DEVICE_OBJECT_T *, SCIB_MEMORY_ACCESS_TYPE, GT_U32, GT_U32, struct SMEM_ACTIVE_MEM_ENTRY_T **) SMEM_DEV_MEMORY_FIND_FUN;
typedef GT_BOOL (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, GT_UINTPTR) SMEM_EXT_ACTIVE_MEM_ADDRESS_FIND_FUN;
typedef struct {
    GT_U32 *addressPtr;
    GT_U32 addressNum;
    GT_U32 addressOffset;
    GT_U32 addressNum1;
    GT_U32 addressOffset1;
} SMEM_EXT_ACTIVE_MEM_ENTRY_STC;
typedef GT_U32 (*)(SKERNEL_DEVICE_OBJECT *, struct SMEM_CHUNK_STCT *, GT_U32) SMEM_FORMULA_CHUNK_FUNC;
typedef struct {
    GT_U32 size;
    GT_U32 step;
} SMEM_FORMULA_DIM_STC;
typedef enum {SMEM_GENERIC_HIDDEN_MEM_FDB_E, SMEM_GENERIC_HIDDEN_MEM_FDB_TILE1_E, SMEM_GENERIC_HIDDEN_MEM_FDB_TILE2_E, SMEM_GENERIC_HIDDEN_MEM_FDB_TILE3_E, SMEM_GENERIC_HIDDEN_MEM_EXACT_MATCH_E, SMEM_GENERIC_HIDDEN_MEM_EXACT_MATCH_TILE1_E, SMEM_GENERIC_HIDDEN_MEM_EXACT_MATCH_TILE2_E, SMEM_GENERIC_HIDDEN_MEM_EXACT_MATCH_TILE3_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL0_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL1_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL2_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL3_E, 
    SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL4_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL5_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL6_E, SMEM_GENERIC_HIDDEN_MEM_AAC_MEM_CHANNEL7_E, SMEM_GENERIC_HIDDEN_MEM___LAST___E} SMEM_GENERIC_HIDDEN_MEM_ENT;
typedef struct {
    GT_U32 *startOfMemPtr;
    GT_U32 alignmentOfEntryInWords;
    GT_U32 numOfEntries;
    SMEM_GENERIC_HIDDEN_MEM_ENT tableType;
    GT_U32 currentWordIndex;
} SMEM_GENERIC_HIDDEN_MEM_STC;
typedef struct {
    GT_U32 base_addr;
    GT_CHAR *nameStr;
    GT_U32 size;
    GT_CHAR *orig_nameStr;
    GT_U32 pipeOffset;
} SMEM_GEN_UNIT_INFO_STC;
typedef enum {SMEM_INDEX_IN_CHUNK_TYPE_STRAIGHT_ACCESS_E, SMEM_INDEX_IN_CHUNK_TYPE_MASK_AND_SHIFT_E, SMEM_INDEX_IN_CHUNK_TYPE_FORMULA_FUNCTION_E, SMEM_INDEX_IN_CHUNK_TYPE_IGNORED_E} SMEM_INDEX_IN_CHUNK_TYPE_ENT;
typedef unsigned short SMEM_PHY_REGISTER;
typedef unsigned int SMEM_REGISTER;
typedef struct {
    SMEM_SPEC_MEMORY_FIND_FUN specFun;
    GT_UINTPTR specParam;
    SMEM_ACTIVE_MEM_ENTRY_STC *unitActiveMemPtr;
} SMEM_SPEC_FIND_FUN_ENTRY_STC;
typedef GT_U32 *(*)(SKERNEL_DEVICE_OBJECT *, SCIB_MEMORY_ACCESS_TYPE, GT_U32, GT_U32, GT_UINTPTR) SMEM_SPEC_MEMORY_FIND_FUN;
typedef struct SMEM_UNIT_CHUNKS_STCT SMEM_UNIT_CHUNKS_STC;
struct SMEM_UNIT_CHUNKS_STCT;
typedef struct {
    SMEM_UNIT_CHUNKS_STC unitMem;
    GT_U32 unitBaseAddr;
} SMEM_UNIT_CHUNK_BASE_ADDRESS_STC;
typedef enum {SMEM_UNIT_CHUNK_TYPE_9_MSB_E, SMEM_UNIT_CHUNK_TYPE_8_MSB_E, SMEM_UNIT_CHUNK_TYPE_23_MSB_AFTER_20_LSB_E, SMEM_UNIT_CHUNK_TYPE_FLEX_BASE_E} SMEM_UNIT_CHUNK_TYPE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemCheetah.h:
typedef struct {
    GT_U32 fuqBase;
    GT_BOOL fuqBaseValid;
    GT_U32 fuqBaseSize;
    GT_U32 fuqShadow;
    GT_BOOL fuqShadowValid;
    GT_U32 fuqShadowSize;
    GT_U32 fuqOffset;
    GT_BOOL baseInit;
    GT_U32 fuqNumMessages;
    GT_BOOL fuqUnderStop;
} CHT2_FUQ_MEM;
typedef struct {
    SMEM_REGISTER macUpdFifoRegs[128];
} CHT_AUQ_FIFO_MEM;
typedef struct {
    GT_U32 auqBase;
    GT_BOOL auqBaseValid;
    GT_U32 auqBaseSize;
    GT_U32 auqShadow;
    GT_BOOL auqShadowValid;
    GT_U32 auqShadowSize;
    GT_U32 auqOffset;
    GT_BOOL baseInit;
    GT_BOOL auqUnderStop;
} CHT_AUQ_MEM;
typedef struct {
    GT_U32 bankWriteRegNum;
    SMEM_REGISTER *bankWriteReg;
    GT_U32 bankMemRegNum;
    SMEM_REGISTER *bankMemReg[2];
} CHT_BANKS_MEM;
typedef struct {
    GT_U32 genRegsNum;
    SMEM_REGISTER *genReg;
} CHT_BRDG_MNG_MEM;
typedef struct {
    GT_U32 bufMemRegNum;
    SMEM_REGISTER *bufMemReg;
} CHT_BUF_MEM;
typedef struct {
    GT_U32 bmRegNum;
    SMEM_REGISTER *bmReg;
} CHT_BUF_MNG_MEM;
typedef struct {
    GT_U32 genRegNum;
    SMEM_REGISTER *genReg;
    GT_U32 txqInternalRegNum;
    SMEM_REGISTER *txqInternalReg[4];
    GT_U32 trnFilterRegNum;
    SMEM_REGISTER *trnFilterReg;
    GT_U32 portWdRegNum;
    SMEM_REGISTER *portWdReg;
    GT_U32 egrMibCntRegNum;
    SMEM_REGISTER *egrMibCntReg;
    GT_U32 hprMibCntRegNum;
    SMEM_REGISTER *hprMibCntReg[3];
    GT_U32 xsmiRegNum;
    SMEM_REGISTER *xsmiReg;
    GT_U32 stcEgrRegNum;
    SMEM_REGISTER *stcEgrReg[3];
    GT_U32 tailDropRegNum;
    SMEM_REGISTER *tailDropReg;
    GT_U32 egrRateShpRegNum;
    SMEM_REGISTER *egrRateShpReg[9];
} CHT_EGR_MEM;
typedef struct {
    GT_U32 globRegNum;
    SMEM_REGISTER *globReg;
    GT_U32 sdmaRegNum;
    SMEM_REGISTER *sdmaReg;
} CHT_GLOBAL_MEM;
typedef struct {
    GT_U32 gopRegNum;
    SMEM_REGISTER *gopReg[4];
    GT_U32 macMibCountRegNum;
    SMEM_REGISTER *macMibCountReg[4];
    GT_U32 ledRegNum;
    SMEM_REGISTER *ledReg[4];
} CHT_GOP_CONF_MEM;
typedef struct {
    GT_U32 internalRegNum;
    SMEM_REGISTER *internalRegPtr;
} CHT_INTERNAL_SIMULATION_USE_MEM;
typedef struct {
    GT_U32 arpTblRegNum;
    SMEM_REGISTER *arpTblReg;
    GT_U32 macSaTblRegNum;
    SMEM_REGISTER *macSaTblReg;
} CHT_IP_MEM;
typedef struct {
    GT_U32 fdbRegNum;
    SMEM_REGISTER *fdbReg;
    GT_U32 macTblRegNum;
    SMEM_REGISTER *macTblReg;
} CHT_MAC_FDB_MEM;
typedef struct {
    GT_U32 pciRegNum;
    SMEM_REGISTER *pciReg;
} CHT_PCI_MEM;
typedef struct {
    GT_U32 pclConfRegNum;
    SMEM_REGISTER *pclConfReg;
    GT_U32 tcamRegNum;
    SMEM_REGISTER *tcamReg;
    GT_U32 pclIntRegNum;
    SMEM_REGISTER *pclIntReg;
    GT_U32 portVlanQosTblRegNum;
    SMEM_REGISTER *portVlanQosTblReg;
    GT_U32 protBasedVlanQosTblRegNum;
    SMEM_REGISTER *protBasedVlanQosTblReg[8];
    GT_U32 pceActionsTblRegNum;
    SMEM_REGISTER *pceActionsTblReg;
    GT_U32 pclIdTblRegNum;
    SMEM_REGISTER *pclIdTblReg;
} CHT_PCL_MEM;
typedef struct {
    GT_U32 PhyIdieeeXauiRegNum;
    GT_U32 PhyIdextXauiRegNum;
    SMEM_PHY_REGISTER *PhyId0ieeeXauiReg[3];
    SMEM_PHY_REGISTER *PhyId0extXauiReg[3];
    SMEM_PHY_REGISTER *PhyId1ieeeXauiReg[3];
    SMEM_PHY_REGISTER *PhyId1extXauiReg[3];
    SMEM_PHY_REGISTER *PhyId2ieeeXauiReg[3];
    SMEM_PHY_REGISTER *PhyId2extXauiReg[3];
} CHT_PHY_MEM;
typedef struct {
    GT_U32 policerRegNum;
    SMEM_REGISTER *policerReg;
    GT_U32 policerTblRegNum;
    SMEM_REGISTER *policerTblReg;
    GT_U32 policerQosRmTblRegNum;
    SMEM_REGISTER *policerQosRmTblReg;
    GT_U32 policerCntTblRegNum;
    SMEM_REGISTER *policerCntTblReg;
} CHT_POLICER_MEM;
typedef struct {
    GT_U32 portsRegNum;
    SMEM_REGISTER *portsReg;
    GT_U32 genRegNum;
    SMEM_REGISTER *genReg;
    GT_U32 trunkTblRegNum;
    SMEM_REGISTER *trunkTblReg[8];
    GT_U32 qosTblRegNum;
    SMEM_REGISTER *qosTblReg;
    GT_U32 cpuCodeTblRegNum;
    SMEM_REGISTER *cpuCodeTblReg;
    GT_U32 statRateTblRegNum;
    SMEM_REGISTER *statRateTblReg;
    GT_U32 portInStcTblRegNum;
    SMEM_REGISTER *portInStcTblReg;
} CHT_PREEGR_MEM;
typedef struct {
    GT_U32 triSpeedPortsRegNum;
    SMEM_REGISTER *triSpeedPortsReg;
} CHT_TRI_SPEED_PORTS_MEM;
typedef struct {
    GT_U32 vlanCnfRegNum;
    SMEM_REGISTER *vlanCnfReg;
    GT_U32 vlanTblRegNum;
    SMEM_REGISTER *vlanTblReg;
    GT_U32 mcstTblRegNum;
    SMEM_REGISTER *mcstTblReg;
    GT_U32 spanTblRegNum;
    SMEM_REGISTER *spanTblReg;
} CHT_VLAN_TBL_MEM;
typedef enum {SIM_FEC_NA, SIM_FEC_OFF, SIM_FC_FEC, SIM_RS_FEC = 4, SIM_RS_FEC_544_514 = 8} SIM_MV_HWS_PORT_FEC_MODE;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, GT_U32 *) SMEM_BAR2_CNM_iATU_FUNC;
typedef struct {
    GT_U32 regNum;
    SMEM_REGISTER *regPtr;
} SMEM_CALLOC_STC;
typedef struct {
    SMEM_SPEC_FIND_FUN_ENTRY_STC specFunTbl[768];
    CHT_AUQ_MEM auqMem[4];
    CHT2_FUQ_MEM fuqMem[8];
    CHT_AUQ_FIFO_MEM auqFifoMem[4];
    CHT_INTERNAL_SIMULATION_USE_MEM internalSimMem;
    CHT_PHY_MEM phyMem;
    SMEM_LION_GTSQ_FIFO gtsIngressFifoMem;
    SMEM_LION_GTSQ_FIFO gtsEgressFifoMem;
    SMEM_CALLOC_STC callocMemArray[256];
    GT_U32 callocMemSize;
    GT_U8 *unitChunksBasePtr;
    GT_U32 unitChunksSizeOf;
    SMEM_CHT_PP_REGS_ADDR_STC regAddrDb;
    GT_BOOL support_regAddrDbSip5;
    GT_BOOL support_regAddrDbSip5_10;
    SMEM_SIP5_PP_REGS_ADDR_STC regAddrDbSip5;
    GT_BIT accessPexMemorySpaceOnlyOnExplicitAction;
    SMEM_UNIT_CHUNK_BASE_ADDRESS_STC pciExtMemArr[2];
    GT_U32 pciUnitBaseAddr;
    GT_U32 pciUnitBaseAddrMask;
    GT_U32 dfxMemBaseAddr;
    GT_U32 dfxMemBaseAddrMask;
    SMEM_BAR2_CNM_iATU_FUNC bar2CnMiAtuFunc;
    SMEM_DMA_CNM_oATU_FUNC dmaCnMoAtuFunc;
    GT_U32 iAtuWindowsLastIndex;
    GT_U32 *iAtuWindowsMemPtr[64];
    GT_U32 *oAtuWindowsMemPtr[8];
    SMEM_MG_SDMA_WINDOWS_STC mgSdmaWindowsMemArr[16];
    GT_U32 *cnmAddrDecodeAmb3WindowsMemPtr[16];
    GT_BOOL supportExternalDfx;
    SMEM_DFX_SERVER_PP_REGS_ADDR_STC regAddrExternalDfx;
    SMEM_INTERNAL_PCI_REGS_ADDR_STC regAddrInternalPci;
    GT_BIT isPartOfGeneric;
    SMEM_CONVERT_DEV_AND_ADDR_TO_NEW_DEV_AND_ADDR_FUNC smemConvertDevAndAddrToNewDevAndAddrFunc;
    SMEM_PIPE_PP_REGS_ADDR_STC regAddrDbPipe;
    SMEM_GENERIC_HIDDEN_MEM_STC hiddenMemArr[16];
} SMEM_CHT_DEV_COMMON_MEM_INFO;
typedef struct {
    SMEM_CHT_DEV_COMMON_MEM_INFO common;
    CHT_GLOBAL_MEM globalMem;
    CHT_EGR_MEM egrMem;
    CHT_BRDG_MNG_MEM brdgMngMem;
    CHT_BUF_MNG_MEM bufMngMem;
    CHT_GOP_CONF_MEM gopCnfMem;
    CHT_MAC_FDB_MEM macFdbMem;
    CHT_BANKS_MEM banksMem;
    CHT_BUF_MEM bufMem;
    CHT_VLAN_TBL_MEM vlanTblMem;
    CHT_TRI_SPEED_PORTS_MEM triSpeedPortsMem;
    CHT_PREEGR_MEM preegressMem;
    CHT_PCL_MEM pclMem;
    CHT_POLICER_MEM policerMem;
    CHT_PCI_MEM pciMem;
    CHT_IP_MEM ipMem;
} SMEM_CHT_DEV_MEM_INFO;
typedef struct {
    SMEM_CHT_DEV_COMMON_MEM_INFO common;
    SMEM_UNIT_CHUNKS_STC unitMemArr[768];
    SMEM_UNIT_CHUNKS_STC PEX_UnitMem;
    SMEM_UNIT_CHUNKS_STC BAR0_UnitMem;
    GT_U32 numOfExtraUnits;
    SMEM_UNIT_CHUNKS_STC *extraUnitsPtr;
} SMEM_CHT_GENERIC_DEV_MEM_INFO;
typedef enum {SMEM_CHT_MEMORY_DEVICE_AUQ_E, SMEM_CHT_MEMORY_DEVICE_FUQ_E, SMEM_CHT_MEMORY_DEVICE_ON_CHIP_FIFO_AUQ_E} SMEM_CHT_MEMORY_DEVICE_ENT;
typedef struct {
    GT_U32 globalChannelControl;
    GT_U32 globalFECControl;
    GT_U32 globalClockEnable;
    GT_U32 globalResetControl;
    GT_U32 globalInterruptSummaryCause;
    GT_U32 globalInterruptSummaryMask;
    GT_U32 globalFecCeInterruptCause;
    GT_U32 globalFecCeInterruptMask;
    GT_U32 globalFecNceInterruptCause;
    GT_U32 globalFecNceInterruptMask;
    GT_U32 globalUsxPchControl;
} SMEM_CHT_MTI_EXT_GLOBAL_REG_STC;
typedef struct {
    GT_U32 segPortStatus;
    GT_U32 portStatus;
    GT_U32 portUsxPchControl;
    GT_U32 portUsxPchSignatureControl;
    GT_U32 segPortInterruptCause;
    GT_U32 segPortInterruptMask;
    GT_U32 portInterruptCause;
    GT_U32 portInterruptMask;
} SMEM_CHT_MTI_EXT_PORT_UNIT_REG_STC;
typedef struct {
    GT_U32 interruptSummaryCause;
    GT_U32 interruptSummaryMask;
    GT_U32 portInterruptCause[8];
    GT_U32 portInterruptMask[8];
} SMEM_CHT_PORT_ANP_UNIT_REG_STC;
typedef struct {
    GT_U32 commandConfig;
    GT_U32 frmLength;
    GT_U32 macAddr0;
    GT_U32 macAddr1;
    GT_U32 status;
} SMEM_CHT_PORT_MTI_MAC_COMMON_REG_STC;
typedef enum {SMEM_CHT_PORT_MTI_MIF_TYPE_8_E, SMEM_CHT_PORT_MTI_MIF_TYPE_32_E, SMEM_CHT_PORT_MTI_MIF_TYPE_128_E, SMEM_CHT_PORT_MTI_MIF_TYPE___last___E} SMEM_CHT_PORT_MTI_MIF_TYPE_ENT;
typedef struct {
    GT_U32 SAUControl;
    GT_U32 SAUStatus;
} SMEM_CHT_PORT_MTI_MPFS_COMMON_REG_STC;
typedef struct {
    GT_U32 control1;
    GT_U32 status1;
    GT_U32 usxgmii_rep;
} SMEM_CHT_PORT_MTI_PCS_COMMON_REG_STC;
typedef struct {
    GT_U32 mif_channel_mapping_register[3];
    GT_U32 mif_link_fsm_control_register[3];
    struct {...} preemption;
} SMEM_CHT_PORT_MTI_PORT_MIF_REG_STC;
typedef struct {
    GT_U32 config;
    GT_U32 control;
    GT_U32 datHiCdc;
    GT_U32 counterCapture[56];
} SMEM_CHT_PORT_MTI_STATS_COMMON_CONFIG_STC;
typedef struct {
    GT_U32 RX_etherStatsOctets;
    GT_U32 RX_OctetsReceivedOK;
    GT_U32 RX_aAlignmentErrors;
    GT_U32 RX_aPauseMacCtrlFramesReceived;
    GT_U32 RX_aFrameTooLong;
    GT_U32 RX_aInRangeLengthError;
    GT_U32 RX_aFramesReceivedOK;
    GT_U32 RX_aFrameCheckSequenceErrors;
    GT_U32 RX_VLANReceivedOK;
    GT_U32 RX_ifInErrors;
    GT_U32 RX_ifInUcastPkts;
    GT_U32 RX_ifInMulticastPkts;
    GT_U32 RX_ifInBroadcastPkts;
    GT_U32 RX_etherStatsDropEvents;
    GT_U32 RX_etherStatsPkts;
    GT_U32 RX_etherStatsUndersizePkts;
    GT_U32 RX_etherStatsPkts64Octets;
    GT_U32 RX_etherStatsPkts65to127Octets;
    GT_U32 RX_etherStatsPkts128to255Octets;
    GT_U32 RX_etherStatsPkts256to511Octets;
    GT_U32 RX_etherStatsPkts512to1023Octets;
    GT_U32 RX_etherStatsPkts1024to1518Octets;
    GT_U32 RX_etherStatsPkts1519toMaxOctets;
    GT_U32 RX_etherStatsOversizePkts;
    GT_U32 RX_etherStatsJabbers;
    GT_U32 RX_etherStatsFragments;
    GT_U32 RX_aCBFCPAUSEFramesReceived[16];
    GT_U32 RX_aMACControlFramesReceived;
    GT_U32 TX_etherStatsOctets;
    GT_U32 TX_OctetsTransmittedOK;
    GT_U32 TX_aPauseMacCtrlFramesTransmitted;
    GT_U32 TX_aFramesTransmittedOK;
    GT_U32 TX_VLANTransmittedOK;
    GT_U32 TX_ifOutErrors;
    GT_U32 TX_ifOutUcastPkts;
    GT_U32 TX_ifOutMulticastPkts;
    GT_U32 TX_ifOutBroadcastPkts;
    GT_U32 TX_etherStatsPkts64Octets;
    GT_U32 TX_etherStatsPkts65to127Octets;
    GT_U32 TX_etherStatsPkts128to255Octets;
    GT_U32 TX_etherStatsPkts256to511Octets;
    GT_U32 TX_etherStatsPkts512to1023Octets;
    GT_U32 TX_etherStatsPkts1024to1518Octets;
    GT_U32 TX_etherStatsPkts1519toMaxOctets;
    GT_U32 TX_aCBFCPAUSEFramesTransmitted[16];
    GT_U32 TX_aMACControlFramesTransmitted;
    GT_U32 TX_etherStatsPkts;
} SMEM_CHT_PORT_MTI_STATS_STC;
typedef struct {
    GT_U32 mif_rx_control_register[3];
    GT_U32 mif_tx_control_register[3];
} SMEM_CHT_PORT_MTI_UNIT_MIF_REG_STC;
typedef struct {
    GT_U32 PTPInterruptCause;
    GT_U32 PTPInterruptMask;
    GT_U32 PTPGeneralCtrl;
    GT_U32 PTPTXTimestampQueue0Reg0;
    GT_U32 PTPTXTimestampQueue0Reg1;
    GT_U32 PTPTXTimestampQueue0Reg2;
    GT_U32 PTPTXTimestampQueue1Reg0;
    GT_U32 PTPTXTimestampQueue1Reg1;
    GT_U32 PTPTXTimestampQueue1Reg2;
    GT_U32 totalPTPPktsCntr;
    GT_U32 PTPv1PktCntr;
    GT_U32 PTPv2PktCntr;
    GT_U32 Y1731PktCntr;
    GT_U32 NTPTsPktCntr;
    GT_U32 NTPReceivePktCntr;
    GT_U32 NTPTransmitPktCntr;
    GT_U32 WAMPPktCntr;
    GT_U32 addCorrectedTimeActionPktCntr;
    GT_U32 NTPPTPOffsetHigh;
    GT_U32 noneActionPktCntr;
    GT_U32 forwardActionPktCntr;
    GT_U32 dropActionPktCntr;
    GT_U32 captureIngrTimeActionPktCntr;
    GT_U32 captureAddTimeActionPktCntr;
    GT_U32 captureAddIngrTimeActionPktCntr;
    GT_U32 captureAddCorrectedTimeActionPktCntr;
    GT_U32 captureActionPktCntr;
    GT_U32 addTimeActionPktCntr;
    GT_U32 addIngrTimeActionPktCntr;
    GT_U32 NTPPTPOffsetLow;
    GT_U32 timestampFrameCntr[4];
    GT_U32 timestampFrameCntrControl[4];
    GT_U32 timestampingPrecisionControl;
} SMEM_CHT_PORT_PTP_ADDR_STC;
typedef struct {
    struct {...} MG;
    struct {...} egrAndTxqVer0;
    struct {...} egrAndTxqVer1;
    struct {...} L2I;
    struct {...} ucRouter;
    struct {...} IPvX;
    struct {...} BM;
    struct {...} LMS;
    struct {...} LMS1;
    struct {...} FDB;
    SMEM_CHT_PP_REGS_MPPM_UNIT_STC MPPM0;
    SMEM_CHT_PP_REGS_MPPM_UNIT_STC MPPM1;
    SMEM_CHT_PP_REGS_CTU_UNIT_STC CTU0;
    SMEM_CHT_PP_REGS_CTU_UNIT_STC CTU1;
    struct {...} EPCL;
    struct {...} HA;
    struct {...} RXDMA;
    struct {...} TXDMA;
    struct {...} MEM;
    struct {...} centralizedCntrs[2];
    struct {...} uniphySERDES;
    struct {...} networkPorts;
    struct {...} EQ;
    struct {...} IPCL;
    SMEM_CHT_PP_REGS_POLICER_UNIT_STC PLR[3];
    struct {...} MLL;
    struct {...} TCCLowerIPCL[2];
    struct {...} TCCUpperIPvX;
    struct {...} TTI;
    struct {...} DFX_SERVER;
    struct {...} GOP;
    struct {...} temp;
} SMEM_CHT_PP_REGS_ADDR_STC;
typedef struct {
    SMEM_CHT_PP_REGS_UNIT_START_INFO_STC startUnitInfo;
    struct {...} CTURegs;
} SMEM_CHT_PP_REGS_CTU_UNIT_STC;
typedef struct {
    struct {...} macRx;
    struct {...} macTx;
    struct {...} pcs;
    struct {...} pma;
} SMEM_CHT_PP_REGS_D2D_UNIT_STC;
typedef struct {
    GT_U32 globalConfigs;
    GT_U32 enableTimestamping;
    GT_U32 timestampingPortEnable[2];
    GT_U32 TODCntrNanoseconds;
    GT_U32 TODCntrSeconds[2];
    GT_U32 TODCntrShadowNanoseconds;
    GT_U32 TODCntrShadowSeconds[2];
    GT_U32 GTSInterruptCause;
    GT_U32 GTSInterruptMask;
    GT_U32 globalFIFOCurrentEntry[2];
    GT_U32 overrunStatus;
    GT_U32 underrunStatus;
} SMEM_CHT_PP_REGS_GTS_UNIT_STC;
typedef struct {
    SMEM_CHT_PP_REGS_UNIT_START_INFO_STC startUnitInfo;
    struct {...} ecc;
    GT_U32 xlgMode;
    GT_U32 interruptCause;
    GT_U32 interruptMask;
} SMEM_CHT_PP_REGS_MPPM_UNIT_STC;
typedef struct {
    SMEM_CHT_PP_REGS_UNIT_START_INFO_STC startUnitInfo;
    GT_U32 policerCtrl0;
    GT_U32 policerCtrl1;
    GT_U32 policerPortMetering0;
    GT_U32 policerPortMetering1;
    GT_U32 policerMRU;
    GT_U32 IPFIXCtrl;
    GT_U32 IPFIXNanoTimerStampUpload;
    GT_U32 IPFIXSecondsLSbTimerStampUpload;
    GT_U32 IPFIXSecondsMSbTimerStampUpload;
    GT_U32 hierarchicalPolicerCtrl;
    GT_U32 policerIPFIXDroppedPktCountWAThreshold;
    GT_U32 policerIPFIXPktCountWAThreshold;
    GT_U32 policerIPFIXBytecountWAThresholdLSB;
    GT_U32 policerIPFIXBytecountWAThresholdMSB;
    GT_U32 IPFIXSampleEntriesLog0;
    GT_U32 IPFIXSampleEntriesLog1;
    GT_U32 policerError;
    GT_U32 policerErrorCntr;
    GT_U32 meteringAndCountingRamSize[3];
    GT_U32 policerTableAccessCtrl;
    GT_U32 policerTableAccessData[8];
    GT_U32 policerInitialDP[8];
    GT_U32 policerInterruptCause;
    GT_U32 policerInterruptMask;
    GT_U32 policerShadow[2];
    GT_U32 portAndPktTypeTranslationTable[32];
} SMEM_CHT_PP_REGS_POLICER_UNIT_STC;
typedef struct {
    GT_U32 magicNumber;
    GT_U32 unitBaseAddress;
    char *unitNameStr;
} SMEM_CHT_PP_REGS_UNIT_START_INFO_STC;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, SCIB_MEMORY_ACCESS_TYPE, SKERNEL_DEVICE_OBJECT **, GT_U32 *) SMEM_CONVERT_DEV_AND_ADDR_TO_NEW_DEV_AND_ADDR_FUNC;
typedef struct {
    struct {...} resetAndInitCtrller;
} SMEM_DFX_SERVER_PP_REGS_ADDR_STC;
typedef enum {SMEM_DMA_CNM_OATU_CLIENT_SDMA_E, SMEM_DMA_CNM_OATU_CLIENT_CM3_E, SMEM_DMA_CNM_OATU_CLIENT___LAST____E} SMEM_DMA_CNM_OATU_CLIENT_ENT;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SMEM_DMA_CNM_OATU_CLIENT_ENT, GT_U32, GT_U32 *, GT_U32 *) SMEM_DMA_CNM_oATU_FUNC;
typedef struct {
    struct {...} Runit_RFU;
} SMEM_INTERNAL_PCI_REGS_ADDR_STC;
typedef struct {
    SMEM_REGISTER gtsFifoRegs[64];
} SMEM_LION_GTSQ_FIFO;
typedef struct {
    GT_U32 *base_address;
    GT_U32 *size;
    GT_U32 *window_control;
} SMEM_MG_SDMA_ADDR_DECODE_STC;
typedef struct {
    SMEM_MG_SDMA_ADDR_DECODE_STC sdmaAddrDecoding[6];
} SMEM_MG_SDMA_WINDOWS_STC;
typedef struct {
    struct {...} PCP;
    struct {...} MCFC;
    struct {...} PHA;
} SMEM_PIPE_PP_REGS_ADDR_STC;
typedef struct {
    struct {...} TTI;
    struct {...} BM;
    struct {...} TXDMA[32];
    struct {...} TXFIFO[32];
    struct {...} MPPM;
    struct {...} ETH;
    struct {...} rxDMA[32];
    struct {...} ingressAggregator[8];
    struct {...} GTS[2];
    struct {...} L2I;
    struct {...} FDB;
    struct {...} EQ;
    struct {...} LPM;
    struct {...} TCAM;
    struct {...} EGF_eft;
    struct {...} EGF_qag;
    struct {...} EGF_sht;
    struct {...} HA;
    struct {...} MLL;
    struct {...} PCL;
    struct {...} EPCL;
    struct {...} ERMRK;
    struct {...} OAMUnit[2];
    struct {...} IPvX;
    struct {...} TAI;
    struct {...} GOP_PTP;
    struct {...} GOP;
    struct {...} LMU[4];
    struct {...} sip6_MTI[272];
    struct {...} sip_6_10_ANP[17];
    struct {...} sip6_high_speed[272];
    struct {...} sip6_MTI_EXTERNAL[32];
    struct {...} sip6_MTI_cpu_port[16];
    struct {...} LMS[3];
    struct {...} PLR[3];
    struct {...} CNC[4];
    struct {...} TXQ;
    struct {...} TXQ_sip6;
    struct {...} TMDROP;
    struct {...} TMQMAP;
    struct {...} TM_INGR_GLUE;
    struct {...} TM_EGR_GLUE;
    struct {...} PREQ;
    struct {...} sip6_rxDMA[32];
    struct {...} sip6_txDMA[32];
    struct {...} sip6_txFIFO[32];
    struct {...} eagle_d2d[32];
    struct {...} raven_d2d_pair[16];
    struct {...} MG_RAVEN[16];
    struct {...} SHM;
    struct {...} EXACT_MATCH;
    struct {...} EREP;
    struct {...} PHA;
    struct {...} PPU;
    struct {...} CNM;
    struct {...} SMU;
    struct {...} PCA_CTSU[4];
} SMEM_SIP5_PP_REGS_ADDR_STC;
typedef struct {
    GT_U32 pizzaArbiterConfigReg[256];
    GT_U32 pizzaArbiterCtrlReg;
} SMEM_SIP6_CHT_PP_REGS_DP_TX_PIZZA_ARBITER_UNIT_STC;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemCheetah2.h:
typedef struct {
    GT_U32 bankWriteRegNum;
    SMEM_REGISTER *bankWriteReg;
    GT_U32 bankMemRegNum;
    SMEM_REGISTER *bankMemReg[2];
    GT_U32 buffMemReg;
} CHT2_BANKS_MEM;
typedef struct {
    GT_U32 bridgeGenRegsNum;
    SMEM_REGISTER *bridgeGenReg;
} CHT2_BRDG_MNG_MEM;
typedef struct {
    GT_U32 bufMemRegNum;
    SMEM_REGISTER *bufMemReg;
} CHT2_BUF_MEM;
typedef struct {
    GT_U32 bmRegNum;
    SMEM_REGISTER *bmReg;
    GT_U32 bmLLRegNum;
    SMEM_REGISTER *bmLLReg;
    GT_U32 bmCntrRegNum;
    SMEM_REGISTER *bmCntrReg;
} CHT2_BUF_MNG_MEM;
typedef struct {
    GT_U32 egrGenRegNum;
    SMEM_REGISTER *egrGenReg;
    GT_U32 txqInternalRegNum;
    SMEM_REGISTER *txqInternalReg[4];
    GT_U32 trQueueRegNum;
    SMEM_REGISTER *trQueueReg;
    GT_U32 portWdRegNum;
    SMEM_REGISTER *portWdReg;
    GT_U32 egrMibCntRegNum;
    SMEM_REGISTER *egrMibCntReg;
    GT_U32 hprMibCntRegNum;
    SMEM_REGISTER *hprMibCntReg[4];
    GT_U32 tailDropRegNum;
    SMEM_REGISTER *tailDropReg;
    GT_U32 egrRateShpRegNum;
    SMEM_REGISTER *egrRateShpReg[9];
    GT_U32 xsmiRegNum;
    SMEM_REGISTER *xsmiReg;
    GT_U32 egrStcTblRegNum;
    SMEM_REGISTER *egrStcTblReg;
    GT_U32 egrRateShapeRegNum;
    SMEM_REGISTER *egrRateShapeReg;
} CHT2_EGR_MEM;
typedef struct {
    GT_U32 globRegNum;
    SMEM_REGISTER *globReg;
    GT_U32 sdmaRegNum;
    SMEM_REGISTER *sdmaReg;
    GT_U32 twsiIntRegsNum;
    SMEM_REGISTER *twsiIntRegs;
} CHT2_GLOBAL_MEM;
typedef struct {
    GT_U32 gopRegNum;
    SMEM_REGISTER *gopReg[4];
    GT_U32 macMibCountRegNum;
    SMEM_REGISTER *macMibCountReg[4];
    GT_U32 ledRegNum;
    SMEM_REGISTER *ledReg[4];
} CHT2_GOP_CONF_MEM;
typedef struct {
    GT_U32 arpTblRegNum;
    SMEM_REGISTER *arpTblReg;
    GT_U32 macSaTblRegNum;
    SMEM_REGISTER *macSaTblReg;
    GT_U32 ipProtCpuCodeRegNum;
    SMEM_REGISTER *ipProtCpuCodeReg;
} CHT2_IP_MEM;
typedef struct {
    GT_U32 mllConfRegNum;
    SMEM_REGISTER *mllConfReg;
    GT_U32 mllEntryRegNum;
    SMEM_REGISTER *mllEntryReg;
} CHT2_MLL_MEM;
typedef struct {
    GT_U32 pciRegNum;
    SMEM_REGISTER *pciReg;
} CHT2_PCI_MEM;
typedef struct {
    GT_U32 pclConfRegNum;
    SMEM_REGISTER *pclConfReg;
    GT_U32 epclConfRegNum;
    SMEM_REGISTER *epclConfReg;
    GT_U32 ingPclIPCompsRegNum;
    SMEM_REGISTER *ingPclIPCompsReg;
    GT_U32 ePclIPCompsRegNum;
    SMEM_REGISTER *ePclIPCompsReg;
    GT_U32 pceActionTblRegNum;
    SMEM_REGISTER *pceActionTblReg;
    GT_U32 tcamRegNum;
    SMEM_REGISTER *tcamReg;
    GT_U32 accessDataRegNum;
    SMEM_REGISTER *accessDataReg;
    GT_U32 pclIdTblRegNum;
    SMEM_REGISTER *pclIdTblReg;
    GT_U32 pceRuleMatchCntRegNum;
    SMEM_REGISTER *pceRuleMatchCntReg;
    GT_U32 epclConfigTblRegNum;
    SMEM_REGISTER *epclConfigTblReg;
    GT_U32 pclDescriptorRegNum;
    SMEM_REGISTER *pclDescriptorReg;
    GT_U32 protBasedVlanQosTblRegNum;
    SMEM_REGISTER *protBasedVlanQosTblReg[8];
    GT_U32 pclIntRegNum;
    SMEM_REGISTER *pclIntReg;
    GT_U32 tcpPorRangeTblRegNum;
    SMEM_REGISTER *tcpPorRangeTblReg;
} CHT2_PCL_MEM;
typedef struct {
    GT_U32 policerRegNum;
    SMEM_REGISTER *policerReg;
    GT_U32 policerTblRegNum;
    SMEM_REGISTER *policerTblReg;
    GT_U32 policerQosRmTblRegNum;
    SMEM_REGISTER *policerQosRmTblReg;
    GT_U32 policerCntTblRegNum;
    SMEM_REGISTER *policerCntTblReg;
} CHT2_POLICER_MEM;
typedef struct {
    GT_U32 portsRegNum;
    SMEM_REGISTER *portsReg;
    GT_U32 genRegNum;
    SMEM_REGISTER *genReg;
    GT_U32 trunkTblRegNum;
    SMEM_REGISTER *trunkTblReg;
    GT_U32 qosTblRegNum;
    SMEM_REGISTER *qosTblReg;
    GT_U32 cpuCodeTblRegNum;
    SMEM_REGISTER *cpuCodeTblReg;
    GT_U32 statRateTblRegNum;
    SMEM_REGISTER *statRateTblReg;
    GT_U32 portInStcTblRegNum;
    SMEM_REGISTER *portInStcTblReg;
    GT_U32 toCpuRateLimiterRegNum;
    SMEM_REGISTER *toCpuRateLimiterReg;
    GT_U32 trunkMemberTblRegNum;
    SMEM_REGISTER *trunkMemberTblReg;
    GT_U32 ingFwrdRestConfigRegNum;
    SMEM_REGISTER *ingFwrdRestConfigReg;
    GT_U32 portIngressStcTblRegNum;
    SMEM_REGISTER *portIngressStcTblReg;
    GT_U32 statRateLimitRegNum;
    SMEM_REGISTER *statRateLimitReg;
} CHT2_PREEGR_MEM;
typedef struct {
    GT_U32 configRegNum;
    SMEM_REGISTER *configReg;
    GT_U32 tcamRegNum;
    SMEM_REGISTER *tcamReg;
    GT_U32 actionTblRegNum;
    SMEM_REGISTER *actionTblReg;
    GT_U32 nextHopTblRegNum;
    SMEM_REGISTER *nextHopTblReg;
} CHT2_ROUTER_MEM;
typedef struct {
    GT_U32 triSpeedPortsRegNum;
    SMEM_REGISTER *triSpeedPortsReg;
} CHT2_TRI_SPEED_PORTS_MEM;
typedef struct {
    GT_U32 vlanCnfRegNum;
    SMEM_REGISTER *vlanCnfReg;
    GT_U32 vlanTblRegNum;
    SMEM_REGISTER *vlanTblReg;
    GT_U32 mcstTblRegNum;
    SMEM_REGISTER *mcstTblReg;
    GT_U32 spanTblRegNum;
    SMEM_REGISTER *spanTblReg;
} CHT2_VLAN_TBL_MEM;
typedef struct {
    SMEM_CHT_DEV_COMMON_MEM_INFO common;
    CHT2_GLOBAL_MEM globalMem;
    CHT2_EGR_MEM egrMem;
    CHT2_BRDG_MNG_MEM brdgMngMem;
    CHT2_BUF_MNG_MEM bufMngMem;
    CHT2_GOP_CONF_MEM gopCnfMem;
    CHT_MAC_FDB_MEM macFdbMem;
    CHT2_BANKS_MEM banksMem;
    CHT2_BUF_MEM bufMem;
    CHT2_VLAN_TBL_MEM vlanTblMem;
    CHT2_TRI_SPEED_PORTS_MEM triSpeedPortsMem;
    CHT2_PREEGR_MEM preegressMem;
    CHT2_PCL_MEM pclMem;
    CHT2_POLICER_MEM policerMem;
    CHT2_PCI_MEM pciMem;
    CHT2_IP_MEM ipMem;
    CHT2_ROUTER_MEM routerMem;
    CHT2_MLL_MEM mllMem;
} SMEM_CHT2_DEV_MEM_INFO;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemCheetah3.h:
typedef struct {
    SMEM_REGISTER bankWriteReg[2];
    GT_U32 bankMemRegNum;
    SMEM_REGISTER *bankMemReg[2];
} CHT3_BANKS_MEM;
typedef struct {
    GT_U32 bridgeGenRegsNum;
    SMEM_REGISTER *bridgeGenReg;
} CHT3_BRDG_MNG_MEM;
typedef struct {
    GT_U32 bmRegNum;
    SMEM_REGISTER *bmReg;
    GT_U32 bmCntrRegNum;
    SMEM_REGISTER *bmCntrReg;
} CHT3_BUF_MNG_MEM;
typedef struct {
    GT_U32 cncCntrsRegNum;
    SMEM_REGISTER *cncCntrsReg;
    GT_U32 cncCntrsPerBlockRegNum;
    SMEM_REGISTER *cncCntrsPerBlockReg;
    GT_U32 cncCntrsTblNum;
    SMEM_REGISTER **cncCntrsTbl;
} CHT3_CENTRAL_CNT_MEM;
typedef struct {
    GT_U32 egrGenRegNum;
    SMEM_REGISTER *egrGenReg;
    GT_U32 txqInternalRegNum;
    SMEM_REGISTER *txqInternalReg[4];
    GT_U32 trQueueRegNum;
    SMEM_REGISTER *trQueueReg;
    GT_U32 portWdRegNum;
    SMEM_REGISTER *portWdReg;
    GT_U32 egrMibCntRegNum;
    SMEM_REGISTER *egrMibCntReg;
    GT_U32 hprMibCntRegNum;
    SMEM_REGISTER *hprMibCntReg[4];
    GT_U32 tailDropRegNum;
    SMEM_REGISTER *tailDropReg;
    GT_U32 egrRateShpRegNum;
    SMEM_REGISTER *egrRateShpReg[9];
    GT_U32 xsmiRegNum;
    SMEM_REGISTER *xsmiReg;
    GT_U32 egrStcTblRegNum;
    SMEM_REGISTER *egrStcTblReg;
    GT_U32 secondaryTargetPortMapRegNum;
    SMEM_REGISTER *secondaryTargetPortMapReg;
    GT_U32 stackTcRemapRegNum;
    SMEM_REGISTER *stackTcRemapMapReg;
} CHT3_EGR_MEM;
typedef struct {
    GT_U32 globRegNum;
    SMEM_REGISTER *globReg;
    GT_U32 sdmaRegNum;
    SMEM_REGISTER *sdmaReg;
    GT_U32 twsiIntRegsNum;
    SMEM_REGISTER *twsiIntRegs;
    GT_U32 pexRegNum;
    SMEM_REGISTER *pexReg;
    GT_U32 epclConfigTblRegNum;
    SMEM_REGISTER *epclConfigTblReg;
    GT_U32 macSaTblRegNum;
    SMEM_REGISTER *macSaTblReg;
} CHT3_GLOBAL_MEM;
typedef struct {
    GT_U32 portGroupRegNum;
    SMEM_REGISTER *portGroupReg[4];
    GT_U32 xgPortGroupRegNum;
    SMEM_REGISTER *xgPortGroupReg[4];
    GT_U32 macMibCountRegNum;
    SMEM_REGISTER *macMibCountReg[4];
    GT_U32 xgMacMibCountRegNum;
    SMEM_REGISTER *xgMacMibCountReg[4];
} CHT3_GOP_CONF_MEM;
typedef struct {
    GT_U32 mllConfRegNum;
    SMEM_REGISTER *mllConfReg;
    GT_U32 mllEntryRegNum;
    SMEM_REGISTER *mllEntryReg;
} CHT3_MLL_MEM;
typedef struct {
    GT_U32 pciRegNum;
    SMEM_REGISTER *pciReg[4];
} CHT3_PCI_MEM;
typedef struct {
    GT_U32 ingrPclCommonRegNum;
    SMEM_REGISTER *ingrPclCommonReg;
    GT_U32 pclTcamInternalConfigRegNum;
    SMEM_REGISTER *pclTcamInternalConfigReg;
    GT_U32 pclTcamTestConfigRegNum;
    SMEM_REGISTER *pclTcamTestConfigReg;
    GT_U32 ingrPclConfigTableRegNum;
    SMEM_REGISTER *ingrPclConfigTableReg;
    GT_U32 policyActionTableRegNum;
    SMEM_REGISTER *policyActionTableReg;
    GT_U32 policyEccRegNum;
    SMEM_REGISTER *policyEccReg[2];
    GT_U32 policyTcamRegNum;
    SMEM_REGISTER *policyTcamReg;
    GT_U32 vlanTranslationTableRegNum;
    SMEM_REGISTER *vlanTranslationTableReg;
    GT_U32 portVlanQoSConfigRegNum;
    SMEM_REGISTER *portVlanQoSConfigReg;
    GT_U32 portProtVidQoSConfigRegNum;
    SMEM_REGISTER *portProtVidQoSConfigReg;
} CHT3_PCL_MEM;
typedef struct {
    GT_U32 extraRegNum;
    SMEM_REGISTER *extraRegPtr;
} CHT3_PLUS_EXTRA_MEM;
typedef struct {
    GT_U32 policerRegNum;
    SMEM_REGISTER *policerReg;
    GT_U32 policerTimerRegNum;
    SMEM_REGISTER *policerTimerReg;
    GT_U32 policerDescrSampleRegNum;
    SMEM_REGISTER *policerDescrSampleReg;
    GT_U32 policerTblRegNum;
    SMEM_REGISTER *policerTblReg;
    GT_U32 policerCntTblRegNum;
    SMEM_REGISTER *policerCntTblReg;
    GT_U32 policerQosRmTblRegNum;
    SMEM_REGISTER *policerQosRmTblReg;
    GT_U32 policerMngCntTblRegNum;
    SMEM_REGISTER *policerMngCntTblReg;
} CHT3_POLICER_MEM;
typedef struct {
    GT_U32 configRegNum;
    SMEM_REGISTER *configReg;
    GT_U32 ageRegNum;
    SMEM_REGISTER *ageReg;
    GT_U32 tcamTestRegNum;
    SMEM_REGISTER *tcamTestReg;
    GT_U32 tcamRegNum;
    SMEM_REGISTER *tcamReg;
    GT_U32 actionTblRegNum;
    SMEM_REGISTER *actionTblReg;
    GT_U32 nextHopTblRegNum;
    SMEM_REGISTER *nextHopTblReg;
    GT_U32 vrfTblRegNum;
    SMEM_REGISTER *vrfTblReg;
} CHT3_ROUTER_MEM;
typedef struct {
    GT_U32 triSpeedPortsRegNum;
    SMEM_REGISTER *triSpeedPortsReg;
} CHT3_TRI_SPEED_PORTS_MEM;
typedef struct {
    GT_U32 vlanCnfRegNum;
    SMEM_REGISTER *vlanCnfReg;
    GT_U32 vlanTblRegNum;
    SMEM_REGISTER *vlanTblReg;
    GT_U32 mcstTblRegNum;
    SMEM_REGISTER *mcstTblReg;
    GT_U32 spanTblRegNum;
    SMEM_REGISTER *spanTblReg;
    GT_U32 vrfTblRegNum;
    SMEM_REGISTER *vrfTblReg;
} CHT3_VLAN_TBL_MEM;
typedef struct {
    GT_U32 xgPortsRegNum;
    SMEM_REGISTER *xgPortsReg;
} CHT3_XG_CTRL_PORTS_MEM;
typedef struct {
    GT_U32 mibRegNum;
    SMEM_REGISTER *mibReg;
} CHT3_XG_MIB_CNTRS_MEM;
typedef struct {
    SMEM_CHT_DEV_COMMON_MEM_INFO common;
    CHT3_GLOBAL_MEM globalMem;
    CHT3_EGR_MEM egrMem;
    CHT3_BRDG_MNG_MEM brdgMngMem;
    CHT3_BUF_MNG_MEM bufMngMem;
    CHT3_GOP_CONF_MEM gopCnfMem;
    CHT_MAC_FDB_MEM macFdbMem;
    CHT3_BANKS_MEM banksMem;
    CHT3_CENTRAL_CNT_MEM centralCntMem;
    CHT3_TRI_SPEED_PORTS_MEM triSpeedPortsMem;
    CHT3_XG_CTRL_PORTS_MEM xgCtrlPortsMem;
    CHT3_PCL_MEM pclMem;
    CHT3_POLICER_MEM policerMem;
    CHT3_PCI_MEM pciMem;
    CHT3_ROUTER_MEM routerMem;
    CHT3_MLL_MEM mllMem;
    CHT3_VLAN_TBL_MEM vlanTblMem;
    CHT3_XG_MIB_CNTRS_MEM xgMibCntrsMem;
    CHT3_PLUS_EXTRA_MEM ch3pExtraMem;
    SMEM_UNIT_CHUNKS_STC haAndEpclUnitMem;
    SMEM_UNIT_CHUNKS_STC eqUnitMem;
    SMEM_UNIT_CHUNKS_STC ipclTccUnitMem;
    SMEM_UNIT_CHUNKS_STC ipvxTccUnitMem;
    SMEM_UNIT_CHUNKS_STC uniphySerdesUnitMem;
    SMEM_XCAT_DEV_EXTRA_MEM_INFO xCatExtraMem;
} SMEM_CHT3_DEV_MEM_INFO;
typedef enum {SMEM_CHT_PLR_MEMORY_TYPE_METERING_E, SMEM_CHT_PLR_MEMORY_TYPE_COUNTING_E, SMEM_CHT_PLR_MEMORY_TYPE_METERING_CONFIG_E, SMEM_CHT_PLR_MEMORY_TYPE_CONF_LEVEL_SIGN_E, SMEM_CHT_PLR_MEMORY_TYPE_OTHER_E} SMEM_CHT_PLR_MEMORY_TYPE_ENT;
typedef struct {
    SMEM_UNIT_CHUNKS_STC vlanTblUnitMem;
    SMEM_UNIT_CHUNKS_STC brdgMngUnitMem;
    SMEM_UNIT_CHUNKS_STC policerMemIngress0UnitMem;
    SMEM_UNIT_CHUNKS_STC policerMemIngress1UnitMem;
    SMEM_UNIT_CHUNKS_STC policerMemEgressUnitMem;
    SMEM_UNIT_CHUNKS_STC mllMemUnitMem;
    SMEM_UNIT_CHUNKS_STC pclMemUnitMem;
    SMEM_UNIT_CHUNKS_STC pclTccMemUnitMem;
    SMEM_UNIT_CHUNKS_STC pclMemEgrUnitMem;
    SMEM_UNIT_CHUNKS_STC egrMemUnitMem;
    SMEM_UNIT_CHUNKS_STC eqUnitUnitMem;
    SMEM_UNIT_CHUNKS_STC ipvxTccUnitMem;
    SMEM_UNIT_CHUNKS_STC haAndEpclUnitMem;
    SMEM_UNIT_CHUNKS_STC bufMngMemUnitMem;
    SMEM_UNIT_CHUNKS_STC ttiMemUnitMem;
    SMEM_UNIT_CHUNKS_STC dfxUnitMem;
} SMEM_XCAT_DEV_EXTRA_MEM_INFO;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemFalcon.h:
typedef enum {SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MESSAGE_ID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MSG_TYPE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_FDB_ENTRY_TYPE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_VALID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SKIP, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_AGE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_CHAIN_TOO_LONG, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR_OFFSET, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_UP0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_DEV_ID, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_RESERVED, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_FID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_IS_TRUNK, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_EPORT_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_TRUNK_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_USER_DEFINED_10_7, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_USER_DEFINED_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_USER_DEFINED_4_1, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_USER_DEFINED_6_5, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_11_7, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_6_3, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_2_1, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_ORIG_VID1_11_7, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_ORIG_VID1_6_1, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_ORIG_VID1_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_APP_SPECIFIC_CPU_CODE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SP_UNKNOWN, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_IS_MOVED, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_IS_TRUNK, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_EPORT, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_TRUNK_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_DEVICE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_SRC_ID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_IS_TRUNK, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_EPORT_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_TRUNK_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_USER_DEFINED_10_7, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_USER_DEFINED_0, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_USER_DEFINED_4_1, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_USER_DEFINED_6_5, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_SOURCE_ID_11_7, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_SOURCE_ID_6_3, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_SOURCE_ID_2_1, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_SOURCE_ID_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_ORIG_VID1_11_7, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_ORIG_VID1_6_1, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_ORIG_VID1_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_VIDX, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR_INDEX_8_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR_INDEX_20_9, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_ENTRY_FOUND, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_DIP, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SIP_26_0, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SIP_30_27, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SIP_31, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SA_ACCESS_LEVEL, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_DA_ACCESS_LEVEL, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SEARCH_TYPE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_MULTIPLE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_DA_ROUTE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_IS_STATIC, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_DA_CMD, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_SA_CMD, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_FDB_LOOKUP_KEY_MODE, SMEM_SIP6_30_FDB_AU_MSG_TABLE_FIELDS_MAC_MC_IP_EPG_STREAM_ID, SMEM_SIP6_30_FDB_AU_MSG_TABLE_FIELDS_UC_EPG_STREAM_ID, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_MAC_ADDR_INDEX_20_9, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_VRF_ID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV4_DIP, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_FCOE_D_ID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_SCOPE_CHECK, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DST_SITE_ID, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_127_106, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_DEC_TTL_OR_HOP_COUNT, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_BYPASS_TTL_OPTIONS_OR_HOP_EXTENSION, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_COUNTER_SET_INDEX, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_ICMP_REDIRECT_EXCEP_MIRROR_EN, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_MTU_INDEX, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_USE_VIDX, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_EVIDX, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IS_TRUNK, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TARGET_DEVICE, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_EPORT_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TRUNK_NUM, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ECMP_POINTER, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_NEXT_HOP_EVLAN, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_START_OF_TUNNEL, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_ARP_PTR, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TUNNEL_TYPE, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TUNNEL_PTR, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TS_IS_NAT, 
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_ROUTE_TYPE, SMEM_SIP6_FDB_AU_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_31_0, SMEM_SIP6_FDB_AU_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_63_32, SMEM_SIP6_FDB_AU_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_95_64, SMEM_SIP6_FDB_AU_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_105_96, SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_ENT;
typedef enum {SMEM_SIP6_FDB_FDB_TABLE_FIELDS_VALID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SKIP, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_AGE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_FDB_ENTRY_TYPE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_FID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_MAC_ADDR, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_DEV_ID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SA_ACCESS_LEVEL, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_DIP, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SIP_26_0, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_DA_ACCESS_LEVEL, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_ORIG_VID1_11_7, 
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_ORIG_VID1_6_1, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_ORIG_VID1_0, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SOURCE_ID_11_7, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SOURCE_ID_6_3, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SOURCE_ID_2_1, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SOURCE_ID_0, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_USER_DEFINED_10_7, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_USER_DEFINED_0, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_USER_DEFINED_4_1, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_USER_DEFINED_6_5, 
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SIP_30_27, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_VIDX, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_IS_TRUNK, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_TRUNK_NUM, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_EPORT_NUM, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SIP_31, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_MULTIPLE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_IS_STATIC, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_DA_CMD, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SA_CMD, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_DA_ROUTE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_SP_UNKNOWN, 
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_APP_SPECIFIC_CPU_CODE, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_EPG_STREAM_ID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_VRF_ID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV4_DIP, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_FCOE_D_ID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_SCOPE_CHECK, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DST_SITE_ID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_127_106, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_DEC_TTL_OR_HOP_COUNT, 
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_BYPASS_TTL_OPTIONS_OR_HOP_EXTENSION, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_COUNTER_SET_INDEX, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ICMP_REDIRECT_EXCEP_MIRROR_EN, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MTU_INDEX, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_USE_VIDX, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_EVIDX, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_IS_TRUNK, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_EPORT, 
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_TRUNK_ID, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_DEV, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ECMP_POINTER, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_NEXT_HOP_EVLAN, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_START_OF_TUNNEL, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ARP_PTR, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TUNNEL_TYPE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TUNNEL_PTR, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TS_IS_NAT, 
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_POINTER_TYPE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ROUTE_TYPE, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_31_0, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_63_32, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_95_64, SMEM_SIP6_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_105_96, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_MAC_ADDRESS, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_SEQUENCE_NUMBER, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_TARGET_PORT_BITMAP, 
    SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_TARGET_COUNTERS, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_TARGET_SOURCE_HPORT, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_TARGET_INSTANCE, SMEM_SIP6_30_FDB_FDB_TABLE_FIELDS_DDE_TIMESTAMP, SMEM_SIP6_FDB_FDB_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP6_FDB_FDB_TABLE_FIELDS_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemIronman.h:
typedef enum {SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_PASSED_PKTS_CNT_E, SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_DISCARDED_PKTS_CNT_E, SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_OUT_OF_ORDER_PKTS_CNT_E, SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_CLEARED_ZERO_HIST_CNT_E, SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_RESTART_COUNTER_E, SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_RESTART_THRESHOLD_E, 
    SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP6_30_PREQ_SRF_COUNTERS_TABLE_FIELDS_ENT;
typedef enum {SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS_IRF_PASSED_PACKETS_COUNTER_E, SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS_IRF_DISCARDED_PACKETS_COUNTER_E, SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS_IRF_OUT_OF_ORDER_PACKETS_COUNTER_E, SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS_IRF_NUMBER_OF_TAGLESS_PACKETS_COUNTER_E, SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS_IRF_BYTE_COUNT_E, SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP6_30_SMU_IRF_COUNTERS_TABLE_FIELDS_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemLion3.h:
typedef enum {SMEM_LION3_FDB_FDB_TABLE_FIELDS_VALID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SKIP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_AGE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_FDB_ENTRY_TYPE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_FID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_MAC_ADDR, SMEM_LION3_FDB_FDB_TABLE_FIELDS_DEV_ID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SOURCE_ID_5_0, SMEM_LION3_FDB_FDB_TABLE_FIELDS_IS_TRUNK, SMEM_LION3_FDB_FDB_TABLE_FIELDS_DIP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SIP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_VIDX, 
    SMEM_LION3_FDB_FDB_TABLE_FIELDS_TRUNK_NUM, SMEM_LION3_FDB_FDB_TABLE_FIELDS_EPORT_NUM, SMEM_LION3_FDB_FDB_TABLE_FIELDS_USER_DEFINED, SMEM_LION3_FDB_FDB_TABLE_FIELDS_RESERVED_99_103, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SOURCE_ID_11_9, SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_ACCESS_LEVEL, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_ACCESS_LEVEL, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SOURCE_ID_8_6, SMEM_LION3_FDB_FDB_TABLE_FIELDS_RESERVED_116_118, SMEM_LION3_FDB_FDB_TABLE_FIELDS_ORIG_VID1, 
    SMEM_LION3_FDB_FDB_TABLE_FIELDS_IS_STATIC, SMEM_LION3_FDB_FDB_TABLE_FIELDS_MULTIPLE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_CMD, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_CMD, SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_ROUTE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SP_UNKNOWN, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_QOS_PARAM_SET_IDX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_QOS_PARAM_SET_IDX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_APP_SPECIFIC_CPU_CODE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_LOOKUP_INGRESS_MIRROR_TO_ANALYZER, 
    SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_LOOKUP_INGRESS_MIRROR_TO_ANALYZER, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_VRF_ID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_SCOPE_CHECK, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DEST_SITE_ID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_FCOE_D_ID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV4_DIP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_DEC_TTL_OR_HOP_COUNT, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_BYPASS_TTL_OPTIONS_OR_HOP_EXTENSION, 
    SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_INGRESS_MIRROR_TO_ANALYZER_INDEX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_MARKING_EN, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_INDEX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_PRECEDENCE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MODIFY_UP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MODIFY_DSCP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_COUNTER_SET_INDEX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ARP_BC_TRAP_MIRROR_EN, 
    SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_DIP_ACCESS_LEVEL, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ICMP_REDIRECT_EXCEPTION_MIRROR, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MTU_INDEX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_USE_VIDX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_IS_TRUNK, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_TRUNK_ID, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_EPORT, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_EVIDX, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_DEV, 
    SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_NEXT_HOP_EVLAN, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_START_OF_TUNNEL, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TUNNEL_TYPE, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TUNNEL_PTR, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ARP_PTR, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP, SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_NH_DATA_BANK_NUM, SMEM_LION3_FDB_FDB_TABLE_FIELDS___LAST_VALUE___E, SMEM_SIP5_10_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TS_IS_NAT = 64, 
    SMEM_SIP5_10_FDB_FDB_TABLE_FIELDS___LAST_VALUE___E} SMEM_LION3_FDB_FDB_TABLE_FIELDS;
typedef enum {SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TUNNEL_TYPE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UP_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UP, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TAG_ENABLE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_VID, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TTL, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RETAIN_INNER_CRC, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_B_SA_ASSIGN_MODE, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_GRE_KEY_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_PROTOCOL, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_NEXT_HOP_MAC_DA, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_GRE_PROTOCOL, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_1, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IPV4_GRE_KEY_1, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IP_PROTOCOL, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UDP_DST_PORT, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DSCP, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DSCP_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_FLOW_LABEL_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DF_FLAG, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_2, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RID, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_CAPWAP_FLAGS, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_OFFSET, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_FLAG, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IPV4_GRE_ENABLE, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IPV4_GRE_KEY_0, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_4, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TRILL_HEADER, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_LABEL1, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP1, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP1_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_NUMBER_OF_MPLS_LABELS, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_3, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SET_S_BIT, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SWAP_TTL_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_MPLS_MC_UPSTREAM_ASSIGNED_LABEL, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_7, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_LABEL2, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP2, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP2_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_PW_CONTROL_INDEX, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_5, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_LABEL3, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP3, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP3_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_SID, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_UP_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_6, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_UP, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_DEI, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_DEI_MARKING_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_SID_ASSIGN_MODE, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_TAG_RES2, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_TAG_RES1, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_TAG_NCA, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_B_DA_ASSIGN_MODE, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_PROFILE_NUMBER, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_GRE_FLAGS_AND_VERSION, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UDP_SRC_PORT, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DIP, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SIP, 
    SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DIP_IPV6, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SIP_IPV6, SMEM_SIP5_10_HA_TUNNEL_START_TABLE_FIELDS_MPLS_PW_EXP_MARKING_MODE, SMEM_SIP5_15_HA_TUNNEL_START_TABLE_FIELDS_PUSH_ELI_AND_EL_AFTER_LABEL_1, SMEM_SIP5_15_HA_TUNNEL_START_TABLE_FIELDS_PUSH_ELI_AND_EL_AFTER_LABEL_2, SMEM_SIP5_15_HA_TUNNEL_START_TABLE_FIELDS_PUSH_ELI_AND_EL_AFTER_LABEL_3, SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_GENERIC_TS_TYPE, SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_ETHERTYPE, 
    SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_DATA1, SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_DATA2, SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS____LAST_VALUE___E} SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_ENT;
typedef enum {SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_COMMAND, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_CPU_CODE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT_0, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_REDIRECT_COMMAND, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_RESERVED_46_15, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_POLICY1_LOOKUP_MODE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_POLICY2_LOOKUP_MODE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IPCL_PROFILE_INDEX, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_RESERVED_17_15, 
    SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VIDX, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IS_TRUNK, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TRG_PORT, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TARGET_DEVICE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TRUNK_ID, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_USE_VIDX, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VNT_L2_ECHO, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ARP_POINTER, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TUNNEL_POINTER, 
    SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START_PASSENGER_TYPE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IP_NEXT_HOP_ENTRY_INDEX, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VRF_ID, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MAC_SA_29_0, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BIND_TO_CNC_COUNTER, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_CNC_COUNTER_INDEX, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MAC_SA_47_30, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_METER, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER, 
    SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_POLICER_PTR, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SOURCE_ID_SET_ENABLE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SOURCE_ID, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ACTION_STOP, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BRIDGE_BYPASS, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_PIPE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VLAN_PRECEDENCE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_EN_NESTED_VLAN, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VLAN_COMMAND, 
    SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VID0, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE_MARKING_ENABLE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_QOS_PRECEDENCE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_UP, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ENABLE_MIRROR_TCP_RST_OR_FIN, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT_2_1, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_DA, 
    SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_SA, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SET_EGRESS_FILTER_REGISTERED, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VLAN1_CMD, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_UP1_CMD, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VID1, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_UP1, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_FLOW_ID, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IPCL_RESERVED_EN, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IPCL_TO_TXQ_RESERVED, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SET_MAC2ME, 
    SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TIMESTAMP_EN, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_OFFSET_INDEX, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_EN, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_OAM_PROFILE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ASSIGN_SRC_EPORT_EN, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SRC_EPORT, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_USER_AC_ENABLE, SMEM_LION3_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E} SMEM_LION3_IPCL_ACTION_TABLE_FIELDS;
typedef enum {SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PROT_BASED_QOS_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PROT_BASED_VLAN_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_DEF_TAG1_VLAN_ID, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_UP0, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_INGRESS_TAG0_TPID_PROFILE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_INGRESS_TAG1_TPID_PROFILE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_VLAN_TRANSLATION, 
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_P_VID_PRECEDENCE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_P_EVLAN_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_P_EVLAN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_802_1AH_MAC_TO_ME_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_EN_802_1AH_TTI_LOOKUP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_ETHERNET_CLASSIFIER_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MPLS_TUNNEL_TERMINATION_EN, 
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_MPLS_MAC_TO_ME_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_IPV4_MAC_TO_ME_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_TTI_FOR_TT_ONLY, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_TUNNEL_TERMINATION_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_EXTENDED_DSA_BYPASS_BRIDGE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_QOS_PROFILE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_DSA_TAG_QOS, 
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_EXP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_DSCP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_UP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MAP_DSCP_TO_DSCP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_QOS_MAPPING_TABLE_INDEX, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_MODIFY_DSCP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_MODIFY_UP, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_QOS_PRECEDENCE, 
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_NESTED_VLAN_ACCESS_PORT, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_OVERSIZE_UNTAGGED_PKTS_FILTER_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRILL_ENGINE_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRILL_INGRESS_OUTER_VID0, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_802_1AH_PASSENGER_STAG_IS_TAG0_1, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_6_TOTAL_LENGTH_DEDUCTION_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_OAM_LINK_LAYER_PDU_TRAP_EN, 
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_OAM_LINK_LAYER_LOOPBACK_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_UP_CFI_TO_QOS_TABLE_SELECT_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_LOOKUP0_PCL_CFG_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_LOOKUP1_PCL_CFG_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_LOOKUP2_PCL_CFG_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_ASSIGN_VF_ID_EN, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_L2_QOS_TAG0_OR_TAG1, 
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_PKT_TYPE_UDB_KEY_I_ENABLE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_MC_DUPLICATION_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV6_MC_DUPLICATION_MODE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MPLS_MC_DUPLICATION_ENABLE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRILL_MC_DUPLICATION_ENABLE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PBB_MC_DUPLICATION_ENABLE, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MRU_INDEX, 
    SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_SOURCE_EPG_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_COPY_TAG1_VID_TO_SRC_EPG_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_EPORT_UP1_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_EPORT_DEI1_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_EPORT_DEI0_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_PRP_ENABLED_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_PRT_PORT_LAN_ID_E, 
    SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_PRT_TREAT_WRONG_LAN_ID_AS_RCT_EXISTS_E, SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_LSDU_CONSTANT_E, SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS___LAST_VALUE___E} SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_ENT;
typedef enum {SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_COLOR_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_POLICER_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_MG_COUNTERS_SET_EN_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_BILLING_PTR_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_BYTE_OR_PACKET_COUNTING_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_PACKET_SIZE_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_TUNNEL_TERMINATION_PACKET_SIZE_MODE_E, 
    SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INCLUDE_LAYER1_OVERHEAD_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_DSA_TAG_COUNTING_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_TIMESTAMP_TAG_COUNTING_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_RED_CMD_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_YELLOW_CMD_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_GREEN_CMD_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_MODIFY_DSCP_E, 
    SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_MODIFY_UP_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_QOS_PROFILE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_REMARK_MODE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_DROP_RED_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_EXP_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_DSCP_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_TC_E, 
    SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_UP_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_DP_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_YELLOW_ECN_MARKING_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_MEF_10_3_ENV_SIZE_E, SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS___LAST_VALUE___E, SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_GREEN_MIRROR_TO_ANALYZER_ENABLE_E = 25, 
    SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_YELLOW_MIRROR_TO_ANALYZER_ENABLE_E, SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_RED_MIRROR_TO_ANALYZER_ENABLE_E, SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_MEF_10_3_ENV_SIZE_E, SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_GREEN_MIRROR_TO_ANALYZER_ENABLE_E, SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_YELLOW_MIRROR_TO_ANALYZER_ENABLE_E, SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_RED_MIRROR_TO_ANALYZER_ENABLE_E, 
    SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_ENT;
typedef enum {SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_CPU_CODE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_COMMAND, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_REDIRECT_COMMAND, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ACTION_STOP, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SET_MAC2ME, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_POLICY1_LOOKUP_MODE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_POLICY2_LOOKUP_MODE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IPCL_PROFILE_INDEX, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_USE_VIDX, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VIDX, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IS_TRUNK, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TRG_PORT, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TARGET_DEVICE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TRUNK_ID, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VNT_L2_ECHO, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ARP_POINTER, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TUNNEL_POINTER, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START_PASSENGER_TYPE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_PBR_MODE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IP_NEXT_HOP_ENTRY_INDEX, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VRF_ID, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MAC_SA_27_0, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MAC_SA_47_28, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_METER, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_POLICER_PTR, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_RESERVED, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ENABLE_MIRROR_TCP_RST_OR_FIN, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_DA, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_SA, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SET_EGRESS_FILTER_REGISTERED, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_BRIDGE_BYPASS, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_PIPE, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_EN_NESTED_VLAN, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SET_SST_ID, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SST_ID, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_USER_AC_ENABLE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_COUNTER, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_COUNTER_INDEX, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VLAN_PRECEDENCE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VLAN_COMMAND, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VID0, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE_MARKING_ENABLE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_QOS_PRECEDENCE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_UP, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VLAN1_CMD, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_UP1_CMD, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VID1, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_UP1, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IPCL_RESERVED_EN, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IPCL_TO_TXQ_RESERVED, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TIMESTAMP_EN, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_OFFSET_INDEX, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_EN, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_OAM_PROFILE, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_FLOW_ID, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_RESERVED_1, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ASSIGN_SRC_EPORT_EN, 
    SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SRC_EPORT, SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS;
typedef enum {SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_CPU_CODE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_COMMAND, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_REDIRECT_COMMAND, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ACTION_STOP, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SET_MAC2ME, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_POLICY1_LOOKUP_MODE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_POLICY2_LOOKUP_MODE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IPCL_PROFILE_INDEX, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_USE_VIDX, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VIDX, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IS_TRUNK, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TRG_PORT, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TARGET_DEVICE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TRUNK_ID, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VNT_L2_ECHO, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ARP_POINTER, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TUNNEL_POINTER, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START_PASSENGER_TYPE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_PBR_MODE, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IP_NEXT_HOP_ENTRY_INDEX, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VRF_ID, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MAC_SA_27_0, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MAC_SA_47_28, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_METER, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_POLICER_PTR, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_RESERVED, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ENABLE_MIRROR_TCP_RST_OR_FIN, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_DA, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_SA, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SET_EGRESS_FILTER_REGISTERED, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_BRIDGE_BYPASS, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_PIPE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_EN_NESTED_VLAN, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SET_SST_ID, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SST_ID, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_USER_AC_ENABLE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_COUNTER, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_COUNTER_INDEX, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VLAN_PRECEDENCE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VLAN_COMMAND, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VID0, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE_MARKING_ENABLE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_QOS_PRECEDENCE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_UP, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VLAN1_CMD, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_UP1_CMD, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VID1, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_UP1, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IPCL_RESERVED_EN, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IPCL_TO_TXQ_RESERVED, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TIMESTAMP_EN, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_OFFSET_INDEX, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_EN, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_OAM_PROFILE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_FLOW_ID, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_RESERVED_1, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ASSIGN_SRC_EPORT_EN, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SRC_EPORT, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_LATENCY_MONITORING_PROFILE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_LATENCY_MONITORING_EN, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SKIP_FDB_SA_LOOKUP_EN, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TRIGGER_INTERRUPT_EN, 
    SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_RESERVED_3_BITS, SMEM_SIP6_TCAM_ACTION_TABLE_FIELDS_TCAM_OVER_EXACT_MATCH_ENABLE, SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E, SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_TAG0_DEI_CFI_VALUE = 69, SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_TAG1_DEI_CFI_VALUE, SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_ASSIGN_TAG1_FROM_UDBS, SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_IPFIX_ENABLE, SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_FLOW_TRACK_ENABLE, 
    SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_AND_EGRESS_FILTERING, SMEM_SIP6_30_IPCL_ACTION_TABLE_FIELDS_GENERIC_ACTION, SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E} SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemMacsec.h:
typedef struct {
    SMEM_SPEC_FIND_FUN_ENTRY_STC specFunTbl[6];
    SMEM_UNIT_CHUNKS_STC ports[4];
    SMEM_UNIT_CHUNKS_STC macStat;
    SMEM_UNIT_CHUNKS_STC global;
    SMEM_UNIT_CHUNKS_STC petStat;
    SMEM_UNIT_CHUNKS_STC macsecStatistics;
} MACSEC_DEV_MEM_INFO;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemPhy.h:
typedef struct {
    SMEM_SPEC_FIND_FUN_ENTRY_STC specFunTbl[256];
    GT_U32 currentActivePage;
    SMEM_UNIT_CHUNKS_STC page0;
    SMEM_UNIT_CHUNKS_STC page1;
    SMEM_UNIT_CHUNKS_STC page2;
    SMEM_UNIT_CHUNKS_STC page3;
    SMEM_UNIT_CHUNKS_STC page4;
    SMEM_UNIT_CHUNKS_STC page5;
    SMEM_UNIT_CHUNKS_STC page6;
    SMEM_UNIT_CHUNKS_STC page7;
    SMEM_UNIT_CHUNKS_STC page8;
    SMEM_UNIT_CHUNKS_STC page9;
    SMEM_UNIT_CHUNKS_STC page12;
    SMEM_UNIT_CHUNKS_STC page14;
    SMEM_UNIT_CHUNKS_STC page16;
    SMEM_UNIT_CHUNKS_STC page18;
    SMEM_UNIT_CHUNKS_STC page253;
    SMEM_UNIT_CHUNKS_STC page255;
} PHY_DEV_MEM_INFO;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemSalsa.h:
typedef struct {
    GT_U32 brgPortsNum;
    GT_U32 portRegsNum;
    SMEM_REGISTER *portRegs;
    GT_U32 portProtVidRegsNum;
    SMEM_REGISTER *portProtVidRegs;
    GT_U32 genRegsNum;
    SMEM_REGISTER *genRegs;
} SALSA_BRDG_MNG_MEM;
typedef struct {
    GT_U32 bank0RegsNum;
    SMEM_REGISTER *bank0Regs;
    GT_U32 bank1RegsNum;
    SMEM_REGISTER *bank1Regs;
} SALSA_BUFFER_MEM;
typedef struct {
    GT_U32 regsNum;
    SMEM_REGISTER *regs;
} SALSA_BUF_CFG_MEM;
typedef struct {
    GT_U32 genRegsNum;
    SMEM_REGISTER *genRegs;
    GT_U32 cntrlRegsNum;
    SMEM_REGISTER *cntrlRegs;
} SALSA_BUF_MNG_MEM;
typedef struct {
    SMEM_SPEC_FIND_FUN_ENTRY_STC specFunTbl[64];
    SALSA_GLOBAL_MEM globalMem;
    SALSA_BUF_MNG_MEM bufMngMem;
    SALSA_PORT_MEM portMem;
    SALSA_BRDG_MNG_MEM bridgeMngMem;
    SALSA_EGR_MEM egressMem;
    SALSA_BUF_CFG_MEM bufMem;
    SALSA_MAC_FDB_MEM macFbdMem;
    SALSA_VLAN_TBL_MEM vlanTblMem;
    SALSA_BUFFER_MEM bufBanksMem;
} SALSA_DEV_MEM_INFO;
typedef struct {
    GT_U32 genRegsNum;
    SMEM_REGISTER *genRegs;
    GT_U32 stackCfgRegNum;
    SMEM_REGISTER *stackCfgRegs;
    GT_U32 txQueRegNum;
    SMEM_REGISTER *txQueRegs;
} SALSA_EGR_MEM;
typedef struct {
    GT_U32 globRegsNum;
    SMEM_REGISTER *globRegs;
    GT_U32 twsiIntRegsNum;
    SMEM_REGISTER *twsiIntRegs;
} SALSA_GLOBAL_MEM;
typedef struct {
    GT_U32 regsNum;
    SMEM_REGISTER *regs;
    GT_U32 macTblRegNum;
    SMEM_REGISTER *macTblRegs;
    GT_U32 macUpdFifoRegsNum;
    SMEM_REGISTER *macUpdFifoRegs;
} SALSA_MAC_FDB_MEM;
typedef struct {
    GT_U32 macPortsNum;
    GT_U32 perPortRegsNum;
    SMEM_REGISTER *perPortRegs;
    GT_U32 perGroupRegsNum;
    SMEM_REGISTER *perGroupRegs;
    GT_U32 macCntsNum;
    SMEM_REGISTER *macCnts;
} SALSA_PORT_MEM;
typedef struct {
    GT_U32 vltRegsNum;
    SMEM_REGISTER *vltRegs;
    GT_U32 vlanTblRegNum;
    SMEM_REGISTER *vlanTblRegs;
    GT_U32 mcastTblRegNum;
    SMEM_REGISTER *mcastTblRegs;
    GT_U32 stpTblRegNum;
    SMEM_REGISTER *stpTblRegs;
} SALSA_VLAN_TBL_MEM;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemSoho.h:
typedef struct {
    GT_U32 pvtTblMemSize;
    SMEM_REGISTER *pvtTblMem;
} OPAL_PVT_DB_MEM;
typedef struct {
    GT_U32 stuTblMemSize;
    SMEM_REGISTER *stuTblMem;
} OPAL_STU_DB_MEM;
typedef enum {SMEM_SOHO_SCIB_MULTI_CHIP_MODE_ACCESS_FROM_REMOTE_E, SMEM_SOHO_SCIB_MULTI_CHIP_MODE_ACCESS_FROM_LOCAL_E} SMEM_SOHO_SCIB_MULTI_CHIP_MODE_ENT;
typedef struct {
    GT_U32 macTblMemSize;
    SMEM_REGISTER *macTblMem;
    SOHO_ATU_VIOLATION_E violation;
    GT_U16 violationData[5];
} SOHO_ATU_DB_MEM;
typedef enum {SOHO_SRC_ATU_PORT_E, SOHO_MISS_ATU_E, SOHO_FULL_ATU_E} SOHO_ATU_VIOLATION_E;
typedef struct {
    GT_U32 cntStatsTblSize;
    SMEM_REGISTER *cntStatsTblMem[11];
    SMEM_REGISTER *cntStatsCaptureMem;
    SMEM_REGISTER *cntStatsTblMem_bank1[11];
    SMEM_REGISTER *cntStatsCaptureMem_bank1;
} SOHO_CNT_MEM;
typedef struct {
    SMEM_REGISTER multiChipModeRegisters[2];
    SMEM_SOHO_SCIB_MULTI_CHIP_MODE_ENT multiChipScibMode;
    GT_U32 globalRegsNum;
    SMEM_REGISTER *globalRegs;
    SMEM_REGISTER *global2Regs;
    GT_U32 phyRegsNum;
    SMEM_REGISTER *phyRegs[11];
    GT_U32 portRegsNum;
    SMEM_REGISTER *portRegs[11];
    SMEM_REGISTER *globalInternalCpuRegs;
    SMEM_REGISTER *globalTcamRegs;
} SOHO_DEVICE_MEM;
typedef struct {
    SMEM_REGISTER fcDelayMem[3];
} SOHO_DEV_FC_DELAY_MEM;
typedef struct {
    GT_U32 len;
    GT_U8 *mem[31];
} SOHO_DEV_FC_MEM;
typedef struct {
    SMEM_SPEC_FIND_FUN_ENTRY_STC specFunTbl[16];
    GT_U8 accessMode;
    SOHO_DEVICE_MEM devRegs;
    SOHO_ATU_DB_MEM macDbMem;
    SOHO_VLAN_DB_MEM vlanDbMem;
    SOHO_CNT_MEM statsCntMem;
    SOHO_TRUNK_DB_MEM trunkMaskMem;
    SOHO_DEV_ROUT_MEM trgDevMem;
    SOHO_TROUT_DB_MEM trunkRouteMem;
    SOHO_DEV_FC_DELAY_MEM flowCtrlDelayMem;
    OPAL_STU_DB_MEM stuDbMem;
    OPAL_PVT_DB_MEM pvtDbMem;
    SOHO_DEV_FC_MEM flowCtrlMem;
    SOHO_SWITCH_MAC_WOL_WOF_MEM switchMacMem;
    SOHO_IEEE_PRIO_MAP_TABLE_MEM ieeePrioMapTableMem[12];
    SOHO_IMP_COMM_DEBUG_MEM impCommDebugMem;
    SOHO_LED_CONTROL_MEM ledControlMem[12];
    SOHO_SCRATCH_MISC_MEM scratchMiscMem;
} SOHO_DEV_MEM_INFO;
typedef struct {
    SMEM_REGISTER deviceTblMem[32];
} SOHO_DEV_ROUT_MEM;
typedef struct {
    SMEM_REGISTER ieeePrioMapTableMem[64];
} SOHO_IEEE_PRIO_MAP_TABLE_MEM;
typedef struct {
    SMEM_REGISTER impCommDebugMem[128];
} SOHO_IMP_COMM_DEBUG_MEM;
typedef struct {
    SMEM_REGISTER ledControlMem[8];
} SOHO_LED_CONTROL_MEM;
typedef enum {SOHO_PORT_SPEED_10_MBPS_E, SOHO_PORT_SPEED_100_MBPS_E, SOHO_PORT_SPEED_1000_MBPS_E} SOHO_PORT_SPEED_MODE_E;
typedef struct {
    SMEM_REGISTER scratchMiscMem[128];
} SOHO_SCRATCH_MISC_MEM;
typedef struct {
    SMEM_REGISTER switchMacWolWofMem[64];
} SOHO_SWITCH_MAC_WOL_WOF_MEM;
typedef struct {
    SMEM_REGISTER trouteTblMem[16];
    GT_U32 readRegVal;
} SOHO_TROUT_DB_MEM;
typedef struct {
    SMEM_REGISTER trunkTblMem[8];
    GT_U32 readRegVal;
} SOHO_TRUNK_DB_MEM;
typedef struct {
    GT_U32 vlanTblMemSize;
    SMEM_REGISTER *vlanTblMem;
    SOHO_VTU_VIOLATION_E violation;
    GT_U16 violationData[5];
} SOHO_VLAN_DB_MEM;
typedef enum {SOHO_NONE_E, SOHO_SRC_VTU_PORT_E, SOHO_MISS_VTU_VID_E, SOHO_FULL_VTU_E} SOHO_VTU_VIOLATION_E;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemXCat2.h:
typedef enum {SMEM_XCAT2_UNIT_MG_E, SMEM_XCAT2_UNIT_DFX_E, SMEM_XCAT2_UNIT_EGR_TXQ_E, SMEM_XCAT2_UNIT_L2I_E, SMEM_XCAT2_UNIT_UC_ROUTE_E, SMEM_XCAT2_UNIT_BM_E, SMEM_XCAT2_UNIT_EPLR_E, SMEM_XCAT2_UNIT_LMS_E, SMEM_XCAT2_UNIT_FDB_E, SMEM_XCAT2_UNIT_MPPM_BANK0_E, SMEM_XCAT2_UNIT_MPPM_BANK1_E, SMEM_XCAT2_UNIT_MEM_E, SMEM_XCAT2_UNIT_CENTRALIZED_COUNT_E, SMEM_XCAT2_UNIT_STACKING_PORTS_E, SMEM_XCAT2_UNIT_UNIPHY_SERDES_E, SMEM_XCAT2_UNIT_VLAN_MC_E, SMEM_XCAT2_UNIT_NETWORK_PORTS_E, SMEM_XCAT2_UNIT_EQ_E, 
    SMEM_XCAT2_UNIT_IPCL_E, SMEM_XCAT2_UNIT_TTI_E, SMEM_XCAT2_UNIT_IPLR0_E, SMEM_XCAT2_UNIT_IPLR1_E, SMEM_XCAT2_UNIT_TCC_LOWER_E, SMEM_XCAT2_UNIT_TCC_UPPER_E, SMEM_XCAT2_UNIT_HA_E, SMEM_XCAT2_UNIT_EPCL_E, SMEM_XCAT2_UNIT_LAST_E} SMEM_XCAT2_UNIT_NAME_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/smem/smemXCat3.h:
typedef enum {SMEM_XCAT3_UNIT_MG_E, SMEM_XCAT3_UNIT_EGR_TXQ_E, SMEM_XCAT3_UNIT_L2I_E, SMEM_XCAT3_UNIT_IPVX_E, SMEM_XCAT3_UNIT_BM_E, SMEM_XCAT3_UNIT_EPLR_E, SMEM_XCAT3_UNIT_LMS_E, SMEM_XCAT3_UNIT_FDB_E, SMEM_XCAT3_UNIT_MPPM_BANK0_E, SMEM_XCAT3_UNIT_MPPM_BANK1_E, SMEM_XCAT3_UNIT_MEM_E, SMEM_XCAT3_UNIT_CENTRALIZED_COUNT_E, SMEM_XCAT3_UNIT_MSM_E, SMEM_XCAT3_UNIT_GOP_E, SMEM_XCAT3_UNIT_SERDES_E, SMEM_XCAT3_UNIT_VLAN_MC_E, SMEM_XCAT3_UNIT_EQ_E, SMEM_XCAT3_UNIT_IPCL_E, SMEM_XCAT3_UNIT_TTI_E, 
    SMEM_XCAT3_UNIT_IPLR0_E, SMEM_XCAT3_UNIT_IPLR1_E, SMEM_XCAT3_UNIT_MLL_E, SMEM_XCAT3_UNIT_TCC_LOWER_E, SMEM_XCAT3_UNIT_TCC_UPPER_E, SMEM_XCAT3_UNIT_HA_E, SMEM_XCAT3_UNIT_EPCL_E, SMEM_XCAT3_UNIT_CCFC_E, SMEM_XCAT3_UNIT_LAST_E, SMEM_AC5_UNIT_CNC_1_E = 27, SMEM_AC5_UNIT_PCL_TCC_1_E, SMEM_AC5_UNIT_DFX_SERVER_E, SMEM_AC5_UNIT_MG0_E, SMEM_AC5_UNIT_MPP_E, SMEM_AC5_UNIT_LAST_E} SMEM_XCAT3_UNIT_NAME_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snet.h:
typedef struct SNET_ENTRY_FORMAT_TABLE_STCT SNET_ENTRY_FORMAT_TABLE_STC;
struct SNET_ENTRY_FORMAT_TABLE_STCT;
typedef enum {SNET_IPCL_LOOKUP_0_0_E, SNET_IPCL_LOOKUP_0_1_E, SNET_IPCL_LOOKUP_1_E} SNET_IPCL_LOOKUP_ENT;
typedef enum {SNET_PHY_SWITCH_USGMII_PCH_EXTENTION_TYPE_IGNORE_E, SNET_PHY_SWITCH_USGMII_PCH_EXTENTION_TYPE_PTP_E, SNET_PHY_SWITCH_USGMII_PCH_EXTENTION_TYPE_PREEMPTION_PTP_E, SNET_PHY_SWITCH_USGMII_PCH_EXTENTION_TYPE_RESERVED_E} SNET_PHY_SWITCH_USGMII_PCH_EXTENTION_TYPE_ENT;
typedef enum {SNET_PHY_SWITCH_USGMII_PCH_PACKET_TYPE_ETHERNET_WITH_PCH_E, SNET_PHY_SWITCH_USGMII_PCH_PACKET_TYPE_ETHERNET_WITHOUT_PCH_E, SNET_PHY_SWITCH_USGMII_PCH_PACKET_TYPE_IDLE_E, SNET_PHY_SWITCH_USGMII_PCH_PACKET_TYPE_RESERVED_E} SNET_PHY_SWITCH_USGMII_PCH_PACKET_TYPE_ENT;
typedef struct {
    SNET_PHY_SWITCH_USGMII_PCH_PACKET_TYPE_ENT packetType;
    GT_U32 subPortId;
    SNET_PHY_SWITCH_USGMII_PCH_EXTENTION_TYPE_ENT extentionType;
    SNET_TOD_TIMER_STC timestamp;
    SNET_PTP_PHY_INFO_STC signature;
    GT_BOOL ptpTimestampEnable;
    GT_U32 frameCount;
} SNET_PHY_SWITCH_USGMII_PCH_PTP_INFO_STC;
typedef struct _txDesc SNET_STRUCT_TX_DESC;
struct _txDesc;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah2EPcl.h:
typedef enum {CHT2_EPCL_KEY_FIELDS_ID_VALID_E, CHT2_EPCL_KEY_FIELDS_ID_PCL_ID_E, CHT2_EPCL_KEY_FIELDS_ID_SRC_PORT_E, CHT2_EPCL_KEY_FIELDS_ID_IS_TAGGED_E, CHT2_EPCL_KEY_FIELDS_ID_VID_E, CHT2_EPCL_KEY_FIELDS_ID_UP_E, CHT2_EPCL_KEY_FIELDS_ID_QOS_PROFILE_E, CHT2_EPCL_KEY_FIELDS_ID_IS_IPV4_E, CHT2_EPCL_KEY_FIELDS_ID_IS_IP_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_42_E, CHT2_EPCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_66_59_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_72_67_E, 
    CHT2_EPCL_KEY_FIELDS_ID_IS_ARP_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_74_E, CHT2_EPCL_KEY_FIELDS_ID_SRC_IS_TRUNK_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_IS_ROUTED, CHT2_EPCL_KEY_FIELDS_ID_IS_L2_VALID_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_ENCAP_TYPE_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_MAC_SA_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_MAC_DA_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_PACKET_TYPE_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_190_E, CHT2_EPCL_KEY_FIELDS_ID_IS_VIDX_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_IP_PROTOCOL_E, 
    CHT2_EPCL_KEY_FIELDS_ID_DSCP_E, CHT2_EPCL_KEY_FIELDS_ID_IS_L4_VALID_E, CHT2_EPCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_2_3_E, CHT2_EPCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_4_5_E, CHT2_EPCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_DIP_31_0_E, CHT2_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_13_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_139_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_IPV4_FRAGMENTED_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_IS_BC_E, CHT2_EPCL_KEY_FIELDS_ID_SIP_31_0_SHORT_E, 
    CHT2_EPCL_KEY_FIELDS_ID_DIP_31_0_IPV4_L4_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_SHORT_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_187_E, CHT2_EPCL_KEY_FIELDS_ID_IS_IPV6_E, CHT2_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_SIP_31_0_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_DIP_31_0_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_ENCAP_TYPE_LONG_VALID_E, CHT2_EPCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_LONG_RESERVED_179_234_E, 
    CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_BYTE3_338_331_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_BYTE4_346_339_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_BYTE5_354_347_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_BYTE0_362_355_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_BYTE1_370_363_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_BYTE2_378_371_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_SIP_127_32_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_LONG_E, 
    CHT2_EPCL_KEY_FIELDS_ID_DIP_127_120_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_MAC_SA_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_MAC_DA_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_380_379_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_DIP_119_32_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_DIP_0_31_IPV6_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_IS_L2_VALID_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_USER_DEFINED_VALID_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_IP_HEADER_OK_LONG_E, CHT2_EPCL_KEY_FIELDS_ID_CPU_CODE_0_6_STANDARD_E, 
    CHT2_EPCL_KEY_FIELDS_ID_RESERVED_39_33_E, CHT2_EPCL_KEY_FIELDS_ID_TRUNK_ID, CHT2_EPCL_KEY_FIELDS_ID_SRCDEV_ID, CHT2_EPCL_KEY_FIELDS_ID_SST_ID_E, CHT2_EPCL_KEY_FIELDS_ID_IS_UNKNOWN_UC_E, CHT2_EPCL_KEY_FIELDS_ID_CPU_CODE_7_STANDARD_E, CHT2_EPCL_KEY_FIELDS_ID_LONG_IPV4_FRAGMENT_E, CHT2_EPCL_KEY_FIELDS_ID_RESERVED_89_E, CHT2_EPCL_KEY_FIELDS_ID_LAST_E} CHT2_EPCL_KEY_FIELDS_ID_ENT;
typedef enum {CHT2_EPCL_KEY_TYPE_L2_KEY_SHORT_E, CHT2_EPCL_KEY_TYPE_L2_L3_KEY_SHORT_E, CHT2_EPCL_KEY_TYPE_L3_L4_KEY_SHORT_E, CHT2_EPCL_KEY_TYPE_L2_L3_L4_KEY_LONG_E, CHT2_EPCL_KEY_TYPE_L2_IPV6_KEY_LONG_E, CHT2_EPCL_KEY_TYPE_L4_IPV6_KEY_LONG_E, CHT2_EPCL_KEY_TYPE_UNKNOWN_E} CHT2_EPCL_KEY_TYPE_ENT;
typedef enum {SKERNEL_CHT2_EPCL_CMD_FORWARD_E, SKERNEL_CHT2_EPCL_CMD_MIRROR_E, SKERNEL_CHT2_EPCL_CMD_TRAP_E, SKERNEL_CHT2_EPCL_CMD_HARD_DROP, SKERNEL_CHT2_EPCL_CMD_SOFT_DROP} SKERNEL_CH2_EPCL_PACKET_CMD_ENT;
typedef struct {
    GT_U32 matchCounterIndex;
    GT_BOOL matchCounterEn;
    GT_U32 pceModifyUp;
    GT_U32 pceModifyDscp;
    GT_U32 epceUp;
    GT_U32 epceDscp;
    SKERNEL_CH2_EPCL_PACKET_CMD_ENT fwdCmd;
    GT_U32 epceVid;
    GT_U32 epceVlanCmd;
    GT_U32 vid1;
    GT_U32 up1;
    GT_U32 vlan1Cmd;
    GT_U32 modifyUp1;
} SNET_CHT2_EPCL_ACTION_STC;
typedef struct {
    SNET_CHT2_POLICY_SPECIFIC_LOOKUP_CONFIG_STC lookupConfig;
} SNET_CHT2_EPCL_LOOKUP_CONFIG_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah2Pcl.h:
typedef enum {CHT2_PCL_KEY_FIELDS_ID_VALID_E, CHT2_PCL_KEY_FIELDS_ID_PCL_ID_E, CHT2_PCL_KEY_FIELDS_ID_SRC_PORT_E, CHT2_PCL_KEY_FIELDS_ID_IS_TAGGED_E, CHT2_PCL_KEY_FIELDS_ID_VID_E, CHT2_PCL_KEY_FIELDS_ID_UP_E, CHT2_PCL_KEY_FIELDS_ID_QOS_PROFILE_E, CHT2_PCL_KEY_FIELDS_ID_IS_IPV4_E, CHT2_PCL_KEY_FIELDS_ID_IS_IP_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_42_E, CHT2_PCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE2_66_59_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_72_67_E, 
    CHT2_PCL_KEY_FIELDS_ID_IS_ARP_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_74_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE0_82_75_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE1_90_83_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_ENCAP_TYPE_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_MAC_SA_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_MAC_DA_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_IS_L2_VALID_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_190_191_E, CHT2_PCL_KEY_FIELDS_ID_IP_PROTOCOL_E, 
    CHT2_PCL_KEY_FIELDS_ID_DSCP_E, CHT2_PCL_KEY_FIELDS_ID_IS_L4_VALID_E, CHT2_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_2_3_E, CHT2_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_HOP_BY_HOP_E, CHT2_PCL_KEY_FIELDS_ID_IPV4_FRAGMENTED_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_IS_BC_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE2_98_91_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_SIP_31_0_E, CHT2_PCL_KEY_FIELDS_ID_DIP_31_0_E, 
    CHT2_PCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_187_E, CHT2_PCL_KEY_FIELDS_ID_IP_HEADER_OK_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_IS_IPV6_E, CHT2_PCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_LONG_E, CHT2_PCL_KEY_FIELDS_ID_SIP_31_0_LONG_E, CHT2_PCL_KEY_FIELDS_ID_DIP_31_0_LONG_E, CHT2_PCL_KEY_FIELDS_ID_ENCAP_TYPE_LONG_VALID_E, CHT2_PCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_LONG_E, CHT2_PCL_KEY_FIELDS_ID_LONG_IPV4_FRAGMENT_E, CHT2_PCL_KEY_FIELDS_ID_LONG_RESERVED_179_234_E, 
    CHT2_PCL_KEY_FIELDS_ID_MAC_SA_LONG_E, CHT2_PCL_KEY_FIELDS_ID_MAC_DA_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE3_338_331_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE4_346_339_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE5_354_347_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE0_362_355_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE1_370_363_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE2_378_371_LONG_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_380_379_LONG_E, 
    CHT2_PCL_KEY_FIELDS_ID_IS_L2_VALID_LONG_E, CHT2_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_LONG_E, CHT2_PCL_KEY_FIELDS_ID_SIP_127_32_LONG_E, CHT2_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_LONG_E, CHT2_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_LONG_E, CHT2_PCL_KEY_FIELDS_ID_DIP_127_120_LONG_E, CHT2_PCL_KEY_FIELDS_ID_DIP_119_32_LONG_E, CHT2_PCL_KEY_FIELDS_ID_DIP_0_31_IPV6_LONG_E, CHT2_PCL_KEY_FIELDS_ID_DIP_0_15_IPV6_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_DIP_16_31_IPV6_SHORT_E, CHT2_PCL_KEY_FIELDS_ID_DIP_127_32_SHORT_E, 
    CHT2_PCL_KEY_FIELDS_ID_RESERVED_188_E, CHT2_PCL_KEY_FIELDS_ID_RESERVED_190_E, CHT2_PCL_KEY_FIELDS_ID_IP_HEADER_OK_LONG_E, CHT2_PCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_LONG_E, CHT2_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_4_5_E, CHT2_PCL_KEY_FIELDS_ID_LAST_E} CHT2_PCL_KEY_FIELDS_ID_ENT;
typedef enum {CHT2_PCL_KEY_TYPE_L2_KEY_SHORT_E, CHT2_PCL_KEY_TYPE_L2_L3_KEY_SHORT_E, CHT2_PCL_KEY_TYPE_L3_L4_KEY_SHORT_E, CHT2_PCL_KEY_TYPE_L2_IPV6_KEY_SHORT_E, CHT2_PCL_KEY_TYPE_L2_L3_L4_KEY_LONG_E, CHT2_PCL_KEY_TYPE_L2_IPV6_KEY_LONG_E, CHT2_PCL_KEY_TYPE_L4_IPV6_KEY_LONG_E, CHT2_PCL_KEY_TYPE_LAST_E} CHT2_PCL_KEY_TYPE_ENT;
typedef struct {
    GT_U32 startBitOffset;
    GT_U32 startBitAnchor;
} CHT2_PCL_USER_DEFINED_CONFIG_REG_STC;
typedef struct {
    SNET_CHT2_POLICY_SPECIFIC_LOOKUP_CONFIG_STC lookup0Config;
    SNET_CHT2_POLICY_SPECIFIC_LOOKUP_CONFIG_STC lookup1Config;
} SNET_CHT2_IPOLICY_LOOKUP_CONFIG_STC;
typedef struct _cht2_pcl_action_stc SNET_CHT2_PCL_ACTION_STC;
typedef struct {
    GT_BIT enabled;
    GT_BIT nonIpKeyType;
    GT_U32 ipv4ArpKeyType;
    GT_U32 ipv6KeyType;
    GT_U32 pclID;
    SNET_CHT_PCL_KEY_SIZE keySize;
} SNET_CHT2_POLICY_SPECIFIC_LOOKUP_CONFIG_STC;
typedef struct {
    GT_BIT unknownSaCmdAssigned;
    GT_U32 unknownSaCmd;
    GT_U32 srcMeshIdEn;
    GT_U32 srcMeshId;
    GT_U32 userTaggedAcEnable;
} SNET_XCAT_PCL_ACTION_VPLS_SUPPORT_STC;
struct _cht2_pcl_action_stc;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah2Routing.h:
typedef enum {HW_ROUTER_PACKET_COMMAND_ROUTE_E, HW_ROUTER_PACKET_COMMAND_ROUTE_AND_MIRROR_TO_CPU_E, HW_ROUTER_PACKET_COMMAND_TRAP_TO_CPU_E, HW_ROUTER_PACKET_COMMAND_HARD_DROP_E, HW_ROUTER_PACKET_COMMAND_SOFT_DROP_E, HW_ROUTER_PACKET_COMMAND_BRIDGE_AND_MIRROR_TO_CPU_E, HW_ROUTER_PACKET_COMMAND_BRIDGE_E, HW_ROUTER_PACKET_COMMAND_DEFAULT_ROUTE_ENTRY_E, HW_ROUTER_PACKET_COMMAND_UNKNOWN_E} HW_ROUTER_PACKET_COMMAND_E;
typedef enum {IPVX_PER_SRC_PORT_FIELD_ROUTER_PER_EPORT_SIP_SA_CHECK_ENABLE_E, IPVX_PER_SRC_PORT_FIELD_FCOE_FORWARDING_ENABLE_E, IPVX_PER_SRC_PORT_FIELD_IPV4_UC_ROUTING_ENABLE_E, IPVX_PER_SRC_PORT_FIELD_IPV4_MC_ROUTING_ENABLE_E, IPVX_PER_SRC_PORT_FIELD_IPV6_UC_ROUTING_ENABLE_E, IPVX_PER_SRC_PORT_FIELD_IPV6_MC_ROUTING_ENABLE_E, IPVX_PER_SRC_PORT_FIELD_DISABLE_SIP_LOOKUP_E} IPVX_PER_SRC_PORT_FIELDS_ENT;
typedef struct {
    HW_ROUTER_PACKET_COMMAND_E ipHeaderCmd;
    HW_ROUTER_PACKET_COMMAND_E ipIllegalAddrCmd;
    HW_ROUTER_PACKET_COMMAND_E ipDaMismatchCmd;
    HW_ROUTER_PACKET_COMMAND_E ipSaMismatchCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvUcRpfRailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvMcRpfFailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvRouteEntry03Cmd;
    HW_ROUTER_PACKET_COMMAND_E ipvHopLimitExceededFailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvRouteMtuExcceededFailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvOptionHbhOptionFailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvIcmpRedirectFailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipv6ScopeFailCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvAccessCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvAllZeroCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvSipFilterCmd;
    GT_BIT isRoutEntryForwardToCpu;
    SKERNEL_EXT_PACKET_CMD_ENT bridgePacketCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvFinalPacketCmd;
    GT_BIT isMcRpfFail;
    GT_BIT isMcRpfBidirFail;
    HW_ROUTER_PACKET_COMMAND_E ipvExceptionsPacketCmd;
    HW_ROUTER_PACKET_COMMAND_E ipvNextHopPacketCmd;
} SNET_CHEETAH2_L3_CNTRL_PACKET_INFO;
typedef struct {
    GT_U32 lttRouteType;
    GT_U32 lttNumberOfPaths;
    GT_U32 lttRouteEntryIndex;
    GT_U32 lttUnicastRPFCheckEnable;
    GT_U32 lttUnicastSipSaEnable;
    GT_U32 lttIPv6GroupScopeLevel;
} SNET_CHT2_L3_TRANSLATION_TABLE_STC;
typedef struct {
    GT_U32 sipFromEcmpOrQosBlock;
    GT_U32 unicastSipSaCheck;
    GT_U32 ipv6MulticastGroupScopeLevel;
    GT_BOOL mcRpfFailCmdFromMll;
    GT_U32 sipNumberOfPaths;
    GT_U32 sipBaseRouteEntryIndex;
    SNET_RPF_CHECK_MODE_ENT rpfCheckMode;
} SNET_ROUTE_SECURITY_CHECKS_INFO_STC;
typedef enum {SNET_RPF_DISABLED_E, SNET_RPF_VLAN_BASED_E, SNET_RPF_PORT_BASED_E, SNET_RPF_LOOSE_E} SNET_RPF_CHECK_MODE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah2TTermination.h:
typedef enum {CHT2_TT_SOURCE_PORT_TRUNK_E, CHT2_TT_SRC_IS_TRUNK_E, CHT2_TT_SRC_DEV_E, CHT2_TT_KEY_FIELDS_ID_RESERVED_13_E, CHT2_TT_FIELDS_ID_VID_E, CHT2_TT_MAC_DA_ID_UP_E, CHT2_TT_TUNNEL_KEY_TYPE_E, CHT2_TT_IPV4_OVER_IPV4_E, CHT2_TT_IPV6_OVER_IPV4_E, CHT2_TT_IPV4_OVER_IPV4_GRE_E, CHT2_TT_IPV6_OVER_IPV4_GRE_E, CHT2_TT_KEY_FIELDS_ID_RESERVED_79_E, CHT2_TT_SIP_ADDRESS, CHT2_TT_KEY_FIELDS_ID_RESERVED_112_126_E, CHT2_TT_KEY_TUNNEL_TERMINATION_KEY, CHT2_TT_DIP_ADDRESS, CHT2_TT_KEY_FIELDS_ID_RESERVED_160_191_E, 
    CHT2_TT_KEY_FIELDS_ID_RESERVED_75_E, CHT2_TT_EXP2_IN_LABEL2_E, CHT2_TT_SBIT_IN_LABEL2_E, CHT2_TT_LABEL2_E, CHT2_TT_EXP1_IN_LABEL1_E, CHT2_TT_SBIT_IN_LABEL1_E, CHT2_TT_LABEL1_E, CHT2_TT_KEY_FIELDS_ID_RESERVED_124_126_E, CHT2_TT_KEY_FIELDS_ID_RESERVED_128_191_E, CHT2_TT_KEY_FIELDS_ID_LAST_E} CHT2_TT_KEY_FIELDS_ID_ENT;
typedef struct INTERNAL_TTI_DESC_INFO_STCT * INTERNAL_TTI_DESC_INFO_STCT_PTR;
typedef enum {SKERNEL_CHT2_TT_CMD_FORWARD_E, SKERNEL_CHT2_TT_CMD_MIRROR_E, SKERNEL_CHT2_TT_CMD_TRAP_E, SKERNEL_CHT2_TT_CMD_HARD_DROP_E, SKERNEL_CHT2_TT_CMD_SOFT_DROP_E} SKERNEL_CH2_TT_PACKET_CMD_ENT;
typedef struct _snet_cht2_tt_action_stc SNET_CHT2_TT_ACTION_STC;
struct _snet_cht2_tt_action_stc;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah3.h:
typedef struct {
    GT_U32 startBit;
    GT_U32 lastBit;
} HW_FIELD;
typedef struct {
    SNET_CHT3_SINGLE_MLL_STC first_mll;
    SNET_CHT3_SINGLE_MLL_STC second_mll;
    GT_U32 nextPtr;
} SNET_CHT3_DOUBLE_MLL_STC;
typedef enum {SNET_CHT3_MLL_FIELDS_LAST_0_E, SNET_CHT3_MLL_FIELDS_START_OF_TUNNEL_0_E, SNET_CHT3_MLL_FIELDS_MLL_VID_0_E, SNET_CHT3_MLL_FIELDS_USE_VIDX_0_E, SNET_CHT3_MLL_FIELDS_TARGET_IS_TRUNK_0_E, SNET_CHT3_MLL_FIELDS_TRG_PORT_0_E, SNET_CHT3_MLL_FIELDS_TRG_TRUNK_ID_0_E, SNET_CHT3_MLL_FIELDS_TRG_DEV_0_E, SNET_CHT3_MLL_FIELDS_VIDX_0_E, SNET_CHT3_MLL_FIELDS_MLL_RPF_FAIL_CMD_0_E, SNET_CHT3_MLL_FIELDS_TUNNEL_PTR_LSB_0_E, SNET_CHT3_MLL_FIELDS_TUNNEL_TYPE_0_E, 
    SNET_CHT3_MLL_FIELDS_TTL_THRESHOLD_0_HOP_LIMIT_THRESHOLD_0_E, SNET_CHT3_MLL_FIELDS_EXCLUDE_SRC_VLAN_0_E, SNET_CHT3_MLL_FIELDS_TUNNEL_PTR_MSB_0_E, SNET_CHT3_MLL_FIELDS_TUNNEL_PTR_MSB_1_E, SNET_CHT3_MLL_FIELDS_LAST_1_E, SNET_CHT3_MLL_FIELDS_START_OF_TUNNEL_1_E, SNET_CHT3_MLL_FIELDS_MLL_VID_1_E, SNET_CHT3_MLL_FIELDS_USE_VIDX_1_E, SNET_CHT3_MLL_FIELDS_TARGET_IS_TRUNK_1_E, SNET_CHT3_MLL_FIELDS_TRG_PORT_1_E, SNET_CHT3_MLL_FIELDS_TRG_TRUNK_ID_1_E, SNET_CHT3_MLL_FIELDS_TRG_DEV_1_E, 
    SNET_CHT3_MLL_FIELDS_VIDX_1_E, SNET_CHT3_MLL_FIELDS_MLL_RPF_FAIL_CMD_1_E, SNET_CHT3_MLL_FIELDS_TUNNEL_PTR_LSB_1_E, SNET_CHT3_MLL_FIELDS_TUNNEL_TYPE_1_E, SNET_CHT3_MLL_FIELDS_TTL_THRESHOLD_1_HOP_LIMIT_THRESHOLD_1_E, SNET_CHT3_MLL_FIELDS_EXCLUDE_SRC_VLAN_1_E, SNET_CHT3_MLL_FIELDS_NEXT_MLL_PTR_E, SNET_CHT3_MLL_FIELDS_UNREG_BC_FILTERING_0_E, SNET_CHT3_MLL_FIELDS_UNREG_MC_FILTERING_0_E, SNET_CHT3_MLL_FIELDS_UNKNOWN_UC_FILTERING_0_E, SNET_CHT3_MLL_FIELDS_VLAN_EGRESS_TAG_MODE_0_E, 
    SNET_CHT3_MLL_FIELDS_UNREG_BC_FILTERING_1_E, SNET_CHT3_MLL_FIELDS_UNREG_MC_FILTERING_1_E, SNET_CHT3_MLL_FIELDS_UNKNOWN_UC_FILTERING_1_E, SNET_CHT3_MLL_FIELDS_VLAN_EGRESS_TAG_MODE_1_E, SNET_CHT3_MLL_FIELDS_LAST_E} SNET_CHT3_MLL_FIELDS_ENT;
typedef struct {
    GT_U32 rpf_fail_cmd;
    GT_U32 ttlThres;
    GT_U32 excludeSrcVlan;
    GT_U32 last;
    SNET_DST_INTERFACE_STC lll;
    GT_U32 vid;
    GT_U32 isTunnelStart;
    struct {...} tsInfo;
    GT_BIT unregBcFiltering;
    GT_BIT unregMcFiltering;
    GT_BIT unknownUcFiltering;
    GT_BIT vlanEgressTagMode;
} SNET_CHT3_SINGLE_MLL_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah3CentralizedCnt.h:
typedef enum {INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_L2_L3_VLAN_INGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_PCL0_0_LOOKUP_INGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_PCL0_1_LOOKUP_INGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_PCL1_LOOKUP_INGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_VLAN_PASS_DROP_INGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_VLAN_PASS_DROP_EGR_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_TXQ_QUEUE_PASS_DROP_EGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_PCL_EGR_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_ARP_TBL_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_TUNNEL_START_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_XCAT_CNC_CLIENT_TUNNEL_TERMINATION_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TTI_ACTION_0_E = 0, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TTI_ACTION_1_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_1_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_3_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_INGRESS_VLAN_L2_L3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_SOURCE_EPORT_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_INGRESS_VLAN_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_PACKET_TYPE_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_EGRESS_VLAN_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_EGRESS_QUEUE_PASS_DROP_AND_QCN_PASS_DROP_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_ARP_INDEX_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TUNNEL_START_INDEX_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TARGET_EPORT_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_EPCL_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_EPCL_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_EPCL_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_EPCL_ACTION_3_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TRAFFIC_MANAGER_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TTI_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_LION3_CNC_CLIENT_TTI_ACTION_3_E, INTERNAL_SPECIFIC_HW_VALUES__PIPE_SNET_CNC_PIPE_DEVICE_CLIENT_PPA_TRG_PORT_PKT_TYPE_E = 0, INTERNAL_SPECIFIC_HW_VALUES__PIPE_SNET_CNC_PIPE_DEVICE_CLIENT_PCP_DEST_INDEX_E, INTERNAL_SPECIFIC_HW_VALUES__PIPE_SNET_CNC_CLIENT_EGRESS_QUEUE_PASS_DROP_AND_QCN_PASS_DROP_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_TTI_ACTION_0_E = 0, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_TTI_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_3_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EQ_DLB_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EGF_DLB_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_RESERVED_12_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EGF_EVLAN_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_INGRESS_VLAN_L2_L3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_SOURCE_EPORT_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_INGRESS_VLAN_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_PACKET_TYPE_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EGRESS_VLAN_PASS_DROP_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EGRESS_QUEUE_PASS_DROP_AND_QCN_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_ARP_INDEX_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_TUNNEL_START_INDEX_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_TARGET_EPORT_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EPCL_ACTION_0_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EPCL_ACTION_1_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EPCL_ACTION_2_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EPCL_ACTION_3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_EREP_PACKET_TYPE_PASS_DROP_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_TTI_ACTION_2_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_TTI_ACTION_3_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_PREQ_QUEUE_STATISTICS_E, INTERNAL_SPECIFIC_HW_VALUES__SNET_SIP6_CNC_CLIENT_PREQ_PORT_STATISTICS_E, 
    INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT3_CNC_CLIENT_LAST_E} INTERNAL_SPECIFIC_HW_VALUES__SNET_CHT_CNC_CLIENT_E;
typedef enum {SNET_CNC_CLIENT_TTI_ACTION_0_E, SNET_CNC_CLIENT_TTI_ACTION_1_E, SNET_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_0_E, SNET_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_1_E, SNET_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_2_E, SNET_CNC_CLIENT_IPCL_LOOKUP_0_ACTION_3_E, SNET_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_0_E, SNET_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_1_E, SNET_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_2_E, SNET_CNC_CLIENT_IPCL_LOOKUP_1_ACTION_3_E, SNET_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_0_E, SNET_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_1_E, 
    SNET_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_2_E, SNET_CNC_CLIENT_IPCL_LOOKUP_2_ACTION_3_E, SNET_CNC_CLIENT_INGRESS_VLAN_L2_L3_E, SNET_CNC_CLIENT_SOURCE_EPORT_E, SNET_CNC_CLIENT_INGRESS_VLAN_PASS_DROP_E, SNET_CNC_CLIENT_PACKET_TYPE_PASS_DROP_E, SNET_CNC_CLIENT_EGRESS_VLAN_PASS_DROP_E, SNET_CNC_CLIENT_EGRESS_QUEUE_PASS_DROP_AND_QCN_PASS_DROP_E, SNET_CNC_CLIENT_ARP_INDEX_E, SNET_CNC_CLIENT_TUNNEL_START_INDEX_E, SNET_CNC_CLIENT_TARGET_EPORT_E, SNET_CNC_CLIENT_EPCL_ACTION_0_E, SNET_CNC_CLIENT_EPCL_ACTION_1_E, 
    SNET_CNC_CLIENT_EPCL_ACTION_2_E, SNET_CNC_CLIENT_EPCL_ACTION_3_E, SNET_CNC_CLIENT_TRAFFIC_MANAGER_PASS_DROP_E, SNET_CNC_CLIENT_TTI_ACTION_2_E, SNET_CNC_CLIENT_TTI_ACTION_3_E, SNET_CNC_PIPE_DEVICE_CLIENT_PCP_DEST_INDEX_E, SNET_CNC_PIPE_DEVICE_CLIENT_PPA_TRG_PORT_PKT_TYPE_E, SNET_SIP6_CNC_CLIENT_EGF_EVLAN_E, SNET_SIP6_CNC_CLIENT_PREQ_QUEUE_STATISTICS_E, SNET_SIP6_CNC_CLIENT_PREQ_PORT_STATISTICS_E, SNET_SIP6_CNC_CLIENT_EREP_PACKET_TYPE_PASS_DROP_E, SNET_SIP6_10_CNC_CLIENT_PHA_E, 
    SNET_CNC_CLIENT_LAST_E} SNET_CNC_CLIENT_E;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah3EPcl.h:
typedef enum {CHT3_EPCL_KEY_FIELDS_ID_VALID_E, CHT3_EPCL_KEY_FIELDS_ID_PCL_ID_E, CHT3_EPCL_KEY_FIELDS_ID_PCL_ID_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_QOS_PROFILE_6_0_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_ORIG_VID_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_SRC_DEV_TRUNK_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_SRC_IS_TRUNK_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_MAC_SA_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_MAC_DA_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_L2_VALID_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_IP_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IP_PROTOCOL_EXT_E, 
    CHT3_EPCL_KEY_FIELDS_ID_DSCP_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_TOS_1_0_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_TTL_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_ARP_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_SIP_31_0_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_31_0_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_2_3_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_4_5_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_L4_VALID_EXT_E, 
    CHT3_EPCL_KEY_FIELDS_ID_TC_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_DP_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_PACKET_TYPE_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_SRC_TRG_TX_MIRR_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_ASSIGNED_UP_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_TRG_PORT_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_RX_SNIF_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_ROUTED_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IP_VER_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IPV4_OPT_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_IPV6_EH_TRIPLE_E, CHT3_EPCL_KEY_FIELDS_ID_IPV6_IS_ND_TRIPLE_E, 
    CHT3_EPCL_KEY_FIELDS_ID_IPV6_EH_HOP_TRIPLE_E, CHT3_EPCL_KEY_FIELDS_ID_SIP_127_32_TRIPLE_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_127_32_TRIPLE_E, CHT3_EPCL_KEY_FIELDS_ID_SRC_PORT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_TAGGED_E, CHT3_EPCL_KEY_FIELDS_ID_VID_E, CHT3_EPCL_KEY_FIELDS_ID_UP_E, CHT3_EPCL_KEY_FIELDS_ID_QOS_PROFILE_E, CHT3_EPCL_KEY_FIELDS_ID_IS_IPV4_E, CHT3_EPCL_KEY_FIELDS_ID_IS_IP_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_42_XCAT2_41_E, CHT3_EPCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_E, 
    CHT3_EPCL_KEY_FIELDS_ID_RESERVED_66_59_XCAT2_65_58_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_72_67_XCAT2_71_66_E, CHT3_EPCL_KEY_FIELDS_ID_IS_ARP_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_74_XCAT2_73_E, CHT3_EPCL_KEY_FIELDS_ID_SRC_IS_TRUNK_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_ROUTED, CHT3_EPCL_KEY_FIELDS_ID_IS_L2_VALID_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_ENCAP_TYPE_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_MAC_SA_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_MAC_DA_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_PACKET_TYPE_SHORT_E, 
    CHT3_EPCL_KEY_FIELDS_ID_RESERVED_190_XCAT2_189_E, CHT3_EPCL_KEY_FIELDS_ID_IS_VIDX_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_IP_PROTOCOL_E, CHT3_EPCL_KEY_FIELDS_ID_DSCP_E, CHT3_EPCL_KEY_FIELDS_ID_IS_L4_VALID_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_2_3_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_4_5_E, CHT3_EPCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_31_0_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_13_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_139_XCAT2_138_SHORT_E, 
    CHT3_EPCL_KEY_FIELDS_ID_IPV4_FRAGMENTED_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_IS_BC_E, CHT3_EPCL_KEY_FIELDS_ID_SIP_31_0_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_31_0_IPV4_L4_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_SHORT_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_187_XCAT2_186_E, CHT3_EPCL_KEY_FIELDS_ID_IS_IPV6_E, CHT3_EPCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_SIP_31_0_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_31_0_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_ENCAP_TYPE_LONG_VALID_E, 
    CHT3_EPCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_SIP_127_32_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_127_120_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_MAC_SA_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_MAC_DA_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_380_379_XCAT2_394_393_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_DIP_119_32_LONG_E, 
    CHT3_EPCL_KEY_FIELDS_ID_DIP_0_31_IPV6_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_IS_L2_VALID_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_IS_VIDX_LONG_E, CHT3_EPCL_KEY_FIELDS_ID_CPU_CODE_0_6_STANDARD_E, CHT3_EPCL_KEY_FIELDS_ID_RESERVED_39_33_XCAT2_38_32_E, CHT3_EPCL_KEY_FIELDS_ID_TRUNK_ID, CHT3_EPCL_KEY_FIELDS_ID_SRCDEV_ID, CHT3_EPCL_KEY_FIELDS_ID_SST_ID_E, CHT3_EPCL_KEY_FIELDS_ID_IS_UNKNOWN_UC_E, CHT3_EPCL_KEY_FIELDS_ID_CPU_CODE_7_STANDARD_E, CHT3_EPCL_KEY_FIELDS_ID_LONG_IPV4_FRAGMENT_E, 
    CHT3_EPCL_KEY_FIELDS_ID_RESERVED_89_XCAT2_88_E, CHT3_EPCL_KEY_FIELDS_ID_PACKET_TYPE_LONG_E, XCAT2_EPCL_KEY_FIELDS_ID_SIP_63_32_LONG_E, XCAT2_EPCL_KEY_FIELDS_ID_SIP_94_64_LONG_E, XCAT2_EPCL_KEY_FIELDS_ID_SIP_127_95_LONG_E, XCAT2_EPCL_KEY_FIELDS_ID_PORT_LIST_7_0_E, XCAT2_EPCL_KEY_FIELDS_ID_PORT_LIST_13_8_E, XCAT2_EPCL_KEY_FIELDS_ID_PORT_LIST_27_14_E, XCAT2_EPCL_KEY_FIELDS_ID_RESERVED_38_E, LION2_EPCL_KEY_FIELDS_ID_KEY_6_7_SIP_7_0_EXT_E, LION2_EPCL_KEY_FIELDS_ID_KEY_6_7_SIP_31_8_EXT_E, 
    LION2_EPCL_KEY_FIELDS_ID_KEY_6_IS_VIDX_EXT_E, LION2_EPCL_KEY_FIELDS_ID_KEY_7_SIP_95_32_TRIPLE_E, LION2_EPCL_KEY_FIELDS_ID_KEY_7_SIP_127_96_TRIPLE_E, LION2_EPCL_KEY_FIELDS_ID_KEY_7_DIP_127_32_TRIPLE_E, LION2_EPCL_KEY_FIELDS_ID_KEY_7_IS_VIDX_EXT_E, CHT3_EPCL_KEY_FIELDS_ID_LAST_E} CHT3_EPCL_KEY_FIELDS_ID_ENT;
typedef struct {
    GT_U32 matchCounterIndex;
    GT_BOOL matchCounterEn;
    GT_U32 pceModifyUp;
    GT_U32 pceModifyDscp;
    GT_U32 epceUp;
    GT_U32 epceDscp;
    SKERNEL_CH2_EPCL_PACKET_CMD_ENT fwdCmd;
    GT_U32 epceVid;
    GT_U32 epceVlanCmd;
    GT_U32 vid1;
    GT_U32 up1;
    GT_U32 vlan1Cmd;
    GT_U32 modifyUp1;
} SNET_CHT3_EPCL_ACTION_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah3Pcl.h:
typedef enum {CHT3_EPCL_KEY_TYPE_L2_KEY_SHORT_E, CHT3_EPCL_KEY_TYPE_L2_L3_KEY_SHORT_E, CHT3_EPCL_KEY_TYPE_L3_L4_KEY_SHORT_E, CHT3_EPCL_KEY_TYPE_L2_L3_L4_KEY_LONG_E, CHT3_EPCL_KEY_TYPE_L2_IPV6_KEY_LONG_E, CHT3_EPCL_KEY_TYPE_L4_IPV6_KEY_LONG_E, CHT3_EPCL_KEY_TYPE_L4_IPV4_NON_IP_KEY_LONG_E, CHT3_EPCL_KEY_TYPE_L4_IPV6_KEY_TRIPLE_E, CHT3_EPCL_KEY_TYPE_LAST_E} CHT3_EPCL_KEY_TYPE_ENT;
typedef enum {CHT3_PCL_KEY_FIELDS_ID_PCL_ID_E, CHT3_PCL_KEY_FIELDS_ID_MAC_TO_ME_E, CHT3_PCL_KEY_FIELDS_ID_SRC_PORT_E, CHT3_PCL_KEY_FIELDS_ID_IS_TAGGED_E, CHT3_PCL_KEY_FIELDS_ID_VID_E, CHT3_PCL_KEY_FIELDS_ID_UP_E, CHT3_PCL_KEY_FIELDS_ID_QOS_PROFILE_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV4_E, CHT3_PCL_KEY_FIELDS_ID_IS_IP_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_42_E, CHT3_PCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_E, CHT3_PCL_KEY_FIELDS_ID_UDB2_66_59_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_72_67_E, 
    CHT3_PCL_KEY_FIELDS_ID_IS_ARP_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_74_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_82_75_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_UDB1_90_83_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_ENCAP_TYPE_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_MAC_SA_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_MAC_DA_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_IS_L2_VALID_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_190_191_E, CHT3_PCL_KEY_FIELDS_ID_IP_PROTOCOL_E, CHT3_PCL_KEY_FIELDS_ID_DSCP_E, 
    CHT3_PCL_KEY_FIELDS_ID_IS_L4_VALID_E, CHT3_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_TCP_UDP_PORT_COMPS_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_HOP_BY_HOP_E, CHT3_PCL_KEY_FIELDS_ID_IPV4_FRAGMENTED_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_IP_HEADER_OK_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_IS_BC_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_UDB2_98_91_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_SIP_31_0_E, CHT3_PCL_KEY_FIELDS_ID_DIP_31_0_SHORT_E, 
    CHT3_PCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_SHORT_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_187_E, CHT3_PCL_KEY_FIELDS_PCKT_TOS_0_5_SHORT_E, CHT3_PCL_KEY_FIELDS_PCKT_TYPE_E, CHT3_PCL_KEY_FIELDS_PCKT_TOS_6_7_SHORT_E, CHT3_PCL_KEY_FIELDS_IP_FRAGMENTED_SHORT_E, CHT3_PCL_KEY_FIELDS_IP_HEADER_INFO_SHORT_E, CHT3_PCL_KEY_FIELDS_IP_PCKT_LEN_13_E, CHT3_PCL_KEY_FIELDS_IP_PCKT_LEN_0_12_E, CHT3_PCL_KEY_FIELDS_ID_TTL_0_2_E, CHT3_PCL_KEY_FIELDS_ID_TTL_3_7_E, CHT3_PCL_KEY_FIELDS_ID_DIP_15_0_E, 
    CHT3_PCL_KEY_FIELDS_ID_DIP_31_16_E, CHT3_PCL_KEY_FIELDS_IS_IPV6_HOP_BY_HOP_E, CHT3_PCL_KEY_FIELDS_ID_DIP_63_32_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_95_64_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_127_96_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_31_0_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_188_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_190_E, CHT3_PCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_LONG_E, CHT3_PCL_KEY_FIELDS_ID_SIP_31_0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_31_0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_ENCAP_TYPE_LONG_E, 
    CHT3_PCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_LONG_E, CHT3_PCL_KEY_FIELDS_ID_LONG_IPV4_FRAGMENT_E, CHT3_PCL_KEY_FIELDS_ID_MAC_SA_LONG_E, CHT3_PCL_KEY_FIELDS_ID_MAC_DA_LONG_E, CHT3_PCL_KEY_FIELDS_ID_UDB_EXT_B012_E, CHT3_PCL_KEY_FIELDS_ID_UDB_EXT_B345_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_380_379_E, CHT3_PCL_KEY_FIELDS_ID_IS_L2_VALID_LONG_E, CHT3_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_LONG_E, CHT3_PCL_KEY_FIELDS_ID_IP_HEADER_OK_LONG_E, CHT3_PCL_KEY_FIELDS_ID_SIP_63_32_LONG_E, 
    CHT3_PCL_KEY_FIELDS_ID_SIP_95_64_LONG_E, CHT3_PCL_KEY_FIELDS_ID_SIP_127_96_LONG_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_LONG_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_127_120_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_63_32_LONG1_E, CHT3_PCL_KEY_FIELDS_ID_DIP_95_64_LONG1_E, CHT3_PCL_KEY_FIELDS_ID_DIP_119_96_LONG1_E, CHT3_PCL_KEY_FIELDS_ID_DIP_0_31_IPV6_LONG_E, CHT3_PCL_KEY_FIELDS_ID_ENCAP_TYPE_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_IS_BC_LONG_E, 
    CHT3_PCL_KEY_FIELDS_ID_TCP_FLAGS_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_IPCL0_E, CHT3_PCL_KEY_FIELDS_IP_HEADER_INFO_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_13_1_0_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_SIP_31_0_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_DIP_31_0_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_IP_FRAGMENTED_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_IS_L2_VALID_IPCL0_LONG_E, CHT3_PCL_KEY_FIELDS_ID_IS_ARP_IPCL0_LONG_E, 
    CHT3_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_IPCL0_E, CHT3_PCL_KEY_FIELDS_ID_UDB3_KEY11_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_KEY12_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_319_313_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_KEY1_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_KEY2_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_KEY11_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_IPCL0_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_IPCL0_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_IS_IS_ND_E, CHT3_PCL_KEY_FIELDS_ID_IS_BC_TRIPLE_E, 
    CHT3_PCL_KEY_FIELDS_ID_SIP_63_32_EXT_1_E, CHT3_PCL_KEY_FIELDS_ID_SIP_95_64_EXT_1_E, CHT3_PCL_KEY_FIELDS_ID_SIP_127_96_EXT_1_E, CHT3_PCL_KEY_FIELDS_ID_DIP_63_32_EXT_1_E, CHT3_PCL_KEY_FIELDS_ID_DIP_95_64_EXT_1_E, CHT3_PCL_KEY_FIELDS_ID_DIP_127_96_EXT_1_E, CHT3_PCL_KEY_FIELDS_ID_UDB3_475_468_E, CHT3_PCL_KEY_FIELDS_ID_ENCAP_TYPE_VALID_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_IS_L2_VALID_IPCL0_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_IPCL0_TRIPLE_E, CHT3_PCL_KEY_FIELDS_IP_HEADER_OK_IPCL0_TRIPLE_E, 
    CHT3_PCL_KEY_FIELDS_ID_UDB1_2_3_KEY10_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_3_4_KEY11_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_KEY12_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_UDB18_E, CHT3_PCL_KEY_FIELDS_IP_PCKT_LEN_0_12_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_UDB2_KEY11_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_73_E, CHT3_PCL_KEY_FIELDS_ID_IS_L4_VALID_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_IPV6_HEADER_FLOW_LBL_E, CHT3_PCL_KEY_FIELDS_ID_MPLS_OUTER_LBL_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_KEY11_E, 
    CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_KEY12_TRIPLE1_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_LINK_LOCAL_E, CHT3_PCL_KEY_FIELDS_ID_MPLS_OUTER_LBL_EXP_E, CHT3_PCL_KEY_FIELDS_ID_MPLS_OUTER_LBL_S_BIT_E, CHT3_PCL_KEY_FIELDS_IP_PCKT_LEN_15_13_E, CHT3_PCL_KEY_FIELDS_ID_TTL_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_468_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_MLD_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_IPCL1_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_IPCL1_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_RESERVED_477_472_E, 
    CHT3_PCL_KEY_FIELDS_ID_UDB0_1_KEY0_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_KEY1_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_UDB18_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_KEY2_TRIPLE_E, CHT3_PCL_KEY_FIELDS_ID_UDB0_1_2_3_KEY10_E, CHT3_PCL_KEY_FIELDS_ID_LAST_E} CHT3_PCL_KEY_FIELDS_ID_ENT;
typedef struct {
    SNET_CHT2_PCL_ACTION_STC baseAction;
    SNET_EXT_DST_INTERFACE_STC pceExtEgressIf;
    GT_BOOL actionStop;
    GT_U32 srcIdSetEn;
    GT_U32 srcId;
} SNET_CHT3_PCL_ACTION_STC;
typedef enum {CHT3_PCL_KEY_TYPE_L2_KEY_SHORT_E, CHT3_PCL_KEY_TYPE_L2_L3_KEY_SHORT_E, CHT3_PCL_KEY_TYPE_L3_L4_KEY_SHORT_E, CHT3_PCL_KEY_TYPE_L2_L3_L4_KEY_LONG_E, CHT3_PCL_KEY_TYPE_L2_IPV6_KEY_LONG_E, CHT3_PCL_KEY_TYPE_L4_IPV6_KEY_LONG_E, CHT3_PCL_KEY_TYPE_IPCL0_IPV4_KEY_LONG_E, CHT3_PCL_KEY_TYPE_IPCL1_IPV4_KEY_SHORT_E, CHT3_PCL_KEY_TYPE_IPCL0_IPV6_KEY_TRIPLE_E, CHT3_PCL_KEY_TYPE_IPCL1_IPV6_KEY_TRIPLE_E, CHT3_PCL_KEY_TYPE_IPV6_DIP_KEY_SHORT_E, CHT3_PCL_KEY_TYPE_LAST_E} SNET_CHT3_PCL_KEY_TYPE_ENT;
typedef struct {
    GT_BIT lookUpEn;
    CHT_PCL_KEY_FORMAT_ENT keySize;
    GT_U32 pclID;
    GT_U32 pclNonIpTypeCfg;
    GT_U32 pclIpV4ArpTypeCfg;
    GT_U32 pclIpV6TypeCfg;
    GT_BOOL ingrlookUpKey;
    GT_BOOL pclPortListModeEn;
    GT_BIT udbKeyBitmapEnable;
    SNET_LION3_TCAM_SEGMENT_MODE_ENT tcamSegmentMode;
    GT_U32 exactMatchSubProfileId;
} SNET_CHT3_PCL_LOOKUP_CONFIG_STC;
typedef enum {SNET_LION3_TCAM_SEGMENT_MODE_1_TCAM_E, SNET_LION3_TCAM_SEGMENT_MODE_2_TCAM_DIV_2_2_E, SNET_LION3_TCAM_SEGMENT_MODE_2_TCAM_DIV_1_3_E, SNET_LION3_TCAM_SEGMENT_MODE_2_TCAM_DIV_3_1_E, SNET_LION3_TCAM_SEGMENT_MODE_4_TCAM_DIV_E} SNET_LION3_TCAM_SEGMENT_MODE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah3Policer.h:
typedef struct {
    GT_U32 countSet;
    GT_U32 countScale;
    GT_U32 countByteSize;
} SNET_CHT3_POLICER_MNG_COUNT_STC;
typedef struct {
    SKERNEL_CONFORMANCE_LEVEL_ENT initialDp;
    GT_U32 qosProfYellowIndex;
    GT_U32 qosProfRedIndex;
    GT_U32 qosProfGreenIndex;
    GT_U32 tc;
    SKERNEL_CONFORMANCE_LEVEL_ENT cl;
} SNET_CHT3_POLICER_QOS_INFO_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetah3TTermination.h:
typedef enum {CHT3_TT_KEY_FIELDS_ID_PCL_ID_E, CHT3_TT_KEY_FIELDS_ID_SOURCE_PORT_TRUNK_E, CHT3_TT_KEY_FIELDS_ID_SRC_IS_TRUNK_E, CHT3_TT_KEY_FIELDS_ID_VID_E, CHT3_TT_KEY_FIELDS_ID_PCKT_TAGGED_E, CHT3_TT_KEY_FIELDS_ID_MAC_DA_SA_E, CHT3_TT_KEY_FIELDS_ID_SRC_DEV_E, CHT3_TT_KEY_FIELDS_ID_TUNNEL_PROTOCOL_E, CHT3_TT_KEY_FIELDS_ID_SIP_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_DIP_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_IS_ARP_E, CHT3_TT_KEY_FIELDS_ID_RESERVED_155_159_E, CHT3_TT_KEY_FIELDS_ID_DSA_SOURCE_PORT_TRUNK_E, 
    CHT3_TT_KEY_FIELDS_ID_DSA_SRC_IS_TRUNK_E, XCAT3_TT_KEY_FIELDS_ID_DSCP_E, CHT3_TT_KEY_FIELDS_ID_RESERVED_168_190_E, CHT3_TT_KEY_FIELDS_ID_RESERVED_191_E, CHT3_TT_KEY_FIELDS_ID_EXP0_E, CHT3_TT_KEY_FIELDS_ID_EXP1_E, CHT3_TT_KEY_FIELDS_ID_LABLE0_E, CHT3_TT_KEY_FIELDS_ID_LABLE1_E, CHT3_TT_KEY_FIELDS_ID_EXP2_E, CHT3_TT_KEY_FIELDS_ID_LABLE2_E, CHT3_TT_KEY_FIELDS_ID_NUM_LABLES_E, CHT3_TT_KEY_FIELDS_ID_NLP_ABOVE_MPLS_E, CHT3_TT_KEY_FIELDS_ID_UP0_E, CHT3_TT_KEY_FIELDS_ID_CFI0_E, 
    CHT3_TT_KEY_FIELDS_ID_VLAN1_EXIST_E, CHT3_TT_KEY_FIELDS_ID_VLAN1_E, CHT3_TT_KEY_FIELDS_ID_UP1_E, CHT3_TT_KEY_FIELDS_ID_CFI1_E, CHT3_TT_KEY_FIELDS_ID_ETHER_TYPE_E, CHT3_TT_KEY_FIELDS_ID_MAC_2_ME_E, CHT3_TT_KEY_FIELDS_ID_RESERVED_125_159_E, XCAT_TT_KEY_FIELDS_ID_DSA_SOURCE_ID_E, XCAT_TT_KEY_FIELDS_ID_DSA_QOS_PROFILE_E, XCAT3_TT_KEY_FIELDS_ID_GRP_E, XCAT_TT_KEY_FIELDS_ID_RESERVED_180_190_E, XCAT_TT_KEY_FIELDS_ID_RESERVED_91_E, XCAT_TT_KEY_FIELDS_ID_I_SID_E, XCAT_TT_KEY_FIELDS_ID_I_UP_E, 
    XCAT_TT_KEY_FIELDS_ID_I_DP_E, XCAT_TT_KEY_FIELDS_ID_I_RES_1_E, XCAT_TT_KEY_FIELDS_ID_I_RES_2_E, XCAT_TT_KEY_FIELDS_ID_RESERVED_124_159_E, XCAT_TT_KEY_FIELDS_ID_MPLS_CW_FIRST_NIBBLE_E, XCAT_TT_KEY_FIELDS_ID_MPLS_INNER_PACKET_TAG_0_EXISTS_E, XCAT_TT_KEY_FIELDS_ID_MPLS_INNER_PACKET_TAG_0_VID_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_SIP_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_DIP_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_SRC_UDP_PORT_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_DEST_UDP_PORT_E, 
    CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_CLEAR_OR_ADD_DTLS_PAYLOAD_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_HEADER_WORD0_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_BSSID_OR_TA_OR_RADIO_MAC_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_FRAME_CONTROL_TO_DS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_FRAME_CONTROL_FROM_DS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_FRAME_CONTROL_TYPE_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_FRAME_CONTROL_SUBTYPE_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV4_802_11_PROTECTED_E, 
    CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_SIP_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_DIP_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_SRC_UDP_PORT_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_DEST_UDP_PORT_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_CLEAR_OR_ADD_DTLS_PAYLOAD_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_HEADER_WORD0_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_BSSID_OR_TA_OR_RADIO_MAC_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_FRAME_CONTROL_TO_DS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_FRAME_CONTROL_FROM_DS_E, 
    CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_FRAME_CONTROL_TYPE_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_FRAME_CONTROL_SUBTYPE_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_802_11_PROTECTED_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_SIP_1_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_SIP_2_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_SIP_3_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_DIP_1_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_DIP_2_ADDRESS_E, CHT3_TT_KEY_FIELDS_ID_CAPWAP_IPV6_DIP_3_ADDRESS_E, 
    LION_TT_KEY_FIELDS_ID_SRC_PORT_GROUP_BITS_0_1_E, LION3_TT_KEY_FIELDS_ID_DSA_SRC_DEV_7_11_E, LION3_TT_KEY_FIELDS_ID_DSA_SRC_EPORT_TRUNK_7_11_E, LION3_TT_KEY_FIELDS_ID_E_VLAN_12_13_E, LION2_TT_KEY_FIELDS_ID_SRC_PORT_GROUP_BITS_0_2_E, LION3_TT_KEY_FIELDS_ID_ETHERNET_TAG_0_TPID_INDEX_E, LION3_TT_KEY_FIELDS_ID_ETHERNET_TAG_1_TPID_INDEX_E, LION3_TT_KEY_FIELDS_ID_ETHERNET_DSA_SRC_DEV_7_11_E, LION3_TT_KEY_FIELDS_ID_ETHERNET_DSA_SOURCE_ID_5_11_E, LION3_TT_KEY_FIELDS_MIM_ID_MAC_2_ME_E, 
    LION3_TT_KEY_FIELDS_MIM_INNER_PACKET_TAG_0_VID_E, LION3_TT_KEY_FIELDS_MIM_INNER_PACKET_TAG_0_EXISTS_E, LION3_TT_KEY_FIELDS_MIM_INNER_PACKET_TAG_0_UP_E, LION3_TT_KEY_FIELDS_MIM_INNER_PACKET_TAG_0_DEI_E, CHT3_TT_KEY_FIELDS_ID_LAST_E} CHT3_TT_KEY_FIELDS_ID_ENT;
typedef struct INTERNAL_TTI_DESC_INFO_STCT INTERNAL_TTI_DESC_INFO_STC;
struct INTERNAL_TTI_DESC_INFO_STCT;
typedef struct {
    GT_U32 vid0Cmd;
    GT_U32 vid0;
    GT_U32 vid1Cmd;
    GT_U32 vid1;
    GT_U32 up0;
    GT_U32 up1Cmd;
    GT_U32 up1;
    GT_BIT vidModified;
    GT_BIT allowVid1Assignment;
} INTERNAL_TTI_DESC_INFO_VLAN_CMD_INFO_STC;
typedef enum {LION3_MPLS_TRANSIT_TUNNEL_PARSING_MODE_IP_ONLY_E, LION3_MPLS_TRANSIT_TUNNEL_PARSING_MODE_IP_OR_CW_PW_ETHERNET_E, LION3_MPLS_TRANSIT_TUNNEL_PARSING_MODE_ETHERNET_NO_CW_PW_E} LION3_MPLS_TRANSIT_TUNNEL_PARSING_MODE_ENT;
typedef enum {PACKET_TYPE_USED_FOR_CLIENT_TTI_E, PACKET_TYPE_USED_FOR_CLIENT_IPCL_E, PACKET_TYPE_USED_FOR_CLIENT_EPCL_E, PACKET_TYPE_USED_FOR_CLIENT___LAST___E} PACKET_TYPE_USED_FOR_CLIENT_ENT;
typedef enum {SKERNEL_CHT3_TTI_KEY_IPV4_E, SKERNEL_CHT3_TTI_KEY_MPLS_E, SKERNEL_CHT3_TTI_KEY_ETH_E, SKERNEL_XCAT_TTI_KEY_MIM_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_0_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_1_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_2_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_3_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_4_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_5_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_6_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_7_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_8_E, 
    SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_9_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_10_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_11_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_12_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_13_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_14_E, SKERNEL_LION3_TTI_KEY_UDB_PKT_TYPE_15_E, SKERNEL_CHT3_TTI_KEY_TYPE_LAST_E} SKERNEL_CHT3_TTI_KEY_TYPE_ENT;
typedef struct {
    GT_U32 ttPacketCmd;
    GT_U32 ttCpuCode;
    GT_U32 ttPassengerType;
    GT_U32 ttRedirectCmd;
    GT_U32 ttQoSMode;
    GT_U32 ttQoSPrecedence;
    GT_U32 ttQoSProfile;
    GT_U32 ttQoSTtust;
    GT_U32 ttModifyUp;
    GT_U32 ttModifyDscp;
    GT_U32 ttRemapDscp;
    GT_U32 ttUp;
    GT_U32 ttPassType;
    GT_U32 ttDscp;
    GT_U32 ttMirrorAnlze;
    SKERNEL_CH2_TT_PACKET_CMD_ENT fwdCmd;
    GT_U32 ttVid;
    GT_U32 ttVidPrecedence;
    GT_U32 ttNestedVidEn;
    GT_U32 ttVidCmd;
    GT_U32 ttTtl;
    GT_U32 ttVidCmd1;
    GT_U32 ttVid1;
    GT_U32 matchCounterIndex;
    GT_BOOL matchCounterEn;
    GT_U32 tunnelPtr;
    GT_U32 tunnelStart;
    GT_U32 tterminate;
    GT_U32 ttRouterLTT;
    GT_U32 ttVrf;
    GT_U32 ttSrcIdSetEn;
    GT_U32 ttSrcId;
    GT_U32 ttVntL2Echo;
    GT_U32 ttActionStop;
    GT_U32 ttTrunk;
    GT_U32 ttvirtualSrcPort;
    GT_U32 ttvirtualSrcDev;
    GT_U32 ttUseVidx;
    GT_U32 policerIndex;
    GT_BOOL policerEn;
    SNET_DST_INTERFACE_STC tunnelIf;
} SNET_CHT3_TT_ACTION_STC;
typedef struct {
    SNET_LION_TT_ACTION_STC baseActionData;
    GT_U32 analyzerIndex;
    GT_BIT sourceEPortAssignmentEnable;
    GT_U32 sourceEPort;
    GT_U32 trustQosMappingTableIndex;
    GT_BIT up2QosProfileMappingMode;
    GT_U32 lLspQosProfileEnable;
    GT_BIT ipclOverrideProfileIndex;
    GT_BIT ttiReservedAssignEnable;
    GT_U32 ttiReservedAssignValue;
    GT_BIT egressFilterRegistered;
    GT_U32 flowId;
    GT_U32 ttHeaderLength;
    GT_BIT isPtpPacket;
    GT_U32 ptpTriggerType;
    GT_U32 ptpOffset;
    GT_U32 cwBasedPseudoWire;
    GT_BIT ttlExpiryVccvEnable;
    GT_U32 pwe3FlowLabelExist;
    GT_BIT pwCwBasedETreeEnable;
    GT_BIT rxIsProtectionPath;
    GT_BIT rxEnableProtectionSwitching;
    GT_BIT setMAC2ME;
    GT_BIT applynonDataCwCommand;
    GT_U32 pwTagMode;
    GT_BIT continueToNextTtiLookup;
    GT_U32 passengerParsingOfTransitMplsTunnelEnable;
    GT_BIT passengerParsingOfNonMplsTransitTunnelEnable;
    GT_U32 ipclUdbConfigurationTableUdeIndex;
    GT_BIT skipFdbSaLookup;
    GT_BIT setIpv6SegmentRoutingEndNode;
    GT_U32 tunnelHeaderLengthAnchorType;
    GT_U32 ppuProfileIdx;
    GT_BOOL ipfixEnable;
    GT_BIT triggerCncHashClient;
} SNET_E_ARCH_TT_ACTION_STC;
typedef struct {
    SNET_XCAT_TT_ACTION_STC xcatTTActionData;
    GT_BIT multiPortGroupTTIEn;
    GT_U32 hashMaskIndex;
    GT_BIT resetSrcPortGroupId;
    GT_BIT modifyMacDa;
    GT_BIT modifyMacSa;
} SNET_LION_TT_ACTION_STC;
typedef struct {
    GT_BIT egressTagStateAssigned;
    GT_BIT unknownSaCmdAssigned;
    GT_U32 egressTagState;
    GT_U32 unknownSaCmd;
    GT_U32 srcMeshId;
    GT_U32 pwHasCw;
    GT_U32 pwTagMode;
} SNET_XCAT_TTI_ACTION_VPLS_SUPPORT_STC;
typedef struct {
    SKERNEL_CH2_TT_PACKET_CMD_ENT packetCmd;
    GT_U32 userDefinedCpuCode;
    GT_BOOL mirrorToAnalyzerPort;
    GT_U32 redirectCmd;
    GT_U32 vrfId;
    GT_U32 routerLTTIndex;
    GT_BOOL tunnelStart;
    GT_U32 tunnelStartPtr;
    GT_U32 arpPtr;
    GT_U32 ipclProfileIndex;
    GT_U32 tunnelStartPassengerType;
    GT_U32 vntL2Echo;
    GT_BOOL bindToCncCounter;
    GT_U32 cncCounterIndex;
    GT_BOOL bindToPolicerMeter;
    GT_BOOL bindToPolicerCounter;
    GT_U32 policerIndex;
    GT_BOOL srcIdSetEn;
    GT_U32 srcId;
    GT_U32 actionStop;
    GT_U32 bypassBridge;
    GT_U32 bypassIngressPipe;
    GT_U32 policy2LookupMode;
    GT_U32 policy1LookupMode;
    GT_U32 policy0LookupMode;
    GT_U32 vidPrecedence;
    GT_BOOL nestedVidEn;
    GT_U32 vid0Cmd;
    GT_U32 vid0;
    GT_U32 vid1Cmd;
    GT_U32 vid1;
    GT_U32 ttl;
    GT_BOOL ttlDecEn;
    GT_U32 qoSPrecedence;
    GT_U32 qoSProfile;
    GT_U32 modifyDscp;
    GT_U32 modifyUp;
    GT_BOOL keepPreviousQoS;
    GT_U32 trustUp;
    GT_U32 trustDscp;
    GT_U32 trustExp;
    GT_BOOL dscpToDscpRemapingEn;
    GT_U32 up0;
    GT_U32 up1Cmd;
    GT_U32 up1;
    GT_U32 passengerPacketType;
    GT_U32 copyTtlFromOuterHeader;
    GT_BOOL tunnelTerminateEn;
    GT_U32 mplsCmd;
    SNET_DST_INTERFACE_STC tunnelIf;
    SNET_LION3_PCL_ACTION_OAM_STC oamInfo;
    SNET_XCAT_TTI_ACTION_VPLS_SUPPORT_STC vplsInfo;
    SNET_XCAT_TTI_ASSIGN_LOGIC_PORT_ACTION_STC srcLogicPortInfo;
    GT_U32 genericAction;
} SNET_XCAT_TT_ACTION_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetahEgress.h:
typedef struct {
    GT_U32 word1;
    GT_U32 word2;
    GT_U32 buffPointer;
    GT_U32 nextDescPointer;
} SNET_CHT_RX_DESC;
typedef enum {TRUNK_HASH_MODE_USE_PACKET_HASH_E, TRUNK_HASH_MODE_USE_GLOBAL_SRC_PORT_HASH_E, TRUNK_HASH_MODE_USE_GLOBAL_DST_PORT_HASH_E, TRUNK_HASH_MODE_USE_LOCAL_SRC_PORT_HASH_E, TRUNK_HASH_MODE_USE_MULIT_DESTINATION_HASH_SETTINGS_E} TRUNK_HASH_MODE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetahEq.h:
typedef enum {SNET_CHT_EQ_HASH_INDEX_RESOLUTION_INSTANCE_TRUNK_E, SNET_CHT_EQ_HASH_INDEX_RESOLUTION_INSTANCE_L2_ECMP_E, SNET_CHT_EQ_HASH_INDEX_RESOLUTION_INSTANCE_L3_ECMP_E, SNET_CHT_EQ_HASH_INDEX_RESOLUTION_INSTANCE_L2_DLB_E} SNET_CHT_EQ_HASH_INDEX_RESOLUTION_INSTANCE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetahIngress.h:
typedef struct {
    GT_U32 offset;
    GT_U32 numWords;
    GT_CHAR *name;
} MIB_COUNTER_INFO_STC;
typedef enum {SNET_CHT_DMA_CLIENT_PACKET_FROM_CPU_E, SNET_CHT_DMA_CLIENT_PACKET_TO_CPU_E, SNET_CHT_DMA_CLIENT_AUQ_E, SNET_CHT_DMA_CLIENT_FUQ_E, SNET_CHT_MEM_OVER_PCIe_CLIENT_CM3_E, SNET_CHT_DMA_CLIENT___LAST___E} SNET_CHT_DMA_CLIENT_ENT;
typedef enum {SNET_CHT_INGRESS_PHYSICAL_PORT_ASSIGNMENT_MODE_DISABLED_E, SNET_CHT_INGRESS_PHYSICAL_PORT_ASSIGNMENT_MODE_INTERLAKEN_E, SNET_CHT_INGRESS_PHYSICAL_PORT_ASSIGNMENT_MODE_DSA_E, SNET_CHT_INGRESS_PHYSICAL_PORT_ASSIGNMENT_MODE_E_TAG_E, SNET_CHT_INGRESS_PHYSICAL_PORT_ASSIGNMENT_MODE_VLAN_TAG_E} SNET_CHT_INGRESS_PHYSICAL_PORT_ASSIGNMENT_MODE_ENT;
typedef enum {SNET_CHT_PORT_MAC_FIELDS_PortEn_E, SNET_CHT_PORT_MAC_FIELDS_PortMACReset_E, SNET_CHT_PORT_MAC_FIELDS_LinkState_E, SNET_CHT_PORT_MAC_FIELDS_mru_E, SNET_CHT_PORT_MAC_FIELDS_MIBCntEn_E, SNET_CHT_PORT_MAC_FIELDS_forwardPfcFramesEnable_E, SNET_CHT_PORT_MAC_FIELDS_forwardUnknownMacControlFramesEnable_E, SNET_CHT_PORT_MAC_FIELDS_forceLinkDown_E, SNET_CHT_PORT_MAC_FIELDS_forceLinkPass_E, SNET_CHT_PORT_MAC_FIELDS_LPI_request_enable_E, SNET_CHT_PORT_MAC_FIELDS_portInLoopBack_E, 
    SNET_CHT_PORT_MAC_FIELDS_int_bit_for_PCS_Tx_Path_Received_LPI_E, SNET_CHT_PORT_MAC_FIELDS_int_bit_for_PCS_Rx_Path_Received_LPI_E, SNET_CHT_PORT_MAC_FIELDS_int_bit_for_MAC_Rx_Path_Received_LPI_E, SNET_CHT_PORT_MAC_FIELDS_Unidirectional_enable_support_802_3ah_OAM_E, SNET_CHT_PORT_MAC_FIELDS_PaddingDis_E, SNET_CHT_PORT_MAC_FIELDS_histogram_rx_en_E, SNET_CHT_PORT_MAC_FIELDS_histogram_tx_en_E, SNET_CHT_PORT_MAC_FIELDS_mib_4_count_hist_E, SNET_CHT_PORT_MAC_FIELDS_mib_4_limit_1518_1522_E, 
    SNET_CHT_PORT_MAC_FIELDS_Port_Clear_After_Read_E, SNET_CHT_PORT_MAC_FIELDS_rx_path_en_E, SNET_CHT_PORT_MAC_FIELDS_tx_path_en_E, SNET_CHT_PORT_MAC_FIELDS_open_drain_E, SNET_CHT_PORT_MAC_FIELDS_open_drain_counter_increment_E, SNET_CHT_PORT_MAC_FIELDS_LMU_enable_E, SNET_CHT_PORT_MAC_FIELDS_is_mti_segmented_E, SNET_CHT_PORT_MAC_FIELDS_mti_mac_addr_0_E, SNET_CHT_PORT_MAC_FIELDS_mti_mac_addr_1_E, SNET_CHT_PORT_MAC_FIELDS_mti_mib_counter_is_emac_pmac_shared_E, 
    SNET_CHT_PORT_MAC_FIELDS_forwardFcPacketsEnable_E, SNET_CHT_PORT_MAC_FIELDS_clock_Enable_E, SNET_CHT_PORT_MAC_FIELDS_segmented_E, SNET_CHT_PORT_MAC_FIELDS_fec_RS_FEC_Enable_Lane_E, SNET_CHT_PORT_MAC_FIELDS_fec_KP_Mode_Enable_E, SNET_CHT_PORT_MAC_FIELDS_sgmii_speed_E, SNET_CHT_PORT_MAC_FIELDS____LAST____E} SNET_CHT_PORT_MAC_FIELDS_ENT;
typedef enum {SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aFramesTransmittedOK_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aFramesReceivedOK_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aFrameCheckSequenceErrors_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aAlignmentErrors_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aPAUSEMACCtrlFramesTransmitted_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aPAUSEMACCtrlFramesReceived_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aFrameTooLongErrors_E, 
    SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aInRangeLengthErrors_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_VLANTransmittedOK_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_VLANReceivedOK_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifOutOctets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifInOctets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifInUcastPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifInMulticastPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifInBroadcastPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifOutErrors_E, 
    SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifOutUcastPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifOutMulticastPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifOutBroadcastPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsDropEvents_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsOctets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsUndersizePkts_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts64Octets_E, 
    SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts65to127Octets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts128to255Octets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts256to511Octets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts512to1023Octets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts1024to1518Octets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsPkts1519toMaxOctets_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsOversizePkts_E, 
    SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsJabbers_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_etherStatsFragments_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ifInErrors_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aCBFCPAUSEFramesTransmitted_0_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aCBFCPAUSEFramesTransmitted_7_E = 41, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aCBFCPAUSEFramesReceived_0_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aCBFCPAUSEFramesReceived_7_E = 49, 
    SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aMACControlFramesTransmitted_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_aMACControlFramesReceived_E, SNET_CHT_PORT_MIB_COUNTERS_100G_PORT____LAST____E} SNET_CHT_PORT_MIB_COUNTERS_100G_PORT_ENT;
typedef enum {SNET_CHT_PORT_MIB_COUNTERS_GOOD_OCTETS_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_BAD_OCTETS_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_CRC_ERRORS_SENT_E, SNET_CHT_PORT_MIB_COUNTERS_GOOD_UNICAST_FRAMES_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_FRAMES_1024_TO_1518_OCTETS_E, SNET_CHT_PORT_MIB_COUNTERS_BROADCAST_FRAMES_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_MULTICAST_FRAMES_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_FRAMES_64_OCTETS_E, SNET_CHT_PORT_MIB_COUNTERS_FRAMES_65_TO_127_OCTETS_E, 
    SNET_CHT_PORT_MIB_COUNTERS_FRAMES_128_TO_255_OCTETS_E, SNET_CHT_PORT_MIB_COUNTERS_FRAMES_256_TO_511_OCTETS_E, SNET_CHT_PORT_MIB_COUNTERS_FRAMES_512_TO_1023_OCTETS_E, SNET_CHT_PORT_MIB_COUNTERS_FRAMES_1024_TO_MAX_OCTETS_E, SNET_CHT_PORT_MIB_COUNTERS_GOOD_OCTETS_SENT_E, SNET_CHT_PORT_MIB_COUNTERS_UNICAST_FRAME_SENT_E, SNET_CHT_PORT_MIB_COUNTERS_RESERVED_2_E, SNET_CHT_PORT_MIB_COUNTERS_MULTICAST_FRAMES_SENT_E, SNET_CHT_PORT_MIB_COUNTERS_BROADCAST_FRAMES_SENT_E, SNET_CHT_PORT_MIB_COUNTERS_RESERVED_3_E, 
    SNET_CHT_PORT_MIB_COUNTERS_FC_SENT_E, SNET_CHT_PORT_MIB_COUNTERS_FC_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_RECEIVED_FIFO_OVERRUN_E, SNET_CHT_PORT_MIB_COUNTERS_UNDERSIZE_E, SNET_CHT_PORT_MIB_COUNTERS_FRAGMENTS_E, SNET_CHT_PORT_MIB_COUNTERS_OVERSIZE_E, SNET_CHT_PORT_MIB_COUNTERS_JABBER_E, SNET_CHT_PORT_MIB_COUNTERS_RX_ERROR_FRAME_RECEIVED_E, SNET_CHT_PORT_MIB_COUNTERS_BAD_CRC_E, SNET_CHT_PORT_MIB_COUNTERS_COLLISION_E, SNET_CHT_PORT_MIB_COUNTERS_LATE_COLLISION_E, 
    SNET_CHT_PORT_MIB_COUNTERS____LAST____E} SNET_CHT_PORT_MIB_COUNTERS_ENT;
typedef enum {SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsOctets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_OctetsReceivedOK_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aAlignmentErrors_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aPauseMacCtrlFramesReceived_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aFrameTooLong_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aInRangeLengthError_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aFramesReceivedOK_E, 
    SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aFrameCheckSequenceErrors_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_VLANReceivedOK_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_ifInErrors_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_ifInUcastPkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_ifInMulticastPkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_ifInBroadcastPkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsDropEvents_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts_E, 
    SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsUndersizePkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts64Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts65to127Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts128to255Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts256to511Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts512to1023Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts1024to1518Octets_E, 
    SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsPkts1519toMaxOctets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsOversizePkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsJabbers_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_etherStatsFragments_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aCBFCPAUSEFramesReceived0_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aCBFCPAUSEFramesReceived15_E = 41, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_RX_aMACControlFramesReceived_E, 
    SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsOctets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_OctetsTransmittedOK_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_aPauseMacCtrlFramesTransmitted_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_aFramesTransmittedOK_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_VLANTransmittedOK_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_ifOutErrors_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_ifOutUcastPkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_ifOutMulticastPkts_E, 
    SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_ifOutBroadcastPkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts64Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts65to127Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts128to255Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts256to511Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts512to1023Octets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts1024to1518Octets_E, 
    SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts1519toMaxOctets_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_aCBFCPAUSEFramesTransmitted0_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_aCBFCPAUSEFramesTransmitted15_E = 74, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_aMACControlFramesTransmitted_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_TX_etherStatsPkts_E, SNET_CHT_PORT_MTI_STATISTIC_COUNTERS____LAST____E} SNET_CHT_PORT_MTI_STATISTIC_COUNTERS_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetahL2.h:
typedef enum {SNET_CHT_BPDU_TRAP = 2, SNET_CHT_MAC_TABLE_ENTRY_TRAP_MIRROR, SNET_LION3_CPU_CODE_L2I_MAC_SA_MOVED, SNET_CHT_ARP_BCAST_TRAP_MIRROR, SNET_CHT_IPV4_IGMP_TRAP_MIRROR, SNET_LION3_CPU_CODE_L2I_SA_IS_DA, SNET_CHT_BRG_LEARN_DIS_UNK_SRC_MAC_ADDR_TRAP, SNET_LION3_CPU_CODE_L2I_SIP_IS_DIP, SNET_CHT_BRG_LEARN_DIS_UNK_SRC_MAC_ADDR_MIRROR, SNET_LION3_CPU_CODE_L2I_TCP_UDP_SPORT_IS_DPORT, SNET_LION3_CPU_CODE_L2I_TCP_FLAGS_WITH_FIN_WITHOUT_ACK, SNET_CHT_IEEE_RES_MCAST_ADDR_TRAP_MIRROR, 
    SNET_CHT_IPV6_ICMP_TRAP_MIRROR, SNET_LION3_CPU_CODE_L2I_TCP_WITHOUT_FULL_HEADER, SNET_CHT_IPV4_IPV6_LINK_LOCAL_MCAST_DIP_TRAP_MIRROR, SNET_CHT_IPV4_RIPV1_MIRROR, SNET_CHT_IPV6_NEIGHBOR_SOLICITATION_TRAP_MIRROR, SNET_CHT_IPV4_BCAST_TRAP_MIRROR, SNET_CHT_NON_IPV4_BCAST_TRAP_MIRROR, SNET_CHT_CISCO_CONTROL_MCAST_MAC_ADDR_TRAP_MIRROR, SNET_CHT_BRG_NON_IPV4_IPV6_UNREG_MCAST_TRAP_MIRROR, SNET_CHT_BRG_IPV4_UNREG_MCAST_TRAP_MIRROR, SNET_CHT_BRG_IPV6_UNREG_MCAST_TRAP_MIRROR, SNET_CHT_BRG_UNKN_UCAST_TRAP_MIRROR, 
    SNET_CHT_IEEE_RES_MC_ADDR_TRAP_MIRROR_1, SNET_CHT_IEEE_RES_MC_ADDR_TRAP_MIRROR_2, SNET_CHT_IEEE_RES_MC_ADDR_TRAP_MIRROR_3, SNET_CHT_IPV4_IPV6_LINK_LOCAL_MCAST_DIP_TRAP_MIRROR_1, SNET_CHT_IPV4_IPV6_LINK_LOCAL_MCAST_DIP_TRAP_MIRROR_2, SNET_CHT_IPV4_IPV6_LINK_LOCAL_MCAST_DIP_TRAP_MIRROR_3, SNET_CHT_UDP_BC_TRAP_MIRROR0, SNET_CHT_UDP_BC_TRAP_MIRROR1, SNET_CHT_UDP_BC_TRAP_MIRROR2, SNET_CHT_UDP_BC_TRAP_MIRROR3, SNET_CHT_SEC_AUTO_LEARN_UNK_SRC_TRAP, SNET_LION3_CPU_CODE_L2I_VLAN_NOT_VALID = 38, 
    SNET_LION3_CPU_CODE_L2I_PORT_NOT_VLAN_MEM, SNET_LION3_CPU_CODE_L2I_VLAN_RANGE, SNET_LION3_CPU_CODE_L2I_STATIC_ADDR_MOVED, SNET_LION3_CPU_CODE_L2I_MAC_SPOOF, SNET_LION3_CPU_CODE_L2I_ARP_SA_MISMATCH, SNET_LION3_CPU_CODE_L2I_TCP_SYN_WITH_DATA, SNET_LION3_CPU_CODE_L2I_TCP_OVER_MC_BC, SNET_LION3_CPU_CODE_L2I_FRAGMENT_ICMP, SNET_LION3_CPU_CODE_L2I_TCP_FLAGS_ZERO, SNET_LION3_CPU_CODE_L2I_TCP_FLAGS_FIN_URG_PSH, SNET_LION3_CPU_CODE_L2I_TCP_FLAGS_SYN_FIN, SNET_LION3_CPU_CODE_L2I_TCP_FLAGS_SYN_RST, 
    SNET_LION3_CPU_CODE_L2I_TCP_UDP_SRC_DEST_ZERO, SNET_LION3_CPU_CODE_L2I_BRIDGE_ACCESS_MATRIX, SNET_LION3_CPU_CODE_L2I_ACCEPT_FRAME_TYPE, SNET_LION3_CPU_CODE_L2I_VLAN_MRU, SNET_LION3_CPU_CODE_L2I_RATE_LIMITING, SNET_LION3_CPU_CODE_L2I_LOCAL_PORT, SNET_LION3_CPU_CODE_L2I_IPMC, SNET_LION3_CPU_CODE_L2I_NON_IPMC, SNET_LION3_CPU_CODE_L2I_DSA_TAG_LOCAL_DEV, SNET_LION3_CPU_CODE_L2I_INVALID_SA, SNET_CHT_TARGET_NULL_PORT_E = 62, SNET_CHT_ROUTED_PACKET_FORWARD = 64, SNET_CHT_BRIDGED_PACKET_FORWARD, 
    SNET_CHT_INGRESS_MIRRORED_TO_ANALYZER, SNET_CHT_EGRESS_MIRRORED_TO_ANALYZER, SNET_CHT_MAIL_FROM_NEIGHBOR_CPU, SNET_CHT_CPU_TO_CPU, SNET_CHT_EGRESS_SAMPLED, SNET_CHT_INGRESS_SAMPLED, SNET_CHT_INVALID_PCL_KEY_TRAP = 74, SNET_CHT_IPV4_TT_HEADER_ERROR, SNET_CHT_IPV4_TT_OPTION_FRAG_ERROR, SNET_CHT_IPV4_TT_UNSUP_GRE_ERROR, SNET_CHT_EQ_BAD_ANALYZER_INDEX_DROP_ERROR, SNET_XCAT_MPLS_TT_HEADER_CHECK_ERROR, SNET_XCAT_MPLS_TT_LSR_TTL_EXCEEDED, SNET_XCAT_OAM_PDU_TRAP = 83, SNET_CHT_IPV4_UC_TTL_EXCEEDED = 133, 
    SNET_CHT_IPV4_6_MTU_EXCEEDED, SNET_CHT_IPV6_UC_HOP_LIMIT_EXCEEDED, SNET_CHT_IPV4_6_ILLEGAL_ADDR_ERROR, SNET_CHT_IPV4_HEADER_ERROR, SNET_CHT_IPV4_6_DIP_DA_MISMATCH, SNET_CHT_IPV6_HEADER_ERROR, SNET_CHT_IPV4_6_SIP_SA_MISMATCH, SNET_CHT_IPV4_UC_OPTIONS, SNET_CHT_IPV6_NON_HBH_OPTIONS, SNET_CHT_IPV6_UC_HOP_BY_HOP, SNET_CHT_IPV4_6_SIP_FILTERING, SNET_CHT_IPV4_6_SIP_IS_ZERO, SNET_CHT_ACCESS_MATRIX, SNET_CHT_FCOE_EXCEPTION, SNET_CHT_FCOE_DIP_LOOKUP_NOT_FOUND = 147, SNET_CHT_FCOE_SIP_LOOKUP_NOT_FOUND, 
    SNET_CHT_IPV6_SCOPE = 159, SNET_CHT_IPV4_UC_ROUTE0, SNET_CHT_IPV4_UC_ROUTE1, SNET_CHT_IPV4_UC_ROUTE2, SNET_CHT_IPV4_UC_ROUTE3, SNET_CHT_IPV4_MC_ROUTE0, SNET_CHT_IPV4_MC_ROUTE1, SNET_CHT_IPV4_MC_ROUTE2, SNET_CHT_IPV4_MC_ROUTE3, SNET_CHT_IPV6_UC_ROUTE0, SNET_CHT_IPV6_UC_ROUTE1, SNET_CHT_IPV6_UC_ROUTE2, SNET_CHT_IPV6_UC_ROUTE3, SNET_CHT_IPV6_MC_ROUTE0, SNET_CHT_IPV6_MC_ROUTE1, SNET_CHT_IPV6_MC_ROUTE2, SNET_CHT_IPV6_MC_ROUTE3, SNET_CHT_IPV4_6_UC_RPF_FAIL, SNET_CHT_IPV4_6_MC_RPF_FAIL, 
    SNET_CHT_IPV4_6_MC_MLL_RPF_FAIL, SNET_CHT_ARP_BC_TO_ME, SNET_CHT_IPV4_UC_ICMP_REDIRECT, SNET_CHT_IPV6_UC_ICMP_REDIRECT, SNET_CHT_IPV4_6_MC_BIDIR_RPF_FAIL, SNET_CHT_CAPWAP_802_11_MGMT_EXCEPTION, SNET_CHT_IPV6_TT_OPTION_FRAG_ERROR, SNET_CHT_CAPWAP_FRAGMENT_EXCEPTION = 187, SNET_CHT_ARP_REPLY_TO_ME, SNET_CHT_CPU_TO_ALL_CPUS, SNET_CHT_TCP_SYN_TO_CPU, SNET_CHT_PACKET_TO_VIRTUAL_ROUTER_PORT, SNET_CHT_PACKET_USER_DEFINED_FIRST, SNET_CHT_PACKET_USER_DEFINED_LAST = 255} SNET_CHEETAH_CPU_CODE_ENT;
typedef enum {SNET_CHEETAH_ENGINE_UNIT_TTI_E, SNET_CHEETAH_ENGINE_UNIT_PCL_E, SNET_CHEETAH_ENGINE_UNIT_L2I_E, SNET_CHEETAH_ENGINE_UNIT_ROUTER_E, SNET_CHEETAH_ENGINE_UNIT_OAM_E, SNET_CHEETAH_ENGINE_UNIT_SMU_E, SNET_CHEETAH_ENGINE_UNIT_POLICER_E, SNET_CHEETAH_ENGINE_UNIT_L2MLL_E, SNET_CHEETAH_ENGINE_UNIT_IPMLL_E, SNET_CHEETAH_ENGINE_UNIT_EQ_E, SNET_CHEETAH_ENGINE_UNIT_PREQ_E, SNET_CHEETAH_ENGINE_UNIT_TXQ_E, SNET_CHEETAH_ENGINE_UNIT_HA_E, SNET_CHEETAH_ENGINE_UNIT_EPCL_E} SNET_CHEETAH_ENGINE_UNIT_ENT;
typedef struct {
    SKERNEL_EXT_PACKET_CMD_ENT bpduTrapCmd;
    SKERNEL_EXT_PACKET_CMD_ENT ieeePcktCmd;
    SKERNEL_EXT_PACKET_CMD_ENT ciscoPcktCmd;
    SKERNEL_EXT_PACKET_CMD_ENT arpBcastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT ripV1Cmd;
    SKERNEL_EXT_PACKET_CMD_ENT igmpCmd;
    SKERNEL_EXT_PACKET_CMD_ENT icmpV6Cmd;
    SKERNEL_EXT_PACKET_CMD_ENT solicitationMcastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT ipXMcLinkLocalProtCmd;
    SKERNEL_EXT_PACKET_CMD_ENT udpBcDestPortCmd;
} SNET_CHEETAH_L2I_CNTRL_PACKET_INFO;
typedef struct {
    GT_BIT found;
    SNET_CHEETAH_FDB_ENTRY_ENT fdb_entry_type;
    SKERNEL_EXT_PACKET_CMD_ENT daCmd;
    GT_BIT isStatic;
    GT_U32 daQosProfile;
    GT_BIT rxSniff;
    GT_U32 devNum;
    GT_BIT useVidx;
    union {...} targed;
    GT_BIT multiTrg;
    GT_BIT daRoute;
    GT_BIT appSpecCpuCode;
    GT_U32 entryIndex;
    GT_U32 sstId;
    GT_U32 vid1;
    GT_U32 da_epg_streamId;
} SNET_CHEETAH_L2I_DA_LOOKUP_INFO;
typedef struct {
    GT_BIT autoLearnEn;
    GT_BIT naIsSecurityBreach;
    GT_BIT naStormPreventEn;
    GT_BIT naMsgToCpuEn;
    SKERNEL_EXT_PACKET_CMD_ENT unknownSaCmd;
    SKERNEL_EXT_PACKET_CMD_ENT localPortCmd;
    SKERNEL_EXT_PACKET_CMD_ENT invldVlanCmd;
    SKERNEL_EXT_PACKET_CMD_ENT inVlanFilterCmd;
    SKERNEL_EXT_PACKET_CMD_ENT vlanRangeCmd;
    GT_BIT invalidSa;
    SKERNEL_EXT_PACKET_CMD_ENT invalidSaCmd;
    SKERNEL_EXT_PACKET_CMD_ENT stpCmd;
    SKERNEL_EXT_PACKET_CMD_ENT ipmNonIpmDaCmd;
    SKERNEL_EXT_PACKET_CMD_ENT ipmIpmDaCmd;
    GT_BIT mcMacIsIpmV4;
    GT_BIT mcMacIsIpmV6;
    SKERNEL_EXT_PACKET_CMD_ENT staticMovedCmd;
    GT_U32 portSstId;
    GT_BIT pvlanEn;
    GT_BIT pvlanTrgIsTrunk;
    GT_U32 pvlanPortOrTrunkId;
    GT_U32 pvlanDevNum;
    GT_BIT macQosConflictMode;
    GT_BIT isSecurityBreach;
    GT_U32 dropCounterMode;
    GT_U32 sip5SecurityBreachDropMode;
    SKERNEL_EXT_PACKET_CMD_ENT rateLimitCmd;
    SKERNEL_EXT_PACKET_CMD_ENT frameTypeCmd;
    SKERNEL_EXT_PACKET_CMD_ENT vlanMruCmd;
    SKERNEL_EXT_PACKET_CMD_ENT arpMacSaMismatchCmd;
    SKERNEL_EXT_PACKET_CMD_ENT secAutoLearnCmd;
    SKERNEL_EXT_PACKET_CMD_ENT accessCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpOverMacMcCmd;
    SKERNEL_EXT_PACKET_CMD_ENT icmpFragCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpSynWithData;
    SKERNEL_EXT_PACKET_CMD_ENT tcpZeroFlagsCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpFinUrgPsgFlagsCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpSynFinFlagsCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpSynRstFlagsCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpPortZeroFlagsCmd;
    SKERNEL_EXT_PACKET_CMD_ENT autoLearnNoRelearnCmd;
    SKERNEL_EXT_PACKET_CMD_ENT unknUcastCmd;
    SKERNEL_EXT_PACKET_CMD_ENT uregL2NonIpmMcCmd;
    SKERNEL_EXT_PACKET_CMD_ENT uregL2Ipv4McCmd;
    SKERNEL_EXT_PACKET_CMD_ENT uregL2Ipv6McCmd;
    SKERNEL_EXT_PACKET_CMD_ENT uregL2Ipv4BcCmd;
    SKERNEL_EXT_PACKET_CMD_ENT uregL2NonIpv4BcCmd;
    SKERNEL_EXT_PACKET_CMD_ENT sipIsDipCmd;
    SKERNEL_EXT_PACKET_CMD_ENT movedMacCmd;
    SKERNEL_EXT_PACKET_CMD_ENT macSpoofProtectionCmd;
    GT_BIT isMacSpoofProtectionEvent;
    GT_U32 securityBreachMode;
    SKERNEL_EXT_PACKET_CMD_ENT saEqualDaCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpSrcPortIsDestPortCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpFinWithoutAckFlagsCmd;
    SKERNEL_EXT_PACKET_CMD_ENT tcpWithoutFullHeaderCmd;
} SNET_CHEETAH_L2I_FILTERS_INFO;
typedef struct {
    GT_BIT srcEPortIsGlobal;
    GT_U32 FDB_port_trunk;
    GT_BIT FDB_isTrunk;
    GT_U32 FDB_devNum;
    GT_U32 FDB_coreId;
    GT_BIT FDB_isMoved;
    GT_U32 FDB_fid;
    GT_U32 FDB_UDB;
    GT_U32 FDB_srcId;
    GT_U32 FDB_origVid1;
    struct {...} oldInfo;
    GT_U32 FDB_entryOffset;
    GT_U32 FDB_index;
    GT_U32 FDB_spUnknown;
} SNET_CHEETAH_L2I_LEARN_INFO_STC;
typedef enum {SNET_CHEETAH_L2I_LOOKUP_MODE_SA_E, SNET_CHEETAH_L2I_LOOKUP_MODE_DA_E} SNET_CHEETAH_L2I_LOOKUP_MODE_ENT;
typedef struct {
    GT_BIT valid;
    GT_BIT found;
    SKERNEL_EXT_PACKET_CMD_ENT saCmd;
    GT_BIT isStatic;
    GT_BIT isMoved;
    GT_BIT stormPrevent;
    GT_U32 saQosProfile;
    GT_BIT rxSniff;
    GT_U32 sstId;
    GT_U32 entryIndex;
    GT_BOOL sendFailedNa2Cpu;
    GT_U32 sa_epg_streamId;
    GT_U32 vid1;
} SNET_CHEETAH_L2I_SA_LOOKUP_INFO;
typedef struct {
    GT_BIT isValid;
    GT_U32 nextHop_hwRouterPacketCommand;
    GT_U32 ipv6ScopeCheck;
    GT_U32 ipv6DestSiteId;
    GT_U32 decTtlOrHopCount;
    GT_U32 bypassTtlOptionsOrHopExtension;
    GT_U32 ingressMirrorToAnalyzerIndex;
    GT_U32 qosProfileMarkingEn;
    GT_U32 qosProfileIndex;
    GT_U32 qosProfilePrecedence;
    GT_U32 modifyUp;
    GT_U32 modifyDscp;
    GT_U32 counterSetIndex;
    GT_U32 arpBcTrapMirrorEn;
    GT_U32 dipAccessLevel;
    GT_U32 icmpRedirectExceptionMirror;
    GT_U32 mtuIndex;
    GT_U32 useVidx;
    GT_U32 trgIsTrunk;
    GT_U32 trgTrunkId;
    GT_U32 trgEport;
    GT_U32 evidx;
    GT_U32 trgDev;
    GT_U32 nextHopEvlan;
    GT_U32 startOfTunnel;
    GT_U32 tunnelType;
    GT_U32 tunnelPtrValid;
    GT_U32 arpPtrValid;
    GT_U32 tsIsNat;
    GT_U32 routeType;
    GT_U32 pointerType;
    GT_U32 ecmpPointer;
} SNET_LION3_FDB_ROUTE_ENTRY_INFO;
typedef struct {
    GT_U32 valid;
    GT_U32 skip;
    GT_U32 age;
    GT_U32 fdb_entry_type;
    GT_U32 fid;
    GT_U32 mac_addr[2];
    GT_U32 dev_id;
    GT_U32 sa_access_level;
    GT_U32 dip;
    GT_U32 sip;
    GT_U32 da_access_level;
    GT_U32 orig_vid1;
    GT_U32 source_id;
    GT_U32 user_defined;
    GT_U32 vidx;
    GT_U32 is_trunk;
    GT_U32 trunk_num;
    GT_U32 eport_num;
    GT_U32 multiple;
    GT_U32 is_static;
    GT_U32 da_cmd;
    GT_U32 sa_cmd;
    GT_U32 da_route;
    GT_U32 sp_unknown;
    GT_U32 app_specific_cpu_code;
    SNET_SIP6_FDB_UC_ROUTE_ENTRY_INFO ucRoute;
    GT_U32 epg_streamId;
} SNET_SIP6_FDB_ENTRY_INFO;
typedef struct {
    GT_U32 vrf_id;
    GT_U32 dec_ttl_or_hop_count;
    GT_U32 bypass_ttl_options_or_hop_extension;
    GT_U32 counter_set_index;
    GT_U32 icmp_redirect_excep_mirror_en;
    GT_U32 mtu_index;
    GT_U32 use_vidx;
    GT_U32 evidx;
    GT_U32 trg_is_trunk;
    GT_U32 trg_eport;
    GT_U32 trg_trunk_id;
    GT_U32 trg_dev;
    GT_U32 ecmp_pointer;
    GT_U32 next_hop_evlan;
    GT_U32 start_of_tunnel;
    GT_U32 arp_ptr;
    GT_U32 tunnel_type;
    GT_U32 tunnel_ptr;
    GT_U32 ts_is_nat;
    GT_U32 route_type;
    GT_U32 pointer_type;
    GT_U32 ipv4_dip;
    GT_U32 fcoe_d_id;
    GT_U32 ipv6_scope_check;
    GT_U32 ipv6_dst_site_id;
    GT_U32 ipv6_dip_127_106;
    GT_U32 ipv6_dip_31_0;
    GT_U32 ipv6_dip_63_32;
    GT_U32 ipv6_dip_95_64;
    GT_U32 ipv6_dip_105_96;
} SNET_SIP6_FDB_UC_ROUTE_ENTRY_INFO;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetahPcl.h:
typedef struct {
    GT_U32 regOffsetAddress;
    GT_U32 startBitOffset;
    GT_U32 startBitAnchor;
} CHT_PCL_USER_DEFINED_CONFIG_REG_STC;
typedef struct {
    GT_U32 matchCounterIndex;
    GT_BOOL matchCounterEn;
    GT_U32 routModifyUp;
    GT_U32 routModifyDscp;
    GT_U32 routQosProfile;
    GT_BOOL routQosProfileMarkingEn;
    SKERNEL_PRECEDENCE_ORDER_ENT routQosPrecedence;
    GT_BOOL mirrorToIngressAnalyzerPort;
    GT_U32 arpDaIndex;
    SKERNEL_EXT_PACKET_CMD_ENT fwdCmd;
    GT_U32 vid;
    SNET_CHT_POLICY_EGRESS_INTERFACE_STC routEgressInterface;
    GT_U32 routRedirectCmd;
    GT_BOOL decTtl;
    GT_BOOL bypassTtlOptionCheck;
    GT_BOOL icmpRedirectChk;
} SNET_CHT_NEXT_HOP_POLICY_ACTION_STC;
typedef enum {SNET_CHT_PCL_STANDARD_KEY, SNET_CHT_PCL_EXTENDED_KEY} SNET_CHT_PCL_KEY_SIZE;
typedef struct {
    GT_U32 matchCounterIndex;
    GT_BOOL matchCounterEn;
    GT_U32 pceModifyUp;
    GT_U32 pceModifyDscp;
    GT_U32 pceQosProfile;
    GT_BOOL pceQosProfileMarkingEn;
    SKERNEL_PRECEDENCE_ORDER_ENT pceQosPrecedence;
    GT_BOOL mirrorToIngressAnalyzerPort;
    GT_U32 pceCpuCode;
    SKERNEL_EXT_PACKET_CMD_ENT fwdCmd;
    GT_U32 pceVid;
    GT_U32 pceVlanCmd;
    GT_BOOL enNestedVlan;
    GT_U32 pceVidPrecedence;
    SNET_CHT_POLICY_EGRESS_INTERFACE_STC pceEgressInterface;
    GT_U32 pceRedirectCmd;
    GT_U32 policerIndex;
    GT_BOOL policerEn;
} SNET_CHT_POLICY_ACTION_STC;
typedef struct {
    GT_BOOL useVidx;
    union {...} vidxInfo;
} SNET_CHT_POLICY_EGRESS_INTERFACE_STC;
typedef struct {
    GT_BOOL valid;
    SNET_CHT_POLICY_SPECIFIC_LOOKUP_CONFIG_STC lkupConf_0;
    SNET_CHT_POLICY_SPECIFIC_LOOKUP_CONFIG_STC lkupConf_1;
} SNET_CHT_POLICY_LOOKUP_CONFIG_STC;
typedef struct {
    GT_BOOL enabled;
    GT_U32 keySize;
    GT_U32 pclId;
    GT_BIT ipKeyType;
    GT_BIT lookUp1IpV6KeyType;
} SNET_CHT_POLICY_SPECIFIC_LOOKUP_CONFIG_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetCheetahPclSrv.h:
typedef struct CHT_PCL_EXTRA_PACKET_INFO_STCT CHT_PCL_EXTRA_PACKET_INFO_STC;
struct CHT_PCL_EXTRA_PACKET_INFO_STCT;
typedef struct {
    GT_U32 startBitInKey;
    GT_U32 endBitInKey;
    GT_BOOL updateOnSecondCycle;
    char *debugName;
} CHT_PCL_KEY_FIELDS_INFO_STC;
typedef enum {CHT_PCL_KEY_REGULAR_E, CHT_PCL_KEY_EXTENDED_E, CHT_PCL_KEY_TRIPLE_E, CHT_PCL_KEY_10B_E, CHT_PCL_KEY_20B_E, CHT_PCL_KEY_30B_E, CHT_PCL_KEY_40B_E, CHT_PCL_KEY_50B_E, CHT_PCL_KEY_60B_E, CHT_PCL_KEY_60B_NO_FIXED_FIELDS_E, CHT_PCL_KEY_80B_E, CHT_PCL_KEY_UNLIMITED_SIZE_E} CHT_PCL_KEY_FORMAT_ENT;
typedef struct CHT_PCL_TCAM_COMMON_DATA_STCT CHT_PCL_TCAM_COMMON_DATA_STC;
struct CHT_PCL_TCAM_COMMON_DATA_STCT;
typedef enum {CHT_PCL_TCAM_PATTERN_E, CHT_PCL_TCAM_MASK_E} CHT_PCL_TCAM_DATA_TYPE_ENT;
typedef GT_BOOL (*)(SKERNEL_DEVICE_OBJECT *, GT_U8 *, GT_U8 *, GT_U8 *, GT_U32, GT_U32, GT_U32, GT_U32) COMPARE_TCAM_KEY_FUNC;
typedef struct SNET_CHT_POLICY_KEY_STCT SNET_CHT_POLICY_KEY_STC;
struct SNET_CHT_POLICY_KEY_STCT;
typedef union {
    GT_U8 regular[30];
    GT_U8 extended[60];
    GT_U8 triple[80];
    GT_U8 *unlimitedBufferPtr;
    GT_U32 data[20];
} SNET_CHT_POLICY_KEY_UNT;
typedef struct {
    GT_U32 *entryPatternPtr;
    GT_U32 *entryPatternCtrlPtr;
    GT_U32 *entryMaskPtr;
    GT_U32 *entryMaskCtrlPtr;
} TCAM_ENTRY_MEM_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetFalconExactMatch.h:
typedef enum {SIP6_EXACT_MATCH_KEY_SIZE_5B_E, SIP6_EXACT_MATCH_KEY_SIZE_19B_E, SIP6_EXACT_MATCH_KEY_SIZE_33B_E, SIP6_EXACT_MATCH_KEY_SIZE_47B_E, SIP6_EXACT_MATCH_KEY_SIZE_LAST_E} SIP6_EXACT_MATCH_KEY_SIZE_ENT;
typedef struct {
    GT_U32 valid;
    GT_U32 entry_type;
    GT_U32 age;
    GT_U32 key_size;
    GT_U32 lookup_number;
    GT_U32 key_31_0;
    GT_U32 key_39_32;
    GT_U32 action_31_0;
    GT_U32 action_63_32;
    GT_U32 action_67_64;
    GT_U32 keyOnly_31_0;
    GT_U32 keyOnly_63_32;
    GT_U32 keyOnly_95_64;
    GT_U32 keyOnly_111_96;
} SNET_SIP6_EXACT_MATCH_ENTRY_INFO;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetFalconLpm.h:
typedef enum {LPM_LEAF_PRIORITY_FDB_E, LPM_LEAF_PRIORITY_LPM_E} LPM_LEAF_PRIORITY_ENT;
typedef enum {LPM_LEAF_TYPE_REGULAR_E, LPM_LEAF_TYPE_MULTIPATH_E} LPM_LEAF_TYPE_ENT;
typedef enum {LPM_MULTIPATH_MODE_ECMP_E, LPM_MULTIPATH_MODE_QOS_E} LPM_MULTIPATH_MODE_ENT;
typedef enum {LPM_NODE_TYPE_EMPTY_E, LPM_NODE_TYPE_LEAF_E, LPM_NODE_TYPE_REGULAR_E, LPM_NODE_TYPE_COMPRESSED_E} LPM_NODE_TYPE_ENT;
typedef struct {
    GT_U16 nextHopBaseAddr;
    GT_U16 numOfPaths;
    GT_BOOL randomEn;
    LPM_MULTIPATH_MODE_ENT mode;
} SNET_SIP6_LPM_ECMP_OR_QOS_DATA_STC;
typedef struct {
    GT_U8 lttIpv6MulticastGroupScopeLevel;
    GT_BOOL lttUnicastRpfCheckEnable;
    GT_BOOL lttUnicastSrcAddrCheckMismatchEnable;
} SNET_SIP6_LPM_LTT_DATA_STC;
typedef struct {
    GT_U32 nextPtr;
    LPM_NODE_TYPE_ENT nodeType;
    GT_U32 leafNumber;
} SNET_SIP6_LPM_MEM_ENTRY_STC;
typedef struct {
    SNET_SIP6_LPM_LTT_DATA_STC lttData;
    GT_BIT activity;
    SNET_SIP6_LPM_ECMP_OR_QOS_DATA_STC ecmpOrQosData;
    LPM_LEAF_TYPE_ENT leafType;
    GT_U32 nextHopPointer;
    GT_BOOL isTrigger;
    GT_BOOL isNextNodeCopmressed;
    LPM_LEAF_PRIORITY_ENT priority;
    GT_BOOL applyPbr;
} SNET_SIP6_LPM_MEM_LEAF_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetFalconTxQ.h:
typedef struct {
    GT_U32 queue_base;
    GT_U32 dp_core_local_trg_port;
    GT_U32 queue_pds_index;
    GT_U32 queue_pdx_index;
} QUEUE_GROUP_MAP_ENTRY_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetHawkPpu.h:
typedef struct {
    GT_BOOL ppuEnable;
    GT_U32 maxLoopBack;
    GT_U32 errProfMaxLoopBack;
    GT_U32 errProfSer;
    GT_U32 errProfOffsetOor;
    GT_BOOL debugCounterEnable;
} SNET_SIP6_10_PPU_CONFIG_STC;
typedef struct {
    GT_BOOL protWinEnable;
    GT_U32 protWinStartOffset;
    GT_U32 protWinEndOffset;
} SNET_SIP6_10_PPU_DAU_DATA_PROTECTED_WINDOW_STC;
typedef struct {
    GT_U32 endOffset;
    GT_U32 startOffset;
} SNET_SIP6_10_PPU_DAU_FIELDS_FORMAT_STC;
typedef struct {
    GT_BOOL spByteWriteEnable;
    GT_U32 spByteNumBits;
    GT_U32 spByteSrcOffset;
    GT_U32 spByteTargetOffset;
} SNET_SIP6_10_PPU_DAU_PROFILE_ENTRY_DESC_BITS_SET_STC;
typedef struct {
    SNET_SIP6_10_PPU_DAU_PROFILE_ENTRY_DESC_BITS_SET_STC setDescBits[20];
} SNET_SIP6_10_PPU_DAU_PROFILE_ENTRY_STC;
typedef struct {
    GT_BOOL isSerErr;
    GT_BOOL isLoopbackErr;
    GT_BOOL isOorErr;
} SNET_SIP6_10_PPU_ERROR_INFO_STC;
typedef struct {
    GT_U8 data[32];
} SNET_SIP6_10_PPU_HEADER_STC;
typedef struct {
    SNET_SIP6_10_PPU_KSTG_ROT_ACTION_ENTRY_STC rotActionEntry[5];
    GT_U32 setNextState;
    GT_U32 setConstNextShift;
    GT_BOOL setLoopBack;
    GT_BOOL counterSet;
    GT_U32 counterSetVal;
    GT_U32 counterOper;
} SNET_SIP6_10_PPU_KSTG_ACTION_ENTRY_STC;
typedef struct {
    GT_U8 byteSelOffset[7];
} SNET_SIP6_10_PPU_KSTG_KEY_GEN_PROFILE_STC;
typedef struct {
    GT_U32 srcRegSel;
    GT_U32 setCmd4Byte;
    GT_U32 srcOffset;
    GT_U32 srcNumValBits;
    GT_BOOL shiftLeftRightSel;
    GT_U32 shiftNum;
    GT_U32 setBitsNum;
    GT_U32 setBitsVal;
    GT_U32 setBitsOffset;
    GT_U32 addSubConst;
    GT_BOOL addSubConstSel;
    GT_U32 cmpVal;
    GT_U32 cmpFalseValLd;
    GT_U32 cmpCond;
    GT_U32 cmpMask;
    GT_U32 cmpTrueValLd;
    GT_U32 func;
    GT_U32 funcSecondOperand;
    GT_BOOL target;
    GT_U32 ldSpBusNumBytes;
    GT_U32 ldSpBusOffset;
    GT_BOOL interrupt;
    GT_U32 interruptIndex;
} SNET_SIP6_10_PPU_KSTG_ROT_ACTION_ENTRY_STC;
typedef struct {
    GT_U8 key[7];
    GT_U8 mask[7];
    GT_BOOL isValid;
} SNET_SIP6_10_PPU_KSTG_TCAM_ENTRY_STC;
typedef struct {
    GT_BOOL ppuEnable;
    GT_U32 ppuState;
    GT_U32 spBusDefaultProfile;
    GT_U32 anchorType;
    GT_U32 offset;
} SNET_SIP6_10_PPU_PROFILE_ENTRY_STC;
typedef struct {
    GT_U8 data[20];
} SNET_SIP6_10_PPU_SP_BUS_STC;
typedef struct {
    GT_U8 data[8];
    GT_U8 udbValidMask;
} SNET_SIP6_10_PPU_UDB_METADATA_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetLion.h:
typedef enum {SNET_LION3_PTP_TOD_UPDATE_E, SNET_LION3_PTP_TOD_FREQ_UPDATE_E, SNET_LION3_PTP_TOD_INCREMENT_E, SNET_LION3_PTP_TOD_DECREMENT_E, SNET_LION3_PTP_TOD_CAPTURE_E, SNET_LION3_PTP_TOD_GRACEFUL_INC_E, SNET_LION3_PTP_TOD_GRACEFUL_DEC_E, SNET_LION3_PTP_TOD_NOP_E} SNET_LION3_PTP_TOD_FUNC_ENT;
typedef enum {SNET_LION_CRC_HASH_L4_TARGET_PORT_E, SNET_LION_CRC_HASH_L4_SOURCE_PORT_E, SNET_LION_CRC_HASH_IPV6_FLOW_E, SNET_LION_CRC_HASH_RESERVED_55_52_E, SNET_LION_CRC_HASH_IP_DIP_3_E, SNET_LION_CRC_HASH_IP_DIP_2_E, SNET_LION_CRC_HASH_IP_DIP_1_E, SNET_LION_CRC_HASH_IP_DIP_0_E, SNET_LION_CRC_HASH_IP_SIP_3_E, SNET_LION_CRC_HASH_IP_SIP_2_E, SNET_LION_CRC_HASH_IP_SIP_1_E, SNET_LION_CRC_HASH_IP_SIP_0_E, SNET_LION_CRC_HASH_MAC_DA_E, SNET_LION_CRC_HASH_MAC_SA_E, SNET_LION_CRC_HASH_MPLS_LABEL0_E, 
    SNET_LION_CRC_HASH_RESERVED_431_428_E, SNET_LION_CRC_HASH_MPLS_LABEL1_E, SNET_LION_CRC_HASH_RESERVED_455_452_E, SNET_LION_CRC_HASH_MPLS_LABEL2_E, SNET_LION_CRC_HASH_RESERVED_479_476_E, SNET_LION_CRC_HASH_LOCAL_SOURCE_PORT_E, SNET_LION_CRC_HASH_UDB_14_TO_22_E, SNET_LION3_CRC_HASH_UDB_0_TO_11_E, SNET_LION3_CRC_HASH_UDB_23_TO_34_E, SNET_LION3_CRC_HASH_EVID_E, SNET_LION3_CRC_HASH_ORIG_SRC_EPORT_OR_TRNK_E, SNET_LION3_CRC_HASH_LOCAL_DEV_SRC_EPORT_E, 
    SNET_LION_CRC_HASH_LAST_E} SNET_LION_CRC_HASH_INPUT_KEY_FIELDS_ID_ENT;
typedef struct {
    SNET_XCAT_PCL_ACTION_STC baseAction;
    GT_BIT modifyMacDa;
    GT_BIT modifyMacSa;
} SNET_LION_PCL_ACTION_STC;
typedef enum {SNET_LION_PTP_GTS_INTERRUPT_GLOBAL_FIFO_FULL_E, SNET_LION_PTP_GTS_INTERRUPT_VALID_ENTRY_E} SNET_LION_PTP_GTS_INTERRUPT_EVENTS_ENT;
typedef enum {SNET_LION_PTP_TOD_UPDATE_E, SNET_LION_PTP_TOD_INCREMENT_E, SNET_LION_PTP_TOD_CAPTURE_E, SNET_LION_PTP_TOD_GENERATE_E} SNET_LION_PTP_TOD_EVENT_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetLion2Oam.h:
typedef struct {
    GT_U32 entryIndex;
    GT_BIT opCodeParsingEnable;
    GT_BIT lmCounterCaptureEnable;
    GT_BIT dualEndedLmEnable;
    SNET_LION2_OAM_LM_COUNTING_MODE_ENT lmCountingMode;
    GT_BIT megLevelCheckEnable;
    GT_U32 megLevel;
    GT_BIT keepaliveAgingEnable;
    GT_U32 ageState;
    GT_U32 agingPeriodIndex;
    GT_U32 agingThreshold;
    GT_BIT hashVerifyEnable;
    GT_BIT lockHashValueEnable;
    GT_U32 flowHash;
    GT_U32 offsetIndex;
    GT_BIT timestampEnable;
    GT_U32 packetCommandProfile;
    GT_U32 cpuCodeOffset;
    GT_BIT sourceInterfaceCheckEnable;
    GT_BIT sourceIsTrunk;
    GT_BIT sourceInterfaceCheckMode;
    GT_U32 localDevSrcEPortTrunk;
    GT_BIT protectionLocUpdateEnable;
    GT_BIT excessKeepaliveDetectionEnable;
    GT_U32 excessKeepalivePeriodCounter;
    GT_U32 excessKeepalivePeriodThreshold;
    GT_U32 excessKeepaliveMessageCounter;
    GT_U32 excessKeepaliveMessageThreshold;
    GT_U32 rdiCheckEnable;
    GT_U32 rdiStatus;
    GT_U32 periodCheckEnable;
    GT_U32 keepaliveTxPeriod;
    GT_BIT locDetectionEnable;
} SNET_LION2_OAM_INFO_STC;
typedef enum {SNET_LION2_OAM_LM_COUNTING_MODE_RETAIN_E, SNET_LION2_OAM_LM_COUNTING_MODE_DISABLE_E, SNET_LION2_OAM_LM_COUNTING_MODE_ENABLE_E} SNET_LION2_OAM_LM_COUNTING_MODE_ENT;
typedef enum {SNET_LION2_OAM_OPCODE_TYPE_LM_COUNTED_E, SNET_LION2_OAM_OPCODE_TYPE_LM_SINGLE_ENDED_E, SNET_LION2_OAM_OPCODE_TYPE_LM_DUAL_ENDED_E, SNET_LION2_OAM_OPCODE_TYPE_DM_E, SNET_LION2_OAM_OPCODE_TYPE_KEEPALIVE_E} SNET_LION2_OAM_OPCODE_TYPE_ENT;
typedef enum {SNET_LION2_OAM_STAGE_INGRESS_E, SNET_LION2_OAM_STAGE_EGRESS_E} SNET_LION2_OAM_STAGE_TYPE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetLion3Lpm.h:
typedef enum {LPM_BUCKET_TYPE_REGULAR_E, LPM_BUCKET_TYPE_COMPRESS_1_E, LPM_BUCKET_TYPE_COMPRESS_2_E, LPM_BUCKET_TYPE_RESERVED_E} LPM_BUCKET_TYPE_ENT;
typedef enum {LPM_POINTER_TYPE_BUCKET_E, LPM_POINTER_TYPE_REGULAR_LEAF_E, LPM_POINTER_TYPE_ECMP_LEAF_E, LPM_POINTER_TYPE_QOS_LEAF_E} LPM_POINTER_TYPE_ENT;
typedef struct {
    GT_U16 nextHopBaseAddr;
    GT_U16 numOfPaths;
    GT_BOOL randomEn;
} SNET_LPM_ECMP_OR_QOS_DATA_STC;
typedef struct {
    GT_U8 lttIpv6MulticastGroupScopeLevel;
    GT_BOOL lttUnicastRpfCheckEnable;
    GT_BOOL lttUnicastSrcAddrCheckMismatchEnable;
} SNET_LPM_LTT_DATA_STC;
typedef struct {
    GT_BOOL pointToSipTrie;
    LPM_BUCKET_TYPE_ENT bucketType;
    GT_U8 twoCompressedFirstLineLastOffset;
} SNET_LPM_MEM_BUCKET_STC;
typedef union {
    SNET_LPM_MEM_BUCKET_STC bucket;
    SNET_LPM_MEM_LEAF_STC leaf;
} SNET_LPM_MEM_ENTRY_DATA_UNT;
typedef struct {
    LPM_POINTER_TYPE_ENT pointerType;
    GT_U32 nextPtr;
    SNET_LPM_MEM_ENTRY_DATA_UNT data;
} SNET_LPM_MEM_ENTRY_STC;
typedef struct {
    SNET_LPM_LTT_DATA_STC lttData;
    GT_BIT activity;
    SNET_LPM_ECMP_OR_QOS_DATA_STC ecmpOrQosData;
} SNET_LPM_MEM_LEAF_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetLion3Tcam.h:
typedef enum {SIP5_TCAM_CLIENT_TTI_E, SIP5_TCAM_CLIENT_IPCL0_E, SIP5_TCAM_CLIENT_IPCL1_E, SIP5_TCAM_CLIENT_IPCL2_E, SIP5_TCAM_CLIENT_EPCL_E, SIP5_TCAM_CLIENT_LAST_E} SIP5_TCAM_CLIENT_ENT;
typedef enum {SIP5_TCAM_KEY_SIZE_10B_E = 1, SIP5_TCAM_KEY_SIZE_20B_E, SIP5_TCAM_KEY_SIZE_30B_E, SIP5_TCAM_KEY_SIZE_40B_E, SIP5_TCAM_KEY_SIZE_50B_E, SIP5_TCAM_KEY_SIZE_60B_E, SIP5_TCAM_KEY_SIZE_80B_E = 8, SIP5_TCAM_KEY_SIZE_LAST_E} SIP5_TCAM_KEY_SIZE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetPipe.h:
typedef struct {
    GT_CHAR *fieldName;
    GT_U32 numBytes;
} TCAM_KEY_METADATA_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetSoho.h:
typedef struct {
    SGT_MAC_ADDR_UNT macAddr;
    GT_U8 entryState;
    GT_U16 atuData;
    GT_U8 priority;
    GT_U8 trunk;
    GT_U8 fid;
} SNET_SOHO_ATU_STC;
typedef struct {
    GT_U32 monFwd;
    GT_U32 inMon;
    GT_U32 outMon;
    GT_U32 arpMonitorDest;
} SNET_SOHO_MIRROR_STC;
typedef struct {
    GT_U32 dbNum;
    GT_U32 vid;
    GT_U32 pri;
    GT_U8 portsMap[11];
    GT_U32 vidPolicy;
    GT_U32 usepri;
    GT_U32 sid;
    GT_U32 valid;
} SNET_SOHO_VTU_STC;
typedef enum {SNET_SOHO_8021Q_UNMODIFIED_STATE, SNET_SOHO_8021Q_UNTAGGED_STATE, SNET_SOHO_8021Q_TAGGED_STATE, SNET_SOHO_8021Q_NOTMEMBER_STATE} SOHO_8021Q_VTU_TAG_MODE_ENT;
typedef enum {SNET_SOHO_8021Q_MODE_DISABLE, SNET_SOHO_8021Q_MODE_FALLBACK, SNET_SOHO_8021Q_MODE_CHECK, SNET_SOHO_8021Q_MODE_SECURE} SOHO_PORT_8021Q_MODE_ENT;
typedef struct {
    SOHO_PORT_TAG_EGRESS_MODE_ENT tag_mode;
    SOHO_PORT_STATE_ENT state;
    GT_U8 num;
    SOHO_8021Q_VTU_TAG_MODE_ENT vtu_tag_mode;
    SOHO_PORT_8021Q_MODE_ENT p_8021q_mode;
} SOHO_PORT_INFO_STC;
typedef enum {SNET_SOHO_DISABLED_STATE, SNET_SOHO_BLOCKING_LISTENING_STATE, SNET_SOHO_LEARNING_STATE, SNET_SOHO_FORWARD_STATE} SOHO_PORT_STATE_ENT;
typedef enum {SNET_SOHO_EGRESS_MODE_UNMODIFIED, SNET_SOHO_EGRESS_MODE_UNTAGGED_STATE, SNET_SOHO_EGRESS_MODE_TAGGED_STATE, SNET_SOHO_EGRESS_MODE_DOUBLE_TAG_STATE} SOHO_PORT_TAG_EGRESS_MODE_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetXCat.h:
typedef struct {
    SNET_DST_INTERFACE_STC egressIf;
    GT_U32 tunnelStart;
    GT_U32 tunnelPtr;
    GT_U32 tunnelPassengerType;
    GT_U32 assignVid0Command;
    GT_U32 egressVlanFilteringEnable;
    GT_U32 assignedEgressTagStateOnlyIfUnassigned;
    GT_U32 egressTagState;
    GT_U32 vid0;
    GT_U32 egressPassangerTagTpidIndex;
} SNET_XCAT_LOGICAL_PORT_MAPPING_STC;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetXCatPcl.h:
typedef enum {DXCH_EPCL_KEY_0_E, DXCH_EPCL_KEY_1_E, DXCH_EPCL_KEY_2_E, DXCH_EPCL_KEY_3_E, DXCH_EPCL_KEY_4_E, DXCH_EPCL_KEY_5_E, DXCH_EPCL_KEY_6_E, DXCH_EPCL_KEY_7_E, DXCH_EPCL_KEY_LAST_E, LION3_EPCL_KEY_TYPE_UBB_10B_E, LION3_EPCL_KEY_TYPE_UBB_20B_E, LION3_EPCL_KEY_TYPE_UBB_30B_E, LION3_EPCL_KEY_TYPE_UBB_40B_E, LION3_EPCL_KEY_TYPE_UBB_50B_E, LION3_EPCL_KEY_TYPE_UBB_60B_E, LION3_EPCL_KEY_TYPE_UBB_60B_NO_FIXED_FIELDS_E, LION3_EPCL_KEY_TYPE_LAST_E} DXCH_EPCL_KEY_ENT;
typedef enum {DXCH_IPCL_KEY_0_E, DXCH_IPCL_KEY_1_E, DXCH_IPCL_KEY_2_E, DXCH_IPCL_KEY_3_E, DXCH_IPCL_KEY_4_E, DXCH_IPCL_KEY_5_E, DXCH_IPCL_KEY_6_E, DXCH_IPCL_KEY_7_E, DXCH_IPCL_KEY_8_E, DXCH_IPCL_KEY_9_E, DXCH_IPCL_KEY_10_E, DXCH_IPCL_KEY_11_E, DXCH_IPCL_KEY_12_E, DXCH_IPCL_KEY_LAST_E} DXCH_IPCL_KEY_ENT;
typedef enum {LION3_EPCL_key_Common_Bits_0_7_PCL_ID_7_0_OR_port_list_7_0_E, LION3_EPCL_key_Common_Bits_8_9_PCL_ID_9_8_E, LION3_EPCL_key_Common_Bits_10_15_Src_Port_5_0_E, LION3_EPCL_key_Common_Bits_16_16_Is_Tagged_E, LION3_EPCL_key_Common_Bits_17_28_VID0_eVLAN_11_0_E, LION3_EPCL_key_Common_Bits_29_31_UP0_E, LION3_EPCL_key_Common_Bits_32_38_Data_Pkt_QoS_Profile_6_0_OR_port_list_13_8_E, LION3_EPCL_key_Common_Bits_32_38_Ctrl_To_CPU_CPU_CODE_6_0_E, 
    LION3_EPCL_key_Common_Bits_32_38_Ctrl_From_CPU_TC_2_0_DP_1_0_E, LION3_EPCL_key_Common_Bits_39_39_Is_IPv4_E, LION3_EPCL_key_Common_Bits_39_39_Is_IPv6_E, LION3_EPCL_key_Common_Bits_40_40_Is_IP_E, LION3_EPCL_key_Common_Bits_41_48_Ip_Protocol_E, LION3_EPCL_key_Common_Bits_49_54_Packet_Dscp_E, LION3_EPCL_key_Common_Bits_55_55_Is_L4_Valid_E, LION3_EPCL_key_Common_Bits_56_63_L4_Header_Byte_3_OR_5_E, LION3_EPCL_key_Common_Bits_64_71_L4_Header_Byte_2_OR_4_E, LION3_EPCL_key_Common_Bits_72_72_Is_ARP_E, 
    LION3_EPCL_key_Common_Bits_72_79_L4_Header_Byte_13_E, LION3_EPCL_key_Common_Bits_80_87_L4_Header_Byte_1_E, LION3_EPCL_key_Common_Bits_88_95_L4_Header_Byte_0_E, LION3_EPCL_key_Common_Bits_96_127_SIP_31_0_E, LION3_EPCL_key_Common_Bits_74_80_Data_Pkt_OR_CtrlToCPU_Src_Trunk_ID_6_0_E, LION3_EPCL_key_Common_Bits_74_80_Data_Pkt_Src_Dev_4_0_E, LION3_EPCL_key_Common_Bits_74_80_Ctrl_To_CPU_Src_Trg_Src_Dev_4_0_E, LION3_EPCL_key_Common_Bits_74_80_From_CPU_Egress_Filter_En_Src_Dev_4_0_E, 
    LION3_EPCL_key_Common_Bits_74_80_To_Analyzer_Rx_Sniff_Src_Dev_4_0_E, LION3_EPCL_key_Common_Bits_81_81_Data_Pkt_OR_Ctrl_To_CPU_Src_Is_Trunk_E, LION3_EPCL_key_Common_Bits_82_86_Source_ID_4_0_E, LION3_EPCL_key_Common_Bits_87_87_Is_Routed_E, LION3_EPCL_key_Common_Bits_88_88_Data_Pkt_Is_Unknown_E, LION3_EPCL_key_Common_Bits_88_88_Ctrl_To_CPU_CPU_CODE_7_E, LION3_EPCL_key_Common_Bits_88_88_From_CPU_Is_Unknown_E, LION3_EPCL_key_Common_Bits_89_89_Is_L2_Valid_E, 
    LION3_EPCL_key_Common_Bits_187_188_Packet_Type_1_0_E, LION3_EPCL_key_Common_Bits_190_190_is_VIDX_E, LION3_EPCL_key_Common_Bits_191_191_Tag_1_Exist_E, LION3_EPCL_key_Common_Bits_192_205_port_list_27_14_E, LION3_EPCL_key0_Bits_41_41_UP1_2_E, LION3_EPCL_key0_Bits_42_57_Ether_Type_or_Dsap_Ssap_E, LION3_EPCL_key0_Bits_58_69_Tag1_VID_E, LION3_EPCL_key0_Bits_70_71_UP1_1_0_E, LION3_EPCL_key0_Bits_90_90_L2_Encap_Type_E, LION3_EPCL_key0_Bits_91_138_MAC_SA_E, LION3_EPCL_key0_Bits_139_186_MAC_DA_E, 
    LION3_EPCL_key0_Bits_189_189_Tag_1_CFI_E, LION3_EPCL_key0_Bits_206_206_User_Defined_Valid_E, LION3_EPCL_key1_Bits_90_97_TCP_UDP_Port_Comparators_E, LION3_EPCL_key1_Bits_98_129_DIP_31_0_E, LION3_EPCL_key1_Bits_130_137_L4_Header_Byte_13_E, LION3_EPCL_key1_Bits_189_189_IPv4_fragmented_E, LION3_EPCL_key2_Bits_73_73_Is_BC_E, LION3_EPCL_key2_Bits_98_129_SIP_31_0_E, LION3_EPCL_key2_Bits_130_161_DIP_31_0_E, LION3_EPCL_key2_Bits_162_169_L4_Header_Byte_13_E, LION3_EPCL_key2_Bits_170_177_L4_Header_Byte_1_E, 
    LION3_EPCL_key2_Bits_178_185_L4_Header_Byte_0_E, LION3_EPCL_key3_Bits_128_159_DIP_31_0_E, LION3_EPCL_key3_Bits_160_160_L2_Encap_Type_E, LION3_EPCL_key3_Bits_161_176_Ether_Type_OR_Dsap_Ssap_E, LION3_EPCL_key3_Bits_177_177_IPv4_fragmented_E, LION3_EPCL_key3_Bits_208_219_Tag1_VID_E, LION3_EPCL_key3_Bits_220_220_Tag1_CFI_E, LION3_EPCL_key3_Bits_221_223_UP1_E, LION3_EPCL_key3_Bits_224_225_Number_of_MPLS_Labels_E, LION3_EPCL_key3_Bits_226_227_Protocol_After_MPLS_E, 
    LION3_EPCL_key3_Bits_228_247_MPLS_Label_1_E, LION3_EPCL_key3_Bits_248_250_MPLS_EXP_1_E, LION3_EPCL_key3_Bits_251_298_MAC_SA_E, LION3_EPCL_key3_Bits_299_346_MAC_DA_E, LION3_EPCL_key3_Bits_347_347_Is_MPLS_E, LION3_EPCL_key3_Bits_348_367_MPLS_Label_0_E, LION3_EPCL_key3_Bits_368_370_MPLS_EXP_0_E, LION3_EPCL_key3_Bits_371_377_Data_Pkt_OR_CtrlToCPU_Src_Trunk_ID_6_0_E, LION3_EPCL_key3_Bits_371_377_Data_Pkt_Src_Dev_4_0_E, LION3_EPCL_key3_Bits_371_377_Ctrl_To_CPU_Src_Trg_Src_Dev_4_0_E, 
    LION3_EPCL_key3_Bits_371_377_From_CPU_Egress_Filter_En_Src_Dev_4_0_E, LION3_EPCL_key3_Bits_371_377_To_Analyzer_Rx_Sniff_Src_Dev_4_0_E, LION3_EPCL_key3_Bits_378_378_Data_Pkt_OR_Ctrl_To_CPU_Src_Is_Trunk_E, LION3_EPCL_key3_Bits_379_383_Source_ID_4_0_E, LION3_EPCL_key3_Bits_384_384_Is_Routed_E, LION3_EPCL_key3_Bits_385_385_Data_Pkt_Is_Unknown_E, LION3_EPCL_key3_Bits_385_385_Ctrl_To_CPU_CPU_CODE_7_E, LION3_EPCL_key3_Bits_385_385_From_CPU_Is_Unknown_E, LION3_EPCL_key3_Bits_386_386_Is_L2_Valid_E, 
    LION3_EPCL_key3_Bits_387_394_TCP_UDP_Port_Comparators_E, LION3_EPCL_key3_Bits_395_396_Src_Port_7_6_E, LION3_EPCL_key3_Bits_397_398_Packet_Type_1_0_E, LION3_EPCL_key3_Bits_399_399_is_VIDX_E, LION3_EPCL_key3_Bits_400_401_Source_Dev_6_5_E, LION3_EPCL_key3_Bits_402_406_Source_Dev_11_7_OR_Trunk_ID_11_7_E, LION3_EPCL_key3_Bits_407_413_Source_ID_11_5_E, LION3_EPCL_key3_Bits_414_414_User_Defined_Valid_E, LION3_EPCL_key4_Bits_128_159_SIP_63_32_E, LION3_EPCL_key4_Bits_160_190_SIP_94_64_E, 
    LION3_EPCL_key4_Bits_208_208_SIP_95_95_E, LION3_EPCL_key4_Bits_209_240_SIP_127_96_E, LION3_EPCL_key4_Bits_241_241_Ipv6_EH_exist_E, LION3_EPCL_key4_Bits_242_242_Is_IPv6_EH_Hop_By_Hop_E, LION3_EPCL_key4_Bits_243_250_DIP_127_120_E, LION3_EPCL_key4_Bits_347_358_Tag1_VID_E, LION3_EPCL_key4_Bits_359_359_Tag1_CFI_E, LION3_EPCL_key4_Bits_360_362_UP1_E, LION3_EPCL_key5_Bits_251_282_DIP_63_32_E, LION3_EPCL_key5_Bits_283_314_DIP_95_64_E, LION3_EPCL_key5_Bits_315_338_DIP_119_96_E, 
    LION3_EPCL_key5_Bits_339_370_DIP_31_0_E, LION3_EPCL_key6_Bits_0_9_PCL_ID_9_0_E, LION3_EPCL_key6_Bits_11_16_Src_Port_5_0_E, LION3_EPCL_key6_Bits_17_23_Data_Pkt_QoS_Profile_6_0_E, LION3_EPCL_key6_Bits_17_23_Ctrl_To_CPU_CPU_CODE_6_0_E, LION3_EPCL_key6_Bits_24_24_Tag1_Exist_E, LION3_EPCL_key6_Bits_25_36_Source_ID_11_0_E, LION3_EPCL_key6_Bits_37_48_VID0_E, LION3_EPCL_key6_Bits_49_50_Src_Port_7_6_E, LION3_EPCL_key6_Bits_51_57_Data_Pkt_OR_CtrlToCPU_Src_Trunk_ID_6_0_E, 
    LION3_EPCL_key6_Bits_51_57_Data_Pkt_Src_Dev_4_0_E, LION3_EPCL_key6_Bits_51_57_Ctrl_To_CPU_Src_Trg_Src_Dev_4_0_E, LION3_EPCL_key6_Bits_51_57_From_CPU_Egress_Filter_En_Src_Dev_4_0_E, LION3_EPCL_key6_Bits_51_57_To_Analyzer_Rx_Sniff_Src_Dev_4_0_E, LION3_EPCL_key6_Bits_58_59_Source_Dev_6_5_E, LION3_EPCL_key6_Bits_60_60_Src_Is_Trunk_E, LION3_EPCL_key6_Bits_61_108_MAC_SA_E, LION3_EPCL_key6_Bits_109_156_MAC_DA_E, LION3_EPCL_key6_Bits_157_157_Is_L2_Valid_E, LION3_EPCL_key6_Bits_158_158_Is_IP_E, 
    LION3_EPCL_key6_Bits_159_166_Ip_Protocol_E, LION3_EPCL_key6_Bits_167_172_Packet_DSCP_E, LION3_EPCL_key6_Bits_173_174_TOS_1_0_E, LION3_EPCL_key6_Bits_175_182_TTL_E, LION3_EPCL_key6_Bits_183_183_Is_ARP_E, LION3_EPCL_key6_Bits_184_191_SIP_7_0_E, LION3_EPCL_key6_Bits_208_231_SIP_31_8_E, LION3_EPCL_key6_Bits_232_263_DIP_31_0_E, LION3_EPCL_key6_Bits_264_271_TCP_UDP_Port_Comparators_E, LION3_EPCL_key6_Bits_272_279_L4_Header_Byte_13_E, LION3_EPCL_key6_Bits_280_287_L4_Header_Byte_1_E, 
    LION3_EPCL_key6_Bits_288_295_L4_Header_Byte_0_E, LION3_EPCL_key6_Bits_296_303_L4_Header_Byte_3_OR_5_E, LION3_EPCL_key6_Bits_304_311_L4_Header_Byte_2_OR_4_E, LION3_EPCL_key6_Bits_312_312_Is_L4_Valid_E, LION3_EPCL_key6_Bits_313_315_From_CPU_TC_E, LION3_EPCL_key6_Bits_316_317_From_CPU_DP_E, LION3_EPCL_key6_Bits_318_319_Packet_Type_E, LION3_EPCL_key6_Bits_320_320_Src_Trg_OR_Tx_Mirror_E, LION3_EPCL_key6_Bits_321_323_Assigned_UP_E, LION3_EPCL_key6_Bits_324_329_Trg_Port_5_0_E, 
    LION3_EPCL_key6_Bits_330_330_Rx_Sniff_E, LION3_EPCL_key6_Bits_331_331_Is_Routed_E, LION3_EPCL_key6_Bits_332_332_Is_IPv6_E, LION3_EPCL_key6_Bits_333_333_Ipv4_Options_E, LION3_EPCL_key6_Bits_334_334_is_VIDX_E, LION3_EPCL_key6_Bits_335_346_Tag1_VID_E, LION3_EPCL_key6_Bits_347_347_Tag1_CFI_E, LION3_EPCL_key6_Bits_348_350_UP1_E, LION3_EPCL_key6_Bits_351_355_Source_Dev_OR_Trunk_11_7_E, LION3_EPCL_key6_Bits_356_357_Trg_Port_7_6_E, LION3_EPCL_key6_Bits_358_358_User_Defined_Valid_E, 
    LION3_EPCL_key7_Bits_333_333_IPv6_EH_exist_E, LION3_EPCL_key7_Bits_334_334_IPv6_Is_ND_E, LION3_EPCL_key7_Bits_335_335_Is_IPv6_EH_Hop_By_Hop_E, LION3_EPCL_key7_Bits_336_367_SIP_63_32_E, LION3_EPCL_key7_Bits_368_399_SIP_95_64_E, LION3_EPCL_key7_Bits_416_447_SIP_127_96_E, LION3_EPCL_key7_Bits_448_479_DIP_63_32_E, LION3_EPCL_key7_Bits_480_511_DIP_95_64_E, LION3_EPCL_key7_Bits_512_543_DIP_127_96_E, LION3_EPCL_key7_Bits_544_544_is_VIDX_E, LION3_EPCL_key7_Bits_545_556_Tag1_VID_E, 
    LION3_EPCL_key7_Bits_557_557_Tag1_CFI_E, LION3_EPCL_key7_Bits_558_560_UP1_E, LION3_EPCL_key7_Bits_561_565_Source_Dev_OR_Trunk_11_7_E, LION3_EPCL_key7_Bits_566_578_SRC_ePort_OR_Trunk_ID_E, LION3_EPCL_key7_Bits_583_595_TRG_ePort_E, LION3_EPCL_key7_Bits_600_600_eVLAN_12_E, LION3_EPCL_key7_Bits_604_605_Trg_Port_7_6_E, LION3_EPCL_key7_Bits_606_606_User_Defined_Valid_E, LION3_EPCL_key60B_EXTRA_10B_Bits_400_409_PCL_ID_E, LION3_EPCL_key60B_EXTRA_10B_Bits_410_410_UDB_Valid_E, 
    LION3_EPCL_key60B_EXTRA_10B_Bits_411_423_eVLAN_E, LION3_EPCL_key60B_EXTRA_10B_Bits_424_436_Source_ePort_or_Trunk_ID_E, LION3_EPCL_key60B_EXTRA_10B_Bits_437_449_Trg_ePort_E, LION3_EPCL_key60B_EXTRA_10B_Bits_450_459_Src_Dev_E, LION3_EPCL_key60B_EXTRA_10B_Bits_460_469_Trg_Dev_E, LION3_EPCL_key60B_EXTRA_10B_Bits_470_477_Local_Dev_Trg_Phy_Port_E, LION3_EPCL_key60B_EXTRA_10B_Bits_470_470_Orig_Src_Is_Trunk_E, LION3_EPCL_key60B_EXTRA_10B_Bits_478_479_Reserved_E, 
    LION3_EPCL_KEY_FIELDS_ID___LAST__E} LION3_EPCL_KEY_FIELDS_ID_ENT;
typedef enum {LION3_key_Common_Bits_0_7_PCL_ID_7_0_OR_port_list_7_0_E, LION3_key_Common_Bits_8_9_PCL_ID_9_8_E, LION3_key_Common_Bits_10_10_MAC2ME_E, LION3_key_Common_Bits_11_16_SrcPort_5_0_OR_port_list_13_8_E, LION3_key_Common_Bits_17_17_IsTagged_E, LION3_key_Common_Bits_18_29_VID0_OR_eVLAN_11_0_E, LION3_key_Common_Bits_30_32_UP0_E, LION3_key_Common_Bits_33_39_QoS_Profile_E, LION3_key_Common_Bits_40_40_IsIPv4_OR_IsFCoE_E, LION3_key_Common_Bits_41_41_IsIP_E, LION3_key_Common_Bits_80_103_MAC_SA_23_0_E, 
    LION3_key_Common_Bits_105_105_IsARP_E, LION3_key_Common_Bits_107_107_Is_L2_Valid_E, LION3_key_Common_Bits_120_143_MAC_SA_47_24_E, LION3_key_Common_Bits_144_191_MAC_DA_E, LION3_key_Common_Bits_192_193_port_list_15_14_OR_SrcPort_7_6_E, LION3_key_Common_Bits_194_205_port_list_27_16_OR_2b0_SrcDev_9_0_E, LION3_key_Common_Bits_42_47_Packet_DSCP_E, LION3_key_Common_Bits_48_55_IpProtocol_E, LION3_key_Common_Bits_64_79_L4_Byte_Offset_3_2_OR_L4_Byte_Offset_5_4_E, LION3_key_Common_Bits_104_104_Is_L4_Valid_E, 
    LION3_key_Common_Bits_108_108_IPv4_fragmented_E, LION3_key_Common_Bits_109_109_IP_Hdr_OK_E, LION3_key0_Bits_42_57_Ethertype_E, LION3_key0_Bits_58_63_Tag1_VID_5_0_E, LION3_key0_Bits_104_104_UP1_0_E, LION3_key0_Bits_108_108_L2_Encapsulation_0_E, LION3_key0_Bits_109_109_L2_Encapsulation_1_E, LION3_key0_Bits_110_111_UP1_2_1_E, LION3_key1_Bits_110_110_Is_IPv6_EH_Exist_E, LION3_key1_Bits_111_111_Is_IPv6_EH_Hop_By_Hop_E, LION3_key2_Bits_80_87_L4_Byte_Offsets_0_E, LION3_key2_Bits_88_95_L4_Byte_Offsets_1_E, 
    LION3_key2_Bits_96_103_L4_Byte_Offsets_13_E, LION3_key2_Bits_110_110_Is_BC_E, LION3_key2_Bits_112_143_SIP_31_0_OR_S_ID_E, LION3_key2_Bits_144_175_DIP_31_0_OR_D_ID_E, LION3_key3_Bits_33_33_Packet_Tagging_1_E, LION3_key3_Bits_34_34_L3_Offset_Invalid_E, LION3_key3_Bits_35_36_L4_Protocol_or_Valid_E, LION3_key3_Bits_37_38_Applicable_Flow_Sub_Template_1_0_E, LION3_key3_Bits_39_39_IP_Hdr_OK_E, LION3_key3_Bits_80_81_MacDaType_E, LION3_key3_Bits_82_82_L4_Offset_Invalid_E, 
    LION3_key3_Bits_83_88_Applicable_Flow_Sub_Template_7_2_E, LION3_key3_Bits_89_90_L2_Encapsulation_E, LION3_key3_Bits_91_91_Is_IPv6_EH_Hop_By_Hop_E, LION3_key3_Bits_92_92_Is_IPv6_EH_Exist_E, LION3_key3_Bits_95_95_Is_L2_Valid_E, LION3_key4_Bits_40_40_IsIPv6_OR_IsFCoE_E, LION3_key4_Bits_64_79_L4_Byte_Offset_3_2_E, LION3_key4_Bits_105_105_L2_Encapsulation_0_E, LION3_key4_Bits_110_110_L2_Encapsulation_1_E, LION3_key4_Bits_176_191_Ethertype_E, LION3_key4_Bits_208_210_UP1_E, LION3_key4_Bits_264_311_MAC_SA_E, 
    LION3_key4_Bits_312_359_MAC_DA_E, LION3_key4_Bits_400_400_Tag1_Exist_E, LION3_key4_Bits_401_412_Tag1_VID_E, LION3_key4_Bits_413_413_Tag1_CFI_E, LION3_key5_Bits_105_105_Is_IPv6_EH_Exist_E, LION3_key5_Bits_108_108_Is_IPv6_EH_Hop_By_Hop_E, LION3_key5_Bits_110_111_UP1_1_0_E, LION3_key5_Bits_144_175_SIP_63_32_E, LION3_key5_Bits_176_191_SIP_79_64_E, LION3_key5_Bits_208_223_SIP_95_80_E, LION3_key5_Bits_224_255_SIP_127_96_E, LION3_key5_Bits_256_263_DIP_127_120_E, LION3_key5_Bits_413_413_UP1_2_E, 
    LION3_key6_Bits_176_191_SIP_47_32_E, LION3_key6_Bits_208_223_SIP_63_48_E, LION3_key6_Bits_224_255_SIP_95_64_E, LION3_key6_Bits_256_287_SIP_127_96_E, LION3_key6_Bits_288_295_DIP_127_120_E, LION3_key6_Bits_296_327_DIP_63_32_E, LION3_key6_Bits_328_359_DIP_95_64_E, LION3_key6_Bits_360_383_DIP_119_96_E, LION3_key7_Bits_17_17_Packet_Tagging_0_E, LION3_key7_Bits_144_175_SIP_31_0_OR_S_ID_E, LION3_key7_Bits_176_191_MAC_SA_15_0_E, LION3_key7_Bits_208_239_MAC_SA_47_32_E, LION3_key7_Bits_240_287_MAC_DA_E, 
    LION3_key7_Bits_288_303_DIP_127_112_E, LION3_key7_Bits_304_335_DIP_31_0_OR_D_ID_E, LION3_key7_Bits_397_399_UP1_E, LION3_key8_Bits_33_38_PacketTOS_OR_DSCP_7_2_E, LION3_key8_Bits_39_39_Is_ARP_E, LION3_key8_Bits_40_40_Is_BC_E, LION3_key8_Bits_42_49_IpProtocol_E, LION3_key8_Bits_50_50_PacketTOS_OR_DSCP_0_E, LION3_key8_Bits_51_52_IP_Fragmented_E, LION3_key8_Bits_53_54_IP_Header_Info_E, LION3_key8_Bits_55_55_Is_L2_Valid_E, LION3_key8_Bits_56_56_Is_L4_Valid_E, LION3_key8_Bits_58_58_PacketTOS_DSCP_1_E, 
    LION3_key8_Bits_288_303_Ethertype_E, LION3_key8_Bits_304_304_L2_Encapsulation_0_E, LION3_key8_Bits_329_329_L2_Encapsulation_1_E, LION3_key8_Bits_333_335_UP1_E, LION3_key8_Bits_336_336_Tag1_Exist_E, LION3_key8_Bits_337_348_Tag1_VID_E, LION3_key8_Bits_349_349_Tag1_CFI_E, LION3_key9_Bits_39_39_L2_Encapsulation_0_E, LION3_key9_Bits_51_51_Is_IPv6_EH_Hop_By_Hop_E, LION3_key9_Bits_52_52_Is_IPv6_EH_Exist_E, LION3_key9_Bits_53_53_Is_ND_E, LION3_key9_Bits_54_54_IP_Hdr_OK_E, 
    LION3_key9_Bits_59_59_L2_Encapsulation_1_E, LION3_key9_Bits_60_63_SRCePort_OR_Trunk_3_0_E, LION3_key9_Bits_304_335_SIP_63_32_E, LION3_key9_Bits_336_367_SIP_95_64_E, LION3_key9_Bits_368_399_SIP_127_96_E, LION3_key9_Bits_400_407_SRCePort_OR_Trunk_11_4_E, LION3_key9_Bits_408_408_OrigSrcIsTrunk_E, LION3_key9_Bits_409_409_eVLAN_12_E, LION3_key9_Bits_411_413_UP1_E, LION3_key9_Bits_416_447_DIP_63_32_E, LION3_key9_Bits_448_479_DIP_95_64_E, LION3_key9_Bits_480_511_DIP_127_96_E, 
    LION3_key9_Bits_608_608_Tag1_Exist_E, LION3_key9_Bits_609_620_Tag1_VID_E, LION3_key9_Bits_621_621_Tag1_CFI_E, LION3_key10_Bits_30_32_UP0_OR_EXP0_E, LION3_key10_Bits_39_41_Pkt_type_E, LION3_key10_Bits_57_62_IP_Packet_Length_5_0_E, LION3_key10_Bits_63_63_PacketTOS_DSCP_1_E, LION3_key10_Bits_176_183_IP_Packet_Length_13_6_E, LION3_key10_Bits_184_191_TTL_E, LION3_key11_Bits_51_54_IP_Packet_Length_3_0_E, LION3_key11_Bits_58_63_SRCePort_OR_Trunk_5_0_E, LION3_key11_Bits_232_232_PacketTOS_DSCP_1_E, 
    LION3_key11_Bits_233_233_Is_ND_E, LION3_key11_Bits_234_253_IPv6_Flow_Label_E, LION3_key11_Bits_254_254_Is_IPv6_Link_local_E, LION3_key11_Bits_255_274_MPLS_Outer_Label_E, LION3_key11_Bits_275_277_MPLS_Outer_Label_EXP_E, LION3_key11_Bits_278_278_MPLS_Outer_Label_S_Bit_E, LION3_key11_Bits_279_286_IP_Packet_Length_11_4_E, LION3_key11_Bits_287_294_TTL_E, LION3_key11_Bits_295_326_SIP_63_32_E, LION3_key11_Bits_327_358_SIP_95_64_E, LION3_key11_Bits_359_390_SIP_127_96_E, LION3_key11_Bits_391_398_DIP_39_32_E, 
    LION3_key11_Bits_399_405_SRCePort_OR_Trunk_12_6_E, LION3_key11_Bits_407_407_OrigSrcIsTrunk_E, LION3_key11_Bits_408_408_eVLAN_12_E, LION3_key11_Bits_409_409_Tag1_Src_Tagged_E, LION3_key11_Bits_410_412_UP1_E, LION3_key11_Bits_416_447_DIP_63_40_E, LION3_key11_Bits_448_479_DIP_95_64_E, LION3_key11_Bits_480_503_DIP_127_96_E, LION3_key11_Bits_504_507_IP_Packet_Length_15_12_E, LION3_key11_Bits_509_509_Is_IPv6_MLD_E, LION3_key11_Bits_510_510_Is_IPv6_EH_Hop_By_Hop_E, 
    LION3_key11_Bits_511_511_Is_IPv6_EH_Exist_E, LION3_key11_Bits_512_512_IP_Hdr_OK_E, LION3_key12_Bits_50_55_DSCP_E, LION3_key12_Bits_57_72_DIP_15_0_E, LION3_key12_Bits_73_73_IsARP_E, LION3_key12_Bits_74_74_Ipv6_EH_exist_E, LION3_key12_Bits_75_90_DIP_31_16_E, LION3_key12_Bits_92_123_DIP_63_32_E, LION3_key12_Bits_124_155_DIP_95_64_E, LION3_key12_Bits_156_187_DIP_127_96_E, LION3_key12_Bits_189_189_isL2Valid_E, LION3_key12_Bits_191_191_IP_Header_OK_E, LION3_key60B_EXTRA_10B_Bits_400_400_UDB_Valid_E, 
    LION3_key60B_EXTRA_10B_Bits_401_410_PCL_ID_E, LION3_key60B_EXTRA_10B_Bits_411_423_eVLAN_E, LION3_key60B_EXTRA_10B_Bits_424_438_Source_ePort_OR_Trunk_id_E, LION3_key60B_EXTRA_10B_Bits_439_439_Src_Dev_Is_Own_E, LION3_key60B_EXTRA_10B_Bits_440_451_Tag1_VID_E, LION3_key60B_EXTRA_10B_Bits_452_454_Tag1_UP_E, LION3_key60B_EXTRA_10B_Bits_455_455_Mac_To_Me_E, LION3_key60B_EXTRA_10B_Bits_456_465_QoS_Profile_E, LION3_key60B_EXTRA_10B_Bits_466_479_Flow_ID_E, HAWK_key80B_EXTRA_10B_Bits_560_583_MAC_SA_23_0_E, 
    HAWK_key80B_EXTRA_10B_Bits_584_607_MAC_SA_24_47_E, HAWK_key80B_EXTRA_10B_Bits_608_627_Ipv6_Flow_Label_E, HAWK_key80B_EXTRA_10B_Bits_608_627_Copy_Reserved_E, HAWK_key80B_EXTRA_10B_Bits_628_628_Mac_2_Me_E, HAWK_key80B_EXTRA_10B_Bits_629_629_Tag0_Src_Tagged_E, HAWK_key80B_EXTRA_10B_Bits_630_630_Tag1_Src_Tagged_E, HAWK_key80B_EXTRA_10B_Bits_631_631_Ipv6_Hbh_Ext_E, HAWK_key80B_EXTRA_10B_Bits_632_639_Packet_Tos_E, LION3_PCL_KEY_FIELDS_ID___LAST__E} LION3_PCL_KEY_FIELDS_ID_ENT;
typedef enum {SNET_LION3_EPCL_ACTION_EGRESS_CNC_INDEX_MODE_HIT_COUNTER_E, SNET_LION3_EPCL_ACTION_EGRESS_CNC_INDEX_MODE_MAX_SDU_PASS_FAIL_E} SNET_LION3_EPCL_ACTION_EGRESS_CNC_INDEX_MODE_ENT;
typedef struct {
    SKERNEL_CH2_EPCL_PACKET_CMD_ENT packetCmd;
    GT_U32 dscpOrExp;
    GT_U32 up0;
    GT_U32 modifyDscpOrExp;
    GT_U32 enableModifyUp0;
    GT_BIT bindToCncCounter;
    GT_U32 cncCounterIndex;
    GT_BIT tag1VidCmd;
    GT_BIT enableModifyUp1;
    GT_U32 tag1Vid;
    GT_U32 up1;
    GT_U32 tag0VlanCmd;
    GT_U32 tag0Vid;
    GT_BIT bindToPolicerCounter;
    GT_BIT bindToPolicerMeter;
    GT_U32 policerIndex;
    GT_U32 flowId;
    GT_BIT epclReservedEnable;
    GT_U32 epclReserved;
    GT_U32 tmQueueId;
    SNET_LION3_PCL_ACTION_OAM_STC oamInfo;
    GT_U32 cpuCode;
    GT_BIT cutThroughTerminate;
    GT_BIT lmuEn;
    GT_U32 lmuProfile;
    GT_U32 egressAnalyzerIndex;
    GT_U32 egressAnalyzerMode;
    GT_BIT phaThreadNumberAssignmentEnable;
    GT_U32 phaThreadId;
    GT_BIT phaMetadataAssignEn;
    GT_U32 phaMetadata;
    GT_BOOL ipfixEnable;
    GT_BOOL enableEgressMaxSduSizeCheck;
    GT_U8 egressMaxSduSizeProfile;
    SNET_LION3_EPCL_ACTION_EGRESS_CNC_INDEX_MODE_ENT egressCncIndexMode;
} SNET_LION3_EPCL_ACTION_STC;
typedef struct {
    SNET_DST_INTERFACE_STC egressInterface;
    GT_BIT VNTL2Echo;
    GT_BIT modifyMacSaEn;
    GT_BIT tunnelStart;
    union {...} tsOrArpInfo;
} SNET_LION3_IPCL_ACTION_REDIRECT_TO_EGRESS_INTERFACE_STC;
typedef struct {
    GT_BIT lookup1Mode;
    GT_BIT lookup2Mode;
    GT_U32 profileIndex;
} SNET_LION3_IPCL_PROFILE_INFO_STC;
typedef struct {
    GT_U32 oamProcessEnable;
    GT_U32 oamProfile;
    GT_U32 ptpTimeStampEnable;
    GT_U32 ptpTimeStampOffsetIndex;
    GT_U32 channelTypeToOpcodeMappingEn;
} SNET_LION3_PCL_ACTION_OAM_STC;
typedef struct {
    SKERNEL_EXT_PACKET_CMD_ENT packetCmd;
    GT_U32 cpuCode;
    GT_U32 mirrorToIngressAnalyzerPort;
    PCL_TTI_ACTION_REDIRECT_CMD_ENT redirectCmd;
    SNET_LION3_IPCL_ACTION_REDIRECT_TO_EGRESS_INTERFACE_STC redirectEgressInfo;
    GT_BIT setEgressFilterRegistered;
    GT_U32 routerLLTIndex;
    GT_U32 vrfId;
    SNET_LION3_IPCL_PROFILE_INFO_STC ipclProfile;
    GT_BIT bindToPolicerMeter;
    GT_BIT bindToPolicerCounter;
    GT_U32 policerIndex;
    GT_U8 macSa[6];
    GT_U32 arpIndex;
    GT_BIT bindToCncCounter;
    GT_U32 cncCounterIndex;
    GT_BIT srcIdSetEn;
    GT_U32 srcId;
    GT_BIT actionStop;
    GT_BIT bypassBridge;
    GT_BIT bypassIngressPipe;
    SKERNEL_PRECEDENCE_ORDER_ENT vidPrecedence;
    GT_BIT enNestedVlan;
    GT_U32 vlanCmd;
    GT_U32 eVid;
    GT_BIT qosProfileMarkingEn;
    SKERNEL_PRECEDENCE_ORDER_ENT qosPrecedence;
    GT_U32 qosProfile;
    GT_U32 modifyDscp;
    GT_U32 modifyUp;
    GT_BIT tcpRstFinMirrorEn;
    GT_BIT modifyMacDaEn;
    GT_U32 tag1Cmd;
    GT_U32 up1Cmd;
    GT_U32 vid1;
    GT_U32 up1;
    GT_U32 flowId;
    GT_BIT setMacToMe;
    GT_BIT assignSrcEPortEnable;
    GT_U32 sourceEPort;
    GT_BIT userAcEnable;
    SNET_LION3_PCL_ACTION_OAM_STC oamInfo;
    GT_BIT lmuEn;
    GT_U32 lmuProfile;
    GT_BIT saLookupEn;
    GT_BIT triggerInterruptEn;
    GT_BOOL copyReservedAssignEnable;
    GT_U32 copyReserved;
    SKERNEL_PBR_MODE_ENT pbrMode;
    GT_BOOL ipfixEnable;
    SKERNEL_VLAN_DEI_CFI_ENT deiCfiTag0UpdateMode;
    SKERNEL_VLAN_DEI_CFI_ENT deiCfiTag1UpdateMode;
    GT_BOOL assignTag1FromUdb;
    GT_BIT triggerCncHashClient;
    GT_U32 genericAction;
} SNET_LION3_PCL_ACTION_STC;
typedef enum {SNET_UDB_CLIENT_TTI_E, SNET_UDB_CLIENT_IPCL_E, SNET_UDB_CLIENT_EPCL_E, SNET_UDB_CLIENT___LAST___E} SNET_UDB_CLIENT_ENT;
typedef struct {
    SNET_CHT3_EPCL_ACTION_STC baseAction;
    GT_BOOL policerMeterEn;
    GT_BOOL policerCountEn;
    GT_U32 policerIndex;
} SNET_XCAT_EPCL_ACTION_STC;
typedef enum {XCAT_IPCL_KEY_TYPE_L2_KEY_SHORT_E, XCAT_IPCL_KEY_TYPE_L2_L3_KEY_SHORT_E, XCAT_IPCL_KEY_TYPE_L3_L4_KEY_SHORT_E, XCAT_IPCL_KEY_TYPE_L2_L3_L4_KEY_LONG_E, XCAT_IPCL_KEY_TYPE_L2_IPV6_KEY_LONG_E, XCAT_IPCL_KEY_TYPE_L4_IPV6_KEY_LONG_E, XCAT_IPCL_KEY_TYPE_IPCL0_IPV4_KEY_LONG_E, XCAT_IPCL_KEY_TYPE_IPCL1_IPV4_KEY_SHORT_E, XCAT_IPCL_KEY_TYPE_IPCL0_IPV6_KEY_TRIPLE_E, XCAT_IPCL_KEY_TYPE_IPCL1_IPV6_KEY_TRIPLE_E, XCAT_IPCL_KEY_TYPE_IPV6_DIP_KEY_SHORT_E, XCAT_IPCL_KEY_TYPE_UDB_KEY_SHORT_E, 
    XCAT_IPCL_KEY_TYPE_UDB_KEY_LONG_E, XCAT_IPCL_KEY_TYPE_LAST_E, LION3_IPCL_KEY_TYPE_UBB_10B_E, LION3_IPCL_KEY_TYPE_UBB_20B_E, LION3_IPCL_KEY_TYPE_UBB_30B_E, LION3_IPCL_KEY_TYPE_UBB_40B_E, LION3_IPCL_KEY_TYPE_UBB_50B_E, LION3_IPCL_KEY_TYPE_UBB_60B_E, LION3_IPCL_KEY_TYPE_UBB_60B_NO_FIXED_FIELDS_E, LION3_IPCL_KEY_TYPE_UBB_80B_E, LION3_IPCL_KEY_TYPE_LAST_E} SNET_XCAT_IPCL_KEY_TYPE_ENT;
typedef struct {
    SNET_CHT3_PCL_ACTION_STC baseAction;
    GT_U32 arpPointer;
    GT_U32 ipclProfileIndex;
    GT_BOOL policerCounterEn;
    GT_BOOL bypassBridge;
    GT_BOOL bypassIngressPipe;
    GT_U32 policy2LookUpMode;
    GT_U32 policy1LookUpMode;
    GT_U32 tcpRstFinMirrorEn;
    GT_BOOL macHeaderModifyEn;
    SNET_XCAT_TTI_ASSIGN_LOGIC_PORT_ACTION_STC srcLogicPortInfo;
    GT_U32 genericAction;
    SNET_XCAT_PCL_ACTION_VPLS_SUPPORT_STC vplsInfo;
} SNET_XCAT_PCL_ACTION_STC;
typedef enum {SNET_XCAT_PCL_UDB_MUX_NONE_E, SNET_XCAT_PCL_UDB_MUX_VRF_LSB_E, SNET_XCAT_PCL_UDB_MUX_VRF_MSB_E, SNET_XCAT_PCL_UDB_MUX_QOS_E, SNET_XCAT_PCL_UDB_MUX_TAG1_INFO_E, SNET_XCAT_PCL_UDB_MUX_FLOW_ID_BYTE_0_E, SNET_XCAT_PCL_UDB_MUX_FLOW_ID_BYTE_1_E} SNET_XCAT_PCL_UDB_MUX_MODES_ENT;
typedef enum {XCAT_PCL_KEY_FIELDS_ID_PCL_ID_E, XCAT_PCL_KEY_FIELDS_ID_PORT_LIST_7_0_E, XCAT_PCL_KEY_FIELDS_ID_MAC_TO_ME_E, XCAT_PCL_KEY_FIELDS_ID_SRC_PORT_E, XCAT_PCL_KEY_FIELDS_ID_PORT_LIST_13_8_E, XCAT_PCL_KEY_FIELDS_ID_IS_TAGGED_E, XCAT_PCL_KEY_FIELDS_ID_VID_E, XCAT_PCL_KEY_FIELDS_ID_UP_E, XCAT_PCL_KEY_FIELDS_ID_QOS_PROFILE_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV4_E, XCAT_PCL_KEY_FIELDS_ID_IS_IP_E, XCAT_PCL_KEY_FIELDS_ID_DSCP_E, XCAT_PCL_KEY_FIELDS_ID_IP_PROTOCOL_E, 
    XCAT_PCL_KEY_FIELDS_ID_STD_KEY_MAC_SA_23_0_E, XCAT_PCL_KEY_FIELDS_ID_STD_KEY_IS_ARP_E, XCAT_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_E, XCAT_PCL_KEY_FIELDS_ID_IS_L2_VALID_E, XCAT_PCL_KEY_FIELDS_ID_STD_KEY_MAC_SA_47_24_E, XCAT_PCL_KEY_FIELDS_ID_STD_KEY_MAC_DA_E, XCAT_PCL_KEY_FIELDS_ID_PORT_LIST_27_14_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_55_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_58_63_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_59_63_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_104_E, 
    XCAT_PCL_KEY_FIELDS_ID_RESERVED_109_111_XCAT2_110_111_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_110_111_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_111_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_188_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_190_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_192_247_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_313_319_E, XCAT_PCL_KEY_FIELDS_ID_RESERVED_475_E, XCAT_PCL_KEY_FIELDS_ID_KEY0_ETHER_TYPE_DSAP_SSAP_E, XCAT_PCL_KEY_FIELDS_ID_KEY0_UDB_15_E, XCAT_PCL_KEY_FIELDS_ID_KEY0_UDB_16_E, 
    XCAT_PCL_KEY_FIELDS_ID_KEY0_ENCAP_TYPE_E, XCAT_PCL_KEY_FIELDS_ID_KEY0_UDB_17_E, XCAT_PCL_KEY_FIELDS_ID_UDB_18_E, XCAT_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_3_2_E, XCAT_PCL_KEY_FIELDS_ID_IS_L4_VALID_E, XCAT_PCL_KEY_FIELDS_ID_IPV4_FRAGMENT_E, XCAT_PCL_KEY_FIELDS_ID_IP_HEADER_OK_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_E, XCAT_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_HOP_BY_HOP_E, XCAT_PCL_KEY_FIELDS_ID_UDB_19_E, XCAT_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_13_1_0_E, XCAT_PCL_KEY_FIELDS_ID_IS_BC_E, 
    XCAT_PCL_KEY_FIELDS_ID_SIP_31_0_E, XCAT_PCL_KEY_FIELDS_ID_DIP_31_0_E, XCAT_PCL_KEY_FIELDS_ID_UDB_21_KEY2_E, XCAT_PCL_KEY_FIELDS_ID_UDB_22_KEY2_E, XCAT_PCL_KEY_FIELDS_ID_IS_PRIORITY_TAGGED_E, XCAT_PCL_KEY_FIELDS_ID_L3_OFFSET_INVALID_E, XCAT_PCL_KEY_FIELDS_ID_L4_PROTOCOL_OR_VALID_E, XCAT_PCL_KEY_FIELDS_ID_APPLICABLE_FLOW_SUB_TEMPLATE_1_0_E, XCAT_PCL_KEY_FIELDS_ID_IP_HEADER_OK_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_UDB_0_2_5_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_MAC_DA_TYPE_E, 
    XCAT_PCL_KEY_FIELDS_ID_L4_OFFSET_INVALID_E, XCAT_PCL_KEY_FIELDS_ID_APPLICABLE_FLOW_SUB_TEMPLATE_7_2_E, XCAT_PCL_KEY_FIELDS_ID_L2_ENCAP_0_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_IS_L2_VALID_KEY3_E, XCAT_PCL_KEY_FIELDS_ID_KEY3_UDB_3_4_6_15_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_E, XCAT_PCL_KEY_FIELDS_ID_UDB_5_E, XCAT_PCL_KEY_FIELDS_ID_ENCAP_TYPE_LONG_E, 
    XCAT_PCL_KEY_FIELDS_ID_ETHERTYPE_E, XCAT_PCL_KEY_FIELDS_ID_MAC_SA_E, XCAT_PCL_KEY_FIELDS_ID_MAC_DA_KEY4_E, XCAT_PCL_KEY_FIELDS_ID_UDB_1_E, XCAT_PCL_KEY_FIELDS_ID_UDB_0_4_3_2_E, XCAT2_PCL_KEY_FIELDS_ID_ENCAP_1_KEY4_E, XCAT_PCL_KEY_FIELDS_ID_UDB_11_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_LONG_E, XCAT_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_HOP_BY_HOP_KEY5_E, XCAT_PCL_KEY_FIELDS_ID_SIP_31_0_KEY5_E, XCAT_PCL_KEY_FIELDS_ID_SIP_63_32_KEY5_E, XCAT_PCL_KEY_FIELDS_ID_SIP_95_64_KEY5_E, 
    XCAT_PCL_KEY_FIELDS_ID_SIP_127_96_KEY5_E, XCAT_PCL_KEY_FIELDS_ID_DIP_127_120_E, XCAT_PCL_KEY_FIELDS_ID_UDB_6_E, XCAT_PCL_KEY_FIELDS_ID_UDB_10_9_8_7_E, XCAT2_PCL_KEY_FIELDS_ID_SIP_79_64_KEY5_E, XCAT2_PCL_KEY_FIELDS_ID_SIP_95_80_KEY5_E, XCAT_PCL_KEY_FIELDS_ID_UDB_14_E, XCAT_PCL_KEY_FIELDS_ID_SIP_63_32_KEY6_E, XCAT_PCL_KEY_FIELDS_ID_SIP_95_64_KEY6_E, XCAT_PCL_KEY_FIELDS_ID_SIP_127_96_KEY6_E, XCAT_PCL_KEY_FIELDS_ID_DIP_127_120_KEY6_E, XCAT_PCL_KEY_FIELDS_ID_DIP_63_32_E, XCAT_PCL_KEY_FIELDS_ID_DIP_95_64_E, 
    XCAT_PCL_KEY_FIELDS_ID_DIP_119_96_E, XCAT_PCL_KEY_FIELDS_ID_UDB_12_KEY6_E, XCAT_PCL_KEY_FIELDS_ID_UDB_13_E, XCAT2_PCL_KEY_FIELDS_ID_SIP_47_32_KEY6_E, XCAT2_PCL_KEY_FIELDS_ID_SIP_63_48_KEY6_E, XCAT_PCL_KEY_FIELDS_ID_UDB_1_2_5_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_UDB_3_4_6_9_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_SIP_31_0_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_SIP_63_32_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_SIP_95_64_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_SIP_127_96_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_MAC_SA_KEY7_E, 
    XCAT_PCL_KEY_FIELDS_ID_MAC_DA_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_DIP_127_112_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_DIP_31_0_KEY7_E, XCAT_PCL_KEY_FIELDS_ID_UDB_0_15__10_KEY7_E, XCAT2_PCL_KEY_FIELDS_ID_MAC_SA_15_0_KEY7_E, XCAT2_PCL_KEY_FIELDS_ID_MAC_SA_47_16_KEY7_E, XCAT2_PCL_KEY_FIELDS_ID_SIP_47_32_KEY7_E, XCAT2_PCL_KEY_FIELDS_ID_SIP_63_48_KEY7_E, XCAT_PCL_KEY_FIELDS_PCKT_TOS_2_7_E, XCAT_PCL_KEY_FIELDS_ID_IS_ARP_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_IS_BC_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_IP_PROTOCOL_KEY8_E, 
    XCAT_PCL_KEY_FIELDS_PCKT_TOS_0_E, XCAT_PCL_KEY_FIELDS_IP_FRAGMENTED_E, XCAT_PCL_KEY_FIELDS_IP_HEADER_INFO_E, XCAT_PCL_KEY_FIELDS_ID_IS_L2_VALID_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_IS_L4_VALID_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_KEY8_E, XCAT_PCL_KEY_FIELDS_PCKT_TOS_1_E, XCAT_PCL_KEY_FIELDS_ID_UDB_13_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_MAC_SA_15_0_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_MAC_SA_47_16_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_MAC_DA_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_ETHERTYPE_KEY8_E, 
    XCAT_PCL_KEY_FIELDS_ID_L2_ENCAP_0_E, XCAT_PCL_KEY_FIELDS_ID_UDB_16_14_E, XCAT_PCL_KEY_FIELDS_ID_UDB_12_6_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_UDB_5_KEY8_E, XCAT_PCL_KEY_FIELDS_ID_L2_ENCAP_0_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_IS_ND_E, XCAT_PCL_KEY_FIELDS_IP_HEADER_OK_E, XCAT_PCL_KEY_FIELDS_ID_UDB_12_E, XCAT_PCL_KEY_FIELDS_ID_SIP_63_32_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_SIP_95_64_KEY9_E, 
    XCAT_PCL_KEY_FIELDS_ID_SIP_127_96_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_DIP_63_32_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_DIP_95_64_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_DIP_127_96_KEY9_E, XCAT_PCL_KEY_FIELDS_ID_UDB_11_0_KEY9_E, XCAT_PCL_KEY_FIELDS_PCKT_TYPE_E, XCAT_PCL_KEY_FIELDS_IP_PCKT_LEN_5_0_E, XCAT_PCL_KEY_FIELDS_PCKT_TOS_1_KEY10_E, XCAT_PCL_KEY_FIELDS_ID_UDB_5_KEY10_E, XCAT_PCL_KEY_FIELDS_IP_PCKT_LEN_13_6_E, XCAT_PCL_KEY_FIELDS_ID_TTL_0_2_E, XCAT_PCL_KEY_FIELDS_ID_TTL_3_7_E, XCAT_PCL_KEY_FIELDS_IP_PCKT_LEN_3_0_E, 
    XCAT_PCL_KEY_FIELDS_ID_UDB_18_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_UDB_19_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_UDB_17_22_21_20_E, XCAT_PCL_KEY_FIELDS_PCKT_TOS_1_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_IS_ND_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_IPV6_HEADER_FLOW_LBL_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_LINK_LOCAL_E, XCAT_PCL_KEY_FIELDS_ID_MPLS_OUTER_LBL_E, XCAT_PCL_KEY_FIELDS_ID_MPLS_OUTER_LBL_EXP_E, XCAT_PCL_KEY_FIELDS_ID_MPLS_OUTER_LBL_S_BIT_E, XCAT_PCL_KEY_FIELDS_IP_PCKT_LEN_11_4_E, XCAT_PCL_KEY_FIELDS_ID_TTL_E, 
    XCAT_PCL_KEY_FIELDS_ID_SIP_63_32_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_SIP_95_64_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_SIP_127_96_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_DIP_63_32_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_DIP_95_64_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_DIP_127_96_KEY11_E, XCAT_PCL_KEY_FIELDS_IP_PCKT_LEN_15_12_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_MLD_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_KEY11_E, XCAT_PCL_KEY_FIELDS_ID_IP_HEADER_OK_KEY11_E, 
    XCAT_PCL_KEY_FIELDS_PCKT_DSCP_E, XCAT_PCL_KEY_FIELDS_ID_DIP_15_0_E, XCAT_PCL_KEY_FIELDS_ID_IS_ARP_KEY12_E, XCAT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_KEY12_E, XCAT_PCL_KEY_FIELDS_ID_DIP_31_16_E, XCAT_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_HOP_BY_HOP_KEY12_E, XCAT_PCL_KEY_FIELDS_ID_DIP_63_32_KEY12_E, XCAT_PCL_KEY_FIELDS_ID_DIP_95_64_KEY12_E, XCAT_PCL_KEY_FIELDS_ID_DIP_127_96_KEY12_E, XCAT_PCL_KEY_FIELDS_ID_IS_L2_VALID_KEY12_E, XCAT_PCL_KEY_FIELDS_IP_HEADER_OK_KEY12_E} XCAT_PCL_KEY_FIELDS_ID_ENT;

File simulation/simDevices/h/asicSimulation/SKernel/suserframes/snetXCatPolicer.h:
typedef struct {
    GT_BOOL valid;
    GT_U32 envelopeSize;
    GT_U32 envelopeBaseIndex;
    GT_U32 packetRank;
    GT_U32 *meterCfgEntryPtr;
    GT_U32 *meterConformSignLevelPtr;
    GT_U32 meterGreenBucketNumber;
    GT_U32 meterGreenBucketEntryIndex;
    GT_U32 *meterGreenBucketEntryPtr;
    GT_U32 meterYellowBucketNumber;
    GT_U32 meterYellowBucketEntryIndex;
    GT_U32 *meterYellowBucketEntryPtr;
} SNET_LION3_POLICER_METERING_DATA_STC;
typedef enum {SNET_LION3_POLICER_METERING_MODE_SrTCM_E, SNET_LION3_POLICER_METERING_MODE_TrTCM_E, SNET_LION3_POLICER_METERING_MODE_MEF0_E, SNET_LION3_POLICER_METERING_MODE_MEF1_E, SNET_LION3_POLICER_METERING_MODE_MEF10_3_START_E, SNET_LION3_POLICER_METERING_MODE_MEF10_3_NOT_START_E} SNET_LION3_POLICER_METERING_MODE_ENT;
typedef enum {SNET_LION3_POLICER_PACKET_SIZE_FROM_METER_ENTRY_E, SNET_LION3_POLICER_PACKET_SIZE_FROM_BILLING_ENTRY_E, SNET_LION3_POLICER_PACKET_SIZE_FROM_GLOBAL_CONFIG_E} SNET_LION3_POLICER_PACKET_SIZE_MODE_ENT;
typedef enum {SNET_XCAT_POLICER_IPFIX_DROP_PKTS_COUNT_E, SNET_XCAT_POLICER_IPFIX_GOOD_PKTS_COUNT_E, SNET_XCAT_POLICER_IPFIX_BYTES_COUNT_E, SNET_XCAT_POLICER_IPFIX_UNKNOWN_COUNT_E} SNET_XCAT_POLICER_IPFIX_COUNT_E;

File simulation/simDevices/h/common/SBUF/sbuf.h:
typedef enum {UNICAST_MAC, MULTICAST_MAC, BROADCAST_MAC} GT_MAC_TYPE;
typedef enum {GT_REGULAR_PCKT, GT_CONTROL_PCKT = 7} GT_PCKT_ENCAP;
typedef enum {CONTROL = 1, CONTROL_BPDU = 16, CONTROL_DEST_MAC_TRAP, CONTROL_SRC_MAC_TRAP, CONTROL_SRC_DST_MAC_TRAP, CONTROL_MAC_RANGE_TRAP, RX_SNIFFER_TRAP, INTERVENTION_ARP = 32, INTERVENTION_IGMP, INTERVENTION_SA, INTERVENTION_DA, INTERVENTION_SA_DA, INTERVENTION_PORT_LOCK, RESERVED_SIP_TRAP = 128, INTERNAL_SIP_TRAP, SIP_SPOOF_TRAP, DEF_KEY_TRAP = 132, IP_CLASS_TRAP, CLASS_KEY_TRAP, TCP_RST_FIN_TRAP, CLASS_KEY_MIRROR, RESERVED_DIP_TRAP = 144, MC_BOUNDARY_TRAP, INTERNAL_DIP, IP_ZERO_TTL_TRAP, 
    BAD_IP_HDR_CHECKSUM, RPF_CHECK_FAILED, OPTIONS_IN_IP_HDR, END_OF_IP_TUNNEL, BAD_TUNNEL_HDR, IP_HDR_ERROR, ROUTE_ENTRY_TRAP, IP_MTU_EXCEED = 161, MPLS_MTU_EXCEED, CLASS_MTU_EXCEED, MPLS_ZERO_TTL_TRAP = 171, NHLFE_ENTRY_TRAP, ILLEGAL_POP, INVALID_MPLS_IF, ETH_BRIDGED_LLT = 248, IPV4_ROUTED_LLT, UC_MPLS_LLT, MC_MPLS_LLT, IPV6_ROUTED_LLT, L2CE_LLT} GT_RX_CPU_CODE;
typedef struct {
    union {...} target;
    SBUF_FA_FORWARD_TYPE_ENT targetType;
    GT_U32 ingressFport;
} SAPI_FA_FORWARD_DESC_STC;
typedef struct {
    GT_U32 local_ingress_port;
    GT_U32 ingress_is_trunk;
    GT_U32 ingress_trunk;
    GT_BOOL from_stack_port;
    GT_U32 actual_ingress_port_trunk;
    GT_U32 actual_ingress_device;
    GT_BOOL is_tagged;
    GT_RX_CPU_CODE opcode;
    GT_U16 vlan_id;
    GT_U8 user_priority;
    GT_U8 rxQueue;
    GT_U32 frameType;
} SAPI_RX_PACKET_DESC_STC;
typedef struct {
    GT_BOOL uplinkPort;
    GT_U8 srcPort;
} SAPI_SLAN_DESC_STC;
typedef struct {
    GT_U8 userPrioTag;
    GT_BOOL packetTagged;
    GT_BOOL sendTagged;
    GT_PCKT_ENCAP packetEncap;
    GT_U8 dropPrecedence;
    GT_BOOL recalcCrc;
    GT_U16 vid;
    GT_MAC_TYPE macDaType;
    GT_U8 txQueue;
    GT_U8 txDevice;
    GT_PTR cookie;
    GT_BOOL useVidx;
    SAPI_VIDX_UNT dest;
} SAPI_TX_PACKET_DESC_STC;
typedef struct {
    SAPI_UPLINK_DATA_TYPE_ENT type;
    union {...} info;
} SAPI_UPLINK_DATA_STC;
typedef enum {SAPI_UPLINK_DATA_TYPE_FRAME_E, SAPI_UPLINK_DATA_TYPE_FDB_UPDATE_E} SAPI_UPLINK_DATA_TYPE_ENT;
typedef struct {
    GT_U32 reserved;
} SAPI_UPLINK_FDB_UPDATE_STC;
typedef struct {
    GT_MAC_TYPE macDaType;
    GT_BOOL useVidx;
    SAPI_VIDX_UNT dest;
    GT_BOOL doTrapToMaster;
} SAPI_UPLINK_FRAME_STC;
typedef union {
    GT_U16 vidx;
    struct {...} devPort;
} SAPI_VIDX_UNT;
typedef enum {SBUF_BUFFER_STATE_ALLOCATOR_CAN_FREE_E, SBUF_BUFFER_STATE_OTHER_WILL_FREE_E} SBUF_BUFFER_FREE_STATE_ENT;
typedef SBUF_BUF_STC * SBUF_BUF_ID;
typedef enum {SBUF_BUF_STATE_FREE_E, SBUF_BUF_STATE_BUZY_E} SBUF_BUF_STATE_ENT;
typedef struct SBUF_BUF_STCT SBUF_BUF_STC;
struct SBUF_BUF_STCT;
typedef enum {SBUF_FA_FORWARD_TYPE_NONE_E, SBUF_FA_FORWARD_TYPE_UC_FRAME_E, SBUF_FA_FORWARD_TYPE_MC_FRAME_E, SBUF_FA_FORWARD_TYPE_BC_FRAME_E, SBUF_FA_FORWARD_TYPE_EGRESS_FPORT_E, SBUF_FA_FORWARD_TYPE_EGRESS_CPU_E, SBUF_FA_FORWARD_TYPE_LAST_E} SBUF_FA_FORWARD_TYPE_ENT;
typedef void * SBUF_POOL_ID;
typedef struct {
    SBUF_USER_INFO_TYPE_ENT type;
    union {...} data;
    union {...} target;
    GT_U32 extValue;
} SBUF_USER_INFO_STC;
typedef enum {SBUF_USER_INFO_TYPE_SAPI_TX_E = 1, SBUF_USER_INFO_TYPE_SAPI_RX_E, SBUF_USER_INFO_TYPE_SAPI_LINK_CHANGE_E, SBUF_USER_INFO_TYPE_SAPI_FDB_MSG_E, SBUF_USER_INFO_TYPE_SAPI_RW_REQUEST_E, SBUF_USER_INFO_TYPE_SAPI_FA_FORWARD_E, SAPI_USER_INFO_TYPE_SAPI_UPLINK_DATA_E, SAPI_USER_INFO_TYPE_SAPI_MAC_ACTION_ENDED_E, SAPI_USER_INFO_TYPE_SAPI_TX_SDMA_QUE_BMP_E} SBUF_USER_INFO_TYPE_ENT;

File simulation/simDevices/h/common/Utils/FrameInfo/sframeInfoAddr.h:
typedef union {
    GT_U8 bytes[6];
    SGT_MAC_ADDR_WORDS_STC w;
} SGT_MAC_ADDR_UNT;
typedef struct {
    GT_U32 word1;
    GT_U16 hword2;
} SGT_MAC_ADDR_WORDS_STC;

File simulation/simDevices/h/common/Utils/PresteraHash/smacHash.h:
typedef enum {GT_MAC_SQN_VLAN_SQN, GT_MAC_RND_VLAN_SQN, GT_MAC_SQN_VLAN_RND, GT_MAC_RND_VLAN_RND} GT_ADDR_LOOKUP_MODE;
typedef enum {GT_OLD_MAC_HASH_FUNCTION, GT_NEW_MAC_HASH_FUNCTION} GT_MAC_HASH_KIND;
typedef enum {GT_IVL = 1, GT_SVL} GT_MAC_VL;
typedef struct {
    GT_ETHERADDR macMask;
    GT_MAC_VL vlanMode;
    GT_U8 vidShift;
    GT_U16 vidMask;
    GT_U8 macShift;
    GT_ADDR_LOOKUP_MODE addressMode;
    SGT_MAC_TBL_SIZE size;
    GT_U32 macChainLen;
    GT_MAC_HASH_KIND macHashKind;
} SGT_MAC_HASH;
typedef enum {SGT_MAC_TBL_8K, SGT_MAC_TBL_16K, SGT_MAC_TBL_4K} SGT_MAC_TBL_SIZE;

File simulation/simDevices/h/common/Utils/PresteraHash/smacHashDx.h:
typedef enum {CRC_INIT_VALUE_MODE_FORCE_ALL_ONE___64K_ALL_ZER0__E, CRC_INIT_VALUE_MODE_FORCE_ALL_ONE_E, CRC_INIT_VALUE_MODE_FORCE_ALL_ZERO_E} CRC_INIT_VALUE_MODES_ENT;
typedef enum {SNET_CHEETAH_FDB_CRC_HASH_UPPER_BITS_MODE_ALL_ZERO_E, SNET_CHEETAH_FDB_CRC_HASH_UPPER_BITS_MODE_FID_E, SNET_CHEETAH_FDB_CRC_HASH_UPPER_BITS_MODE_MAC_E} SNET_CHEETAH_FDB_CRC_HASH_UPPER_BITS_MODE_ENT;
typedef enum {SNET_CHEETAH_FDB_ENTRY_MAC_E, SNET_CHEETAH_FDB_ENTRY_IPV4_IPMC_BRIDGING_E, SNET_CHEETAH_FDB_ENTRY_IPV6_IPMC_BRIDGING_E, SNET_CHEETAH_FDB_ENTRY_IPV4_UC_ROUTING_E, SNET_CHEETAH_FDB_ENTRY_IPV6_UC_ROUTING_KEY_E, SNET_CHEETAH_FDB_ENTRY_IPV6_UC_ROUTING_DATA_E, SNET_CHEETAH_FDB_ENTRY_FCOE_UC_ROUTING_E, SNET_CHEETAH_FDB_ENTRY_HSU_PRP_DDE_E} SNET_CHEETAH_FDB_ENTRY_ENT;
typedef struct {
    SNET_CHEETAH_FDB_ENTRY_ENT entryType;
    GT_U16 origFid;
    GT_U16 fid;
    GT_BIT fdbLookupKeyMode;
    GT_U32 vid1;
    GT_BIT fid16BitHashEn;
    CRC_INIT_VALUE_MODES_ENT crcInitValueMode;
    union {...} info;
} SNET_CHEETAH_FDB_ENTRY_HASH_INFO_STC;

File simulation/simDevices/h/common/Utils/PresteraHash/smacHashExactMatch.h:
typedef enum {SIP6_EXACT_MATCH_MHT_4_E, SIP6_EXACT_MATCH_MHT_8_E, SIP6_EXACT_MATCH_MHT_16_E, SIP6_EXACT_MATCH_MHT_LAST_E} SIP6_EXACT_MATCH_MHT_ENT;
typedef enum {SIP6_EXACT_MATCH_TABLE_SIZE_4KB, SIP6_EXACT_MATCH_TABLE_SIZE_8KB, SIP6_EXACT_MATCH_TABLE_SIZE_16KB, SIP6_EXACT_MATCH_TABLE_SIZE_32KB, SIP6_EXACT_MATCH_TABLE_SIZE_64KB, SIP6_EXACT_MATCH_TABLE_SIZE_128KB, SIP6_EXACT_MATCH_TABLE_SIZE_256KB, SIP6_EXACT_MATCH_TABLE_SIZE_512KB, SIP6_EXACT_MATCH_TABLE_SIZE_LAST_E} SIP6_EXACT_MATCH_TABLE_SIZE_ENT;

File simulation/simDevices/h/gmSimulation/GM/GMApi.h:
typedef void (*)() gm_interrupt_callback;
typedef void (*)(unsigned int, unsigned char *, unsigned int) gm_read_memory_buffer;
typedef void (*)(unsigned int, unsigned char *, unsigned int) gm_write_memory_buffer;

File simulation/simDevices/h/gmSimulation/GM/GmInitInterfaceAPI.h:
typedef struct {
    ppInterruptCallBack pfInterruptCallBack;
    ppWriteMemoryBufferToCPU pfWriteMemoryBufferToCPU;
    ppReadMemoryBufferFromCPU pfReadMemoryBufferFromCPU;
    ppGetPacketFromPort pfGetPacketFromPort;
    ppGetCellFromPort pfGetCellFromPort;
} CALLBACKS_SERVICE;
typedef void (*)(unsigned int, unsigned int, unsigned int, const char *, unsigned int) ppGetCellFromPort;
typedef void (*)(unsigned int, unsigned int, unsigned int, const char *, unsigned int) ppGetPacketFromPort;
typedef void (*)(unsigned int, unsigned int) ppInterruptCallBack;
typedef void (*)(unsigned int, unsigned int, unsigned int, char *, unsigned int) ppReadMemoryBufferFromCPU;
typedef void (*)(unsigned int, unsigned int, unsigned int, char *, unsigned int) ppWriteMemoryBufferToCPU;

File simulation/simDevices/h/gmSimulation/GM/gmTrafficApi.h:
typedef void (*)(unsigned int, unsigned int, unsigned char *, unsigned int) gm_receive_packet_callback;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/h/cm3BootChannel.h:
typedef enum {MICRO_INIT_BOOT_CH_BOOT_INIT_STATE_IN_PROGRESS_E = 1, MICRO_INIT_BOOT_CH_BOOT_INIT_STATE_DONE_E, MICRO_INIT_BOOT_CH_BOOT_INIT_STATE_FAILED_E} CM3_MICRO_INIT_BOOT_CH_BOOT_STATE_ENT;
typedef enum {CM3_SIM_IPC_SHM_DATA_REGION_BC_HEADER_E, CM3_SIM_IPC_SHM_DATA_REGION_BC_DATA_E, CM3_SIM_IPC_SHM_DATA_REGION_REGISTERS_E, CM3_SIM_IPC_SHM_DATA_REGION_MAGIC_E, CM3_SIM_IPC_SHM_DATA_REGION_SIZE_E, CM3_SIM_IPC_SHM_DATA_REGION_HEAP_E} CM3_SIM_IPC_SHM_DATA_REGION;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/h/cm3FileCommon.h:
typedef struct BOOTONP_image_file_STCT BOOTONP_image_file_STC;
struct BOOTONP_image_file_STCT;
typedef struct BOOTONP_image_header_STCT BOOTONP_image_header_STC;
struct BOOTONP_image_header_STCT;
typedef enum {CM3_SIM_PP_FAMILY_DXCH_FALCON_E, CM3_SIM_PP_FAMILY_DXCH_AC5P_E, CM3_SIM_PP_FAMILY_DXCH_AC5X_E, CM3_SIM_PP_FAMILY_DXCH_HARRIER_E} CM3_SIM_PP_FAMILY_TYPE_ENT;
typedef enum {CM3_FW, EPROM, script, AVAGO_FW_sbus, AVAGO_FW_spico, micro_init, ignored, AVAGO_FW_swap, PHY_FW, PHA_FW, HA_THR_PC, OPTIONS, DIAG, AP_FW} file_type;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/h/cm3FileOps.h:
typedef struct file_params_STCT file_params_STC;
struct file_params_STCT;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/h/cm3NetPort.h:
typedef enum {_100Base_FX, SGMII, _1000Base_X, SGMII2_5, QSGMII, _10GBase_KX4, _10GBase_KX2, _10GBase_KR, _20GBase_KR2, _40GBase_KR, _100GBase_KR10, HGL, RHGL, CHGL, RXAUI, _20GBase_KX4, _10GBase_SR_LR, _20GBase_SR_LR2, _40GBase_SR_LR, _12_1GBase_KR, XLHGL_KR4, HGL16G, HGS, HGS4, _100GBase_SR10, CHGL_LR12, TCAM, INTLKN_12Lanes_6_25G, INTLKN_16Lanes_6_25G, INTLKN_24Lanes_6_25G, INTLKN_12Lanes_10_3125G, INTLKN_16Lanes_10_3125G, INTLKN_12Lanes_12_5G, INTLKN_16Lanes_12_5G, INTLKN_16Lanes_3_125G, 
    INTLKN_24Lanes_3_125G, CHGL11_LR12, INTLKN_4Lanes_3_125G, INTLKN_8Lanes_3_125G, INTLKN_4Lanes_6_25G, INTLKN_8Lanes_6_25G, _2_5GBase_QX, _5GBase_DQX, _5GBase_HX, _12GBaseR, _5_625GBaseR, _48GBaseR, _12GBase_SR, _48GBase_SR, _5GBaseR, _22GBase_SR, _24GBase_KR2, _12_5GBase_KR, _25GBase_KR2, _50GBase_KR4, _25GBase_KR, _50GBase_KR2, _100GBase_KR4, _25GBase_SR, _50GBase_SR2, _100GBase_SR4, _100GBase_MLG, _107GBase_KR4, _25GBase_KR_C, _50GBase_KR2_C, _40GBase_KR2, _29_09GBase_SR4, _40GBase_CR4, _25GBase_CR, 
    _50GBase_CR2, _100GBase_CR4, _25GBase_KR_S, _25GBase_CR_S, _25GBase_CR_C, _50GBase_CR2_C, _50GBase_KR, _100GBase_KR2, _200GBase_KR4, _200GBase_KR8, _400GBase_KR8, _102GBase_KR4, _52_5GBase_KR2, _40GBase_KR4, _26_7GBase_KR, _40GBase_SR_LR4, _50GBase_CR, _100GBase_CR2, _200GBase_CR4, _200GBase_CR8, _400GBase_CR8, _200GBase_SR_LR4, _200GBase_SR_LR8, _400GBase_SR_LR8, _50GBase_SR_LR, _100GBase_SR_LR2, _20GBase_KR, _106GBase_KR4, _2_5G_SXGMII, _5G_SXGMII, _10G_SXGMII, _5G_DXGMII, _10G_DXGMII, _20G_DXGMII, 
    _5G_QUSGMII, _10G_QXGMII, _20G_QXGMII, _10G_OUSGMII, _20G_OXGMII, _42GBase_KR4, _53GBase_KR2, _424GBase_KR8, _2500Base_X, _212GBase_KR4, _106GBase_KR2, NON_SUP_MODE, LAST_PORT_MODE = 114} CM3_SIM_HWS_PORT_STANDARD;
typedef enum {FEC_NA, FEC_OFF, FC_FEC, RS_FEC = 4, RS_FEC_544_514 = 8} CM3_SIM_MV_HWS_PORT_FEC_MODE;
typedef struct {
    char *paramName;
    GT_U8 level;
    GT_U8 type;
} MI_LOOPBACK_MODES;
typedef enum {LB_MODE_NOLB, LB_MODE_SD_TXRX, LB_MODE_SD_RXTX, LB_MODE_MAC_TXRX, PRBS_TEST = 16} MI_PORT_DIAG_MODES;
typedef struct {
    GT_BOOL active;
    GT_U8 devNum;
    GT_U8 ppPortGroup;
    GT_U8 ppPortNum;
    CM3_SIM_HWS_PORT_STANDARD portMode;
    CM3_SIM_HWS_PORT_STANDARD reqPortMode;
    GT_BOOL txLanePolarity;
    GT_BOOL rxLanePolarity;
    MI_PORT_DIAG_MODES diagMode;
    MI_PORT_DIAG_MODES reqDiagMode;
    GT_BOOL isAp;
    GT_BOOL fec_sup;
    GT_BOOL fec_req;
    GT_U32 lane;
} MV_NET_PORT;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3BootChannel.c:
typedef struct CM3_SIM_IPC_SHM_DATA_STCT CM3_SIM_IPC_SHM_DATA_STC;
struct CM3_SIM_IPC_SHM_DATA_STCT;
typedef struct CM3_SIM_IPC_SHM_STCT CM3_SIM_IPC_SHM_STC;
struct CM3_SIM_IPC_SHM_STCT;
typedef void (*)(void *, IPC_SHM_SYNC_FUNC_MODE_ENT, void *, GT_UINTPTR, GT_U32) IPC_SHM_SYNC_FUNC;
typedef enum {IPC_SHM_SYNC_FUNC_MODE_READ_E, IPC_SHM_SYNC_FUNC_MODE_WRITE_E} IPC_SHM_SYNC_FUNC_MODE_ENT;
typedef enum {MICRO_INIT_BOOT_CH_RET_CODE_OK_E, MICRO_INIT_BOOT_CH_RET_CODE_INVALID_SYNTAX_E, MICRO_INIT_BOOT_CH_RET_CODE_INVALID_CONFIG_ID_E = 16, MICRO_INIT_BOOT_CH_RET_CODE_NO_MATCH_FILE_E} MICRO_INIT_BOOT_CH_RET_CODE_ENT;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3BootChannelExample.c:
typedef struct {
    GT_U32 word1;
    GT_U32 word2;
    GT_U32 buffPointer;
    GT_U32 nextDescPointer;
} CM3_SIM_TX_DESC_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3ConfigFileParser.c:
typedef struct {
    const char *name;
    const char *value;
    const GT_BOOL isMandatory;
    const CM3_SIM_CONFIG_PARAM_TYPE type;
} CM3_SIM_CONFIG_PARAM;
typedef enum {UINT_PARAM, BOOL_PARAM, STRING_PARAM} CM3_SIM_CONFIG_PARAM_TYPE;
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef char * pchar;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3FileOps.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3MicroinitMain.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3NetPort.c:
typedef struct {
    char *name;
    CM3_SIM_HWS_PORT_STANDARD mode;
    GT_U16 speed;
} CM3_SIM_INTERFACE_MODE_STRING;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/cm3/src/cm3Unq.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/Default/ppa_fw_accelerator_commands_Ac5pDefault.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/Default/ppa_fw_threads_Ac5pDefault.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/Image01/ppa_fw_accelerator_commands_Ac5pImage01.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/Image01/ppa_fw_threads_Ac5pImage01.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/ac5p_main.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/simEnv/simAc5pPhaFirmwareUtil.c:
enum PPA_FW_THREAD_ID_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Default/ppa_fw_accelerator_commands_FalconDefault.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Default/ppa_fw_threads_FalconDefault.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image01/ppa_fw_accelerator_commands_FalconImage01.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image01/ppa_fw_threads_FalconImage01.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02/ppa_fw_accelerator_commands_FalconImage02.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02/ppa_fw_threads_FalconImage02.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02Oldest/ppa_fw_accelerator_commands_FalconImage02Oldest.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02Oldest/ppa_fw_threads_FalconImage02Oldest.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02Previous/ppa_fw_accelerator_commands_FalconImage02Previous.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/Image02Previous/ppa_fw_threads_FalconImage02Previous.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/falcon_main.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/falcon_pha/simEnv/simFalconPhaFirmwareUtil.c:
enum PPA_FW_THREAD_ID_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/inc/ppa_fw_defs.h:
struct pipe_fw_version;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/inc/ppa_fw_record.h:
enum rec_threads_id;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/inc/ppa_threads_fw_defs.h:
struct IPv4_Header;
struct IPv6_Header;
struct Qcn_desc;
enum ip_ecn_operation;
struct nonQcn_desc;
enum nonQcn_desc_PTP_Action;
enum nonQcn_desc_PTP_Packet_Format;
struct ptp_header;
struct thr10_c_v2u_cfg;
struct thr10_c_v2u_in_hdr;
struct thr11_c2u_cfg;
struct thr11_c2u_in_hdr;
struct thr12_u_uc2c_cfg;
struct thr12_u_uc2c_in_hdr;
struct thr13_u_mc2c_cfg;
struct thr14_u_mr2c_cfg;
struct thr14_u_mr2c_in_hdr;
struct thr15_qcn_cfg;
struct thr16_u2e_cfg;
struct thr16_u2e_in_hdr;
struct thr17_u2ipl_cfg;
struct thr17_u2ipl_in_hdr;
struct thr18_ipl2ipl_cfg;
struct thr18_ipl2ipl_in_hdr;
struct thr19_e2u_untagged_cfg;
struct thr1_e2u_cfg;
struct thr20_u2e_m4_cfg;
struct thr20_u2e_m4_in_hdr;
struct thr21_u2e_m8_cfg;
struct thr21_u2e_m8_in_hdr;
struct thr23_evb_e2u_cfg;
struct thr23_evb_e2u_in_hdr;
struct thr24_evb_u2e_cfg;
struct thr24_evb_u2e_in_hdr;
struct thr25_evb_qcn_cfg;
struct thr25_evb_qcn_in_hdr;
struct thr26_pre_da_u2e_cfg;
struct thr26_pre_da_u2e_in_hdr;
struct thr27_pre_da_e2u_cfg;
struct thr27_pre_da_e2u_in_hdr;
struct thr2_u2e_cfg;
struct thr2_u2e_in_hdr;
struct thr3_u2c_cfg;
struct thr3_u2c_in_hdr;
struct thr45_VariableCyclesLengthWithAcclCmd_cfg;
struct thr46_RemoveAddBytes_cfg;
struct thr47_Add20Bytes_cfg;
struct thr48_Remove20Bytes_cfg;
struct thr49_VariableCyclesLength_cfg;
struct thr4_et2u_cfg;
struct thr5_eu2u_cfg;
struct thr6_u2e_cfg;
struct thr6_u2e_in_hdr;
struct thr7_mrr2e_cfg;
struct thr7_mrr2e_in_hdr;
struct thr8_e_v2u_cfg;
struct thr9_e2u_cfg;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/simEnv/simPipePhaFirmwareUtil.c:
typedef struct {
    char *threadName;
    void (*threadType)();
    char *threadDescription;
} THREAD_INFO;
typedef char;
typedef struct {
    char *fieldName;
    GT_U32 endBit;
    GT_U32 startBit;
} config_info;
typedef struct {
    char *fieldName;
    GT_U32 endBit;
    GT_U32 startBit;
} descriptor_info;
typedef struct {
    char *fieldName;
    GT_U32 endBit;
    GT_U32 startBit;
} header_info;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/src/main.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/src/ppa_fw_accelerator_commands.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/pipe_Pha/src/ppa_fw_record.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sEmbeddedCpu/firmware/sip6_pha/simSip6PhaFirmwareUtil.c:
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SKERNEL_FRAME_CHEETAH_DESCR_STC *, GT_U32) FIRMWARE_THREAD_FUNC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sfdb/sfdb.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sfdb/sfdbCheetah.c:
typedef struct {
    GT_U32 oldPort;
    GT_U32 oldDev;
    GT_U32 oldIsTrunk;
    GT_U32 newPort;
    GT_U32 newDev;
    GT_U32 newIsTrunk;
    GT_U32 actVlan;
    GT_U32 actIsTrunk;
    GT_U32 actPort;
    GT_U32 actDevice;
    GT_U32 actUserDefined;
    GT_U32 actVID1;
    GT_U32 actVlanMask;
    GT_U32 actIsTrunkMask;
    GT_U32 actPortMask;
    GT_U32 actDeviceMask;
    GT_U32 actUserDefinedMask;
    GT_U32 actVID1Mask;
    GT_U32 staticDelEn;
    GT_U32 staticTransEn;
    GT_U32 removeStaticOnNonExistDev;
    GT_U32 ageOutAllDevOnTrunk;
    GT_U32 ageOutAllDevOnNonTrunk;
    GT_U32 aaAndTaMessageToCpuEn;
    GT_U32 routeUcAaAndTaMessageToCpuEn;
    GT_U32 routeUcAgingEn;
    GT_U32 routeUcTransplantingEn;
    GT_U32 routeUcDeletingEn;
    GT_U32 *deviceTableBmpPtr;
    GT_U32 ownDevNum;
    GT_U32 maskAuFuMessageToCpuOnNonLocal;
    GT_U32 maskAuFuMessageToCpuOnNonLocal_with3BitsCoreId;
    GT_U32 srcIdLengthInFdbMode;
    GT_U32 multiHashEnable;
    GT_U32 trunksAgingMode;
    GT_U32 McAddrDelMode;
    GT_U32 IPMCAddrDelMode;
    GT_U32 SPEntryFastAgeEn;
} AGE_DAEMON_ACTION_INFO_STC;
typedef enum {SFDB_CHEETAH_TRIGGER_AGING_REMOVE_E, SFDB_CHEETAH_TRIGGER_AGING_NO_REMOVE_E, SFDB_CHEETAH_TRIGGER_DELETE_E, SFDB_CHEETAH_TRIGGER_TRANS_E, SFDB_CHEETAH_AUTOMATIC_AGING_REMOVE_E, SFDB_CHEETAH_AUTOMATIC_AGING_NO_REMOVE_E, SFDB_CHEETAH_TRIGGER_UPLOAD_E} SFDB_CHEETAH_ACTION_ENT;
typedef struct {
    SMEM_SIP6_FDB_FDB_TABLE_FIELDS_ENT fdbField;
    SMEM_SIP6_FDB_AU_MSG_TABLE_FIELDS_ENT auMsgField;
} SIP6_FDB_AU_MSG_CONVERT_INFO;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/sfdb/sfdbSoho.c:
typedef enum {ATU_NO_OPERATION_E, ATU_FLUSH_MOVE_ALL_E, ATU_FLUSH_MOVE_NON_STATIC_E, ATU_LOAD_PURGE_ENTRY_E, ATU_GET_NEXT_E, ATU_FLUSH_MOVE_DB_ALL_E, ATU_FLUSH_MOVE_DB_NON_STATIC_E, ATU_GET_CLEAR_VIOLATION_E} SOHO_ATU_OP_E;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smain/sRemoteTm.c:
typedef enum {INDEX_TRAFFIC_DRIVEN_E, INDEX_CPU_ACCESS_E, INDEX__LAST__E} INDEX_TYPE_E;
typedef struct {
    PPTMsim_header messageHeader;
    PPTMsim_drop_query dropQueryInfo;
} PACKET_DROP_QUERY_FULL_INFO_STC;
typedef struct {
    PPTMsim_header messageHeader;
    PPTMsim_packet_header packetHeaderInfo;
} PACKET_HEADER_FULL_INFO_STC;
typedef struct {
    PPTMsim_header messageHeader;
    PPTMsim_register registerInfo;
} REAGISTER_FULL_INFO_STC;
typedef struct {
    GT_SEM semSync;
    GT_MUTEX getReplyMutex;
    GT_U32 replySimDeviceId;
    union {...} info;
} TM_DISTRIBUTED_MESSAGE_SYNC_INFO_STC;
typedef struct {
    GT_U32 serverReady;
    GT_SOCKET_FD mySockId;
    GT_U16 serverProtocolPort;
    void *serverSockAddr;
    void *localSockAddr;
    GT_CHAR serverIpAddressStr[128];
    struct {...} senderInfo;
} TM_SOCKET_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smain/smain.c:
typedef struct {
    GT_U32 id;
    GT_U32 membersBmp[8];
} BUS_INFO_STC;
typedef struct {
    GT_U32 devId;
    GT_U32 portNum;
    struct {...} info;
} INTERNAL_CONNECTION_INFO_STC;
typedef struct {
    GT_U32 ports[9];
} PORTS_BMP_STC;
typedef struct {
    SKERNEL_DEVICE_FAMILY_TYPE devFamily;
    GT_U32 numOfPorts;
    const SKERNEL_DEVICE_TYPE *devTypeArray;
    const PORTS_BMP_STC *defaultPortsBmpPtr;
    const PORTS_BMP_STC *multiModePortsBmpPtr;
    const SKERNEL_PORT_STATE_ENT *existingPortsStatePtr;
} SIM_SUPPORTED_TYPES_STC;
typedef struct {
    GT_U32 gmDevType;
    char *devName;
    SKERNEL_DEVICE_TYPE devType;
    GT_U32 portNum;
    GT_U32 cpuPortNum;
} SMAIN_DEV_NAME_STC;
typedef struct {
    SKERNEL_DEVICE_OBJECT *devObjPtr;
    GT_U32 tileId;
} TASK_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smem.c:
typedef enum {ZONE_TYPE_PKT, ZONE_TYPE_DESC, ZONE_TYPE_CONFIG} ZONE_TYPE;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemAc5.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemAldrin2.c:
typedef struct {
    GT_U32 base_addr;
    GT_CHAR *nameStr;
    GT_U32 size;
    GT_CHAR *orig_nameStr;
} UNIT_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemBobcat2.c:
typedef enum {SMEM___LEGACY___BOBCAT2_UNIT_MG_E, SMEM___LEGACY___BOBCAT2_UNIT_IPLR1_E, SMEM___LEGACY___BOBCAT2_UNIT_TTI_E, SMEM___LEGACY___BOBCAT2_UNIT_DFX_SERVER_E, SMEM___LEGACY___BOBCAT2_UNIT_L2I_E, SMEM___LEGACY___BOBCAT2_UNIT_IPVX_E, SMEM___LEGACY___BOBCAT2_UNIT_BM_E, SMEM___LEGACY___BOBCAT2_UNIT_BMA_E, SMEM___LEGACY___BOBCAT2_UNIT_LMS_E, SMEM___LEGACY___BOBCAT2_UNIT_FDB_E, SMEM___LEGACY___BOBCAT2_UNIT_MPPM_E, SMEM___LEGACY___BOBCAT2_UNIT_CTU0_E, SMEM___LEGACY___BOBCAT2_UNIT_EPLR_E, 
    SMEM___LEGACY___BOBCAT2_UNIT_CNC_E, SMEM___LEGACY___BOBCAT2_UNIT_GOP_E, SMEM___LEGACY___BOBCAT2_UNIT_XG_PORT_MIB_E, SMEM___LEGACY___BOBCAT2_UNIT_SERDES_E, SMEM___LEGACY___BOBCAT2_UNIT_MPPM1_E, SMEM___LEGACY___BOBCAT2_UNIT_CTU1_E, SMEM___LEGACY___BOBCAT2_UNIT_EQ_E, SMEM___LEGACY___BOBCAT2_UNIT_IPCL_E, SMEM___LEGACY___BOBCAT2_UNIT_IPLR_E, SMEM___LEGACY___BOBCAT2_UNIT_MLL_E, SMEM___LEGACY___BOBCAT2_UNIT_IPCL_TCC_E, SMEM___LEGACY___BOBCAT2_UNIT_IPVX_TCC_E, SMEM___LEGACY___BOBCAT2_UNIT_EPCL_E, 
    SMEM___LEGACY___BOBCAT2_UNIT_HA_E, SMEM___LEGACY___BOBCAT2_UNIT_RX_DMA_E, SMEM___LEGACY___BOBCAT2_UNIT_TX_DMA_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_QUEUE_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_LL_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_DQ_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_SHT_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_EGR0_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_EGR1_E, SMEM___LEGACY___BOBCAT2_UNIT_TXQ_DIST_E, SMEM___LEGACY___BOBCAT2_UNIT_CPFC_E, SMEM___LEGACY___BOBCAT2_UNIT_LAST_E, SMEM_BOBCAT2_UNIT_MLL_E = 37, 
    SMEM_BOBCAT2_UNIT_IOAM_E, SMEM_BOBCAT2_UNIT_EOAM_E, SMEM_BOBCAT2_UNIT_LPM_E, SMEM_BOBCAT2_UNIT_EQ_0_E, SMEM_BOBCAT2_UNIT_EQ_1_E, SMEM_BOBCAT2_UNIT_FDB_TABLE_0_E, SMEM_BOBCAT2_UNIT_FDB_TABLE_1_E, SMEM_BOBCAT2_UNIT_EGF_EFT_E, SMEM_BOBCAT2_UNIT_EGF_EFT_1_E, SMEM_BOBCAT2_UNIT_EGF_QAG_E, SMEM_BOBCAT2_UNIT_EGF_QAG_1_E, SMEM_BOBCAT2_UNIT_EGF_SHT_E, SMEM_BOBCAT2_UNIT_EGF_SHT_1_E, SMEM_BOBCAT2_UNIT_EGF_SHT_2_E, SMEM_BOBCAT2_UNIT_EGF_SHT_3_E, SMEM_BOBCAT2_UNIT_EGF_SHT_4_E, SMEM_BOBCAT2_UNIT_EGF_SHT_5_E, 
    SMEM_BOBCAT2_UNIT_EGF_SHT_6_E, SMEM_BOBCAT2_UNIT_EGF_SHT_7_E, SMEM_BOBCAT2_UNIT_EGF_SHT_8_E, SMEM_BOBCAT2_UNIT_EGF_SHT_9_E, SMEM_BOBCAT2_UNIT_EGF_SHT_10_E, SMEM_BOBCAT2_UNIT_EGF_SHT_11_E, SMEM_BOBCAT2_UNIT_EGF_SHT_12_E, SMEM_BOBCAT2_UNIT_HA_E, SMEM_BOBCAT2_UNIT_IPCL_E, SMEM_BOBCAT2_UNIT_EPCL_E, SMEM_BOBCAT2_UNIT_TCAM_E, SMEM_BOBCAT2_UNIT_TM_HOSTING_E, SMEM_BOBCAT2_UNIT_ERMRK_E, SMEM_BOBCAT2_UNIT_GOP_E, SMEM_BOBCAT2_UNIT_IPLR0_E, SMEM_BOBCAT2_UNIT_IPLR1_E, SMEM_BOBCAT2_UNIT_EPLR_E, 
    SMEM_BOBCAT2_UNIT_CNC_0_E, SMEM_BOBCAT2_UNIT_CNC_1_E, SMEM_BOBCAT2_UNIT_TMDROP_E, SMEM_BOBCAT2_UNIT_TXQ_QUEUE_E, SMEM_BOBCAT2_UNIT_TXQ_LL_E, SMEM_BOBCAT2_UNIT_TXQ_DQ_E, SMEM_BOBCAT2_UNIT_CPFC_E, SMEM_BOBCAT2_UNIT_TXQ_QCN_E, SMEM_BOBCAT2_UNIT_TX_FIFO_E, SMEM_BOBCAT2_UNIT_ETH_TX_FIFO_E, SMEM_BOBCAT2_UNIT_ILKN_TX_FIFO_E, SMEM_BOBCAT2_UNIT_TM_FCU_E, SMEM_BOBCAT2_UNIT_TM_INGRESS_GLUE_E, SMEM_BOBCAT2_UNIT_TM_EGRESS_GLUE_E, SMEM_BOBCAT2_UNIT_TMQMAP_E, SMEM_BOBCAT2_UNIT_LMS_E, SMEM_BOBCAT2_UNIT_LMS1_E, 
    SMEM_BOBCAT2_UNIT_LMS2_E, SMEM_BOBCAT2_UNIT_GOP_ILKN_E, SMEM_BOBCAT2_B0_UNIT_GOP_SMI_0_E, SMEM_BOBCAT2_B0_UNIT_GOP_SMI_1_E, SMEM_BOBCAT2_B0_UNIT_GOP_SMI_2_E, SMEM_BOBCAT2_B0_UNIT_GOP_SMI_3_E, SMEM_BOBCAT2_B0_UNIT_GOP_LED_0_E, SMEM_BOBCAT2_B0_UNIT_GOP_LED_1_E, SMEM_BOBCAT2_B0_UNIT_GOP_LED_2_E, SMEM_BOBCAT2_B0_UNIT_GOP_LED_3_E, SMEM_BOBCAT2_B0_UNIT_GOP_LED_4_E, SMEM_BOBCAT2_UNIT_LAST_E} SMEM_BOBCAT2_UNIT_NAME_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemBobcat3.c:
typedef struct {
    GT_BIT tableOffsetValid;
    GT_U32 tableOffsetInBytes;
    GT_U32 startAddr;
    GT_U32 lastAddr;
    GT_U32 pipeOffset;
    UNIT_TYPE_ENT table_unitType_deviceAccess;
    UNIT_TYPE_ENT table_unitType_cpu_access;
} SPECIAL_INSTANCE_TABLES_ARR_STC;
typedef struct {
    GT_U32 base_addr;
    GT_CHAR *nameStr;
    GT_U32 size;
    GT_CHAR *orig_nameStr;
    GT_U32 pipeOffset;
} UNIT_INFO_STC;
typedef enum {UNIT_TYPE_NOT_VALID, UNIT_TYPE_PIPE_0_ONLY_E, UNIT_TYPE_PIPE_1_ONLY_E, UNIT_TYPE_PIPE_0_AND_PIPE_1_E} UNIT_TYPE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemBobk.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemCheetah.c:
typedef struct {
    SKERNEL_DEVICE_FAMILY_TYPE deviceFamily;
    GT_U32 extraIndex;
    SCIB_MEM_ACCESS_CLIENT registerMemorySpace;
    GT_U32 regAddr;
    GT_U32 startBit;
    GT_U32 numBits;
    GT_U32 baseCoreClock;
    GT_U32 coreClkArr[16];
} SUPPORTED_CORE_CLOCKS_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemCheetah2.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemCheetah3.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemCheetahGM.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemFalcon.c:
typedef enum {AAC_ENGINE_DATA_CHANNEL_0_E, AAC_ENGINE_DATA_CHANNEL_1_E, AAC_ENGINE_DATA_CHANNEL_2_E, AAC_ENGINE_DATA_CHANNEL_3_E, AAC_ENGINE_DATA_CHANNEL_4_E, AAC_ENGINE_DATA_CHANNEL_5_E, AAC_ENGINE_DATA_CHANNEL_6_E, AAC_ENGINE_DATA_CHANNEL_7_E, AAC_ENGINE_ADDRESS_CHANNEL_0_E, AAC_ENGINE_ADDRESS_CHANNEL_1_E, AAC_ENGINE_ADDRESS_CHANNEL_2_E, AAC_ENGINE_ADDRESS_CHANNEL_3_E, AAC_ENGINE_ADDRESS_CHANNEL_4_E, AAC_ENGINE_ADDRESS_CHANNEL_5_E, AAC_ENGINE_ADDRESS_CHANNEL_6_E, 
    AAC_ENGINE_ADDRESS_CHANNEL_7_E} AAC_ENGINE_REGISTER_TYPE_ENT;
typedef enum {MTI_ACTIVE_MEM_REG_PORT_MTI_64_STATUS_E, MTI_ACTIVE_MEM_REG_PORT_MTI_400_STATUS_E, MTI_ACTIVE_MEM_REG_PORT_MTI_64_INTERRUPT_MASK_E, MTI_ACTIVE_MEM_REG_PORT_MTI_400_INTERRUPT_MASK_E, MTI_ACTIVE_MEM_REG_PORT_MTI_64_INTERRUPT_CAUSE_E, MTI_ACTIVE_MEM_REG_PORT_MTI_400_INTERRUPT_CAUSE_E, MTI_ACTIVE_MEM_REG_MAC_CDMMAND_CFG_MTI_64_E, MTI_ACTIVE_MEM_REG_MAC_COMMAND_CFG_MTI_400_E, MTI_ACTIVE_MEM_REG_PCS_CONTROL1_E, MTI_ACTIVE_MEM_REG_STAT_CONTROL_E, MTI_ACTIVE_MEM_REG_STAT_CAPTURE_E, 
    MTI_ACTIVE_MEM_REG_FEC_CE_INTERRUPT_MASK_E, MTI_ACTIVE_MEM_REG_FEC_NCE_INTERRUPT_MASK_E, MTI_ACTIVE_MEM_REG_FEC_CE_INTERRUPT_CAUSE_E, MTI_ACTIVE_MEM_REG_FEC_NCE_INTERRUPT_CAUSE_E} MTI_ACTIVE_MEM_REG_ENT;
typedef enum {SHERED_MEM_TYPE_NOT_VALID, SHERED_MEM_TYPE_NO_SHARE_E, SHERED_MEM_TYPE_PER_TILE_PIPE_0_ONLY_E} SHERED_MEM_TYPE_ENT;
typedef struct {
    GT_BIT tableOffsetValid;
    GT_U32 tableOffsetInBytes;
    GT_BOOL forbidDirectWriteToChunk;
    GT_U32 startAddr;
    GT_U32 lastAddr;
    SHERED_MEM_TYPE_ENT table_unitType_deviceAccess;
    SHERED_MEM_TYPE_ENT table_unitType_cpu_access;
} SPECIAL_INSTANCE_TABLES_ARR_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemFalconInterrupts.c:
typedef struct {
    GT_U32 mgRegOffsetInDB;
    SKERNEL_INTERRUPT_REG_INFO_STC *perMgArrPtr;
} CONVERT_INTERRUPT_MG_REGS_STC;
typedef struct {
    GT_U32 bitAtFatherForTile0Interrupt;
    SKERNEL_INTERRUPT_REG_INFO_STC *fatherForTile0InterruptPtr;
    GT_U32 bitAtFatherForTile1Interrupt;
    SKERNEL_INTERRUPT_REG_INFO_STC *fatherForTile1InterruptPtr;
} FULL_CHIP_TO_MG0_CONNECTIONS;
typedef struct {
    GT_U32 tileId;
    SKERNEL_INTERRUPT_REG_INFO_STC *alreadyExistsFatherPtr;
    GT_U32 replaceFatherBit;
    SKERNEL_INTERRUPT_REG_INFO_STC replaceFatherInfo;
} NEXT_TILE_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemGm.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemHarrier.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemHarrierInterrupts.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemHawk.c:
typedef enum {SNET_CHT_mif_Tx_channel_id_number_E, SNET_CHT_mif_is_Tx_channel_enable_E} SNET_CHT_MIF_FIELDS_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemHawkInterrupts.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemIronman.c:
typedef struct {
    GT_U8 unit;
    GT_U8 channelBase;
    GT_U8 channelAmount;
    GT_U8 globalMacBase;
} MIF_TO_MAC_RANGE_MAP_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemIronmanInterrupts.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemLion.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemLion2.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemLion3.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemMacsec.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemPhoenix.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemPhoenixInterrupts.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemPhy.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemPipe.c:
typedef struct {
    GT_U32 base_addr;
    GT_CHAR *nameStr;
} UNIT_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemPipeInterrupts.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemSalsa.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemSoho.c:
typedef enum {NO_OPERATION, FLUSH_ALL_CNT_ALL_E, FLUSH_ALL_CNT_FOR_PORT_E, RESERVED, READ_CAPTURED_CNT_E, CAPTURE_ALL_CNT_FOR_PORT_E} SOHO_STAT_OP_E;
typedef enum {VTU_NO_OPERATION_E, VTU_FLUSH_ALL_VTU_ALL_E, VTU_LOAD_PURGE_ENTRY_E = 3, VTU_GET_NEXT_E, STU_LOAD_PURGE_E, STU_GET_NEXT_E, VTU_GET_CLEAR_VIOLATION_E} SOHO_VTU_OP_E;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemXCat2.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/smem/smemXCat3.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snet.c:
typedef struct {
    char *tableName;
    GT_U32 numOfFields;
    SNET_ENTRY_FORMAT_TABLE_STC *fieldsInfoPtr;
    char **fieldsNamesPtr;
    GT_U32 numBitsUsed;
} TABLE_AND_FIELDS_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah2EPcl.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah2Pcl.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah2Routing.c:
typedef enum {COUNTER_SET_COUTER_TYPE_inUcMcPacketCounter_E, COUNTER_SET_COUTER_TYPE_inUcMcNonRoutedExceptionPacketCounter_E, COUNTER_SET_COUTER_TYPE_inUcMcNonRoutedNonExceptionPacketCounter_E, COUNTER_SET_COUTER_TYPE_inUcMcTrappedMirroredPacketCounter_E, COUNTER_SET_COUTER_TYPE_mcRpfFailPacketCounter_E, COUNTER_SET_COUTER_TYPE_outUnicastPacketCounter_E} COUNTER_SET_COUTER_TYPE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah2TStart.c:
typedef struct {
    GT_U32 dscp;
    GT_BIT gre;
    GT_BIT udp;
    GT_U32 ttl;
    GT_U32 protocol;
    GT_U32 sip;
    GT_U32 dip;
    GT_U32 numOfLabels;
    GT_U32 exp[3];
    GT_U32 label[3];
    GT_U32 sBit[3];
    GT_U32 iSid;
    GT_U32 iUp;
    GT_BIT iDp;
    GT_U32 iTagRes2;
    GT_BIT iTagRes1;
    GT_BIT iTagCda;
    GT_U32 controlWordIndex;
    GT_U32 doNotFragmentFlag;
    GT_U32 eVlanServiceId;
    GT_U32 eVlanServiceIdShifted;
    GT_U32 profileNum;
    GT_U32 *profileEntryPtr;
    GT_U32 packetTotalLen;
    GT_U8 *ipTotalLenFieldInEgressBufPtr;
} CH2_TS_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah2TTermination.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3CentralizedCnt.c:
typedef enum {CNC_COUNTER_FORMAT_PKT_29_BC_35_E, CNC_COUNTER_FORMAT_PKT_27_BC_37_E, CNC_COUNTER_FORMAT_PKT_37_BC_27_E, CNC_COUNTER_FORMAT_PKT_64_BC_0_E, CNC_COUNTER_FORMAT_PKT_0_BC_64_E, CNC_COUNTER_FORMAT_PKT_44_MAX_SIZE_20_E} CNC_COUNTER_FORMAT_ENT;
typedef struct {
    GT_U32 clientHwBitArr[4];
    SNET_CHT3_CNC_CLIENT_TRIG_FUN cncClientTriggerFunc;
} SIP6_10_CNC_CLIENT_IN_BLOCK;
typedef enum {SMEM_CHT3_CNC_BYTE_CNT_L2_MODE_E, SMEM_CHT3_CNC_BYTE_CNT_L3_MODE_E, SMEM_CHT3_CNC_BYTE_CNT_PACKETS_MODE_E, SMEM_CHT3_CNC_BYTE_CNT_FLEX_VALUE_E} SMEM_CHT3_CNC_BYTE_CNT_MODE_E;
typedef enum {SMEM_CHT3_CNC_EGRESS_QUEUE_CLIENT_MODE_TAIL_DROP_E, SMEM_CHT3_CNC_EGRESS_QUEUE_CLIENT_MODE_CN_E, SMEM_CHT3_CNC_EGRESS_QUEUE_CLIENT_MODE_TAIL_DROP_REDUCED_E} SMEM_CHT3_CNC_EGRESS_QUEUE_CLIENT_MODE_ENT;
typedef struct {
    SNET_CNC_CLIENT_E client;
    GT_U32 clientHwBit;
    GT_U32 index;
    SMEM_CHT3_CNC_BYTE_CNT_MODE_E byteCntMode;
    GT_UINTPTR userDefined;
    GT_U64 rangeBitmap[16];
    GT_U32 cncUnitIndex;
    GT_CHAR *clientsNamePtr;
    GT_BIT triggered;
    GT_BIT debug_is_expected_counter_format_CNC_COUNTER_FORMAT_PKT_44_MAX_SIZE_20_E;
    GT_U32 explicitByteCountValue;
    GT_BIT isErrata_HA2CNC_swapIndexAndBc;
    GT_BIT isErrata_NotCountCrc;
    struct {...} fewClientsPerBlock;
} SNET_CHT3_CNC_CLIENT_INFO_STC;
typedef GT_STATUS (*)(SKERNEL_DEVICE_OBJECT *, SKERNEL_FRAME_CHEETAH_DESCR_STC *, SNET_CHT3_CNC_CLIENT_INFO_STC *) SNET_CHT3_CNC_CLIENT_TRIG_FUN;
typedef struct {
    GT_U64 byteCount;
    GT_U64 packetCount;
} SNET_CHT3_CNC_COUNTER_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3EPcl.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3MacLookup.c:
typedef enum {RSSI_INTERRUPT_TYPE_GLOBAL_MIN_E, RSSI_INTERRUPT_TYPE_AVERAGE_MIN_E} RSSI_INTERRUPT_TYPE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3Pcl.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3Policer.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3Reassembly.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3Routing.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetah3TTermination.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahDoInterrupts.c:
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, GT_U32 *) SMEM_REG_GET_FUNC;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, GT_U32, GT_U32) SMEM_REG_SET_FUNC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahEgress.c:
typedef enum {FORCE_LINK_UP_E, FORCE_LINK_DOWN_E, LINK_ACCORDING_TO_MAC_E, LINK_UNKNOWN_E} LINK_CASE_ENT;
typedef enum {MAC_PORT_REASON_TYPE_EGF_TO_MAC_FOR_LINK_STATUS_E, MAC_PORT_REASON_TYPE_TXQ_DQ_TO_TXDMA_E, MAC_PORT_REASON_TYPE_FINAL_MAC_E, BM_CHECK_INGRESS_SRC_PORT_E} MAC_PORT_REASON_TYPE_ENT;
typedef enum {SNET_CHT_EGF_SHT_TABLE_NON_TRUNK_MEMBERS_2_TYPE_E, SNET_CHT_EGF_SHT_TABLE_SRC_ID_TYPE_E} SNET_CHT_EGF_SHT_TABLE_TYPE_ENT;
typedef enum {TIMESTAMP_TIME_ADD_MODE_EGRESS_E, TIMESTAMP_TIME_ADD_MODE_CORRECTED_E, TIMESTAMP_TIME_ADD_MODE_INGRESS_E, TIMESTAMP_TIME_ADD_MODE_INGRESS_EGRESS_E} TIMESTAMP_TIME_ADD_MODE_ENT;
typedef enum {TXQ_COUNTE_MODE_ALL_E, TXQ_COUNTE_MODE_INGRESS_DEVICE_ONLY_E, TXQ_COUNTE_MODE_EGRESS_DEVICE_ONLY_E} TXQ_COUNTE_MODE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahEq.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahHa.c:
typedef struct SNET_DSA_TAG_FIELDS_STCT SNET_DSA_TAG_FIELDS_STC;
struct SNET_DSA_TAG_FIELDS_STCT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahIngress.c:
typedef struct {
    GT_CHAR *name;
} FIELD_IN_REG_INFO_STC;
typedef struct {
    GT_U8 value;
    GT_CHAR *name;
    GT_U32 lengthBytesUnit;
} IPV6_EXT_HEADERS_STC;
typedef enum {PIP_PRIORITY_HIGH_E, PIP_PRIORITY_MEDIUM_E, PIP_PRIORITY_LOW_E, PIP_PRIORITY_VERY_HIGH_E} PIP_PRIORITY_ENT;
typedef enum {SIP6_RXDMA_DROP_REASON_PIP_E, SIP6_RXDMA_DROP_REASON_CONTEXT_ID_E, SIP6_RXDMA_DROP_REASON___LAST___E} SIP6_RXDMA_DROP_REASON_ENT;
typedef struct {
    GT_CHAR *nameStr;
    GT_U32 startBit;
} SIP6_RXDMA_DROP_REASON_INFO_STC;
typedef enum {SNET_NOT_FC_PACKET_E, SNET_FC_PACKET_E, SNET_PFC_PACKET_E, SNET_UNKNOWN_FC_PACKET_E} SNET_FLOW_CONTROL_PACKET_TYPE_ENT;
typedef enum {SNET_NOT_CHANGE_E, SNET_UNTAGGED_ONLY_E, SNET_TAGGED_ONLY_E, SNET_ALL_PACKETS_E} SNET_VLAN_MODE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahL2.c:
typedef enum {SNET_CHEETAH_COUNT_ALL_E, SNET_CHEETAH_COUNT_RCV_PORT_E, SNET_CHEETAH_COUNT_RCV_VLAN_E, SNET_CHEETAH_COUNT_RCV_PORT_VLAN_E} SNET_CHEETAH_COUNTER_SET_MODE_STC;
typedef enum {SNET_CHEETA_L2I_BYPASS_BRIDGE_NONE_E, SNET_CHEETA_L2I_BYPASS_BRIDGE_ALLOW_ONLY_SA_LEARNING_E, SNET_CHEETA_L2I_BYPASS_BRIDGE_ONLY_FORWARD_DECISION_E} SNET_CHEETA_L2I_BYPASS_BRIDGE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahPcl.c:
typedef enum {CHT_PCL_KEY_FIELDS_ID_VALID_E, CHT_PCL_KEY_FIELDS_ID_PCL_ID_E, CHT_PCL_KEY_FIELDS_ID_SRC_PORT_E, CHT_PCL_KEY_FIELDS_ID_IS_TAGGET_E, CHT_PCL_KEY_FIELDS_ID_VID_E, CHT_PCL_KEY_FIELDS_ID_UP_E, CHT_PCL_KEY_FIELDS_ID_QOS_PROFILE_E, CHT_PCL_KEY_FIELDS_ID_IS_IPV4_E, CHT_PCL_KEY_FIELDS_ID_IS_IP_E, CHT_PCL_KEY_FIELDS_ID_RESERVED_42_E, CHT_PCL_KEY_FIELDS_ID_ETHER_TYPE_DSAP_SSAP_E, CHT_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE2_SHORT_E, CHT_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE3_SHORT_E, 
    CHT_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE0_SHORT_E, CHT_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE1_SHORT_E, CHT_PCL_KEY_FIELDS_ID_IS_ETH_TYPE_VALID_E, CHT_PCL_KEY_FIELDS_ID_MAC_SA_E, CHT_PCL_KEY_FIELDS_ID_MAC_DA_E, CHT_PCL_KEY_FIELDS_ID_USER_DEFINED_VALID_E, CHT_PCL_KEY_FIELDS_ID_RESERVED_189_191_E, CHT_PCL_KEY_FIELDS_ID_IP_PROTOCOL_E, CHT_PCL_KEY_FIELDS_ID_PACKET_DSCP_E, CHT_PCL_KEY_FIELDS_ID_IS_L4_VALID_E, CHT_PCL_KEY_FIELDS_ID_L4_BYTE_OFFSET_2_3_E, CHT_PCL_KEY_FIELDS_ID_IS_ARP_E, 
    CHT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_EXISTS_E, CHT_PCL_KEY_FIELDS_ID_IS_BC_E, CHT_PCL_KEY_FIELDS_ID_IS_IPV6_EH_HOP_BY_HOP_E, CHT_PCL_KEY_FIELDS_ID_RESERVED_189_E, CHT_PCL_KEY_FIELDS_ID_IPV4_FRAGMENT_E, CHT_PCL_KEY_FIELDS_ID_HEADER_OK_E, CHT_PCL_KEY_FIELDS_ID_USER_DEFINED_BYTE2_L3_AND_L4_KEY_SHORT_E, CHT_PCL_KEY_FIELDS_ID_SIP_31_0_E, CHT_PCL_KEY_FIELDS_ID_DIP_31_0_E, CHT_PCL_KEY_FIELDS_ID_L4_BYTES_OFFSETS_0_1_13_E, CHT_PCL_KEY_FIELDS_ID_RESERVED_187_E, CHT_PCL_KEY_FIELDS_ID_LONG_L4_BYTES_OFFSETS_0_1_13_E, 
    CHT_PCL_KEY_FIELDS_ID_LONG_SIP_31_0_E, CHT_PCL_KEY_FIELDS_ID_LONG_DIP_31_0_E, CHT_PCL_KEY_FIELDS_ID_LONG_IS_ETH_TYPE_VALID_E, CHT_PCL_KEY_FIELDS_ID_LONG_ETHER_TYPE_DSAP_SSAP_E, CHT_PCL_KEY_FIELDS_ID_LONG_IPV4_FRAGMENT_E, CHT_PCL_KEY_FIELDS_ID_LONG_RESERVED_179_234_E, CHT_PCL_KEY_FIELDS_ID_LONG_MAC_SA_E, CHT_PCL_KEY_FIELDS_ID_LONG_MAC_DA_E, CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_BYTE3_E, CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_BYTE4_E, CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_BYTE5_E, 
    CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_BYTE0_E, CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_BYTE1_E, CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_BYTE2_E, CHT_PCL_KEY_FIELDS_ID_LONG_RESERVED_379_381_E, CHT_PCL_KEY_FIELDS_ID_LONG_USER_DEFINED_VALID_E, CHT_PCL_KEY_FIELDS_ID_LONG_HEADER_OK_E, CHT_PCL_KEY_FIELDS_ID_LONG_SIP_63_32_E, CHT_PCL_KEY_FIELDS_ID_LONG_SIP_95_64_E, CHT_PCL_KEY_FIELDS_ID_LONG_SIP_127_96_E, CHT_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_EXISTS_E, CHT_PCL_KEY_FIELDS_ID_LONG_IS_IPV6_EH_HOP_BY_HOP_E, 
    CHT_PCL_KEY_FIELDS_ID_LONG_DIP_127_120_E, CHT_PCL_KEY_FIELDS_ID_LONG_DIP_63_32_E, CHT_PCL_KEY_FIELDS_ID_LONG_DIP_95_64_E, CHT_PCL_KEY_FIELDS_ID_LONG_DIP_119_96_E, CHT_PCL_KEY_FIELDS_ID_LONG_DIP_31_0_L3_AND_L4_KEY_LONG_E, CHT_PCL_KEY_FIELDS_ID_IS_IPV6_E, CHT_PCL_KEY_FIELDS_ID_DIP_15_0_E, CHT_PCL_KEY_FIELDS_ID_DIP_31_16_E, CHT_PCL_KEY_FIELDS_ID_RESERVED_91_E, CHT_PCL_KEY_FIELDS_ID_DIP_127_32_E, CHT_PCL_KEY_FIELDS_ID_RESERVED_188_E, CHT_PCL_KEY_FIELDS_ID_LAST_E} CHT_PCL_KEY_FIELDS_ID_ENT;
typedef enum {CHT_PCL_KEY_TYPE_L2_KEY_SHORT_E, CHT_PCL_KEY_TYPE_L2_AND_L3_KEY_SHORT_E, CHT_PCL_KEY_TYPE_L3_AND_L4_KEY_SHORT_E, CHT_PCL_KEY_TYPE_L2_AND_L3_AND_L4_KEY_LONG_E, CHT_PCL_KEY_TYPE_L2_AND_L3_KEY_LONG_E, CHT_PCL_KEY_TYPE_L3_AND_L4_KEY_LONG_E, CHT_PCL_KEY_TYPE_L3_KEY_SHORT_E, CHT_PCL_KEY_TYPE_LAST_E} CHT_PCL_KEY_TYPE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahPclSrv.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahPolicer.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahTxQ.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetCheetahUcRoute.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetFalconEgress.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetFalconExactMatch.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetFalconLpm.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetFalconPreQ.c:
typedef enum {SRF_STATE_DONE_TAG_LESS_E, SRF_STATE_DONE_TAKE_ANY_E, SRF_STATE_DONE_NONE_E} SRF_STATE_DONE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetFalconTcam.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetFalconTxQ.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetGm.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetHawkExactMatch.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetHawkPpu.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetLion.c:
typedef enum {LION3_UNREG_IPM_EVIDX_MODE_MODE_ALL_E, LION3_UNREG_IPM_EVIDX_MODE_MODE_IPV4_E, LION3_UNREG_IPM_EVIDX_MODE_MODE_IPV6_E, LION3_UNREG_IPM_EVIDX_MODE_MODE_IPV4_IPV6_E} LION3_UNREG_IPM_EVIDX_MODE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetLion2Oam.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetLion2TrafficGenerator.c:
typedef struct {
    GT_U32 txQueue;
    SBUF_BUF_ID bufferId;
} TX_SDMA_GEN_PROCESS_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetLion3Lpm.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetLion3Tcam.c:
typedef struct {
    GT_U32 startBankIndex;
    GT_U32 floorNum;
    GT_U32 hitNum;
} SIP5_TCAM_SEGMENT_INFO_STC;
typedef struct {
    TCAM_FLOOR_INFO_STC floorInfo[16];
} TCAM_FLOORS_INFO_STC;
typedef struct {
    GT_U32 validBanksBmp;
} TCAM_FLOOR_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetPipeEgress.c:
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SKERNEL_FRAME_PIPE_DESCR_STC *) FIRMWARE_THREAD_FUNC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetPipeIngress.c:
typedef enum {HASH_TYPE_IPV4_TCP_UDP_E, HASH_TYPE_IPV6_TCP_UDP_E, HASH_TYPE_IPV4_NONE_TCP_UDP_E, HASH_TYPE_IPV6_NONE_TCP_UDP_E, HASH_TYPE_MPLS_SINGLE_LABLE_E, HASH_TYPE_MPLS_MORE_THAN_SINGLE_LABLE_E, HASH_TYPE_UDE_1_E, HASH_TYPE_UDE_2_E, HASH_TYPE_ETHERNET_E} HASH_TYPE_ENT;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetSip6_30Smu.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetSoho.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetSohoEgress.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetXCat.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetXCatPcl.c:
typedef enum {AC5_PCL_KEY_FIELDS_ID_PORT_LIST_7_0_E, AC5_PCL_KEY_FIELDS_ID_PORT_LIST_13_8_E, AC5_PCL_KEY_FIELDS_ID_PORT_LIST_27_14_E, AC5_PCL_KEY_FIELDS_ID_PORT_LIST_MUST_BE_LAST_E} AC5_PCL_KEY_FIELDS_ID_PORT_LIST_ENT;
typedef struct {
    GT_U32 Data_Pkt_OR_CtrlToCPU_Src_Trunk_ID_6_0;
    GT_U32 Data_Pkt_Src_Dev_4_0;
    GT_U32 Ctrl_To_CPU_Src_Trg_Src_Dev_4_0;
    GT_U32 From_CPU_Egress_Filter_En_Src_Dev_4_0;
    GT_U32 To_Analyzer_Rx_Sniff_Src_Dev_4_0;
    GT_U32 Data_Pkt_OR_Ctrl_To_CPU_Src_Is_Trunk;
    GT_U32 Data_Pkt_Is_Unknown;
    GT_U32 Ctrl_To_CPU_CPU_CODE_7;
    GT_U32 From_CPU_Is_Unknown;
    GT_U32 Data_Pkt_QoS_Profile_6_0_OR_port_list_13_8;
    GT_U32 Ctrl_To_CPU_CPU_CODE_6_0;
    GT_U32 Ctrl_From_CPU_TC_2_0_DP_1_0;
} EPCL_MUXED_TRAFFIC_TYPE_INFO;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SKERNEL_FRAME_CHEETAH_DESCR_STC *, GT_U32, SNET_CHT3_PCL_LOOKUP_CONFIG_STC *, CHT_PCL_EXTRA_PACKET_INFO_STC *, DXCH_EPCL_KEY_ENT, SNET_CHT_POLICY_KEY_STC *) LION3_EPCL_BUILD_KEY_FUN;
typedef struct {
    LION3_EPCL_BUILD_KEY_FUN buildKeyFunc;
    GT_U8 nameString[50];
} LION3_EPCL_KEY_INFO_FUN;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SKERNEL_FRAME_CHEETAH_DESCR_STC *, SNET_CHT3_PCL_LOOKUP_CONFIG_STC *, CHT_PCL_EXTRA_PACKET_INFO_STC *, DXCH_IPCL_KEY_ENT, SNET_CHT_POLICY_KEY_STC *) LION3_IPCL_BUILD_KEY_FUN;
typedef struct {
    LION3_IPCL_BUILD_KEY_FUN buildKeyFunc;
    GT_U8 nameString[50];
} LION3_IPCL_KEY_INFO_FUN;
typedef struct {
    GT_U32 udbIndex;
    GT_U32 startBitInKey;
} UDB_INFO_STC;
typedef void (*)(SKERNEL_DEVICE_OBJECT *, SKERNEL_FRAME_CHEETAH_DESCR_STC *, SNET_CHT3_PCL_LOOKUP_CONFIG_STC *, CHT_PCL_EXTRA_PACKET_INFO_STC *, SNET_XCAT_IPCL_KEY_TYPE_ENT, SNET_CHT_POLICY_KEY_STC *) XCAT_IPCL_BUILD_KEY_FUN;
typedef struct {
    XCAT_IPCL_BUILD_KEY_FUN buildKeyFunc;
    DXCH_IPCL_KEY_ENT keyIndex;
    GT_U8 nameString[50];
} XCAT_IPCL_KEY_INFO_FUN;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/asicSimulation/SKernel/suserframes/snetXCatPolicer.c:
typedef enum {E_ARCH_POLICER_METER_DISABLED_E, E_ARCH_POLICER_METER_EPORT_USED_E, E_ARCH_POLICER_METER_EVLAN_USED_E, E_ARCH_POLICER_METER_NOT_SUPPORTED_E} E_ARCH_POLICER_METER_MODE_ENT;
typedef enum {SNET_XCAT_POLICER_COUNTING_DISABLE_E, SNET_XCAT_POLICER_COUNTING_BILLING_E, SNET_XCAT_POLICER_COUNTING_POLICY_E, SNET_XCAT_POLICER_COUNTING_VLAN_E} SNET_XCAT_POLICER_COUNTING_MODE_ENT;
typedef enum {SNET_XCAT_POLICER_IPFIX_PHA_METADATA_MODE_DISABLE_E, SNET_XCAT_POLICER_IPFIX_PHA_METADATA_MODE_COUNTER_E, SNET_XCAT_POLICER_IPFIX_PHA_METADATA_MODE_RANDOM_E, SNET_XCAT_POLICER_IPFIX_PHA_METADATA_MODE_RESERVE_E} SNET_XCAT_POLICER_IPFIX_PHA_METADATA_MODE_ENT;
typedef enum {SNET_XCAT_POLICER_SAMPLE_MODE_DISABLE_E, SNET_XCAT_POLICER_SAMPLE_MODE_PCKT_E, SNET_XCAT_POLICER_SAMPLE_MODE_BYTE_E, SNET_XCAT_POLICER_SAMPLE_MODE_TIME_E} SNET_XCAT_POLICER_IPFIX_SAMPLE_MODE_ENT;
typedef struct {
    GT_U64 lastSampleValue64;
    GT_BIT randomEnable;
    GT_U32 randomOffset;
    GT_U32 sampleRange;
    GT_U64 sampleWindow64;
    GT_U32 sampleAction;
    GT_U32 cpuSubCode;
} SNET_XCAT_POLICER_IPFIX_SAMPLE_STC;
typedef enum {SNET_XCAT_POLICER_METER_PORT_E, SNET_XCAT_POLICER_METER_FLOW_E} SNET_XCAT_POLICER_METER_MODE_ENT;
typedef enum {SNET_XCAT_POLICER_METER_UCAST_E, SNET_XCAT_POLICER_METER_UNK_UCAST_E, SNET_XCAT_POLICER_METER_REG_MCAST_E, SNET_XCAT_POLICER_METER_UNREG_MCAST_E, SNET_XCAT_POLICER_METER_BCAST_E, SNET_XCAT_POLICER_METER_TCP_SYN_E} SNET_XCAT_POLICER_METER_PACKET_TYPE_ENT;
typedef struct {
    GT_U32 firstPacketsCounter;
    GT_U32 numberOfFirstPacketsToMirror;
    SNET_XCAT_POLICER_IPFIX_PHA_METADATA_MODE_ENT phaMetadataMode;
    GT_U32 firstTimestamp;
    GT_BOOL firstTimestampValid;
    SKERNEL_EXT_PACKET_CMD_ENT lastPacketCommand;
    GT_U32 lastCpuOrDropCode;
} SNET_XCAT_SIP6_10_POLICER_IPFIX_SAMPLE_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/SBUF/Sbuf.c:
typedef struct {
    GT_U32 poolSize;
    GT_U32 bufferSize;
    SBUF_BUF_STC *buffersMetadataPtr;
    GT_U8 *buffersBytesPtr;
    SBUF_BUF_STC *firstFreeBufPtr;
    GT_U32 numOfFreeBuffers;
    GT_BOOL poolSuspended;
} SBUF_POOL_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/CRC/simCrc.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/Math/sMath.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/PresteraHash/crc_from_verilog.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/PresteraHash/smacHash.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/PresteraHash/smacHashCheetah.c:
typedef struct {
    CRC_FUNC_ENT funcType;
    GT_U32 startBit;
} CRC_FUNC_BITS_USED_INFO_STC;
typedef enum {CRC_FUNC_16A_E, CRC_FUNC_16B_E, CRC_FUNC_16C_E, CRC_FUNC_16D_E, CRC_FUNC_32A_E, CRC_FUNC_32B_E, CRC_FUNC_32K_E, CRC_FUNC_32Q_E, CRC_FUNC_64_E, CRC_FUNC___DUMMY__E} CRC_FUNC_ENT;
typedef struct {
    CRC_FUNC_TYPE calc36BitsData;
    CRC_FUNC_TYPE calc44BitsData;
    CRC_FUNC_TYPE calc60BitsData;
} CRC_FUNC_STC;
typedef void (*)(GT_U32 *, GT_U32 *, GT_U32 *) CRC_FUNC_TYPE;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/PresteraHash/smacHashDx.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/PresteraHash/smacHashExactMatch.c:
typedef char;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/SohoHash/smacHashSoho.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simDevices/src/common/Utils/rosStubs/gmStubs.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/h/asicSimulation/SCIB/scib.h:
typedef struct {
    GT_BOOL update_deviceForceBar0Bar2;
    GT_BOOL deviceForceBar0Bar2;
    GT_BOOL update_pciInfo;
    GT_U32 pciBus;
    GT_U32 pciDev;
    GT_U32 pciFunc;
    GT_BOOL update_bar0_base;
    GT_U32 bar0_base;
    GT_BOOL update_bar0_size;
    GT_U32 bar0_size;
    GT_BOOL update_bar0_base_high;
    GT_U32 bar0_base_high;
    GT_BOOL update_bar2_base;
    GT_U32 bar2_base;
    GT_BOOL update_bar2_size;
    GT_U32 bar2_size;
    GT_BOOL update_bar2_base_high;
    GT_U32 bar2_base_high;
} SCIB_BIND_EXT_INFO_STC;
typedef void (*)(GT_U32) SCIB_INTERRUPT_SET_FUN;
typedef enum {SCIB_MEMORY_READ_E, SCIB_MEMORY_WRITE_E, SKERNEL_MEMORY_READ_E, SKERNEL_MEMORY_WRITE_E, SCIB_MEMORY_READ_PCI_E, SCIB_MEMORY_WRITE_PCI_E, SKERNEL_MEMORY_READ_PCI_E, SKERNEL_MEMORY_WRITE_PCI_E, SCIB_MEMORY_READ_DFX_E, SCIB_MEMORY_WRITE_DFX_E, SKERNEL_MEMORY_READ_DFX_E, SKERNEL_MEMORY_WRITE_DFX_E, SCIB_MEMORY_READ_BAR0_E = 16, SCIB_MEMORY_WRITE_BAR0_E, SKERNEL_MEMORY_READ_BAR0_E, SKERNEL_MEMORY_WRITE_BAR0_E, SCIB_MEMORY_READ_BAR2_E = 32, SCIB_MEMORY_WRITE_BAR2_E, SKERNEL_MEMORY_READ_BAR2_E, 
    SKERNEL_MEMORY_WRITE_BAR2_E, SCIB_MEMORY_LAST_E = 65535} SCIB_MEMORY_ACCESS_TYPE;
typedef enum {SCIB_MEM_ACCESS_PCI_E, SCIB_MEM_ACCESS_DFX_E, SCIB_MEM_ACCESS_CORE_E, SCIB_MEM_ACCESS_BAR0_E, SCIB_MEM_ACCESS_BAR2_E, SCIB_MEM_ACCESS_LAST_E} SCIB_MEM_ACCESS_CLIENT;
typedef void (*)(SCIB_MEMORY_ACCESS_TYPE, void *, GT_U32, GT_U32, GT_U32 *) SCIB_RW_MEMORY_FUN;

File simulation/simGeneral/h/asicSimulation/SDistributed/new_message.h:
typedef struct {
    MSG_HDR hdr;
    GT_U32 processId;
} APP_PID_MSG;
typedef enum {BROKER_DMA_MODE_SOCKET, BROKER_DMA_MODE_SHARED_MEMORY} BROKER_DMA_MODE;
typedef enum {INTERRUPT_MODE_BROKER_AUTOMATICALLY_MASK_INTERRUPT_LINE, INTERRUPT_MODE_BROKER_USE_MASK_INTERRUPT_LINE_MSG} BROKER_INTERRUPT_MASK_MODE;
typedef struct {
    MSG_HDR hdr;
    GT_U32 mainTarget;
    GT_U32 secondaryTarget;
    GT_U32 debugLevel;
} DEBUG_LEVEL_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 readLen;
    GT_U32 address;
} DMA_READ_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 readLen;
    GT_U32 *dataPtr;
} DMA_READ_RESPONSE_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 writeLen;
    GT_U32 address;
    GT_U32 *dataPtr;
} DMA_WRITE_MSG;
typedef struct {
    MSG_HDR hdr;
    INIT_PARAM_SINGLE_DEVICE_INFO deviceInfo;
} INIT_PARAM_MSG;
typedef struct {
    GT_U32 deviceId;
    GT_U32 deviceHwId;
    GT_U32 interruptLine;
    GT_U32 isPp;
    GT_U32 addressCompletionStatus;
    GT_U32 nicDevice;
} INIT_PARAM_SINGLE_DEVICE_INFO;
typedef struct {
    MSG_HDR hdr;
    GT_U32 deviceId;
} INTERRUPT_SET_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 interruptLineId;
} MASK_INTERRUPT_MSG;
typedef struct {
    GT_U32 type;
    GT_U32 msgLen;
} MSG_HDR;
typedef struct {
    MSG_HDR hdr;
    GT_U32 deviceId;
    GT_U32 accessType;
    GT_U32 readLen;
    GT_U32 address;
} READ_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 readLen;
    GT_U32 *dataPtr;
} READ_RESPONSE_MSG;
typedef enum {REGISTER_MEMORY_ACCESS, PCI_REGISTERS_ACCESS} READ_WRITE_ACCESS_TYPE;
typedef struct {
    MSG_HDR hdr;
    GT_U32 startAddress;
    GT_U32 size;
    GT_U32 key;
    GT_U32 dmaMode;
} REGISTER_DMA_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 interruptLineId;
    GT_U32 signalId;
    GT_U32 maskMode;
} REGISTER_INTERRUPT_MSG;
typedef struct {
    MSG_HDR hdr;
} RESET_PARAM_MSG;
typedef enum {TARGET_OF_MESSAGE_APPLICATION_E, TARGET_OF_MESSAGE_BROKER_E, TARGET_OF_MESSAGE_BUS_E, TARGET_OF_MESSAGE_DEVICE_E, TARGET_OF_MESSAGE_ALL_E} TARGET_OF_MESSAGE_ENT;
typedef struct {
    MSG_HDR hdr;
    GT_U32 interruptLineId;
} UNMASK_INTERRUPT_MSG;
typedef struct {
    MSG_HDR hdr;
    GT_U32 deviceId;
    GT_U32 accessType;
    GT_U32 writeLen;
    GT_U32 address;
    GT_U32 *dataPtr;
} WRITE_MSG;

File simulation/simGeneral/h/asicSimulation/SDistributed/sdistributed.h:
typedef enum {DEBUG_SIM_DISTRIBUTED_PERFORMANCE_CHECK_REGISTER_READ_E, DEBUG_SIM_DISTRIBUTED_PERFORMANCE_CHECK_REGISTER_WRITE_E, DEBUG_SIM_DISTRIBUTED_PERFORMANCE_CHECK_REGISTER_WRITE_AND_READ_E} DEBUG_SIM_DISTRIBUTED_PERFORMANCE_CHECK_ENT;
typedef struct {
    GT_U32 deviceId;
    GT_U32 deviceHwId;
    GT_U32 interruptLine;
    GT_U32 isPp;
    GT_U32 addressCompletionStatus;
    GT_U32 nicDevice;
} SIM_DISTRIBUTED_INIT_DEVICE_STC;

File simulation/simGeneral/h/asicSimulation/SInit/sinit.h:
typedef enum {SASICG_SIMULATION_ROLE_NON_DISTRIBUTED_E, SASICG_SIMULATION_ROLE_DISTRIBUTED_APPLICATION_SIDE_E, SASICG_SIMULATION_ROLE_DISTRIBUTED_ASIC_SIDE_E, SASICG_SIMULATION_ROLE_DISTRIBUTED_INTERFACE_BUS_BRIDGE_E, SASICG_SIMULATION_ROLE_BROKER_E, SASICG_SIMULATION_ROLE_DISTRIBUTED_APPLICATION_SIDE_VIA_BROKER_E, SASICG_SIMULATION_ROLE_DISTRIBUTED_ASIC_SIDE_VIA_INTERFACE_BUS_BRIDGE_E, SASICG_SIMULATION_ROLE_LAST_E} SASICG_SIMULATION_ROLES_ENT;
typedef struct {
    GT_U32 ownSectionId;
    GT_U32 numDevices;
    GT_U32 *devicesIdArray;
} SINIT_BOARD_SECTION_INFO_STC;

File simulation/simGeneral/h/asicSimulation/SLog/simLog.h:
typedef struct {
    GT_U32 filterId;
    GT_U32 devNum;
    GT_U32 portGroup;
} SIM_LOG_DEV_PORT_GROUP_FILTERS_STC;
typedef enum {SIM_LOG_FRAME_COMMAND_TYPE___MUST_BE_FIRST___E, SIM_LOG_FRAME_COMMAND_TYPE_GENERAL_E, SIM_LOG_FRAME_COMMAND_TYPE_FROM_CPU_E, SIM_LOG_FRAME_COMMAND_TYPE___LAST___E} SIM_LOG_FRAME_COMMAND_TYPE_ENT;
typedef struct SIM_LOG_FRAME_INFO_STCT SIM_LOG_FRAME_INFO_STC;
struct SIM_LOG_FRAME_INFO_STCT;
typedef enum {SIM_LOG_FRAME_UNIT___MUST_BE_FIRST___E, SIM_LOG_FRAME_UNIT_PHY_INGRESS_E, SIM_LOG_FRAME_UNIT_PHY_EGRESS_E, SIM_LOG_FRAME_UNIT_PORT_MAC_INGRESS_E, SIM_LOG_FRAME_UNIT_RXDMA_E, SIM_LOG_FRAME_UNIT_TTI_E, SIM_LOG_FRAME_UNIT_PPU_E, SIM_LOG_FRAME_UNIT_IPCL_E, SIM_LOG_FRAME_UNIT_L2I_E, SIM_LOG_FRAME_UNIT_IPVX_E, SIM_LOG_FRAME_UNIT_IOAM_E, SIM_LOG_FRAME_UNIT_SMU_E, SIM_LOG_FRAME_UNIT_IPLR_E, SIM_LOG_FRAME_UNIT_MLL_E, SIM_LOG_FRAME_UNIT_EQ_E, SIM_LOG_FRAME_UNIT_PIPE_PCP_E, 
    SIM_LOG_FRAME_UNIT_INGRESS_PIPE_E, SIM_LOG_FRAME_UNIT_EGF_EFT_SHT_QAG_E, SIM_LOG_FRAME_UNIT_TXQ_E, SIM_LOG_FRAME_UNIT_HA_E, SIM_LOG_FRAME_UNIT_EPCL_E, SIM_LOG_FRAME_UNIT_TRAFFIC_MANAGER_QUEUE_MAPPER_E, SIM_LOG_FRAME_UNIT_EPLR_E, SIM_LOG_FRAME_UNIT_TRAFFIC_MANAGER_DROP_AND_STATISTICS_E, SIM_LOG_FRAME_UNIT_ERMRK_E, SIM_LOG_FRAME_UNIT_EREP_E, SIM_LOG_FRAME_UNIT_PREQ_E, SIM_LOG_FRAME_UNIT_TRAFFIC_MANAGER_ENGINE_E, SIM_LOG_FRAME_UNIT_TXDMA_E, SIM_LOG_FRAME_UNIT_TXFIFO_E, 
    SIM_LOG_FRAME_UNIT_PORT_MAC_EGRESS_E, SIM_LOG_FRAME_UNIT_PHA_E, SIM_LOG_FRAME_UNIT_EGRESS_PIPE_E, SIM_LOG_FRAME_UNIT_CNC_E, SIM_LOG_FRAME_UNIT_TCAM_E, SIM_LOG_FRAME_UNIT_GENERAL_E, SIM_LOG_FRAME_UNIT_ALL_E, SIM_LOG_FRAME_UNIT___ALLOW_ALL_UNITS___E, SIM_LOG_FRAME_UNIT___RESTORE_PREVIOUS_UNIT___E, SIM_LOG_FRAME_UNIT___LAST___E} SIM_LOG_FRAME_UNIT_ENT;
typedef enum {SIM_LOG_INFO_TYPE_PACKET_E, SIM_LOG_INFO_TYPE_DEVICE_E, SIM_LOG_INFO_TYPE_TCAM_E, SIM_LOG_INFO_TYPE_MEMORY_E} SIM_LOG_INFO_TYPE_ENT;
typedef enum {SIM_LOG_OUTPUT_DISABLED_E, SIM_LOG_OUTPUT_LOGFILE_E, SIM_LOG_OUTPUT_STDOUT_E, SIM_LOG_OUTPUT_BOTH_E} SIM_LOG_OUTPUT_TYPE_ENT;

File simulation/simGeneral/h/asicSimulation/SLog/simLogInfoTypeMemory.h:
typedef enum {SIM_LOG_MEMORY_READ_E, SIM_LOG_MEMORY_WRITE_E, SIM_LOG_MEMORY_PCI_READ_E, SIM_LOG_MEMORY_PCI_WRITE_E, SIM_LOG_MEMORY_DFX_READ_E, SIM_LOG_MEMORY_DFX_WRITE_E} SIM_LOG_MEMORY_ACTION_ENT;
typedef enum {SIM_LOG_MEMORY_CPU_E, SIM_LOG_MEMORY_DEV_E} SIM_LOG_MEMORY_SOURCE_ENT;

File simulation/simGeneral/h/asicSimulation/wmApi.h:
typedef struct {
    WM_DMA_PCI_READ_CB_FUNC dmaReadFunc;
    WM_DMA_PCI_WRITE_CB_FUNC dmaWriteFunc;
    WM_INTERRUPT_TRIGGER_CB_FUNC interruptTriggerFunc;
    WM_TRAFFIC_EGRESS_PACKET_CB_FUNC egressPacketFunc;
    WM_TRACE_INFO_CB_FUNC traceLogFunc;
} WM_BIND_CB_FUNC_STC;
typedef WM_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32 *) WM_DMA_PCI_READ_CB_FUNC;
typedef WM_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32 *) WM_DMA_PCI_WRITE_CB_FUNC;
typedef WM_STATUS (*)(GT_U32, GT_U32, GT_U32, GT_U32) WM_INTERRUPT_TRIGGER_CB_FUNC;
typedef struct {
    WM_PORT_CONNECTION_TYPE_ENT connectionType;
    struct {...} peerInfo;
    GT_BOOL allowSlan;
} WM_PORT_CONNECTION_INFO_STC;
typedef enum {WM_PORT_CONNECTION_TYPE_NONE_E, WM_PORT_CONNECTION_TYPE_CALLBACK_E, WM_PORT_CONNECTION_TYPE_PEER_PORT_E, WM_PORT_CONNECTION_TYPE__LAST__E} WM_PORT_CONNECTION_TYPE_ENT;
typedef unsigned int WM_STATUS;
typedef WM_STATUS (*)(const char *) WM_TRACE_INFO_CB_FUNC;
typedef WM_STATUS (*)(GT_U32, GT_U32, GT_U32, char *) WM_TRAFFIC_EGRESS_PACKET_CB_FUNC;

File simulation/simGeneral/h/common/SMiniBuf/SMiniBuf.h:
typedef void * SMINI_BUF_POOL_ID;
typedef struct SMINI_BUF_STCT SMINI_BUF_STC;
struct SMINI_BUF_STCT;

File simulation/simGeneral/h/common/SQue/squeue.h:
typedef SIM_BUFFER_STC * SIM_BUFFER_ID;
typedef struct SIM_BUFFER_STCT SIM_BUFFER_STC;
struct SIM_BUFFER_STCT;
typedef void * SQUE_QUEUE_ID;

File simulation/simGeneral/h/common/Utils/Error/serror.h:
typedef void (*)(char *) SUTILS_FATAL_ERROR_FUN;

File simulation/simGeneral/h/os/simEnvDepTypes.h:
typedef int GT_32;
typedef unsigned int GT_BIT;
typedef enum {GT_FALSE, GT_TRUE} GT_BOOL;
typedef char GT_CHAR;
typedef char * GT_CHAR_PTR;
typedef void * GT_PTR;
typedef unsigned long GT_SIZE_T;
typedef long GT_SSIZE_T;
typedef unsigned short GT_U16;
typedef uint16_t * GT_U16_PTR;
typedef unsigned int GT_U32;
typedef uint32_t * GT_U32_PTR;
typedef struct {
    GT_U32 l[2];
} GT_U64;
typedef unsigned char GT_U8;
typedef uint8_t * GT_U8_PTR;
typedef unsigned long GT_UINTPTR;
typedef void * HANDLE;
typedef unsigned int UINT_32;

File simulation/simGeneral/h/os/simOsBind/simOsBindConsole.h:
typedef GT_STATUS (*)(void) SIM_OS_ALLOC_CONSOLE_FUN;
typedef struct {
    SIM_OS_GET_COMMAND_LINE_FUN simOsGetCommandLine;
    SIM_OS_ALLOC_CONSOLE_FUN simOsAllocConsole;
    SIM_OS_SET_CONSOLE_TITLE_FUN simOsSetConsoleTitle;
    SIM_OS_SHELL_EXECUTE_FUN simOsShellExecute;
} SIM_OS_FUNC_BIND_CONSOLE_STC;
typedef char *(*)(void) SIM_OS_GET_COMMAND_LINE_FUN;
typedef GT_STATUS (*)(char *) SIM_OS_SET_CONSOLE_TITLE_FUN;
typedef GT_STATUS (*)(char *) SIM_OS_SHELL_EXECUTE_FUN;

File simulation/simGeneral/h/os/simOsBind/simOsBindIniFile.h:
typedef struct {
    SIM_OS_GET_CNF_VALUE_FUN simOsGetCnfValue;
    SIM_OS_SET_CNF_FILE_FUN simOsSetCnfFile;
} SIM_OS_FUNC_BIND_INI_FILE_STC;
typedef GT_BOOL (*)(char *, char *, GT_U32, char *) SIM_OS_GET_CNF_VALUE_FUN;
typedef void (*)(char *) SIM_OS_SET_CNF_FILE_FUN;

File simulation/simGeneral/h/os/simOsBind/simOsBindIntr.h:
typedef struct {
    SIM_OS_INTERRUPT_SET_FUN simOsInterruptSet;
    SIM_OS_INIT_INTERRUPT_FUN simOsInitInterrupt;
} SIM_OS_FUNC_BIND_INTERRUPTS_STC;
typedef void (*)(void) SIM_OS_INIT_INTERRUPT_FUN;
typedef GT_STATUS (*)(GT_U32) SIM_OS_INTERRUPT_SET_FUN;

File simulation/simGeneral/h/os/simOsBind/simOsBindProcess.h:
typedef unsigned int GT_FLAGS;
typedef unsigned int GT_PROCESS_ID;
typedef unsigned long GT_SH_MEM_ID;
typedef unsigned int GT_SH_MEM_KEY;
typedef int GT_SIGNAL_ID;
typedef void (*)(GT_SIGNAL_ID) PROCESS_HADLER_FUN;
typedef struct {
    SIM_OS_SHARED_MEM_GET_FUN simOsSharedMemGet;
    SIM_OS_SHARED_MEM_ATTACH_FUN simOsSharedMemAttach;
    SIM_OS_PROCESS_ID_GET_FUN simOsProcessIdGet;
    SIM_OS_PROCESS_NOTIFY_FUN simOsProcessNotify;
    SIM_OS_PROCESS_HANDLER_FUN simOsProcessHandler;
} SIM_OS_FUNC_BIND_PROCESS_STC;
typedef GT_STATUS (*)(GT_SIGNAL_ID, PROCESS_HADLER_FUN) SIM_OS_PROCESS_HANDLER_FUN;
typedef GT_STATUS (*)(GT_PROCESS_ID *) SIM_OS_PROCESS_ID_GET_FUN;
typedef GT_STATUS (*)(GT_PROCESS_ID, GT_U32) SIM_OS_PROCESS_NOTIFY_FUN;
typedef void *(*)(GT_SH_MEM_ID, const void *, GT_FLAGS) SIM_OS_SHARED_MEM_ATTACH_FUN;
typedef GT_STATUS (*)(GT_SH_MEM_KEY, GT_U32, GT_FLAGS, GT_SH_MEM_ID *) SIM_OS_SHARED_MEM_GET_FUN;

File simulation/simGeneral/h/os/simOsBind/simOsBindSlan.h:
typedef void (*)(SIM_OS_SLAN_ID, GT_BOOL) SIM_OS_CHANGE_LINK_STATUS_FUN;
typedef struct {
    SIM_OS_SLAN_BIND_FUN simOsSlanBind;
    SIM_OS_SLAN_TRANSMIT_FUN simOsSlanTransmit;
    SIM_OS_SLAN_UNBIND_FUN simOsSlanUnbind;
    SIM_OS_SLAN_INIT_FUN simOsSlanInit;
    SIM_OS_SLAN_CLOSE_FUN simOsSlanClose;
    SIM_OS_SLAN_START_FUN simOsSlanStart;
    SIM_OS_CHANGE_LINK_STATUS_FUN simOsChangeLinkStatus;
} SIM_OS_FUNC_BIND_SLAN_STC;
typedef SIM_OS_SLAN_ID (*)(char *, char *, void *, SIM_OS_SLAN_RCV_FUN) SIM_OS_SLAN_BIND_FUN;
typedef void (*)(void) SIM_OS_SLAN_CLOSE_FUN;
typedef void * SIM_OS_SLAN_ID;
typedef void (*)(void) SIM_OS_SLAN_INIT_FUN;
typedef enum {SIM_OS_SLAN_MSG_CODE_FRAME_CNS} SIM_OS_SLAN_MSG_TYPE_ENT;
typedef char *(*)(GT_U32, GT_U32, GT_U32, GT_U32, void *, char *) SIM_OS_SLAN_RCV_FUN;
typedef void (*)(void) SIM_OS_SLAN_START_FUN;
typedef unsigned int (*)(SIM_OS_SLAN_ID, SIM_OS_SLAN_MSG_TYPE_ENT, GT_U32, char *) SIM_OS_SLAN_TRANSMIT_FUN;
typedef void (*)(SIM_OS_SLAN_ID) SIM_OS_SLAN_UNBIND_FUN;

File simulation/simGeneral/h/os/simOsBind/simOsBindSockets.h:
typedef int GT_FD;
typedef int GT_SOCKET_FD;
typedef int GT_SOCKET_PORT;
typedef struct {
    void *fd_set;
} GT_SOCK_FD_SET_STC;
typedef struct {
    SIM_OS_SOCKET_TCP_CREATE_FUN osSocketTcpCreate;
    SIM_OS_SOCKET_UDS_CREATE_FUN osSocketUdsCreate;
    SIM_OS_SOCKET_UDP_CREATE_FUN osSocketUdpCreate;
    SIM_OS_SOCKET_TCP_DESTROY_FUN osSocketTcpDestroy;
    SIM_OS_SOCKET_UDP_DESTROY_FUN osSocketUdpDestroy;
    SIM_OS_SOCKET_CREATE_ADDR_FUN osSocketCreateAddr;
    SIM_OS_SOCKET_DESTROY_ADDR_FUN osSocketDestroyAddr;
    SIM_OS_SOCKET_BIND_FUN osSocketBind;
    SIM_OS_SOCKET_LISTEN_FUN osSocketListen;
    SIM_OS_SOCKET_ACCEPT_FUN osSocketAccept;
    SIM_OS_SOCKET_CONNECT_FUN osSocketConnect;
    SIM_OS_SOCKET_SET_NON_BLOCK_FUN osSocketSetNonBlock;
    SIM_OS_SOCKET_SET_BLOCK_FUN osSocketSetBlock;
    SIM_OS_SOCKET_SEND_FUN osSocketSend;
    SIM_OS_SOCKET_SEND_TO_FUN osSocketSendTo;
    SIM_OS_SOCKET_RECV_FUN osSocketRecv;
    SIM_OS_SOCKET_RECV_FROM_FUN osSocketRecvFrom;
    SIM_OS_SOCKET_SET_SOCKET_NO_LINGER_FUN osSocketSetSocketNoLinger;
    SIM_OS_SOCKET_EXTRACT_IP_ADDR_FROM_SOCKET_ADDR_FUN osSocketExtractIpAddrFromSocketAddr;
    SIM_OS_SOCKET_GET_SOCKET_ADDR_SIZE_FUN osSocketGetSocketAddrSize;
    SIM_OS_SOCKET_SHUT_DOWN_FUN osSocketShutDown;
    SIM_OS_SELECT_CREATE_SET_FUN osSelectCreateSet;
    SIM_OS_SELECT_ERASE_SET_FUN osSelectEraseSet;
    SIM_OS_SELECT_ZERO_SET_FUN osSelectZeroSet;
    SIM_OS_SELECT_ADD_FD_TO_SET_FUN osSelectAddFdToSet;
    SIM_OS_SELECT_CLEAR_FD_FROM_SET_FUN osSelectClearFdFromSet;
    SIM_OS_SELECT_IS_FD_SET_FUN osSelectIsFdSet;
    SIM_OS_SELECT_COPY_SET_FUN osSelectCopySet;
    SIM_OS_SELECT_FUN osSelect;
    SIM_OS_SOCKET_GET_SOCKET_FD_SET_SIZE_FUN osSocketGetSocketFdSetSize;
    SIM_OS_SOCKET_SET_SOCKET_NO_DELAY_FUN simOsSocketSetSocketNoDelay;
} SIM_OS_FUNC_BIND_SOCKETS_STC;
typedef void (*)(void *, GT_FD) SIM_OS_SELECT_ADD_FD_TO_SET_FUN;
typedef void (*)(void *, GT_FD) SIM_OS_SELECT_CLEAR_FD_FROM_SET_FUN;
typedef void (*)(void *, void *) SIM_OS_SELECT_COPY_SET_FUN;
typedef void *(*)(void) SIM_OS_SELECT_CREATE_SET_FUN;
typedef void (*)(void *) SIM_OS_SELECT_ERASE_SET_FUN;
typedef GT_SSIZE_T (*)(GT_FD, void *, void *, void *, GT_U32) SIM_OS_SELECT_FUN;
typedef GT_BOOL (*)(void *, GT_FD) SIM_OS_SELECT_IS_FD_SET_FUN;
typedef void (*)(void *) SIM_OS_SELECT_ZERO_SET_FUN;
typedef GT_SOCKET_FD (*)(GT_SOCKET_FD, void *, GT_SIZE_T *) SIM_OS_SOCKET_ACCEPT_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD, void *, GT_SIZE_T) SIM_OS_SOCKET_BIND_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD, void *, GT_SIZE_T) SIM_OS_SOCKET_CONNECT_FUN;
typedef GT_STATUS (*)(const GT_CHAR *, GT_SOCKET_PORT, void **, GT_SIZE_T *) SIM_OS_SOCKET_CREATE_ADDR_FUN;
typedef void (*)(void *) SIM_OS_SOCKET_DESTROY_ADDR_FUN;
typedef GT_STATUS (*)(void *, GT_U32 *) SIM_OS_SOCKET_EXTRACT_IP_ADDR_FROM_SOCKET_ADDR_FUN;
typedef GT_STATUS (*)(GT_U32 *) SIM_OS_SOCKET_GET_SOCKET_ADDR_SIZE_FUN;
typedef GT_STATUS (*)(GT_U32 *) SIM_OS_SOCKET_GET_SOCKET_FD_SET_SIZE_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD, GT_SSIZE_T) SIM_OS_SOCKET_LISTEN_FUN;
typedef GT_SSIZE_T (*)(GT_SOCKET_FD, void *, GT_SIZE_T, GT_BOOL, void *, GT_SIZE_T *) SIM_OS_SOCKET_RECV_FROM_FUN;
typedef GT_SSIZE_T (*)(GT_SOCKET_FD, void *, GT_SIZE_T, GT_BOOL) SIM_OS_SOCKET_RECV_FUN;
typedef GT_SSIZE_T (*)(GT_SOCKET_FD, const void *, GT_SIZE_T) SIM_OS_SOCKET_SEND_FUN;
typedef GT_SSIZE_T (*)(GT_SOCKET_FD, const void *, GT_SIZE_T, void *, GT_SIZE_T) SIM_OS_SOCKET_SEND_TO_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD) SIM_OS_SOCKET_SET_BLOCK_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD) SIM_OS_SOCKET_SET_NON_BLOCK_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD) SIM_OS_SOCKET_SET_SOCKET_NO_DELAY_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD) SIM_OS_SOCKET_SET_SOCKET_NO_LINGER_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD, SOCKET_SHUTDOWN_OPERATION) SIM_OS_SOCKET_SHUT_DOWN_FUN;
typedef GT_SOCKET_FD (*)(GT_32) SIM_OS_SOCKET_TCP_CREATE_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD) SIM_OS_SOCKET_TCP_DESTROY_FUN;
typedef GT_SOCKET_FD (*)(GT_32) SIM_OS_SOCKET_UDP_CREATE_FUN;
typedef GT_STATUS (*)(GT_SOCKET_FD) SIM_OS_SOCKET_UDP_DESTROY_FUN;
typedef GT_SOCKET_FD (*)() SIM_OS_SOCKET_UDS_CREATE_FUN;
typedef enum {SOCKET_SHUTDOWN_CLOSE_INPUT, SOCKET_SHUTDOWN_CLOSE_OUTPUT, SOCKET_SHUTDOWN_CLOSE_ALL} SOCKET_SHUTDOWN_OPERATION;

File simulation/simGeneral/h/os/simOsBind/simOsBindSync.h:
typedef unsigned long GT_MUTEX;
typedef unsigned long GT_SEM;
typedef GT_SEM (*)(void) SIM_OS_EVENT_CREATE_FUN;
typedef GT_STATUS (*)(GT_SEM) SIM_OS_EVENT_SET_FUN;
typedef GT_STATUS (*)(GT_SEM, GT_U32) SIM_OS_EVENT_WAIT_FUN;
typedef struct {
    SIM_OS_SEM_CREATE_FUN simOsSemCreate;
    SIM_OS_SEM_DELETE_FUN simOsSemDelete;
    SIM_OS_SEM_WAIT_FUN simOsSemWait;
    SIM_OS_SEM_SIGNAL_FUN simOsSemSignal;
    SIM_OS_MUTEX_CREATE_FUN simOsMutexCreate;
    SIM_OS_MUTEX_DELETE_FUN simOsMutexDelete;
    SIM_OS_MUTEX_UNLOCK_FUN simOsMutexUnlock;
    SIM_OS_MUTEX_LOCK_FUN simOsMutexLock;
    SIM_OS_EVENT_CREATE_FUN simOsEventCreate;
    SIM_OS_EVENT_SET_FUN simOsEventSet;
    SIM_OS_EVENT_WAIT_FUN simOsEventWait;
    SIM_OS_SEND_DATA_TO_VISUAL_ASIC_FUN simOsSendDataToVisualAsic;
    SIM_OS_TIME_FUN simOsTime;
} SIM_OS_FUNC_BIND_SYNC_STC;
typedef GT_MUTEX (*)(void) SIM_OS_MUTEX_CREATE_FUN;
typedef void (*)(GT_MUTEX) SIM_OS_MUTEX_DELETE_FUN;
typedef void (*)(GT_MUTEX) SIM_OS_MUTEX_LOCK_FUN;
typedef void (*)(GT_MUTEX) SIM_OS_MUTEX_UNLOCK_FUN;
typedef GT_SEM (*)(GT_U32, GT_U32) SIM_OS_SEM_CREATE_FUN;
typedef GT_STATUS (*)(GT_SEM) SIM_OS_SEM_DELETE_FUN;
typedef GT_STATUS (*)(GT_SEM) SIM_OS_SEM_SIGNAL_FUN;
typedef GT_STATUS (*)(GT_SEM, GT_U32) SIM_OS_SEM_WAIT_FUN;
typedef void (*)(void **, GT_U32) SIM_OS_SEND_DATA_TO_VISUAL_ASIC_FUN;
typedef GT_U32 (*)(void) SIM_OS_TIME_FUN;

File simulation/simGeneral/h/os/simOsBind/simOsBindTask.h:
typedef void * GT_TASK_HANDLE;
typedef unsigned long GT_TASK_ID;
typedef enum {GT_TASK_PRIORITY_ABOVE_NORMAL = 1, GT_TASK_PRIORITY_BELOW_NORMAL, GT_TASK_PRIORITY_HIGHEST, GT_TASK_PRIORITY_IDLE, GT_TASK_PRIORITY_LOWEST, GT_TASK_PRIORITY_NORMAL, GT_TASK_PRIORITY_TIME_CRITICAL} GT_TASK_PRIORITY_ENT;
typedef void (*)(void) SIM_OS_ABORT_FUN;
typedef GT_U32 (*)(GT_U32, GT_CHAR *, GT_U32) SIM_OS_BACK_TRACE;
typedef struct {
    SIM_OS_TASK_CREATE_FUN simOsTaskCreate;
    SIM_OS_TASK_DELETE_FUN simOsTaskDelete;
    SIM_OS_TASK_OWN_TASK_PURPOSE_SET_FUN simOsTaskOwnTaskPurposeSet;
    SIM_OS_TASK_OWN_TASK_PURPOSE_GET_FUN simOsTaskOwnTaskPurposeGet;
    SIM_OS_SLEEP_FUN simOsSleep;
    SIM_OS_TICK_GET_FUN simOsTickGet;
    SIM_OS_ABORT_FUN simOsAbort;
    SIM_OS_LAUNCH_APPLICATION_FUN simOsLaunchApplication;
    SIM_OS_BACK_TRACE simOsBacktrace;
} SIM_OS_FUNC_BIND_TASK_STC;
typedef void (*)(char *) SIM_OS_LAUNCH_APPLICATION_FUN;
typedef void (*)(GT_U32) SIM_OS_SLEEP_FUN;
typedef struct {
    GT_U32 currentPipeId;
    GT_U32 currentMgUnitIndex;
    GT_U32 extParamArr[2];
    GT_BOOL additionalInfo;
} SIM_OS_TASK_COOKIE_INFO_STC;
typedef GT_TASK_HANDLE (*)(GT_TASK_PRIORITY_ENT, unsigned int (*)(void *), void *) SIM_OS_TASK_CREATE_FUN;
typedef GT_STATUS (*)(GT_TASK_HANDLE) SIM_OS_TASK_DELETE_FUN;
typedef GT_STATUS (*)(SIM_OS_TASK_PURPOSE_TYPE_ENT *) SIM_OS_TASK_OWN_TASK_PURPOSE_GET_FUN;
typedef GT_STATUS (*)(SIM_OS_TASK_PURPOSE_TYPE_ENT, SIM_OS_TASK_COOKIE_INFO_STC *) SIM_OS_TASK_OWN_TASK_PURPOSE_SET_FUN;
typedef enum {SIM_OS_TASK_PURPOSE_TYPE_CPU_APPLICATION_E, SIM_OS_TASK_PURPOSE_TYPE_CPU_ISR_E, SIM_OS_TASK_PURPOSE_TYPE_PP_AGING_DAEMON_E, SIM_OS_TASK_PURPOSE_TYPE_PP_PIPE_PROCESSING_DAEMON_E, SIM_OS_TASK_PURPOSE_TYPE_PP_PIPE_SDMA_QUEUE_DAEMON_E, SIM_OS_TASK_PURPOSE_TYPE_PP_PIPE_OAM_KEEP_ALIVE_DAEMON_E, SIM_OS_TASK_PURPOSE_TYPE_PP_PIPE_GENERAL_PURPOSE_E, SIM_OS_TASK_PURPOSE_TYPE_PP_PIPE_SOFT_RESET_E, SIM_OS_TASK_PURPOSE_TYPE_INITIALIZATION_E, SIM_OS_TASK_PURPOSE_TYPE_PREQ_SRF_DAEMON_E, 
    SIM_OS_TASK_PURPOSE_TYPE_PP_PIPE_GENERAL____LAST__E} SIM_OS_TASK_PURPOSE_TYPE_ENT;
typedef GT_U32 (*)(void) SIM_OS_TICK_GET_FUN;

File simulation/simGeneral/h/os/simTypes.h:
typedef struct {
    GT_U8 arEther[6];
} GT_ETHERADDR;
typedef unsigned int GT_STATUS;

File simulation/simGeneral/h/os/simTypesBind.h:
typedef struct {
    SIM_OS_WRAPPER_OPEN_FUN osWrapperOpen;
    SIM_OS_SERIAL_DESTROY_SERIAL_FUN osSerialDestroySerial;
    SIM_OS_FUNC_BIND_TASK_STC tasks;
    SIM_OS_FUNC_BIND_SYNC_STC sync;
    SIM_OS_FUNC_BIND_SLAN_STC slan;
    SIM_OS_FUNC_BIND_INTERRUPTS_STC interrupts;
    SIM_OS_FUNC_BIND_INI_FILE_STC iniFile;
    SIM_OS_FUNC_BIND_CONSOLE_STC console;
    SIM_OS_FUNC_BIND_SOCKETS_STC sockets;
    SIM_OS_FUNC_BIND_PROCESS_STC processes;
} SIM_OS_FUNC_BIND_STC;
typedef GT_STATUS (*)(void) SIM_OS_SERIAL_DESTROY_SERIAL_FUN;
typedef GT_STATUS (*)(void *) SIM_OS_WRAPPER_OPEN_FUN;

File simulation/simGeneral/src/asicSimulation/SCIB/scib.c:
typedef void (*)(GT_U32, GT_U32, GT_U32, GT_U32 *, GT_U32) DMA_READ_FUN;
typedef void (*)(GT_U32, GT_U32, GT_U32, GT_U32 *, GT_U32) DMA_WRITE_FUN;
typedef struct {
    GT_BOOL valid;
    void *deviceObj;
    SCIB_RW_MEMORY_FUN memAccesFun;
    GT_U32 intLine;
    GT_U32 deviceHwId;
    GT_BOOL addressCompletionStatus;
    SCIB_RW_MEMORY_FUN origMemAccesFun;
    SCIB_INTERRUPT_SET_FUN interruptMppTriggerFun;
    GT_U32 forbiddenInterfaceBmp;
    GT_BOOL deviceForceBar0Bar2;
    GT_U32 pciBus;
    GT_U32 pciDev;
    GT_U32 pciFunc;
    GT_U32 bar0_base[2];
    GT_U32 bar0_size;
    GT_U32 bar2_base[2];
    GT_U32 bar2_size;
    GT_U32 interrupt_line;
    GT_U32 interrupt_source;
    GT_U32 interrupt_flags;
} SCIB_DEVICE_DB_STC;
typedef struct {
    SCIB_INTERRUPT_SET_FUN interruptSetFun;
    DMA_READ_FUN dmaReadFun;
    DMA_WRITE_FUN dmaWriteFun;
} SCIB_GLOBAL_DB_STC;
typedef struct {
    GT_BOOL inside_dmaReadFunc;
    GT_BOOL stuck_inside_dmaReadFunc;
    GT_BOOL inside_dmaWriteFunc;
    GT_BOOL stuck_inside_dmaWriteFunc;
    GT_BOOL inside_interruptTriggerFunc;
    GT_BOOL stuck_inside_interruptTriggerFunc;
    GT_BOOL inside_egressPacketFunc;
    GT_BOOL stuck_inside_egressPacketFunc;
    GT_BOOL inside_traceLogFunc;
    GT_BOOL stuck_inside_traceLogFunc;
} WM_CHECK_CALLBACK_RETURN_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef unsigned long long sim_uint64_t;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SDistributed/sdistributed_new.c:
typedef struct {
    GT_U32 msgType;
    BROKER_BUF_INFO_UNT info;
} BROKER_BUF_INFO_STC;
typedef union {
    BROKER_BUF_READ_REG_INFO_STC read;
    WRITE_MSG write;
} BROKER_BUF_INFO_UNT;
typedef struct {
    READ_MSG read;
    GT_SEM wakeUpSem;
    void *dataPtr;
} BROKER_BUF_READ_REG_INFO_STC;
typedef struct {
    GT_MUTEX protectMutex;
    GT_SEM getInfoWaitSemaphore;
    GT_PROCESS_ID applicationProcessId;
    BROKER_INTERRUPT_SET_MODE_ENT interruptMode;
    BROKER_INTERRUPT_INFO_STC interruptInfoArray[2];
    CONNECTION_INFO_STC *connectionPtr;
} BROKER_CONNECTION_CLIENT_COOKIE_STC;
typedef struct {
    BROKER_DMA_MODE_ENT mode;
    GT_BOOL registered;
    GT_U32 addressStart;
    GT_U32 addressEnd;
    GT_SH_MEM_KEY key;
    GT_SH_MEM_ID memoryId;
    void *memoryPtr;
} BROKER_DMA_INFO_STC;
typedef enum {BROKER_DMA_MODE_SOCKET_E, BROKER_DMA_MODE_SHARED_MEMORY_E} BROKER_DMA_MODE_ENT;
typedef struct {
    GT_TASK_HANDLE taskId;
    GT_TASK_PRIORITY_ENT taskPriority;
    TASK_PTR_FUN taskFuncPtr;
    SMINI_BUF_POOL_ID poolId;
    SQUE_QUEUE_ID queueId;
} BROKER_INFO_STC;
typedef struct {
    GT_BOOL registered;
    GT_U32 interruptLine;
    GT_U32 signalId;
    BROKER_INTERRUPT_MASK_MODE maskMode;
    GT_BOOL masked;
} BROKER_INTERRUPT_INFO_STC;
typedef enum {BROKER_INTERRUPT_SET_MODE_SOCKET_E, BROKER_INTERRUPT_SET_MODE_SIGNAL_E} BROKER_INTERRUPT_SET_MODE_ENT;
typedef struct {
    GT_BOOL valid;
    CONNECTION_TYPE_ENT connectionType;
    TASK_PTR_FUN taskFuncPtr;
    GT_TASK_HANDLE taskId;
    GT_U32 readBufSize;
    GT_U8 *readBufPtr;
    GT_U32 replyBufSize;
    GT_U8 *replyBufPtr;
    GT_MUTEX getReplyProtect;
    GT_BOOL socketServerSide;
    SOCKET_INFO_STC serverSocket;
    GT_U32 numSockets;
    SOCKET_INFO_STC socketsArray[20];
    void *cookie;
    GT_U32 debugTask;
    GT_BOOL firstValidMessageReceived;
    GT_U32 clientIndex;
} CONNECTION_INFO_STC;
typedef void (*)(CONNECTION_INFO_STC *) CONNECTION_INIT_COOKIE_FUN;
typedef enum {CONNECTION_TYPE_SYNCH_E, CONNECTION_TYPE_ASYNCH_E, CONNECTION_TYPE_NIC_RX_FRAME_E, CONNECTION_TYPE_LAST_E} CONNECTION_TYPE_ENT;
typedef struct {
    void *dataPtr;
    GT_SEM semSync;
    GT_U32 dataIsWords;
} DISTRIBUTED_MESSAGE_SYNC_INFO_STC;
typedef enum {DISTRIBUTED_MESSAGE_TYPE_REGISTER_READ_E, DISTRIBUTED_MESSAGE_TYPE_REGISTER_WRITE_E, DISTRIBUTED_MESSAGE_TYPE_NIC_TX_FRAME_E = 7, DISTRIBUTED_MESSAGE_TYPE_NIC_RX_FRAME_E, DISTRIBUTED_MESSAGE_TYPE_INTERRUPT_SET_E = 6, DISTRIBUTED_MESSAGE_TYPE_DMA_READ_E = 3, DISTRIBUTED_MESSAGE_TYPE_DMA_WRITE_E, DISTRIBUTED_MESSAGE_TYPE_DEVICE_TO_APPLICATION_INIT_PARAM_E = 9, DISTRIBUTED_MESSAGE_TYPE_RESET_E, DISTRIBUTED_MESSAGE_TYPE_DEBUG_LEVEL_SET, DISTRIBUTED_MESSAGE_TYPE_REGISTER_READ_REPLY_E = 2, 
    DISTRIBUTED_MESSAGE_TYPE_DMA_READ_REPLY_E = 5, DISTRIBUTED_MESSAGE_TYPE_APP_PID_E = 50, DISTRIBUTED_MESSAGE_TYPE_REGISTER_DMA_E, DISTRIBUTED_MESSAGE_TYPE_REGISTER_INTERRUPT_E, DISTRIBUTED_MESSAGE_TYPE_UNMASK_INTERRUPT_E, DISTRIBUTED_MESSAGE_TYPE_MASK_INTERRUPT_E, DISTRIBUTED_MESSAGE_TYPE_LAST_E} DISTRIBUTED_MESSAGE_TYPE_ENT;
typedef enum {SERVER_SIDE_E, CLIENT_SIDE_E} DISTRIBUTED_SIDE_ENT;
typedef struct {
    DISTRIBUTED_SIDE_ENT type;
    GT_U32 numConnections;
} DISTRIBUTED_SIDE_STC;
typedef void (*)(void) MSG_RESET_FUN;
typedef void (*)(SIM_DISTRIBUTED_INIT_DEVICE_STC *) MSG_SPECIFIC_TREATMENT_DEVICE_INIT_FUN;
typedef void (*)(GT_U32, GT_U32, GT_U32, GT_U32 *, GT_U32) MSG_SPECIFIC_TREATMENT_DMA_READ_FUN;
typedef void (*)(GT_U32, GT_U32, GT_U32, GT_U32 *, GT_U32) MSG_SPECIFIC_TREATMENT_DMA_WRITE_FUN;
typedef void (*)(GT_U32) MSG_SPECIFIC_TREATMENT_INTERRUPT_SET_FUN;
typedef void (*)(READ_WRITE_ACCESS_TYPE, GT_U32, GT_U32, GT_U32, GT_U32 *, CONNECTION_INFO_STC *) MSG_SPECIFIC_TREATMENT_REGISTER_READ_FUN;
typedef void (*)(READ_WRITE_ACCESS_TYPE, GT_U32, GT_U32, GT_U32, GT_U32 *) MSG_SPECIFIC_TREATMENT_REGISTER_WRITE_FUN;
typedef struct {
    GT_BOOL nicInitialized;
    GT_U32 nicDevNum;
} NIC_DEVICE_INFO;
typedef struct {
    GT_U32 ready;
    GT_SOCKET_FD sockId;
    GT_U16 protocolPort;
    void *sockAddr;
    GT_SIZE_T sockAddrLen;
    GT_CHAR ipAddressStr[128];
} SOCKET_INFO_STC;
typedef unsigned int (*)(void *) TASK_PTR_FUN;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SDistributed/sdistributed_stubs.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SEmbedded/simFS.c:
struct SIM_FS_FDESCR_STC;
struct SIM_FS_INODE_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SInit/sinit.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLog.c:
struct INTERNAL_INFO_STCT;
typedef struct {
    SKERNEL_DEVICE_OBJECT *devObjPtr;
    GT_U32 portNumber;
    GT_BOOL bindRx;
    GT_BOOL bindTx;
    GT_CHAR *slanNamePtr;
} SIM_LOG_PORT_SLAN_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogInfoTypeDevice.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogInfoTypeMemory.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogInfoTypePacket.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogInfoTypeTcam.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogRuntimeConfig.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogTask.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/asicSimulation/SLog/simLogToRuntime.c:
typedef struct {
    GT_BOOL doWrite;
    GT_U32 numOfWords;
    GT_U32 startAddress;
    GT_U32 dmaWordsArr[3000];
} DATA_TYPE_DMA_OPERATION_STC;
typedef enum {DATA_TYPE_WRITE_FROM_CPU_E, DATA_TYPE_READ_FROM_CPU_E, DATA_TYPE_START_SLAN_PACKET_E, DATA_TYPE_MID_SLAN_PACKET_E, DATA_TYPE_END_SLAN_PACKET_E, DATA_TYPE_THREAD_TYPE_E, DATA_TYPE_DMA_OPERATION_E, DATA_TYPE_NUM_OF_PACKETS_IN_THE_SYSTEM_E, DATA_TYPE_PORT_LINK_STATUS_CHANGED_E, DATA_TYPE_SLAN_BIND_E, DATA_TYPE_SLAN_UNBIND_E, DATA_TYPE_OTHERS_E} DATA_TYPE_ENT;
typedef struct {
    GT_U32 devNum;
    GT_U32 coreId;
    GT_U32 port;
    GT_U32 linkStatus;
} DATA_TYPE_PORT_LINK_STATUS_STC;
typedef struct {
    GT_U32 devNum;
    GT_U32 coreId;
    GT_U32 registerAddress;
} DATA_TYPE_READ_FROM_CPU_STC;
typedef struct {
    GT_BOOL isBindOrUnbind;
    char slanNamePtr[20];
    GT_U32 devNum;
    GT_U32 coreId;
    GT_U32 portNumber;
    GT_BOOL bindRx;
    GT_BOOL bindTx;
} DATA_TYPE_SLAN_BIND_STC;
typedef struct {
    GT_U32 devNum;
    GT_U32 coreId;
    GT_U32 portNum;
    GT_U32 byteCount;
} DATA_TYPE_START_SLAN_PACKET_STC;
typedef struct {
    char threadTypeName[50];
} DATA_TYPE_THREAD_TYPE_STC;
typedef struct {
    GT_U32 devNum;
    GT_U32 coreId;
    GT_U32 registerAddress;
    GT_U32 registerValue;
} DATA_TYPE_WRITE_FROM_CPU_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/common/SMiniBuf/SMiniBuf.c:
typedef struct {
    GT_U32 poolSize;
    SMINI_BUF_STC *dataPtr;
    SMINI_BUF_STC *firstFreeBufPtr;
    GT_MUTEX criticalSection;
} SBUF_MINI_POOL_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/common/SQue/squeue.c:
typedef struct {
    GT_U32 magic;
    GT_SEM event;
    SIM_BUFFER_ID firstBufId;
    SIM_BUFFER_ID lastBufId;
    GT_U32 status;
    GT_BOOL queueSuspended;
    SIM_BUFFER_ID debug_lastPoppedBufId;
} SQUE_HEADER_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/common/Utils/Error/serror.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simGeneral/src/osGen/simOsBind.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxConsole.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxIniFile.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxIntr.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxProcess.c:
typedef char;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxSlan.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
struct slanHandlerParamSTCT;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxSync.c:
typedef char;
typedef double;
typedef float;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/simOsLinuxTask.c:
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/slanLib.c:
typedef enum {SLAN_STATE_NULL, SLAN_STATE_CONNECTING, SLAN_STATE_OPENED, SLAN_STATE_CLOSED, SLAN_STATE_RESET} SLAN_STATE_ENUM;
typedef char;
typedef int;
typedef long;
typedef long long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef struct {
    SLAN_STATE_ENUM state;
    int fd;
    char *name;
    SLAN_LIB_EVENT_HANDLER_FUNC handler;
    void *userData;
    char buffer[12228];
    int bufferLength;
} slanSTC;
typedef unsigned char;
typedef unsigned int;

File simulation/simOs/src/os/Linux/slanLib.h:
typedef int SLAN_ID;
typedef void (*)(SLAN_ID, void *, SLAN_LIB_EVENT_TYPE, char *, int) SLAN_LIB_EVENT_HANDLER_FUNC;
typedef enum {SLAN_LIB_EV_PACKET, SLAN_LIB_EV_LINKUP, SLAN_LIB_EV_LINKDOWN, SLAN_LIB_EV_CLOSED, SLAN_LIB_EV_HANDSHAKE, SLAN_LIB_EV_HANDSHAKE_SUCCESS, SLAN_LIB_EV_HANDSHAKE_FAILED} SLAN_LIB_EVENT_TYPE;
typedef enum {SLAN_LIB_LINK_UP, SLAN_LIB_LINK_DOWN} SLAN_LIB_LINK_STATUS_TYPE;

File simulation/simOs/src/os/simOsBindOwn.c:
typedef struct {
    GT_U32 taskId;
    SIM_OS_TASK_PURPOSE_TYPE_ENT taskType;
    GT_PTR cookiePtr;
} SIM_OS_TASKS_INFO_STC;
typedef char;
typedef int;
typedef long;
typedef unsigned long long;
typedef unsigned long;
typedef short;
typedef unsigned short;
typedef signed char;
typedef sizetype;
typedef unsigned char;
typedef unsigned int;
(gdb) 