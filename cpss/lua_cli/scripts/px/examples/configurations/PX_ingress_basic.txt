// TAG:               PX devices(PIPE); ingress-processing;
// Short Description: PIPE device : Simple ingress-processing configuration, send traffic and capture on egress port.
// Description:       PIPE device : Ingress-processing configuration for two pairs of extended ports
//                                  each ports in pair send packet one to another.
//                                  Check captured traffic - egress packet should not be modified
//
end
//
//                        lane 0| |lane1 lane0| |lane1
//                              | |           | |
//                           *************************
//                           *  port 4       port 12 *
//                           *   |             |     *
//                           *   |    PE3      |     *
//                           *   |             |     *
//                           *  port 0       port 5  *
//                           *************************
//                        lane0  |       lane0 |
//

// Set Port Packet Type Key Table for ports 0,4 and 5,12
//
configure
interface ethernet ${dev}/${port[1]}
ingress port-packet-type-key profile 20
exit
interface ethernet ${dev}/${port[2]}
ingress port-packet-type-key profile 30
exit
interface ethernet ${dev}/${port[3]}
ingress port-packet-type-key profile 40
exit
interface ethernet ${dev}/${port[4]}
ingress port-packet-type-key profile 50
exit
end


// Set packet type key 25,26 and 27,28 for upstream traffic 
//
configure
packet-type-key device ${dev} ingress packet-type 25
key-entry data source-port-profile 20
key-entry mask source-port-profile 0x7F
exit
packet-type-key device ${dev} ingress packet-type 26
key-entry data source-port-profile 30
key-entry mask source-port-profile 0x7F
exit
packet-type-key device ${dev} ingress packet-type 27
key-entry data source-port-profile 40
key-entry mask source-port-profile 0x7F
exit
packet-type-key device ${dev} ingress packet-type 28
key-entry data source-port-profile 50
key-entry mask source-port-profile 0x7F
exit
end

// Set packet type 25,26 and 27,28 destination format entry for upstream traffic
//
configure
packet-type-key device ${dev} ingress packet-type 25
format-entry destination constant-index 100 max-index 4095
exit
packet-type-key device ${dev} ingress packet-type 26
format-entry destination constant-index 101 max-index 4095
exit
packet-type-key device ${dev} ingress packet-type 27
format-entry destination constant-index 102 max-index 4095
exit
packet-type-key device ${dev} ingress packet-type 28
format-entry destination constant-index 103 max-index 4095
exit
end

// enable packet type 25
cpss-api call cpssPxIngressPacketTypeKeyEntryEnableSet devNum ${dev} packetType 25 enable true
// enable packet type 26
cpss-api call cpssPxIngressPacketTypeKeyEntryEnableSet devNum ${dev} packetType 26 enable true
// enable packet type 27
cpss-api call cpssPxIngressPacketTypeKeyEntryEnableSet devNum ${dev} packetType 27 enable true
// enable packet type 28
cpss-api call cpssPxIngressPacketTypeKeyEntryEnableSet devNum ${dev} packetType 28 enable true

// Set Destination port map table entry for extended port[1] - 1 << port2
cpss-api call cpssPxIngressPortMapEntrySet devNum ${dev} tableType CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_DESTINATION_E entryIndex 100 portsBmp 0x10 bypassLagDesignatedBitmap false
// Set Destination port map table entry for extended port[2] - 1 << port1
cpss-api call cpssPxIngressPortMapEntrySet devNum ${dev} tableType CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_DESTINATION_E entryIndex 101 portsBmp 0x1 bypassLagDesignatedBitmap false
// Set Destination port map table entry for extended port[3] - 1 << port4
cpss-api call cpssPxIngressPortMapEntrySet devNum ${dev} tableType CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_DESTINATION_E entryIndex 102 portsBmp 0x1000 bypassLagDesignatedBitmap false
// Set Destination port map table entry for extended port[4] - 1 << port3
cpss-api call cpssPxIngressPortMapEntrySet devNum ${dev} tableType CPSS_PX_INGRESS_PORT_MAP_TABLE_TYPE_DESTINATION_E entryIndex 103 portsBmp 0x20 bypassLagDesignatedBitmap false

