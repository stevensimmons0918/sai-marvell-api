/* c_hwpal_device_umdevxs.h
 *
 * Configuration Handling for Driver Framework Device API implementation.
 * A build-level configuration file is included and sanity-checked.
 * Do not edit this file. Edit cs_hwpal.h instead.
 */

/*****************************************************************************
* Copyright (c) 2009-2017 INSIDE Secure B.V. All Rights Reserved.
*
* This confidential and proprietary software may be used only as authorized
* by a licensing agreement from INSIDE Secure.
*
* The entire notice above must be reproduced on all authorized copies that
* may only be made to the extent permitted by a licensing agreement from
* INSIDE Secure.
*
* For more information or support, please go to our online support system at
* https://customersupport.insidesecure.com.
* In case you do not have an account for this system, please send an e-mail
* to ESSEmbeddedHW-Support@insidesecure.com.
*****************************************************************************/

/*----------------------------------------------------------------
 * get configuration settings from product config file
 */

/* Top-level Hardware platform configuration */
#include <Kit/DriverFramework/incl/cs_hwpal_umdevxs.h>


/* Enables strict argument checking for input parameters */
/*#define HWPAL_STRICT_ARGS_CHECK */

/* choose from LOG_SEVERITY_INFO, LOG_SEVERITY_WARN, LOG_SEVERITY_CRIT */
#ifndef LOG_SEVERITY_MAX
#ifndef CPSS_LOG_ENABLE
#define LOG_SEVERITY_MAX    LOG_SEVERITY_NO_OUTPUT
#else
#define LOG_SEVERITY_MAX    LOG_SEVERITY_INFO
#endif /*CPSS_LOG_ENABLE*/
#endif


#ifndef HWPAL_MAX_DEVICE_NAME_LENGTH
#error "HWPAL_MAX_DEVICE_NAME_LENGTH undefined"
#endif

#ifndef HWPAL_DEVICES
#error "HWPAL_DEVICES undefined"
#endif

#ifndef HWPAL_REMAP_ADDRESSES
#error "HWPAL_REMAP_ADDRESSES undefined"
#endif

/* Define to remove the PCI configuration space support */
/*#define HWPAL_REMOVE_DEVICE_PCICONFIGSPACE */

/* HWPAL_DEVICE_READ_DELAY_US
 *
 * Device_Read32() function will busy wait for the specified number
 * of microseconds before actually performing the read operation.
 *
 * Note: This is a workaround for posted-writes implementation of
 *       the MMIO register slave interface
 *       (when too fast write-read sequence does not work)
 *
 *
 */
/*#define HWPAL_DEVICE_READ_DELAY_US    100 */


/* end of file c_hwpal_device_umdevxs.h */
