/*
 *  ppa_fw_accelerator_commands.h
 *
 *  PPA fw accelerator commands definitions
 *
 */

#ifndef __ppa_fw_accelerator_commands_h
#define __ppa_fw_accelerator_commands_h

#ifdef ASIC_SIMULATION
    #include "asicSimulation/SKernel/sEmbeddedCpu/firmware/ac5p_pha/ppa_fw_defs.h"
#endif /*ASIC_SIMULATION*/

/**************************************************************************
 * Function prototypes
 **************************************************************************/
void PPA_FW(load_accelerator_commands)();

/**************************************************************************
 * Accelerator Instruction: Command bits map
 **************************************************************************/
#define ACCEL_CMD_BYTE_COPY                              (0)
#define ACCEL_CMD_CSUM_LOAD                              (0x2 << 26)
#define ACCEL_CMD_CSUM_LOAD_IS_OLD(val)                  (val << 21)
#define ACCEL_CMD_BIT_COPY                               (1 << 26)
#define ACCEL_CMD_BIT_ADD                                (5 << 26)
#define ACCEL_CMD_BIT_SUB                                (7 << 26)
#define ACCEL_CMD_SRC_CONST(val)                         (val << 30)
#define ACCEL_CMD_SRC_BYTE(val)                          (val)
#define ACCEL_CMD_SRC_BYTE_TYPE(val)                     (val << 7)
#define ACCEL_CMD_CSUM_STORE                             (0x30 << 26)
#define ACCEL_CMD_CSUM_STORE_IS_UDP(val)                 (val << 27)
#define ACCEL_CMD_DST_BYTE(val)                          (val << 8)
#define ACCEL_CMD_DST_BYTE_TYPE(val)                     (val << 15)
#define ACCEL_CMD_LEN_BIT(val)                           ((((val-1)&0x10) << 27)|(((val-1)&0xf) << 16))
#define ACCEL_CMD_LEN_BYTE(val)                          (((val-1)&0x1f) << 16)
#define ACCEL_CMD_SRC_BIT(val)                           (val << 20)
#define ACCEL_CMD_DST_BIT(val)                           (val << 23)
#define PKT                                              (1)
#define NO_PKT                                           (0)

#define BUILD_ACCELERATOR_COMMAND_H2H_COPY_BYTE(length,dest,src)   (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(length)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(dest)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(src))
#define BUILD_ACCELERATOR_COMMAND_C2H_COPY_BYTE(length,dest,src)   (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(length)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(dest)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(src))

/**************************************************************************
 * Accelerator commands types data
 **************************************************************************/

/*************** THR1_SRv6_End_Node *******************/
#define COPY_BYTES_THR1_SRv6_End_Node_OFFSET32_PKT_srv6_seg0__dip0_high_LEN16_TO_PKT_IPv6_Header__dip0_high_VALUE                (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(24)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x000f98b0 */

/*************** THR2_SRv6_Source_Node_1_segment *******************/
#define SHIFTLEFT_24_BYTES_THR2_SRv6_Source_Node_1_segment_LEN32_FROM_PKT_IPv6_Header__version_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(8)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001f88a0 */
#define SHIFTLEFT_24_BYTES_THR2_SRv6_Source_Node_1_segment_LEN8_FROM_PKT_IPv6_Header__version_PLUS32_VALUE                       (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(40)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x0007a8c0 */
#define COPY_BYTES_THR2_SRv6_Source_Node_1_segment_PKT_IPv6_Header__sip0_high_MINUS24_LEN16_TO_PKT_SRv6_Segment0_Header__dip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(56)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(16)) /* 0x000fb890 */
#define COPY_BYTES_THR2_SRv6_Source_Node_1_segment_PKT_IPv6_Header__next_header_MINUS24_LEN2_TO_PKT_SRv6_Header__next_header_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(48)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(14)) /* 0x0001b08e */
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x2_LEN8_TO_PKT_SRv6_Header__hdr_ext_len_VALUE                           (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(49)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(2)) /* 0x4407b102 */
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x401_LEN11_TO_PKT_SRv6_Header__routing_type_PLUS5_VALUE                 (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(5)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(11)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(50)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x46cab201 */
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x0_LEN8_TO_PKT_SRv6_Header__last_entry_VALUE                            (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(52)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4407b400 */
#define COPY_BYTES_THR2_SRv6_Source_Node_1_segment_CFG_ipv6_sip_template__val_0_LEN16_TO_PKT_IPv6_Header__sip0_high_VALUE        (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(16)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x000f9000 */
#define ADD_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x18_LEN16_TO_PKT_IPv6_Header__payload_length_VALUE                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_ADD|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(12)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(24)) /* 0x540f8c18 */
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x2B_LEN8_TO_PKT_IPv6_Header__next_header_VALUE                          (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(14)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(43)) /* 0x44078e2b */
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x18_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE            (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(24)) /* 0x44077b18 */

/*************** THR3_SRv6_Source_Node_First_Pass_2_3_segments *******************/
#define SHIFTLEFT_16_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_LEN32_FROM_PKT_mac_header__mac_da_47_32_VALUE           (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(16)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001f90a0 */
#define SHIFTLEFT_16_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_LEN32_FROM_PKT_mac_header__mac_da_47_32_PLUS32_VALUE    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(48)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x001fb0c0 */
#define SHIFTLEFT_16_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_LEN6_FROM_PKT_mac_header__mac_da_47_32_PLUS64_VALUE     (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(6)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(96)) /* 0x0005d0e0 */
#define COPY_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_PKT_IPv6_Header__sip0_high_MINUS16_LEN16_TO_PKT_SRv6_Segment2_Header__dip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(86)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(54)) /* 0x000fd6b6 */
#define COPY_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CFG_ipv6_sip_template__val_0_LEN16_TO_PKT_IPv6_Header__sip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(54)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x000fb600 */
#define ADD_BITS_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CONST_0x1_LEN16_TO_PKT_eDSA_fwd_w3__Trg_ePort_15_0_VALUE          (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_ADD|ACCEL_CMD_DST_BIT(1)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(41)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x548fa901 */
#define COPY_BITS_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CONST_0x10_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(16)) /* 0x44077b10 */
#define COPY_BITS_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CONST_0x0_LEN1_TO_PKT_eDSA_fwd_w2__IsTrgPhyPortValid_VALUE       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(2)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4500a400 */

/*************** THR4_SRv6_Source_Node_Second_Pass_3_segments *******************/
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(8)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x001f88b0 */
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(40)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(80)) /* 0x001fa8d0 */
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN12_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(112)) /* 0x000bc8f0 */
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS76_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(84)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(124)) /* 0x001fd4fc */
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN16_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(112)) /* 0x000fc8f0 */
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_LEN32_FROM_PKT_with_vlan__Generic_TS_Data__mac_da_47_32_PLUS80_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(120)) /* 0x001fd0f8 */
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_no_vlan__Generic_TS_Data__data_35_32_MINUS40_LEN4_TO_PKT_no_vlan__SRv6_Header__last_entry_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(112)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(18)) /* 0x0003f092 */
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_with_vlan__Generic_TS_Data__data_35_32_MINUS40_LEN4_TO_PKT_with_vlan__SRv6_Header__last_entry_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(116)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(18)) /* 0x0003f492 */
#define ADD_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x38_LEN16_TO_PKT_no_vlan__IPv6_Header__payload_length_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_ADD|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(56)) /* 0x540fc838 */
#define ADD_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x38_LEN16_TO_PKT_with_vlan__IPv6_Header__payload_length_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_ADD|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(76)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(56)) /* 0x540fcc38 */
#define COPY_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x2B_LEN8_TO_PKT_no_vlan__IPv6_Header__next_header_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(74)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(43)) /* 0x4407ca2b */
#define COPY_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x2B_LEN8_TO_PKT_with_vlan__IPv6_Header__next_header_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(78)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(43)) /* 0x4407ce2b */
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_no_vlan__Generic_TS_Data__data_31_28_MINUS40_LEN32_TO_PKT_no_vlan__SRv6_Segment0_Header__dip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(116)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(22)) /* 0x001ff496 */
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_with_vlan__Generic_TS_Data__data_31_28_MINUS40_LEN32_TO_PKT_with_vlan__SRv6_Segment0_Header__dip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(120)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(22)) /* 0x001ff896 */
#define COPY_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_CONST_0xF2_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(114)) /* 0x44077bf2 */

/*************** THR5_SRv6_Source_Node_Second_Pass_2_segments *******************/
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(24)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x001f98b0 */
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(56)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(80)) /* 0x001fb8d0 */
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN12_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(88)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(112)) /* 0x000bd8f0 */
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS76_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(100)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(124)) /* 0x001fe4fc */
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN16_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(88)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(112)) /* 0x000fd8f0 */
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_LEN32_FROM_PKT_with_vlan__Generic_TS_Data__mac_da_47_32_PLUS80_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(104)) /* 0x001fd0e8 */
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_no_vlan__Generic_TS_Data__data_35_32_MINUS24_LEN4_TO_PKT_no_vlan__SRv6_Header__last_entry_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(112)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(18)) /* 0x0003f092 */
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_with_vlan__Generic_TS_Data__data_35_32_MINUS24_LEN4_TO_PKT_with_vlan__SRv6_Header__last_entry_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(116)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(18)) /* 0x0003f492 */
#define ADD_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x28_LEN16_TO_PKT_no_vlan__IPv6_Header__payload_length_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_ADD|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(40)) /* 0x540fc828 */
#define ADD_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x28_LEN16_TO_PKT_with_vlan__IPv6_Header__payload_length_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_ADD|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(76)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(40)) /* 0x540fcc28 */
#define COPY_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x2B_LEN8_TO_PKT_no_vlan__IPv6_Header__next_header_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(74)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(43)) /* 0x4407ca2b */
#define COPY_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x2B_LEN8_TO_PKT_with_vlan__IPv6_Header__next_header_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(78)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(43)) /* 0x4407ce2b */
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_no_vlan__Generic_TS_Data__data_15_12_MINUS24_LEN16_TO_PKT_no_vlan__SRv6_Segment0_Header__dip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(116)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(38)) /* 0x000ff4a6 */
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_with_vlan__Generic_TS_Data__data_15_12_MINUS24_LEN16_TO_PKT_with_vlan__SRv6_Segment0_Header__dip0_high_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(120)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(38)) /* 0x000ff8a6 */
#define COPY_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_CONST_0xE2_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(98)) /* 0x44077be2 */

/*************** THR12_MPLS_SR_NO_EL *******************/
#define COPY_BITS_THR12_MPLS_SR_NO_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                              (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4780d201 */

/*************** THR13_MPLS_SR_ONE_EL *******************/
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_VALUE                                       (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0003acb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_VALUE                                       (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0007acb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x000bacb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x000facb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0013acb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(24)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0017acb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(28)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x001bacb4 */
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x001facb4 */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                             (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4780d201 */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x0_LEN10_TO_PKT_MPLS_label_8__label_val_VALUE                                      (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4409d000 */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x7_LEN10_TO_PKT_MPLS_label_8__label_val_PLUS10_VALUE                               (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(2)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(81)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(7)) /* 0x4509d107 */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x0_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                             (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4780d200 */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_DESC_phal2ppa__packet_hash_LEN12_TO_PKT_MPLS_label_8__label_val_PLUS8_VALUE               (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(81)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(90)) /* 0x044bd15a */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__label_val_VALUE                                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400d001 */
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x30_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x44077b30 */
#define SUB_BITS_THR13_MPLS_SR_ONE_EL_PKT_MPLS_data__EL1_ofst_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE           (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(50)) /* 0x1c077bb2 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_LEN4_TO_PKT_expansion_space__reserved_8_VALUE            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(32)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(28)) /* 0x0003a09c */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS4_LEN4_TO_PKT_expansion_space__reserved_8_PLUS4_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x0003a4a0 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS8_LEN4_TO_PKT_expansion_space__reserved_8_PLUS8_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(40)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x0003a8a4 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS12_LEN4_TO_PKT_expansion_space__reserved_8_PLUS12_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(40)) /* 0x0003aca8 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS16_LEN4_TO_PKT_expansion_space__reserved_8_PLUS16_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(48)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0003b0ac */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS20_LEN4_TO_PKT_expansion_space__reserved_8_PLUS20_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(52)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x0003b4b0 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS24_LEN4_TO_PKT_expansion_space__reserved_8_PLUS24_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(56)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0003b8b4 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS28_LEN4_TO_PKT_expansion_space__reserved_8_PLUS28_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(60)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(56)) /* 0x0003bcb8 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS32_LEN4_TO_PKT_expansion_space__reserved_8_PLUS32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(64)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(60)) /* 0x0003c0bc */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS36_LEN4_TO_PKT_expansion_space__reserved_8_PLUS36_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x0003c4c0 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS40_LEN4_TO_PKT_expansion_space__reserved_8_PLUS40_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(68)) /* 0x0003c8c4 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS44_LEN4_TO_PKT_expansion_space__reserved_8_PLUS44_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(76)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(72)) /* 0x0003ccc8 */
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS48_LEN4_TO_PKT_expansion_space__reserved_8_PLUS48_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(76)) /* 0x0003d0cc */

/*************** THR14_MPLS_SR_TWO_EL *******************/
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_VALUE                                       (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0003acb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_VALUE                                       (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0007acb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x000bacb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x000facb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0013acb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(24)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0017acb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(28)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x001bacb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_VALUE                                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x001facb4 */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                                (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0003a4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                                (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0007a4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                               (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x000ba4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                               (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x000fa4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                               (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0013a4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                               (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(24)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0017a4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                               (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(28)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x001ba4ac */
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                               (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x001fa4ac */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                             (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4780d201 */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x0_LEN10_TO_PKT_MPLS_label_8__label_val_VALUE                                      (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4409d000 */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x7_LEN10_TO_PKT_MPLS_label_8__label_val_PLUS10_VALUE                               (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(2)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(81)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(7)) /* 0x4509d107 */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x0_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                             (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4780d200 */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_DESC_phal2ppa__packet_hash_LEN12_TO_PKT_MPLS_label_8__label_val_PLUS8_VALUE               (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(81)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(90)) /* 0x044bd15a */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__label_val_VALUE                                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400d001 */
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x30_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x44077b30 */
#define SUB_BITS_THR14_MPLS_SR_TWO_EL_PKT_MPLS_data__EL1_ofst_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE           (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(50)) /* 0x1c077bb2 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_LEN4_TO_PKT_expansion_space__reserved_8_VALUE            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(32)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(28)) /* 0x0003a09c */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS4_LEN4_TO_PKT_expansion_space__reserved_8_PLUS4_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x0003a4a0 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS8_LEN4_TO_PKT_expansion_space__reserved_8_PLUS8_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(40)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x0003a8a4 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS12_LEN4_TO_PKT_expansion_space__reserved_8_PLUS12_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(40)) /* 0x0003aca8 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS16_LEN4_TO_PKT_expansion_space__reserved_8_PLUS16_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(48)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0003b0ac */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS20_LEN4_TO_PKT_expansion_space__reserved_8_PLUS20_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(52)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x0003b4b0 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS24_LEN4_TO_PKT_expansion_space__reserved_8_PLUS24_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(56)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0003b8b4 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS28_LEN4_TO_PKT_expansion_space__reserved_8_PLUS28_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(60)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(56)) /* 0x0003bcb8 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS32_LEN4_TO_PKT_expansion_space__reserved_8_PLUS32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(64)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(60)) /* 0x0003c0bc */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS36_LEN4_TO_PKT_expansion_space__reserved_8_PLUS36_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x0003c4c0 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS40_LEN4_TO_PKT_expansion_space__reserved_8_PLUS40_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(68)) /* 0x0003c8c4 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS44_LEN4_TO_PKT_expansion_space__reserved_8_PLUS44_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(76)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(72)) /* 0x0003ccc8 */
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS48_LEN4_TO_PKT_expansion_space__reserved_8_PLUS48_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(76)) /* 0x0003d0cc */

/*************** THR15_MPLS_SR_THREE_EL *******************/
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_VALUE                                     (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0003acb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_VALUE                                     (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0007acb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_VALUE                                    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x000bacb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_VALUE                                    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x000facb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_VALUE                                    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0013acb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_VALUE                                    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(24)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0017acb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_VALUE                                    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(28)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x001bacb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_VALUE                                    (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x001facb4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                              (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0003a4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                              (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0007a4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x000ba4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x000fa4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0013a4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(24)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0017a4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(28)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x001ba4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_MINUS8_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x001fa4ac */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x00039ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                             (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x00079ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x000b9ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x000f9ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x00139ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(24)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x00179ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(28)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x001b9ca4 */
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_MINUS16_VALUE                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x001f9ca4 */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                           (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4780d201 */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x0_LEN10_TO_PKT_MPLS_label_8__label_val_VALUE                                    (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4409d000 */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x7_LEN10_TO_PKT_MPLS_label_8__label_val_PLUS10_VALUE                             (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(2)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(81)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(7)) /* 0x4509d107 */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x0_LEN1_TO_PKT_MPLS_label_8__BoS_VALUE                                           (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4780d200 */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_DESC_phal2ppa__packet_hash_LEN12_TO_PKT_MPLS_label_8__label_val_PLUS8_VALUE             (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(81)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(90)) /* 0x044bd15a */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__label_val_VALUE                                     (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400d001 */
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x30_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                     (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x44077b30 */
#define SUB_BITS_THR15_MPLS_SR_THREE_EL_PKT_MPLS_data__EL1_ofst_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE         (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(50)) /* 0x1c077bb2 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_LEN4_TO_PKT_MPLS_label_2__label_val_VALUE              (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(32)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(28)) /* 0x0003a09c */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS4_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS4_VALUE  (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x0003a4a0 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS8_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS8_VALUE  (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(40)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(36)) /* 0x0003a8a4 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS12_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS12_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(44)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(40)) /* 0x0003aca8 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS16_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS16_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(48)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x0003b0ac */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS20_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS20_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(52)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(48)) /* 0x0003b4b0 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS24_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS24_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(56)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(52)) /* 0x0003b8b4 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS28_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS28_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(60)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(56)) /* 0x0003bcb8 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS32_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS32_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(64)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(60)) /* 0x0003c0bc */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS36_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS36_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x0003c4c0 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS40_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS40_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(68)) /* 0x0003c8c4 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS44_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS44_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(76)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(72)) /* 0x0003ccc8 */
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS48_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS48_VALUE (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(76)) /* 0x0003d0cc */

/*************** THR16_SGT_NetAddMSB *******************/
#define SHIFTLEFT_4_BYTES_THR16_SGT_NetAddMSB_LEN12_FROM_PKT_mac_da_47_32_VALUE                                                  (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x000b9ca0 */
#define SHIFTLEFT_4_BYTES_THR16_SGT_NetAddMSB_LEN32_FROM_PKT_mac_da_47_32_VALUE                                                  (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(28)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001f9ca0 */
#define SHIFTLEFT_4_BYTES_THR16_SGT_NetAddMSB_LEN12_FROM_PKT_mac_da_47_32_PLUS32_VALUE                                           (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(60)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x000bbcc0 */
#define COPY_BYTES_THR16_SGT_NetAddMSB_CFG_sgt_tag_template__ethertype_LEN6_TO_PKT_sgt_tag__ethertype_VALUE                      (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(6)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(72)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x0005c800 */
#define COPY_BITS_THR16_SGT_NetAddMSB_CONST_0x4_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                         (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(4)) /* 0x44077b04 */

/*************** THR17_SGT_NetFix *******************/
#define COPY_BYTES_THR17_SGT_NetFix_CFG_sgt_tag_template__ethertype_LEN4_TO_PKT_sgt_tag__ethertype_VALUE                         (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x0003c400 */

/*************** THR18_SGT_NetRemove *******************/
#define SHIFTRIGHT_4_BYTES_THR18_SGT_NetRemove_LEN12_FROM_PKT_mac_da_47_32_VALUE                                                 (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x000ba4a0 */
#define SHIFTRIGHT_4_BYTES_THR18_SGT_NetRemove_LEN12_FROM_PKT_mac_da_47_32_PLUS32_VALUE                                          (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x000bc4c0 */
#define SHIFTRIGHT_4_BYTES_THR18_SGT_NetRemove_LEN32_FROM_PKT_mac_da_47_32_VALUE                                                 (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001fa4a0 */
#define COPY_BITS_THR18_SGT_NetRemove_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                        (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(124)) /* 0x44077bfc */

/*************** THR19_SGT_eDSAFix *******************/
#define COPY_BITS_THR19_SGT_eDSAFix_CONST_0x0_LEN1_TO_PKT_eDSA_fwd_w3__Tag1SrcTagged_VALUE                                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(5)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(56)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(0)) /* 0x4680b800 */

/*************** THR20_SGT_eDSARemove *******************/
#define SHIFTRIGHT_4_BYTES_THR20_SGT_eDSARemove_LEN4_FROM_PKT_mac_da_47_32_PLUS32_VALUE                                          (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x0003c4c0 */
#define SHIFTRIGHT_4_BYTES_THR20_SGT_eDSARemove_LEN32_FROM_PKT_mac_da_47_32_VALUE                                                (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001fa4a0 */
#define COPY_BITS_THR20_SGT_eDSARemove_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                       (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(124)) /* 0x44077bfc */

/*************** THR21_SGT_GBPFixIPv4 *******************/
#define COPY_BITS_THR21_SGT_GBPFixIPv4_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_VALUE                                           (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(60)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400bc01 */
#define COPY_BITS_THR21_SGT_GBPFixIPv4_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_VALUE          (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(62)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(84)) /* 0x0403be54 */
#define COPY_BITS_THR21_SGT_GBPFixIPv4_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_VALUE (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(4)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(62)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(85)) /* 0x064bbe55 */

/*************** THR22_SGT_GBPFixIPv6 *******************/
#define COPY_BITS_THR22_SGT_GBPFixIPv6_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_VALUE                                           (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400d001 */
#define COPY_BITS_THR22_SGT_GBPFixIPv6_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_VALUE          (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(84)) /* 0x0403d254 */
#define COPY_BITS_THR22_SGT_GBPFixIPv6_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_VALUE (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(4)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(82)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(85)) /* 0x064bd255 */

/*************** THR23_SGT_GBPRemoveIPv4 *******************/
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_VALUE                                        (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(64)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400c001 */
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_VALUE       (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(66)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(84)) /* 0x0403c254 */
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_VALUE (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(4)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(66)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(85)) /* 0x064bc255 */
#define SHIFTRIGHT_4_BYTES_THR23_SGT_GBPRemoveIPv4_LEN16_FROM_PKT_version_PLUS32_VALUE                                           (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x000fc4c0 */
#define SHIFTRIGHT_4_BYTES_THR23_SGT_GBPRemoveIPv4_LEN20_FROM_PKT_version_PLUS32_VALUE                                           (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(20)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x0013c4c0 */
#define SHIFTRIGHT_4_BYTES_THR23_SGT_GBPRemoveIPv4_LEN32_FROM_PKT_version_VALUE                                                  (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001fa4a0 */
#define CSUM_LOAD_OLD_THR23_SGT_GBPRemoveIPv4_LEN2_FROM_PKT_IPv4_Header__total_length_VALUE                                      (ACCEL_CMD_CSUM_LOAD|ACCEL_CMD_CSUM_LOAD_IS_OLD(1)|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(38)) /* 0x082100a6 */
#define SUB_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0x4_LEN16_TO_PKT_IPv4_Header__total_length_VALUE                                  (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(38)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(4)) /* 0x5c0fa604 */
#define CSUM_LOAD_NEW_THR23_SGT_GBPRemoveIPv4_LEN2_FROM_PKT_IPv4_Header__total_length_VALUE                                      (ACCEL_CMD_CSUM_LOAD|ACCEL_CMD_CSUM_LOAD_IS_OLD(0)|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(38)) /* 0x080100a6 */
#define CSUM_LOAD_OLD_THR23_SGT_GBPRemoveIPv4_LEN2_FROM_PKT_IPv4_Header__header_checksum_VALUE                                   (ACCEL_CMD_CSUM_LOAD|ACCEL_CMD_CSUM_LOAD_IS_OLD(1)|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(46)) /* 0x082100ae */
#define CSUM_STORE_IP_THR23_SGT_GBPRemoveIPv4_TO_PKT_IPv4_Header__header_checksum_VALUE                                          (ACCEL_CMD_CSUM_STORE|ACCEL_CMD_CSUM_STORE_IS_UDP(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(46)) /* 0xc00fae00 */
#define SUB_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0x4_LEN16_TO_PKT_udp_header__Length_VALUE                                         (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(60)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(4)) /* 0x5c0fbc04 */
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                    (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(124)) /* 0x44077bfc */

/*************** THR24_SGT_GBPRemoveIPv6 *******************/
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_VALUE                                        (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(84)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(1)) /* 0x4400d401 */
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_VALUE       (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(86)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(84)) /* 0x0403d654 */
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_VALUE (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(4)|ACCEL_CMD_SRC_BIT(4)|ACCEL_CMD_LEN_BIT(12)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(86)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(85)) /* 0x064bd655 */
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN4_FROM_PKT_version_PLUS64_VALUE                                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(4)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(100)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(96)) /* 0x0003e4e0 */
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN8_FROM_PKT_version_PLUS64_VALUE                                            (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(100)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(96)) /* 0x0007e4e0 */
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN32_FROM_PKT_version_PLUS32_VALUE                                           (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(68)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(64)) /* 0x001fc4c0 */
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN32_FROM_PKT_version_VALUE                                                  (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(32)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(36)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x001fa4a0 */
#define SUB_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0x4_LEN16_TO_PKT_IPv6_Header__payload_length_VALUE                                (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(40)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(4)) /* 0x5c0fa804 */
#define SUB_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0x4_LEN16_TO_PKT_udp_header__Length_VALUE                                         (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_SUB|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(80)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(4)) /* 0x5c0fd004 */
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_VALUE                    (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(0)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(8)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(123)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(124)) /* 0x44077bfc */

/*************** THR25_PTP_Phy_1_Step *******************/
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__timestamp_PLUS1_LEN1_TO_CFG_ptp_phy_tag__ingTimeSecLsb_VALUE               (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(7)|ACCEL_CMD_SRC_BIT(1)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(3)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(116)) /* 0x07900374 */
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__udp_checksum_update_en_LEN1_TO_CFG_ptp_phy_tag__checksumUpdate_VALUE       (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(6)|ACCEL_CMD_SRC_BIT(5)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(3)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(96)) /* 0x07500360 */
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__ptp_tai_select_LEN1_TO_CFG_ptp_phy_tag__tai_sel_PLUS1_VALUE                (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(5)|ACCEL_CMD_SRC_BIT(2)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(3)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(95)) /* 0x06a0035f */
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__timestamp_offset_LEN7_TO_CFG_ptp_phy_tag__cf_offset_VALUE                  (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(5)|ACCEL_CMD_SRC_BIT(6)|ACCEL_CMD_LEN_BIT(7)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(2)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(97)) /* 0x06e60261 */
#define COPY_BITS_THR25_PTP_Phy_1_Step_CFG_ptp_phy_tag__cf_offset_LEN1_TO_DESC_phal2ppa__ptp_timestamp_queue_select_VALUE        (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(3)|ACCEL_CMD_SRC_BIT(5)|ACCEL_CMD_LEN_BIT(1)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(95)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(2)) /* 0x05d05f02 */
#define COPY_BITS_THR25_PTP_Phy_1_Step_CFG_ptp_phy_tag__cf_offset_PLUS1_LEN10_TO_DESC_phal2ppa__ptp_timestamp_queue_entry_id_VALUE (ACCEL_CMD_SRC_CONST(0)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(5)|ACCEL_CMD_SRC_BIT(6)|ACCEL_CMD_LEN_BIT(10)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(78)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(2)) /* 0x06e94e02 */
#define COPY_BITS_THR25_PTP_Phy_1_Step_CONST_0x3_LEN4_TO_DESC_phal2ppa__ptp_action_VALUE                                         (ACCEL_CMD_SRC_CONST(1)|ACCEL_CMD_BIT_COPY|ACCEL_CMD_DST_BIT(4)|ACCEL_CMD_SRC_BIT(0)|ACCEL_CMD_LEN_BIT(4)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(95)|ACCEL_CMD_SRC_BYTE_TYPE(NO_PKT)|ACCEL_CMD_SRC_BYTE(3)) /* 0x46035f03 */

/*************** THR59_SLS_Test *******************/
#define COPY_BYTES_THR59_SLS_Test_PKT_IPv4_Header__version_LEN2_TO_CFG_HA_Table_reserved_space__reserved_0_VALUE                 (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(0)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x000100a0 */
#define COPY_BYTES_THR59_SLS_Test_PKT_IPv4_Header__version_PLUS2_LEN2_TO_CFG_HA_Table_reserved_space__reserved_0_PLUS2_VALUE     (ACCEL_CMD_BYTE_COPY|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_DST_BYTE_TYPE(NO_PKT)|ACCEL_CMD_DST_BYTE(2)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(34)) /* 0x000102a2 */
#define CSUM_LOAD_NEW_THR59_SLS_Test_LEN8_FROM_PKT_IPv4_Header__version_VALUE                                                    (ACCEL_CMD_CSUM_LOAD|ACCEL_CMD_CSUM_LOAD_IS_OLD(0)|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(32)) /* 0x080700a0 */
#define CSUM_LOAD_NEW_THR59_SLS_Test_LEN2_FROM_PKT_IPv4_Header__version_PLUS8_VALUE                                              (ACCEL_CMD_CSUM_LOAD|ACCEL_CMD_CSUM_LOAD_IS_OLD(0)|ACCEL_CMD_LEN_BYTE(2)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(40)) /* 0x080100a8 */
#define CSUM_LOAD_NEW_THR59_SLS_Test_LEN8_FROM_PKT_IPv4_Header__version_PLUS12_VALUE                                             (ACCEL_CMD_CSUM_LOAD|ACCEL_CMD_CSUM_LOAD_IS_OLD(0)|ACCEL_CMD_LEN_BYTE(8)|ACCEL_CMD_SRC_BYTE_TYPE(PKT)|ACCEL_CMD_SRC_BYTE(44)) /* 0x080700ac */
#define CSUM_STORE_IP_THR59_SLS_Test_TO_PKT_IPv4_Header__header_checksum_VALUE                                                   (ACCEL_CMD_CSUM_STORE|ACCEL_CMD_CSUM_STORE_IS_UDP(0)|ACCEL_CMD_LEN_BIT(16)|ACCEL_CMD_DST_BYTE_TYPE(PKT)|ACCEL_CMD_DST_BYTE(42)) /* 0xc00faa00 */

/**************************************************************************
 * Accelerator commands offsets
 **************************************************************************/

/*************** THR1_SRv6_End_Node *******************/
#define COPY_BYTES_THR1_SRv6_End_Node_OFFSET32_PKT_srv6_seg0__dip0_high_LEN16_TO_PKT_IPv6_Header__dip0_high_OFFSET               (0x0)

/*************** THR2_SRv6_Source_Node_1_segment *******************/
#define SHIFTLEFT_24_BYTES_THR2_SRv6_Source_Node_1_segment_LEN32_FROM_PKT_IPv6_Header__version_OFFSET                            (0x4)
#define SHIFTLEFT_24_BYTES_THR2_SRv6_Source_Node_1_segment_LEN8_FROM_PKT_IPv6_Header__version_PLUS32_OFFSET                      (0x8)
#define COPY_BYTES_THR2_SRv6_Source_Node_1_segment_PKT_IPv6_Header__sip0_high_MINUS24_LEN16_TO_PKT_SRv6_Segment0_Header__dip0_high_OFFSET (0xc)
#define COPY_BYTES_THR2_SRv6_Source_Node_1_segment_PKT_IPv6_Header__next_header_MINUS24_LEN2_TO_PKT_SRv6_Header__next_header_OFFSET (0x10)
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x2_LEN8_TO_PKT_SRv6_Header__hdr_ext_len_OFFSET                          (0x14)
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x401_LEN11_TO_PKT_SRv6_Header__routing_type_PLUS5_OFFSET                (0x18)
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x0_LEN8_TO_PKT_SRv6_Header__last_entry_OFFSET                           (0x1c)
#define COPY_BYTES_THR2_SRv6_Source_Node_1_segment_CFG_ipv6_sip_template__val_0_LEN16_TO_PKT_IPv6_Header__sip0_high_OFFSET       (0x20)
#define ADD_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x18_LEN16_TO_PKT_IPv6_Header__payload_length_OFFSET                      (0x24)
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x2B_LEN8_TO_PKT_IPv6_Header__next_header_OFFSET                         (0x28)
#define COPY_BITS_THR2_SRv6_Source_Node_1_segment_CONST_0x18_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET           (0x2c)

/*************** THR3_SRv6_Source_Node_First_Pass_2_3_segments *******************/
#define SHIFTLEFT_16_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_LEN32_FROM_PKT_mac_header__mac_da_47_32_OFFSET          (0x30)
#define SHIFTLEFT_16_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_LEN32_FROM_PKT_mac_header__mac_da_47_32_PLUS32_OFFSET   (0x34)
#define SHIFTLEFT_16_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_LEN6_FROM_PKT_mac_header__mac_da_47_32_PLUS64_OFFSET    (0x38)
#define COPY_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_PKT_IPv6_Header__sip0_high_MINUS16_LEN16_TO_PKT_SRv6_Segment2_Header__dip0_high_OFFSET (0x3c)
#define COPY_BYTES_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CFG_ipv6_sip_template__val_0_LEN16_TO_PKT_IPv6_Header__sip0_high_OFFSET (0x40)
#define ADD_BITS_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CONST_0x1_LEN16_TO_PKT_eDSA_fwd_w3__Trg_ePort_15_0_OFFSET         (0x44)
#define COPY_BITS_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CONST_0x10_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET (0x48)
#define COPY_BITS_THR3_SRv6_Source_Node_First_Pass_2_3_segments_CONST_0x0_LEN1_TO_PKT_eDSA_fwd_w2__IsTrgPhyPortValid_OFFSET      (0x4c)

/*************** THR4_SRv6_Source_Node_Second_Pass_3_segments *******************/
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_OFFSET (0x50)
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS32_OFFSET (0x54)
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN12_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_OFFSET (0x58)
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS76_OFFSET (0x5c)
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_LEN16_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_OFFSET (0x60)
#define SHIFTLEFT_40_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_LEN32_FROM_PKT_with_vlan__Generic_TS_Data__mac_da_47_32_PLUS80_OFFSET (0x64)
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_no_vlan__Generic_TS_Data__data_35_32_MINUS40_LEN4_TO_PKT_no_vlan__SRv6_Header__last_entry_OFFSET (0x68)
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_with_vlan__Generic_TS_Data__data_35_32_MINUS40_LEN4_TO_PKT_with_vlan__SRv6_Header__last_entry_OFFSET (0x6c)
#define ADD_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x38_LEN16_TO_PKT_no_vlan__IPv6_Header__payload_length_OFFSET (0x70)
#define ADD_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x38_LEN16_TO_PKT_with_vlan__IPv6_Header__payload_length_OFFSET (0x74)
#define COPY_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x2B_LEN8_TO_PKT_no_vlan__IPv6_Header__next_header_OFFSET (0x78)
#define COPY_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_CONST_0x2B_LEN8_TO_PKT_with_vlan__IPv6_Header__next_header_OFFSET (0x7c)
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_no_vlan__Generic_TS_Data__data_31_28_MINUS40_LEN32_TO_PKT_no_vlan__SRv6_Segment0_Header__dip0_high_OFFSET (0x80)
#define COPY_BYTES_THR4_SRv6_Source_Node_Second_Pass_3_segments_OFFSET8_PKT_with_vlan__Generic_TS_Data__data_31_28_MINUS40_LEN32_TO_PKT_with_vlan__SRv6_Segment0_Header__dip0_high_OFFSET (0x84)
#define COPY_BITS_THR4_SRv6_Source_Node_Second_Pass_3_segments_CONST_0xF2_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET (0x88)

/*************** THR5_SRv6_Source_Node_Second_Pass_2_segments *******************/
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_OFFSET (0x8c)
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS32_OFFSET (0x90)
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN12_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_OFFSET (0x94)
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN32_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS76_OFFSET (0x98)
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_LEN16_FROM_PKT_no_vlan__Generic_TS_Data__mac_da_47_32_PLUS64_OFFSET (0x9c)
#define SHIFTLEFT_24_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_LEN32_FROM_PKT_with_vlan__Generic_TS_Data__mac_da_47_32_PLUS80_OFFSET (0xa0)
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_no_vlan__Generic_TS_Data__data_35_32_MINUS24_LEN4_TO_PKT_no_vlan__SRv6_Header__last_entry_OFFSET (0x68)
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_with_vlan__Generic_TS_Data__data_35_32_MINUS24_LEN4_TO_PKT_with_vlan__SRv6_Header__last_entry_OFFSET (0x6c)
#define ADD_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x28_LEN16_TO_PKT_no_vlan__IPv6_Header__payload_length_OFFSET (0xa4)
#define ADD_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x28_LEN16_TO_PKT_with_vlan__IPv6_Header__payload_length_OFFSET (0xa8)
#define COPY_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x2B_LEN8_TO_PKT_no_vlan__IPv6_Header__next_header_OFFSET (0x78)
#define COPY_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_CONST_0x2B_LEN8_TO_PKT_with_vlan__IPv6_Header__next_header_OFFSET (0x7c)
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_no_vlan__Generic_TS_Data__data_15_12_MINUS24_LEN16_TO_PKT_no_vlan__SRv6_Segment0_Header__dip0_high_OFFSET (0xac)
#define COPY_BYTES_THR5_SRv6_Source_Node_Second_Pass_2_segments_OFFSET24_PKT_with_vlan__Generic_TS_Data__data_15_12_MINUS24_LEN16_TO_PKT_with_vlan__SRv6_Segment0_Header__dip0_high_OFFSET (0xb0)
#define COPY_BITS_THR5_SRv6_Source_Node_Second_Pass_2_segments_CONST_0xE2_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET (0xb4)

/*************** THR12_MPLS_SR_NO_EL *******************/
#define COPY_BITS_THR12_MPLS_SR_NO_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                             (0xb8)

/*************** THR13_MPLS_SR_ONE_EL *******************/
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_OFFSET                                      (0xbc)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_OFFSET                                      (0xc0)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xc4)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xc8)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xcc)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xd0)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xd4)
#define SHIFTLEFT_8_BYTES_THR13_MPLS_SR_ONE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xd8)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                            (0xb8)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x0_LEN10_TO_PKT_MPLS_label_8__label_val_OFFSET                                     (0xdc)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x7_LEN10_TO_PKT_MPLS_label_8__label_val_PLUS10_OFFSET                              (0xe0)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x0_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                            (0xe4)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_DESC_phal2ppa__packet_hash_LEN12_TO_PKT_MPLS_label_8__label_val_PLUS8_OFFSET              (0xe8)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__label_val_OFFSET                                      (0xec)
#define COPY_BITS_THR13_MPLS_SR_ONE_EL_CONST_0x30_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                      (0xf0)
#define SUB_BITS_THR13_MPLS_SR_ONE_EL_PKT_MPLS_data__EL1_ofst_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET          (0xf4)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_LEN4_TO_PKT_expansion_space__reserved_8_OFFSET           (0xf8)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS4_LEN4_TO_PKT_expansion_space__reserved_8_PLUS4_OFFSET (0xfc)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS8_LEN4_TO_PKT_expansion_space__reserved_8_PLUS8_OFFSET (0x100)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS12_LEN4_TO_PKT_expansion_space__reserved_8_PLUS12_OFFSET (0x104)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS16_LEN4_TO_PKT_expansion_space__reserved_8_PLUS16_OFFSET (0x108)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS20_LEN4_TO_PKT_expansion_space__reserved_8_PLUS20_OFFSET (0x10c)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS24_LEN4_TO_PKT_expansion_space__reserved_8_PLUS24_OFFSET (0x110)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS28_LEN4_TO_PKT_expansion_space__reserved_8_PLUS28_OFFSET (0x114)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS32_LEN4_TO_PKT_expansion_space__reserved_8_PLUS32_OFFSET (0x118)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS36_LEN4_TO_PKT_expansion_space__reserved_8_PLUS36_OFFSET (0x11c)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS40_LEN4_TO_PKT_expansion_space__reserved_8_PLUS40_OFFSET (0x120)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS44_LEN4_TO_PKT_expansion_space__reserved_8_PLUS44_OFFSET (0x124)
#define COPY_BYTES_THR13_MPLS_SR_ONE_EL_PKT_expansion_space__reserved_7_PLUS48_LEN4_TO_PKT_expansion_space__reserved_8_PLUS48_OFFSET (0x128)

/*************** THR14_MPLS_SR_TWO_EL *******************/
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_OFFSET                                      (0xbc)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_OFFSET                                      (0xc0)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xc4)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xc8)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xcc)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xd0)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xd4)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_OFFSET                                     (0xd8)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                               (0x12c)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                               (0x130)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                              (0x134)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                              (0x138)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                              (0x13c)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                              (0x140)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                              (0x144)
#define SHIFTLEFT_8_BYTES_THR14_MPLS_SR_TWO_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                              (0x148)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                            (0xb8)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x0_LEN10_TO_PKT_MPLS_label_8__label_val_OFFSET                                     (0xdc)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x7_LEN10_TO_PKT_MPLS_label_8__label_val_PLUS10_OFFSET                              (0xe0)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x0_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                            (0xe4)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_DESC_phal2ppa__packet_hash_LEN12_TO_PKT_MPLS_label_8__label_val_PLUS8_OFFSET              (0xe8)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__label_val_OFFSET                                      (0xec)
#define COPY_BITS_THR14_MPLS_SR_TWO_EL_CONST_0x30_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                      (0xf0)
#define SUB_BITS_THR14_MPLS_SR_TWO_EL_PKT_MPLS_data__EL1_ofst_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET          (0xf4)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_LEN4_TO_PKT_expansion_space__reserved_8_OFFSET           (0xf8)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS4_LEN4_TO_PKT_expansion_space__reserved_8_PLUS4_OFFSET (0xfc)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS8_LEN4_TO_PKT_expansion_space__reserved_8_PLUS8_OFFSET (0x100)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS12_LEN4_TO_PKT_expansion_space__reserved_8_PLUS12_OFFSET (0x104)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS16_LEN4_TO_PKT_expansion_space__reserved_8_PLUS16_OFFSET (0x108)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS20_LEN4_TO_PKT_expansion_space__reserved_8_PLUS20_OFFSET (0x10c)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS24_LEN4_TO_PKT_expansion_space__reserved_8_PLUS24_OFFSET (0x110)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS28_LEN4_TO_PKT_expansion_space__reserved_8_PLUS28_OFFSET (0x114)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS32_LEN4_TO_PKT_expansion_space__reserved_8_PLUS32_OFFSET (0x118)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS36_LEN4_TO_PKT_expansion_space__reserved_8_PLUS36_OFFSET (0x11c)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS40_LEN4_TO_PKT_expansion_space__reserved_8_PLUS40_OFFSET (0x120)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS44_LEN4_TO_PKT_expansion_space__reserved_8_PLUS44_OFFSET (0x124)
#define COPY_BYTES_THR14_MPLS_SR_TWO_EL_PKT_expansion_space__reserved_7_PLUS48_LEN4_TO_PKT_expansion_space__reserved_8_PLUS48_OFFSET (0x128)

/*************** THR15_MPLS_SR_THREE_EL *******************/
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_OFFSET                                    (0xbc)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_OFFSET                                    (0xc0)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_OFFSET                                   (0xc4)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_OFFSET                                   (0xc8)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_OFFSET                                   (0xcc)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_OFFSET                                   (0xd0)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_OFFSET                                   (0xd4)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_OFFSET                                   (0xd8)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                             (0x12c)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                             (0x130)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                            (0x134)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                            (0x138)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                            (0x13c)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                            (0x140)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                            (0x144)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_MINUS8_OFFSET                            (0x148)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN4_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                            (0x14c)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN8_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                            (0x150)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN12_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                           (0x154)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN16_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                           (0x158)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN20_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                           (0x15c)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN24_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                           (0x160)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN28_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                           (0x164)
#define SHIFTLEFT_8_BYTES_THR15_MPLS_SR_THREE_EL_LEN32_FROM_PKT_MPLS_label_1__label_val_MINUS16_OFFSET                           (0x168)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                          (0xb8)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x0_LEN10_TO_PKT_MPLS_label_8__label_val_OFFSET                                   (0xdc)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x7_LEN10_TO_PKT_MPLS_label_8__label_val_PLUS10_OFFSET                            (0xe0)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x0_LEN1_TO_PKT_MPLS_label_8__BoS_OFFSET                                          (0xe4)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_DESC_phal2ppa__packet_hash_LEN12_TO_PKT_MPLS_label_8__label_val_PLUS8_OFFSET            (0xe8)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x1_LEN1_TO_PKT_MPLS_label_8__label_val_OFFSET                                    (0xec)
#define COPY_BITS_THR15_MPLS_SR_THREE_EL_CONST_0x30_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                    (0xf0)
#define SUB_BITS_THR15_MPLS_SR_THREE_EL_PKT_MPLS_data__EL1_ofst_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET        (0xf4)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_LEN4_TO_PKT_MPLS_label_2__label_val_OFFSET             (0xf8)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS4_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS4_OFFSET (0xfc)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS8_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS8_OFFSET (0x100)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS12_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS12_OFFSET (0x104)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS16_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS16_OFFSET (0x108)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS20_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS20_OFFSET (0x10c)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS24_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS24_OFFSET (0x110)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS28_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS28_OFFSET (0x114)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS32_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS32_OFFSET (0x118)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS36_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS36_OFFSET (0x11c)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS40_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS40_OFFSET (0x120)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS44_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS44_OFFSET (0x124)
#define COPY_BYTES_THR15_MPLS_SR_THREE_EL_PKT_expansion_space__reserved_7_PLUS48_LEN4_TO_PKT_MPLS_label_2__label_val_PLUS48_OFFSET (0x128)

/*************** THR16_SGT_NetAddMSB *******************/
#define SHIFTLEFT_4_BYTES_THR16_SGT_NetAddMSB_LEN12_FROM_PKT_mac_da_47_32_OFFSET                                                 (0x16c)
#define SHIFTLEFT_4_BYTES_THR16_SGT_NetAddMSB_LEN32_FROM_PKT_mac_da_47_32_OFFSET                                                 (0x170)
#define SHIFTLEFT_4_BYTES_THR16_SGT_NetAddMSB_LEN12_FROM_PKT_mac_da_47_32_PLUS32_OFFSET                                          (0x174)
#define COPY_BYTES_THR16_SGT_NetAddMSB_CFG_sgt_tag_template__ethertype_LEN6_TO_PKT_sgt_tag__ethertype_OFFSET                     (0x178)
#define COPY_BITS_THR16_SGT_NetAddMSB_CONST_0x4_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                        (0x17c)

/*************** THR17_SGT_NetFix *******************/
#define COPY_BYTES_THR17_SGT_NetFix_CFG_sgt_tag_template__ethertype_LEN4_TO_PKT_sgt_tag__ethertype_OFFSET                        (0x180)

/*************** THR18_SGT_NetRemove *******************/
#define SHIFTRIGHT_4_BYTES_THR18_SGT_NetRemove_LEN12_FROM_PKT_mac_da_47_32_OFFSET                                                (0x184)
#define SHIFTRIGHT_4_BYTES_THR18_SGT_NetRemove_LEN12_FROM_PKT_mac_da_47_32_PLUS32_OFFSET                                         (0x188)
#define SHIFTRIGHT_4_BYTES_THR18_SGT_NetRemove_LEN32_FROM_PKT_mac_da_47_32_OFFSET                                                (0x18c)
#define COPY_BITS_THR18_SGT_NetRemove_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                       (0x190)

/*************** THR19_SGT_eDSAFix *******************/
#define COPY_BITS_THR19_SGT_eDSAFix_CONST_0x0_LEN1_TO_PKT_eDSA_fwd_w3__Tag1SrcTagged_OFFSET                                      (0x194)

/*************** THR20_SGT_eDSARemove *******************/
#define SHIFTRIGHT_4_BYTES_THR20_SGT_eDSARemove_LEN4_FROM_PKT_mac_da_47_32_PLUS32_OFFSET                                         (0x11c)
#define SHIFTRIGHT_4_BYTES_THR20_SGT_eDSARemove_LEN32_FROM_PKT_mac_da_47_32_OFFSET                                               (0x18c)
#define COPY_BITS_THR20_SGT_eDSARemove_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                      (0x190)

/*************** THR21_SGT_GBPFixIPv4 *******************/
#define COPY_BITS_THR21_SGT_GBPFixIPv4_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_OFFSET                                          (0x198)
#define COPY_BITS_THR21_SGT_GBPFixIPv4_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_OFFSET         (0x19c)
#define COPY_BITS_THR21_SGT_GBPFixIPv4_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_OFFSET (0x1a0)

/*************** THR22_SGT_GBPFixIPv6 *******************/
#define COPY_BITS_THR22_SGT_GBPFixIPv6_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_OFFSET                                          (0xec)
#define COPY_BITS_THR22_SGT_GBPFixIPv6_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_OFFSET         (0x1a4)
#define COPY_BITS_THR22_SGT_GBPFixIPv6_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_OFFSET (0x1a8)

/*************** THR23_SGT_GBPRemoveIPv4 *******************/
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_OFFSET                                       (0x1ac)
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_OFFSET      (0x1b0)
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_OFFSET (0x1b4)
#define SHIFTRIGHT_4_BYTES_THR23_SGT_GBPRemoveIPv4_LEN16_FROM_PKT_version_PLUS32_OFFSET                                          (0x1b8)
#define SHIFTRIGHT_4_BYTES_THR23_SGT_GBPRemoveIPv4_LEN20_FROM_PKT_version_PLUS32_OFFSET                                          (0x1bc)
#define SHIFTRIGHT_4_BYTES_THR23_SGT_GBPRemoveIPv4_LEN32_FROM_PKT_version_OFFSET                                                 (0x18c)
#define CSUM_LOAD_OLD_THR23_SGT_GBPRemoveIPv4_LEN2_FROM_PKT_IPv4_Header__total_length_OFFSET                                     (0x1c0)
#define SUB_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0x4_LEN16_TO_PKT_IPv4_Header__total_length_OFFSET                                 (0x1c4)
#define CSUM_LOAD_NEW_THR23_SGT_GBPRemoveIPv4_LEN2_FROM_PKT_IPv4_Header__total_length_OFFSET                                     (0x1c8)
#define CSUM_LOAD_OLD_THR23_SGT_GBPRemoveIPv4_LEN2_FROM_PKT_IPv4_Header__header_checksum_OFFSET                                  (0x1cc)
#define CSUM_STORE_IP_THR23_SGT_GBPRemoveIPv4_TO_PKT_IPv4_Header__header_checksum_OFFSET                                         (0x1d0)
#define SUB_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0x4_LEN16_TO_PKT_udp_header__Length_OFFSET                                        (0x1d4)
#define COPY_BITS_THR23_SGT_GBPRemoveIPv4_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                   (0x190)

/*************** THR24_SGT_GBPRemoveIPv6 *******************/
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0x1_LEN1_TO_PKT_vxlan_gbp_header__G_OFFSET                                       (0x1d8)
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_DESC_phal2ppa__pha_metadata3_LEN4_TO_PKT_vxlan_gbp_header__Group_Policy_ID_OFFSET      (0x1dc)
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_DESC_phal2ppa__pha_metadata2_PLUS4_LEN12_TO_PKT_vxlan_gbp_header__Group_Policy_ID_PLUS4_OFFSET (0x1e0)
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN4_FROM_PKT_version_PLUS64_OFFSET                                           (0x1e4)
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN8_FROM_PKT_version_PLUS64_OFFSET                                           (0x1e8)
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN32_FROM_PKT_version_PLUS32_OFFSET                                          (0x1ec)
#define SHIFTRIGHT_4_BYTES_THR24_SGT_GBPRemoveIPv6_LEN32_FROM_PKT_version_OFFSET                                                 (0x18c)
#define SUB_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0x4_LEN16_TO_PKT_IPv6_Header__payload_length_OFFSET                               (0x1f0)
#define SUB_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0x4_LEN16_TO_PKT_udp_header__Length_OFFSET                                        (0x1f4)
#define COPY_BITS_THR24_SGT_GBPRemoveIPv6_CONST_0xFC_LEN8_TO_DESC_ppa_internal_desc__fw_bc_modification_OFFSET                   (0x190)

/*************** THR25_PTP_Phy_1_Step *******************/
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__timestamp_PLUS1_LEN1_TO_CFG_ptp_phy_tag__ingTimeSecLsb_OFFSET              (0x1f8)
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__udp_checksum_update_en_LEN1_TO_CFG_ptp_phy_tag__checksumUpdate_OFFSET      (0x1fc)
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__ptp_tai_select_LEN1_TO_CFG_ptp_phy_tag__tai_sel_PLUS1_OFFSET               (0x200)
#define COPY_BITS_THR25_PTP_Phy_1_Step_DESC_phal2ppa__timestamp_offset_LEN7_TO_CFG_ptp_phy_tag__cf_offset_OFFSET                 (0x204)
#define COPY_BITS_THR25_PTP_Phy_1_Step_CFG_ptp_phy_tag__cf_offset_LEN1_TO_DESC_phal2ppa__ptp_timestamp_queue_select_OFFSET       (0x208)
#define COPY_BITS_THR25_PTP_Phy_1_Step_CFG_ptp_phy_tag__cf_offset_PLUS1_LEN10_TO_DESC_phal2ppa__ptp_timestamp_queue_entry_id_OFFSET (0x20c)
#define COPY_BITS_THR25_PTP_Phy_1_Step_CONST_0x3_LEN4_TO_DESC_phal2ppa__ptp_action_OFFSET                                        (0x210)

/*************** THR59_SLS_Test *******************/
#define COPY_BYTES_THR59_SLS_Test_PKT_IPv4_Header__version_LEN2_TO_CFG_HA_Table_reserved_space__reserved_0_OFFSET                (0x214)
#define COPY_BYTES_THR59_SLS_Test_PKT_IPv4_Header__version_PLUS2_LEN2_TO_CFG_HA_Table_reserved_space__reserved_0_PLUS2_OFFSET    (0x218)
#define CSUM_LOAD_NEW_THR59_SLS_Test_LEN8_FROM_PKT_IPv4_Header__version_OFFSET                                                   (0x21c)
#define CSUM_LOAD_NEW_THR59_SLS_Test_LEN2_FROM_PKT_IPv4_Header__version_PLUS8_OFFSET                                             (0x220)
#define CSUM_LOAD_NEW_THR59_SLS_Test_LEN8_FROM_PKT_IPv4_Header__version_PLUS12_OFFSET                                            (0x224)
#define CSUM_STORE_IP_THR59_SLS_Test_TO_PKT_IPv4_Header__header_checksum_OFFSET                                                  (0x228)

/*************** Last Entry *******************/
#define ACCELERATOR_COMMAND_OFFSET_LAST_ENTRY                                                                                    (0x228)

/**************************************************************************
 * Accelerator command Trigger and load macros
 **************************************************************************/
/* Trigger the accelerator by writing dummy value to the Accelerator Instruction Trigger area */
#define ACCEL_CMD_TRIG(offset,value)	PPA_FW_SP_WRITE(ACCEL_CMDS_TRIG_BASE_ADDR + offset,value)
/* Load the accelerator command data into SP memory */
#define ACCEL_CMD_LOAD(offset,value)	PPA_FW_SP_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset,value)
/* Load only first 8 bits of constant value (constant value should be placed after 3 bytes in command entry) */
#define ACCEL_CMD_LOAD_CONSTANT(offset,value)   PPA_FW_SP_BYTE_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset + 3,value)
/* Load only byte destination 7 bits + 1 bit of pkt configuration (should be placed after 2 bytes in command entry) */
#define ACCEL_CMD_LOAD_PKT_DEST(offset,value)   PPA_FW_SP_BYTE_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset + 2,value)
/* Load only byte source 7 bits + 1 bit of pkt configuration (should be placed after 3 bytes in command entry) */
#define ACCEL_CMD_LOAD_PKT_SRC(offset,value)    PPA_FW_SP_BYTE_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset + 3,value)
/* Load first 8 bits of constant value + 7 bits of byte destination + 1 bit of pkt configuration  (should be placed after 2 bytes in command entry with 2 bytes size) */
#define ACCEL_CMD_LOAD_PKT_DEST_AND_CONSTANT(offset,pktDest,constVal)   PPA_FW_SP_SHORT_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset + 2, ( (pktDest<<8)|constVal)  )
/* Load 8 bits of length value (should be placed after 1 byte in command entry) */
#define ACCEL_CMD_LOAD_LENGTH(offset,lenVal)    PPA_FW_SP_BYTE_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset + 1, lenVal)
/* Load first 8 bits of src byte value + 8 bits of destination byte. Already includes 1 bit of pkt configuration (should be placed after 2B in command entry with 2B size) */
#define ACCEL_CMD_LOAD_PKT_DEST_AND_PKT_SRC(offset,pktDest,pktSrc)  PPA_FW_SP_SHORT_WRITE(ACCEL_CMDS_CFG_BASE_ADDR + offset + 2, ( (pktDest<<8)|pktSrc)  )

/* Accelerator trigger write data */
#define HDR_OFST_IGNORE          (1)
#define SET_REMAIN_FIELDS_TO_ZERO  (2)

#endif /* __ppa_fw_accelerator_commands_h */
