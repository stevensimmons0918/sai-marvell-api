/*******************************************************************************
*              (c), Copyright 2001, Marvell International Ltd.                 *
* THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL SEMICONDUCTOR, INC.   *
* NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT  *
* OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE        *
* DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.     *
* THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,       *
* IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.   *
********************************************************************************
*/
/**
********************************************************************************
* @file smemLion3.h
*
* @brief Lion3 memory mapping implementation: the pipe and the shared memory
*
* @version   51
********************************************************************************
*/
#ifndef __smemLion3h
#define __smemLion3h

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <asicSimulation/SKernel/smem/smemLion2.h>
#include <asicSimulation/SKernel/smem/smemFalcon.h>
#include <asicSimulation/SKernel/smem/smemHawk.h>
#include <asicSimulation/SKernel/smem/smemPhoenix.h>
#include <asicSimulation/SKernel/smem/smemIronman.h>

ACTIVE_READ_FUNC_PROTOTYPE_MAC(smemLion3ActiveReadErmrkTsQueueEntryWord1Word2Reg);
ACTIVE_READ_FUNC_PROTOTYPE_MAC(smemLion3ActiveReadGopPtpTxTsQueueReg2Reg);

ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteTodFuncConfReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteHaInterruptsMaskReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteErmrkInterruptsMaskReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteErmrkPtpConfReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteErmrkTsQueueEntryIdClearReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteGopPtpGeneralCtrlReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteGopPtpInterruptsMaskReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteHierarchicalPolicerControl);

/* DFX active memory */
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteDfxServerResetControlReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteDfxServerDeviceCtrl4Reg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteDfxServerDeviceCtrl14Reg);

/* CNC_0,CNC_1  read/write functions for Lion3 */
/* NOTE: we store the needed info spread into 2 entries , so the 'place holder' can be set !!! */
/* NOTE: the 'unit_index' (0 or 1) is not set as there is no additional 'free' parameter */
/* so if the functions that bound to the 'CNC active memory' need the 'unit_id' (0 or 1)
    they need to call function cncUnitIndexFromAddrGet(dev,address)*/
#define CNC_ACTIVE_READ_WRITE_MEMORY(offset , mask, readFun,readFunParam , writeFun,writeFunParam)       \
    GENERIC_2_UNITS_ACTIVE_READ_WRITE_MEMORY(CNC_ACTIVE_MEMORY_PLACE_HOLDER_MASK_CNS,offset , mask, readFun,readFunParam , writeFun,writeFunParam)

/* init the 2 CNC entries */
#define CNC_ACTIVE_MEM_ENTRY_INIT_MAC(dev,entryPtr)                 \
    GENERIC_2_UNITS_ACTIVE_MEM_ENTRY_INIT_MAC(dev,CNC,entryPtr)

/* LMS active write functions for Lion3 */
#define LION3_LMS_ACTIVE_WRITE_MEMORY(offset, writeTableFunc)      \
    ACTIVE_WRITE_MEMORY_MAC(LION3_LMS_UNIT_BASE_ADDR_CNS  + offset, writeTableFunc, 0), \
    ACTIVE_WRITE_MEMORY_MAC(LION3_LMS1_UNIT_BASE_ADDR_CNS + offset, writeTableFunc, 1), \
    ACTIVE_WRITE_MEMORY_MAC(LION3_LMS2_UNIT_BASE_ADDR_CNS + offset, writeTableFunc, 2)

#define LION3_TABLES_FORMAT_INIT_MAC(dev, tableFieldsFormat, tableFieldsFormatArr, tableFieldsFormatName) \
    (dev)->tableFormatInfo[tableFieldsFormat].numFields = (sizeof(tableFieldsFormatArr) / sizeof(tableFieldsFormatArr[0])); \
    (dev)->tableFormatInfo[tableFieldsFormat].fieldsInfoPtr = tableFieldsFormatArr; \
    (dev)->tableFormatInfo[tableFieldsFormat].fieldsNamePtr = tableFieldsFormatName; \
    (dev)->tableFormatInfo[tableFieldsFormat].formatNamePtr = STR(tableFieldsFormatArr);

#define ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) \
    _Addr,         _val,      _repeat,    _skip

#define LONG_ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip,block_repeat, block_skip) \
    _Addr,         _val,      _repeat,    _skip ,block_repeat, block_skip

#define DEFAULT_REG_FOR_PLR_UNIT_MAC(_Addr,_val,_repeat,_skip)  \
     {&STRING_FOR_UNIT_NAME(UNIT_IPLR),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_IPLR1),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_EPLR),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }

#define DEFAULT_REG_FOR_OAM_UNIT_MAC(_Addr,_val,_repeat,_skip)   \
     {&STRING_FOR_UNIT_NAME(UNIT_IOAM),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_EOAM),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }

#define DEFAULT_REG_FOR_CNC_UNIT_MAC(_Addr,_val,_repeat,_skip)   \
     LONG_DEFAULT_REG_FOR_CNC_UNIT_MAC(_Addr,_val,_repeat,_skip,0, 0)

#define LONG_DEFAULT_REG_FOR_CNC_UNIT_MAC(_Addr,_val,_repeat,_skip,block_repeat, block_skip)   \
     {&STRING_FOR_UNIT_NAME(UNIT_CNC),      LONG_ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip,block_repeat, block_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_CNC_1),    LONG_ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip,block_repeat, block_skip) }

#define DEFAULT_REG_FOR_LMS_UNIT_MAC(_Addr,_val,_repeat,_skip)  \
     {&STRING_FOR_UNIT_NAME(UNIT_LMS),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_LMS1),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_LMS2),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }

#define DEFAULT_REG_FOR_SMI_UNIT_MAC(_Addr,_val,_repeat,_skip)  \
     {&STRING_FOR_UNIT_NAME(UNIT_GOP_SMI_0),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_SMI_1),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_SMI_2),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_SMI_3),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }

#define DEFAULT_REG_FOR_LED_UNIT_MAC(_Addr,_val,_repeat,_skip)  \
     {&STRING_FOR_UNIT_NAME(UNIT_GOP_LED_0),     ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_LED_1),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_LED_2),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_LED_3),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }\
    ,{&STRING_FOR_UNIT_NAME(UNIT_GOP_LED_4),    ADDR_VAL_REPEAT_SKIP_MAC(_Addr,_val,_repeat,_skip) }


#define  XSB_DDR_ADDR_MAC(instanceOffset , addrOffset) \
                ((instanceOffset) + (addrOffset))

#define REG_DEFAULT___XSB_XBAR_DUNIT__INSTANCE_MAC(instanceOffset)   \
      {&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001030),         0x00000004}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001034),         0x00338000}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000010f8),         0x000000ff}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000010fc),         0x0000ffff}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001400),         0x7b008400}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001404),         0x3630b800}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001408),         0x1101333b}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x0000140c),         0x36000034}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001410),         0x11004444}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001414),         0x00000300}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x0000141c),         0x00000642}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001424),         0x0160fa7f}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001428),         0x00074410}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x0000142c),         0x000c4f38}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001430),         0x76543210}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001434),         0xfedcba98}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001438),         0x000100ff}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001470),         0x00013204}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001474),         0x0000030c}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x0000147c),         0x00007441}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001488),         0x00000542}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000014a0),         0x00000001}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000014b8),         0x00006f67}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000014c0),         0x192434e9}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000014c4),         0x092434e9}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000014c8),         0x05140001}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000014cc),         0x3d090008}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001504),         0x0ffffff1}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x0000150c),         0x0ffffff5}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001514),         0x0ffffff9}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x0000151c),         0x0ffffffd}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001520),         0x0b4012c0}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001524),         0x00000800}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001528),         0x000302f1}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001590),         0xfffc7f7f}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015b0),         0x41000000}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015b4),         0xf80000ff}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015b8),         0x3400000c}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015c0),         0x80000000}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015c4),         0x06910000}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015c8),         0xfedb6924}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015d0),         0x00000610}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015e0),         0x00000001}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015e4),         0x00203c18}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000015ec),         0xf800000b}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001670),         0x03ff0fff}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000016ac),         0x0009ff00}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000016cc),         0x00000001}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000016d0),         0x8421f116}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000016d4),         0x000812c0}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x000016d8),         0x00000040}  \
     ,{&STRING_FOR_UNIT_NAME(DFX_EXT_SERVER), XSB_DDR_ADDR_MAC(instanceOffset , 0x00001870),         0x00000610}

#define BC2_XSB_DDR_CONTROLER_DDR_MEMORY_MAC(instanceOffset)   \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001030), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000103C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000010B0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000010C4))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000010F0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000010FC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001130), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000113C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000011B0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000011CC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000011F0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000011FC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001230), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000123C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000012B0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000012CC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000012F0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000012FC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001400), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001438))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001454), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001454))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001470), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001474))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x0000147C), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001480))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001488), XSB_DDR_ADDR_MAC(instanceOffset ,0x000014A4))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000014B0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000014B8))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000014C0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000014DC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000014F4), XSB_DDR_ADDR_MAC(instanceOffset ,0x000014F8))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001504), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001504))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x0000150C), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000150C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001514), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001514))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x0000151C), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001528))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001538), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000153C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001590), XSB_DDR_ADDR_MAC(instanceOffset ,0x000015C8))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000015D0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000015E4))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000015EC), XSB_DDR_ADDR_MAC(instanceOffset ,0x000015EC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001600), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001618))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001624), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001624))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001630), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000163C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001670), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001674))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001690), XSB_DDR_ADDR_MAC(instanceOffset ,0x000016A0))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000016AC), XSB_DDR_ADDR_MAC(instanceOffset ,0x000016DC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000016F0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000016FC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001830), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000183C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001870), XSB_DDR_ADDR_MAC(instanceOffset ,0x000018CC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000018F0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000018FC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001930), XSB_DDR_ADDR_MAC(instanceOffset ,0x0000193C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000019B0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000019CC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x000019F0), XSB_DDR_ADDR_MAC(instanceOffset ,0x000019FC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001A30), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001A3C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001AB0), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001ACC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001AF0), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001AFC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001B30), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001B3C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001BB0), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001BCC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001BF0), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001BFC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001C30), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001C3C))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001CB0), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001CCC))},  \
    {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (XSB_DDR_ADDR_MAC(instanceOffset ,0x00001CF0), XSB_DDR_ADDR_MAC(instanceOffset ,0x00001D00))}

#define XSB_BASE_ADDR               0x4000
/* see code in mvHwsDdr3Bc2.c in interfaceMap_A0 */
#define BC2_A0_XSB_XBAR_0_OFFSET         (XSB_BASE_ADDR + ((17) << 15))
#define BC2_A0_XSB_XBAR_1_OFFSET         (XSB_BASE_ADDR + ((7 ) << 15))
#define BC2_A0_XSB_XBAR_2_OFFSET         (XSB_BASE_ADDR + ((11) << 15))
#define BC2_A0_XSB_XBAR_3_OFFSET         (XSB_BASE_ADDR + ((3 ) << 15))
#define BC2_A0_XSB_XBAR_4_OFFSET         (XSB_BASE_ADDR + ((25) << 15))
#define BC2_A0_XSB_XBAR_MULTICAST_OFFSET (XSB_BASE_ADDR + ((29) << 15))
/* see code in mvHwsDdr3Bc2.c in interfaceMap_B0 */
#define BC2_B0_XSB_XBAR_0_OFFSET         (XSB_BASE_ADDR + ((17) << 15))
#define BC2_B0_XSB_XBAR_1_OFFSET         (XSB_BASE_ADDR + ((6 ) << 15))
#define BC2_B0_XSB_XBAR_2_OFFSET         (XSB_BASE_ADDR + ((10) << 15))
#define BC2_B0_XSB_XBAR_3_OFFSET         (XSB_BASE_ADDR + ((3 ) << 15))
#define BC2_B0_XSB_XBAR_4_OFFSET         (XSB_BASE_ADDR + ((18) << 15))
#define BC2_B0_XSB_XBAR_MULTICAST_OFFSET (XSB_BASE_ADDR + ((29) << 15))

/* XSB XBAR instance .
NOTE: Cider show single instance but the HWS uses 6 instances : 5 for 'unicast' and one for multicast */
#define BC2_XSB_XBAR_MEMORY_MAC(offset)   \
     {SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (offset+0x00000000, offset+0x0000008c)}  \
    ,{SET_SMEM_CHUNK_BASIC_STC_ENTRY_BY_END_ADDR_MAC (offset+0x000001FC, offset+0x000001FC)}

/**
* @internal smemLion3RegsInfoSet function
* @endinternal
*
* @brief   Init memory module for Lion3 and above devices.
*
* @param[in] devObjPtr                - pointer to device object.
*/
void smemLion3RegsInfoSet
(
    IN SKERNEL_DEVICE_OBJECT * devObjPtr
);

/**
* @internal smemLion3Init function
* @endinternal
*
* @brief   Init memory module for a Lion3 device.
*
* @param[in] deviceObj                - pointer to device object.
*/
void smemLion3Init
(
    IN SKERNEL_DEVICE_OBJECT * deviceObj
);

/**
* @internal smemLion3Init2 function
* @endinternal
*
* @brief   Init memory module for a device - after the load of the default
*         registers file
* @param[in] devObjPtr                - pointer to device object.
*/
void smemLion3Init2
(
    IN SKERNEL_DEVICE_OBJECT * devObjPtr
);

/**
* @internal smemLion3ActiveWriteMeterEntry function
* @endinternal
*
* @brief   when the CPU write the meter entry , the device should copy values of
*         <max_burst_size0> to <bucket_size0> and <max_burst_size1> to <bucket_size1>
*         function should do nothing when memory access for 'counting' memory.
* @param[in] devObjPtr                - pointer to device object.
* @param[in] meterEntryPtr            - pointer to the meter entry in the memory
* @param[in] meterAddress             - address of the entry
*                                      policerId    - called from plr 0 or plr 1
*/
void smemLion3ActiveWriteMeterEntry
(
    IN SKERNEL_DEVICE_OBJECT * devObjPtr,
    IN GT_U32                * meterEntryPtr,
    IN GT_U32                  meterAddress,
    IN GT_U32                  plrId
);

ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteOamTbl);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteFDBCountersUpdateControlReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteFDBCountersControlReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteFDBGlobalCfg1Reg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteIngressStcTable);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteLfsrConfig);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteFdbMsg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteTcamMgLookup);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteTcamMgHitGroupHitNum);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteProtectionLocStatusTable);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteTransSdmaPacketGeneratorConfigQueueReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveWriteTransSdmaPacketCountConfigQueueReg);
ACTIVE_WRITE_FUNC_PROTOTYPE_MAC(smemLion3ActiveAuqHostCfgWrite);

ACTIVE_READ_FUNC_PROTOTYPE_MAC(smemLion3ActiveReadExceptionSummaryBitmap);
ACTIVE_READ_FUNC_PROTOTYPE_MAC(smemLion3ActiveReadExceptionCounter);
ACTIVE_READ_FUNC_PROTOTYPE_MAC(smemLion3ActiveReadExceptionGroupStatus);
ACTIVE_READ_FUNC_PROTOTYPE_MAC(smemLion3SdmaRxResourceErrorCountAndModeActiveRead);

/**************************************************/
/********** TTI UNIT START ************************/
/**************************************************/


/* the fields of the (TTI) default eport table in Sip5 */
typedef enum{
    SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PROT_BASED_QOS_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PROT_BASED_VLAN_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_DEF_TAG1_VLAN_ID
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_UP0
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_INGRESS_TAG0_TPID_PROFILE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_INGRESS_TAG1_TPID_PROFILE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_VLAN_TRANSLATION
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_P_VID_PRECEDENCE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_P_EVLAN_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_P_EVLAN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_802_1AH_MAC_TO_ME_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_EN_802_1AH_TTI_LOOKUP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_ETHERNET_CLASSIFIER_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MPLS_TUNNEL_TERMINATION_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_MPLS_MAC_TO_ME_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_IPV4_MAC_TO_ME_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_TTI_FOR_TT_ONLY
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_TUNNEL_TERMINATION_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_EXTENDED_DSA_BYPASS_BRIDGE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_QOS_PROFILE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_DSA_TAG_QOS
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_EXP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_DSCP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_UP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MAP_DSCP_TO_DSCP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_QOS_MAPPING_TABLE_INDEX
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_MODIFY_DSCP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_MODIFY_UP
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PORT_QOS_PRECEDENCE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_NESTED_VLAN_ACCESS_PORT
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_OVERSIZE_UNTAGGED_PKTS_FILTER_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRILL_ENGINE_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRILL_INGRESS_OUTER_VID0
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_802_1AH_PASSENGER_STAG_IS_TAG0_1
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_6_TOTAL_LENGTH_DEDUCTION_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_OAM_LINK_LAYER_PDU_TRAP_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_OAM_LINK_LAYER_LOOPBACK_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_UP_CFI_TO_QOS_TABLE_SELECT_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_LOOKUP0_PCL_CFG_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_LOOKUP1_PCL_CFG_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_LOOKUP2_PCL_CFG_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_ASSIGN_VF_ID_EN
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRUST_L2_QOS_TAG0_OR_TAG1
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TTI_PKT_TYPE_UDB_KEY_I_ENABLE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV4_MC_DUPLICATION_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_IPV6_MC_DUPLICATION_MODE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MPLS_MC_DUPLICATION_ENABLE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_TRILL_MC_DUPLICATION_ENABLE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_PBB_MC_DUPLICATION_ENABLE
   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_MRU_INDEX

   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_SOURCE_EPG_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_COPY_TAG1_VID_TO_SRC_EPG_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_EPORT_UP1_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_EPORT_DEI1_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_EPORT_DEI0_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_PRP_ENABLED_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_PRT_PORT_LAN_ID_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_PRT_TREAT_WRONG_LAN_ID_AS_RCT_EXISTS_E
   ,SMEM_SIP6_30_TTI_DEFAULT_EPORT_TABLE_FIELDS_LSDU_CONSTANT_E

   ,SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS_ENT;

extern char * lion3TtiDefaultEPortFieldsTableNames
                [SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS___LAST_VALUE___E];
extern SNET_ENTRY_FORMAT_TABLE_STC lion3TtiDefaultEPortTableFieldsFormat
                [SMEM_LION3_TTI_DEFAULT_E_PORT_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of 'default eport' table fields */
#define SMEM_LION3_TTI_DEFAULT_EPORT_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_descrPtr->eArchExtInfo.ttiPreTtiLookupIngressEPortTablePtr,_descrPtr->eArchExtInfo.defaultSrcEPort/* the default eport */,fieldName,SKERNEL_TABLE_FORMAT_TTI_DEFAULT_EPORT_E)

/* the fields of the (TTI) physical port table in Sip5 */
typedef enum{
    SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_PORT_DEFAULT_SOURCE_EPORT_NUMBER
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_PORT_IS_RING_CORE_PORT
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_PORT_IS_LOOPED
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_ENABLE_MRU_CHECK_ON_CASCADE_PORT
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_CC_LINE_CARD_PORTS_DEFAULT_EPORT_BASE
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_CC_LINE_CARD_TRUNK_DEFAULT_EPORT_BASE
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_CENTRALIZED_CHASSIS_PORT_ENABLE
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_TRUNK_ID
   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_PORT_QOS_MODE

   ,SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

   ,SMEM_SIP6_TTI_PHYSICAL_PORT_TABLE_FIELDS_FLOW_TRACK_ENABLE = SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS___LAST_VALUE___E
   ,SMEM_SIP6_TTI_PHYSICAL_PORT_TABLE_FIELDS_ACCEPT_EDSA_SKIP_FDB_SA_LOOKUP

   ,SMEM_SIP6_TTI_PHYSICAL_PORT_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_PCL_ID_MODE = SMEM_SIP6_TTI_PHYSICAL_PORT_TABLE_FIELDS___LAST_VALUE___E
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_EM_PROFILE_ID_MODE
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_PCL_ID
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_EM_LOOKUP_PROFILE_ID1
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_EM_LOOKUP_PROFILE_ID2
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_TCAM_PROFILE_ID_MODE
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_TCAM_PROFILE_ID
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS_PPU_PROFILE
   ,SMEM_SIP6_10_TTI_PHYSICAL_PORT_TABLE_FIELDS___LAST_VALUE___E /* used for array size */
}SMEM_LION3_TTI_PHYSICAL_PORT_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of 'physical port' table fields */
#define SMEM_LION3_TTI_PHYSICAL_PORT_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_descrPtr->eArchExtInfo.ttiPhysicalPortAttributePtr,_descrPtr->localDevSrcPort/* the physical port  */,fieldName,SKERNEL_TABLE_FORMAT_TTI_PHYSICAL_PORT_ATTRIBUTE_E)


/* the fields of the (TTI) physical port 2 table in Sip5_20 */
typedef enum{
    SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_00_DOMAIN_X_PTP_PACKET_COMMAND /* hide 5 fields of 'CMS' each 3 bits */
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_01_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_02_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_03_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_04_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_05_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_06_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_07_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_08_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_09_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_10_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_11_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_12_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_13_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_14_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_MESSAGE_TYPE_15_DOMAIN_X_PTP_PACKET_COMMAND
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_PIGGYBACKED_TIMESTAMP_ENABLE
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_PORT_LIST_BIT_VECTOR_OFFSET
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_PORT_GROUP
   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELD_EXTRACT_HASH_FROM_FORWARD_EDSA

   ,SMEM_LION3_TTI_PHYSICAL_PORT_2_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP5_20_TTI_PHYSICAL_PORT_2_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of 'physical port' table fields */
#define SMEM_SIP5_20_TTI_PHYSICAL_PORT_2_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_descrPtr->eArchExtInfo.ttiPhysicalPort2AttributePtr,_descrPtr->localDevSrcPort/* the physical port  */,fieldName,SKERNEL_TABLE_FORMAT_TTI_PHYSICAL_PORT_2_ATTRIBUTE_E)

/* the fields of the (TTI) action table in Sip5 */
typedef enum{
    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Command
,   SMEM_LION3_TTI_ACTION_TABLE_FIELDS_CPUCode
,   SMEM_LION3_TTI_ACTION_TABLE_FIELDS_MirrorToAnalyzerPort
,   SMEM_LION3_TTI_ACTION_TABLE_FIELDS_RedirectCmd

/*If <Redirect Command> = No Redirect (0)*/
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_Flow_ID
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_IPCL_UDB_Configuration_Table_UDE_Index
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_reserved
/*     <Redirect Command> != Egress_Interface (0,2,3..)*/
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_to_egress_interface_TTI_reserved_Enable
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_to_egress_interface_TTI_reserved_Value
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_to_egress_interface_Policy2_Lookup_Mode
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_to_egress_interface_Policy1_Lookup_Mode
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_to_egress_interface_Policy0_Lookup_Mode
,      SMEM_LION3_TTI_ACTION_TABLE_FIELDS_No_Redirect_to_egress_interface_IPCL_Profile_Index

/*else If <Redirect Command> = Redirect to Egress Interface (1)*/
    /*    if <UseVIDX> = 0*/
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_IsTrunk
    /*    else if <UseVIDX> = 0 & <IsTrunk> = 1*/
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_TrunkNumber
    /*            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_Reserved*/
    /*    else if <UseVIDX> = 0 & <IsTrunk> = 0*/
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_ePortNumber
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_DeviceNumber
    /*    else, when <UseVIDX> = 1*/
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_eVIDX
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_Reserved

,        SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_UseEVIDX
,        SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_VNT_L2_Echo
    /*    Tunnel Start*/
,        SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_Tunnel_Start

    /*    if (<Tunnel Start> == 1)*/
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_Tunnel_Index
,            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_Tunnel_Start_Passenger_Type
    /*            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_Reserved*/
    /*    else, <Tunnel Start> == 0*/
,           SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Interface_ARP_Pointer

,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Modify_MAC_DA
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_to_Egress_Modify_MAC_SA


/*else If <Redirect Command> = Redirect To Router (2)*/
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect_To_Router_Router_LTT_Index
    /*        SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect To Router    TTI reserved
            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Redirect To Router    IPCL Configuration Table Pointer*/
/*else If <Redirect Command> = Assign VRF-ID (4)*/
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Assign_VRF_ID_VRF_ID
    /*        SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Assign VRF-ID     Reserved
            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Assign VRF-ID     TTI reserved
            SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Assign VRF-ID     IPCL Configuration Table Pointer*/

,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Bind_To_CNC_Counter
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_CNC_Counter_Index
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Bind_To_Policer_Meter
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Bind_To_Policer_Counter
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Policer_Index
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_SourceID_Set_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Source_ID
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Action_Stop
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Bypass_Bridge
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Bypass_Ingress_Pipe
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_eVLAN_Precedence
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Enable_Nested_VLAN
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_eVID_Cmd
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_eVLAN
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_VID1_Cmd
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_VID1
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_QoS_Precedence
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_QoSProfile
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Modify_DSCP
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Modify_UP
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Keep_Previous_QoS
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Trust_UP
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Trust_DSCP
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Trust_EXP
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Map_DSCP
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_UP0
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_UP1_Command
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_UP1
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Passenger_Packet_Type
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Copy_TTL
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Tunnel_Termination
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_MPLS_Command
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Hash_Mask_Index
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Trust_QoS_Mapping_Table_Index
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_L_LSP_QoS_Profile_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_TTL
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Enable_Dec_TTL
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Source_ePort_Assignment_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Source_ePort
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_TT_Header_Length
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Is_PTP_Packet

/*If <Is PTP PAcket> = 0*/
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_NON_PTP_Packet_Timestamp_Enable
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_NON_PTP_Packet_Offset_Index
    /*        SMEM_LION3_TTI_ACTION_TABLE_FIELDS_    reserved*/
/*else If <Is PTP PAcket> =1*/
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_PTP_Packet_PTP_Trigger_Type
,       SMEM_LION3_TTI_ACTION_TABLE_FIELDS_PTP_Packet_PTP_Offset

,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Enable_OAM_Processing_When_GAL_or_OAL_Exists
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_OAM_Processing_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_CW_Based_Pseudo_Wire
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_TTL_Expiry_VCCV_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_PWE3_Flow_Label_Exist
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_PW_CW_Based_E_Tree_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_UP_CFI_to_QoS_table_select_mode
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Rx_Is_Protection_Path
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Rx_Enable_Protection_Switching
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Set_MAC2ME
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Oam_Profile
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Apply_non_Data_CW_Command
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_PW_Tag_Mode
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Enable_Next_Lookup
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Channel_Type_to_Opcode_Mapping_En
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Passenger_Parsing_of_Transit_MPLS_Tunnel_Enable
,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS_Passenger_Parsing_of_Non_MPLS_Transit_tunnel_Enable
,    SMEM_SIP6_TTI_ACTION_TABLE_FIELDS_Skip_Fdb_SA_Lookup
,    SMEM_SIP6_TTI_ACTION_TABLE_FIELDS_Set_Ipv6_Segment_Routing_End_Node
,    SMEM_SIP6_TTI_ACTION_TABLE_FIELDS_Tunnel_Header_Length_Anchor_Type
,    SMEM_SIP6_10_TTI_ACTION_TABLE_FIELDS_Triger_Cnc_Hash_Client
,    SMEM_SIP6_10_TTI_ACTION_TABLE_FIELDS_Ipfix_enable
,    SMEM_SIP6_10_TTI_ACTION_TABLE_FIELDS_Ppu_Profile

,    SMEM_LION3_TTI_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_TTI_ACTION_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of 'TTI action' table fields */
#define SMEM_LION3_TTI_ACTION_ENTRY_FIELD_GET(_devObjPtr,_actionEntryDataPtr,_matchIndex,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_actionEntryDataPtr,_matchIndex,fieldName,SKERNEL_TABLE_FORMAT_TTI_ACTION_E)

/* the fields of the (TTI) default port protocol evlan and qos configuration table in Sip5 */
typedef enum{
     SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_PROTOCOL_EVLAN
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_EVLAN_COMMAND
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_EVLAN_PRECEDENCE
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_VALID
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_PROTOCOL_MODIFY_UP
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_PROTOCOL_MODIFY_DSCP
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_PROTOCOL_MODIFY_QOS_PROFILE
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_QOS_PROFILE
    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_PROTOCOL_QOS_PRECEDENCE

    ,SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS_ENT;

extern char * lion3TtiDefaultPortProtocolEvlanAndQosConfigurationFieldsTableNames[
    SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3TtiDefaultPortProtocolEvlanAndQosConfigurationTableFieldsFormat[
    SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of 'default port protocol evlan and qos configuration' table fields */
#define SMEM_LION3_TTI_DEFAULT_PORT_PROTOCOL_EVLAN_AND_QOS_CONFIGURATION_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_descrPtr->perProtocolInfo.portProtMatchedMemoryPointer,_descrPtr->eArchExtInfo.defaultSrcEPort/* the default eport */,fieldName,SKERNEL_TABLE_FORMAT_VLAN_PORT_PROTOCOL_E)

/* the fields of the (TTI) eport attributes table in Sip5 */
typedef enum {
     SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_ING_TAG0_TPID_PROFILE
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_ING_TAG1_TPID_PROFILE
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_NUM_OF_TAGS_TO_POP
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_ING_POLICY_EN
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_DIS_IPCL0_FOR_ROUTED
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_TRUST_L2_QOS_TAG0_OR_TAG1
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_OVERRIDE_MASK_HASH_EN
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_HASH_MASK_INDEX
    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS_PHY_SRC_MC_FILTERING_EN

    ,SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS;

extern char * lion3TtiEPortAttributesFieldsTableNames[
    SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3TtiEPortAttributesTableFieldsFormat[
    SMEM_LION3_TTI_EPORT_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of 'eport attributes' table fields */
#define SMEM_LION3_TTI_EPORT_ATTRIBUTES_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_descrPtr->eArchExtInfo.ttiPostTtiLookupIngressEPortTablePtr,_descrPtr->eArchExtInfo.localDevSrcEPort/* the eport */,fieldName,SKERNEL_TABLE_FORMAT_TTI_EPORT_ATTRIBUTES_E)

/**************************************************/
/********** TTI UNIT END   ************************/
/**************************************************/

/**************************************************/
/********** IPCL UNIT START ***********************/
/**************************************************/

/* the fields of the (IPCL) action table in Sip5 */
typedef enum {
     SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_COMMAND
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_CPU_CODE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT_0
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_REDIRECT_COMMAND
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_RESERVED_46_15
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_POLICY1_LOOKUP_MODE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_POLICY2_LOOKUP_MODE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IPCL_PROFILE_INDEX
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_RESERVED_17_15
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VIDX
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IS_TRUNK
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TRG_PORT
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TARGET_DEVICE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TRUNK_ID
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_USE_VIDX
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VNT_L2_ECHO
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ARP_POINTER
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TUNNEL_POINTER
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START_PASSENGER_TYPE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IP_NEXT_HOP_ENTRY_INDEX
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VRF_ID
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MAC_SA_29_0
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BIND_TO_CNC_COUNTER
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_CNC_COUNTER_INDEX
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MAC_SA_47_30
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_METER
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_POLICER_PTR
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SOURCE_ID_SET_ENABLE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SOURCE_ID
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ACTION_STOP
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BRIDGE_BYPASS
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_PIPE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VLAN_PRECEDENCE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_EN_NESTED_VLAN
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VLAN_COMMAND
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VID0
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE_MARKING_ENABLE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_QOS_PRECEDENCE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_UP
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ENABLE_MIRROR_TCP_RST_OR_FIN
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT_2_1
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_DA
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_SA
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SET_EGRESS_FILTER_REGISTERED
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VLAN1_CMD
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_UP1_CMD
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_VID1
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_UP1
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_FLOW_ID
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IPCL_RESERVED_EN
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_IPCL_TO_TXQ_RESERVED
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SET_MAC2ME
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_TIMESTAMP_EN
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_OFFSET_INDEX
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_EN
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_OAM_PROFILE
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_ASSIGN_SRC_EPORT_EN
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_SRC_EPORT
    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS_USER_AC_ENABLE

    ,SMEM_LION3_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_IPCL_ACTION_TABLE_FIELDS;

/* the fields of the (IPCL) action table in Sip5_20 (reordered from sip5 !!!)  */
typedef enum {
     SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_CPU_CODE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_COMMAND
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_REDIRECT_COMMAND
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ACTION_STOP
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SET_MAC2ME
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_POLICY1_LOOKUP_MODE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_POLICY2_LOOKUP_MODE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IPCL_PROFILE_INDEX
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_USE_VIDX
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VIDX
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IS_TRUNK
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TRG_PORT
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TARGET_DEVICE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TRUNK_ID
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VNT_L2_ECHO
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ARP_POINTER
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TUNNEL_POINTER
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START_PASSENGER_TYPE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_PBR_MODE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IP_NEXT_HOP_ENTRY_INDEX
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VRF_ID
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MAC_SA_27_0
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MAC_SA_47_28
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_METER
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_POLICER_PTR
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_RESERVED
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ENABLE_MIRROR_TCP_RST_OR_FIN
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_DA
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_SA
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SET_EGRESS_FILTER_REGISTERED
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_BRIDGE_BYPASS
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_PIPE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_EN_NESTED_VLAN
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SET_SST_ID
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SST_ID
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_USER_AC_ENABLE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_COUNTER
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_COUNTER_INDEX
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VLAN_PRECEDENCE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VLAN_COMMAND
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VID0
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE_MARKING_ENABLE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_QOS_PRECEDENCE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_MODIFY_UP
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VLAN1_CMD
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_UP1_CMD
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_VID1
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_UP1
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IPCL_RESERVED_EN
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_IPCL_TO_TXQ_RESERVED
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_TIMESTAMP_EN
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_OFFSET_INDEX
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_EN
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_OAM_PROFILE
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_FLOW_ID
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_RESERVED_1
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_ASSIGN_SRC_EPORT_EN
    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS_SRC_EPORT

    ,SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP5_20_IPCL_ACTION_TABLE_FIELDS;

/* the fields of the (IPCL) action table in Sip6 */
typedef enum {
     SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_CPU_CODE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_COMMAND
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_REDIRECT_COMMAND
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ACTION_STOP
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SET_MAC2ME
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_POLICY1_LOOKUP_MODE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_POLICY2_LOOKUP_MODE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IPCL_PROFILE_INDEX
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_USE_VIDX
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VIDX
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IS_TRUNK
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TRG_PORT
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TARGET_DEVICE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TRUNK_ID
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VNT_L2_ECHO
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ARP_POINTER
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TUNNEL_POINTER
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TUNNEL_START_PASSENGER_TYPE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_PBR_MODE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IP_NEXT_HOP_ENTRY_INDEX
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VRF_ID
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MAC_SA_27_0
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MAC_SA_47_28
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_METER
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_POLICER_PTR
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_RESERVED
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ENABLE_MIRROR_TCP_RST_OR_FIN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MIRROR_TO_ANALYZER_PORT
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_DA
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_MAC_SA
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SET_EGRESS_FILTER_REGISTERED
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_BRIDGE_BYPASS
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_PIPE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_EN_NESTED_VLAN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SET_SST_ID
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SST_ID
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_USER_AC_ENABLE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ACTIVATE_COUNTER
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_COUNTER_INDEX
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VLAN_PRECEDENCE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VLAN_COMMAND
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VID0
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE_MARKING_ENABLE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_QOS_PRECEDENCE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_QOS_PROFILE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_MODIFY_UP
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VLAN1_CMD
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_UP1_CMD
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_VID1
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_UP1
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IPCL_RESERVED_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_IPCL_TO_TXQ_RESERVED
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TIMESTAMP_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_OFFSET_INDEX
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_OAM_PROFILE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_FLOW_ID
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_RESERVED_1
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_ASSIGN_SRC_EPORT_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SRC_EPORT
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_LATENCY_MONITORING_PROFILE
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_LATENCY_MONITORING_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_SKIP_FDB_SA_LOOKUP_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_TRIGGER_INTERRUPT_EN
    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS_RESERVED_3_BITS
    ,SMEM_SIP6_TCAM_ACTION_TABLE_FIELDS_TCAM_OVER_EXACT_MATCH_ENABLE /* shared field for TTI/EPCL/IPCL */

    ,SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

    /* new fields in sip6_10 */
    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_TAG0_DEI_CFI_VALUE = SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_TAG1_DEI_CFI_VALUE
    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_ASSIGN_TAG1_FROM_UDBS
    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_IPFIX_ENABLE
    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_FLOW_TRACK_ENABLE
    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS_BYPASS_INGRESS_AND_EGRESS_FILTERING
    ,SMEM_SIP6_30_IPCL_ACTION_TABLE_FIELDS_GENERIC_ACTION

    ,SMEM_SIP6_10_IPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP6_IPCL_ACTION_TABLE_FIELDS;

/* macro to shorten the calling code of sip6 ipcl action entry table fields */
#define SMEM_SIP6_IPCL_ACTION_ENTRY_FIELD_GET(fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(devObjPtr,memPtr,matchIndex,fieldName,SKERNEL_TABLE_FORMAT_IPCL_ACTION_E)

/* the fields of the IPCL Metadata fields in Sip5 */
typedef enum {
     SMEM_LION3_IPCL_META_DATA_FIELDS_PORT_LIST_SRC_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_TRUNK_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_EPORT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SRC_DEV_IS_OWN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_1_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_SRC_DEV_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_SRC_IS_TRUNK_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_SRC_EPORT_OR_TRUNK_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_PORT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_USE_VIDX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_EVIDX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_INGRESS_UDB_PACKET_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IP_LEGAL_OR_FCOE_LEGAL_DUP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L2_VALID_DUP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_ARP_DUP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TRG_DEV_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TRG_IS_TRUNK_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TRG_EPORT_OR_TRG_TRUNK_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TRG_PHY_PORT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_TRG_PHY_PORT_VALID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_EGRESS_UDB_PACKET_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_2_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SRC_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_EGRESS_FILTER_REGISTERED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PACKET_IS_LOOPED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_DROP_ON_SOURCE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_3_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PHY_SRC_MC_FILTER_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_SRC_PHY_IS_TRUNK_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_SRC_PHY_PORT_OR_TRUNK_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_4_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L2_VALID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L2_ENCAPSULATION_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_BYPASS_BRIDGE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MAC_DA_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_OUTER_IS_LLC_NON_SNAP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_INNER_IS_LLC_NON_SNAP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ETHERTYPEORDSAPSSAP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG0_SRC_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG1_SRC_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SRC_TAG0_IS_OUTER_TAG_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_OUTER_SRC_TAG_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG1_LOCAL_DEV_SRC_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_NESTED_VLAN_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG0_PRIO_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG1_PRIO_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_VID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_OVERRIDE_EVLAN_WITH_ORIGVID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TRG_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_EVLAN_PRECEDENCE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_5_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG0_TPID_INDEX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TAG1_TPID_INDEX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_NUM_OF_TAG_WORDS_TO_POP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPX_PROTOCOL_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPV4_SIP_OR_ARP_SIP_OR_FCOE_S_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPV4_DIP_OR_ARP_DIP_OR_FCOE_D_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_POLICY_RTT_INDEX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L3_OFFSET_INVALID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IPV4_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IPV6_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_FCOE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_ARP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IP_LEGAL_OR_FCOE_LEGAL_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPM_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IP_HEADER_INFO_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IP_FRAGMENTED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_FRAGMENTED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ROUTED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_DO_ROUTE_HA_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MAC_SA_ARP_SA_MISMATCH_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPX_HEADER_LENGTH_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_6_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IP_1_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IPV6_1_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_ND_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IPV6_LINK_LOCAL_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IPV6_MLD_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPV6_HBH_EXT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPV6_EH_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SOLICITATION_MULTICAST_MESSAGE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IP_2_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_IPV6_2_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IPV6_FLOW_LABEL_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_7_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TCP_UDP_DEST_PORT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TCPORUDP_PORT_COMPARATORS_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L4_OFFSET_INVALID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L4_VALID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_SYN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SYN_WITH_DATA_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_8_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_L2_ECHO_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_CFM_PACKET_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TIMESTAMP_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TIMESTAMP_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_9_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TIMESTAMP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_PTP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PTP_DOMAIN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PTP_U_FIELD_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PTP_TAI_SELECT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PTP_TRIGGER_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_OAM_PROCESSING_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_OAM_PTP_OFFSET_INDEX_OR_PTP_OFFSET_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RX_SNIFF_OR_SRC_TRG_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SRC_TRG_EPORT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SRC_TRG_DEV_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ANALYZER_INDEX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_10_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_SRC_TRG_PHY_PORT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_MPLS_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MPLS_CMD_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_11_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ECN_CAPABLE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_QCN_RX_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ORIG_RX_QCN_PRIO_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_12_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TUNNEL_TERMINATED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_INNER_PACKET_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TUNNEL_START_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_TUNNEL_START_PASSENGER_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_ARP_PTR_OR_TUNNEL_PTR_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_13_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_QOS_PROFILE_PRECEDENCE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_QOS_PROFILE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MODIFY_UP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MODIFY_DSCP_EXP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_14_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_BYTE_COUNT_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RECALC_CRC_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_15_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_BYPASS_INGRESS_PIPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MARVELL_TAGGED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MARVELL_TAGGED_EXTENDED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_16_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RECEIVED_DSA_TAG_WORD_0_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RECEIVED_DSA_TAG_WORD_1_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RECEIVED_DSA_TAG_WORD_2_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RECEIVED_DSA_TAG_WORD_3_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_IS_TRILL_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_REP_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_REP_LAST_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_PACKET_TYPE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_17_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_APPLICABLE_FLOW_SUB_TEMPLATE_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_METERING_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_BILLING_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_18_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_POLICER_PTR_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_INGRESS_CORE_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RX_IS_PROTECTION_PATH_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RX_PROTECTION_SWITCH_EN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_19_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_COPY_RESERVED_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RESERVED_20_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_EVLAN_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_VID1_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_UP1_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RES823_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_FLOW_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RES838_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_UP0_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_MAC2ME_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RES844_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_VRF_ID_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS_RES860_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_EPORT_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES865_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_ORIG_SRC_EPORT_ORTRUNK_ID_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES868_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES871_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_TRG_EPORT_OR_TRG_TRUNK_ID_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES873_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_TRG_PHY_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES876_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_POLICY_LTT_INDEX_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES879_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_SRC_TRG_EPORT_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES882_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_SRC_TRG_PHY_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES885_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_ARP_PTR_OR_TUNNEL_PTR_EXTENSION_E
    ,SMEM_BOBCAT3_IPCL_META_DATA_FIELDS_RES887_E
    ,SMEM_LION3_IPCL_META_DATA_FIELDS___LAST_VALUE___E/* used for array size */

    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_TIMESTAMP_SECONDS_FRACTION_E = SMEM_LION3_IPCL_META_DATA_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_TIMESTAMP_SECONDS_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MIN_IP_L4PORT___IP_31_0_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MIN_IP_L4PORT___IP_63_32_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MIN_IP_L4PORT___IP_95_64_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MIN_IP_L4PORT___IP_127_96_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MIN_IP_L4PORT___L4_PORT_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MAX_IP_L4PORT___IP_31_0_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MAX_IP_L4PORT___IP_63_32_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MAX_IP_L4PORT___IP_95_64_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MAX_IP_L4PORT___IP_127_96_E
    ,SMEM_SIP6_IPCL_META_DATA_FIELDS_MAX_IP_L4PORT___L4_PORT_E

    ,SMEM_SIP6_IPCL_META_DATA_FIELDS___LAST_VALUE___E/* used for array size */

    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_TCP_UDP_PORT_COMPARATORS_31_0_E = SMEM_SIP6_IPCL_META_DATA_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_TCP_UDP_PORT_COMPARATORS_55_32_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_IPV6_EH_DETECTION_BITMAP_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1323_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_TTL_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_L4_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1343_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_PTP_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1351_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_INNER_HEADER_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1359_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_INNER_L3_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1366_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_SR_EH_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1372_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_CPU_OR_DROP_CODE_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_PACKET_IS_CUT_THROUGH_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_MDB_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1386_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_IS_BC_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_PACKET_CMD_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1391_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_PACKET_TOS_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_IPX_LENGTH_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_OUTER_L3_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_RES1422_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_OUTER_L4_OFFSET_E
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_OUTER_L4_VALID_E   /*1431..1431*/
    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS_CFI1_E             /* bit 823 --> replace reserved bit */

    ,SMEM_SIP6_30_IPCL_META_DATA_FIELDS_PREEMPTED_E               /*bit 1422*/
    ,SMEM_SIP6_30_IPCL_META_DATA_FIELDS_HSR_PRP_PATH_ID_E         /*1432..1435*/
    ,SMEM_SIP6_30_IPCL_META_DATA_FIELDS_RCT_WITH_WRONG_LAN_ID_E   /*1436..1436*/
    ,SMEM_SIP6_30_IPCL_META_DATA_FIELDS_RES1437_E                 /*1437..1439*/


    ,SMEM_SIP6_10_IPCL_META_DATA_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_IPCL_META_DATA_TABLE_FIELDS;

/**************************************************/
/********** IPCL UNIT END   ***********************/
/**************************************************/

/**************************************************/
/********** L2I UNIT START ************************/
/**************************************************/
/* the fields of the (L2i) ingress vlan table in Sip5 */
typedef enum {
     SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_VALID
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_NEW_SRC_ADDR_IS_NOT_SECURITY_BREACH
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREGISTERED_NON_IP_MULTICAST_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREGISTERED_IPV4_MULTICAST_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREGISTERED_IPV6_MULTICAST_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNKNOWN_UNICAST_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_IGMP_TO_CPU_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_IPM_BRIDGING_MODE
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_IPM_BRIDGING_MODE
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_MIRROR_TO_INGRESS_ANALYZER
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_ICMP_TO_CPU_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_CONTROL_TO_CPU_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_IPM_BRIDGING_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_IPM_BRIDGING_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREGISTERED_IPV4_BC_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREGISTERED_NON_IPV4_BC_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_UNICAST_ROUTE_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_MULTICAST_ROUTE_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_UNICAST_ROUTE_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_MULTICAST_ROUTE_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_SITEID
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_AUTO_LEARN_DIS
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_NA_MSG_TO_CPU_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_MRU_INDEX
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_BC_UDP_TRAP_MIRROR_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_CONTROL_TO_CPU_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_FLOOD_EVIDX
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_VRF_ID
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UC_LOCAL_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_FLOOD_VIDX_MODE
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV4_MC_BC_TO_MIRROR_ANLYZER_IDX
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_IPV6_MC_TO_MIRROR_ANALYZER_IDX
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_FID
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNKOWN_MAC_SA_CMD
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_FCOE_FORWARDING_EN
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREG_IPM_EVIDX_MODE
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_UNREG_IPM_EVIDX
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS_FDB_LOOKUP_KEY_MODE
    ,SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS;

extern char * lion3L2iIngressVlanFieldsTableNames[
    SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3L2iIngressVlanTableFieldsFormat[
    SMEM_LION3_L2I_INGRESS_VLAN_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of 'L2i ingress vlan' table fields */
#define SMEM_LION3_L2I_INGRESS_VLAN_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,_entryPtr,_eVid,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_entryPtr,_eVid,fieldName,SKERNEL_TABLE_FORMAT_BRIDGE_INGRESS_EVLAN_E)

/* the fields of the (L2i) ingress vlan table in Sip5 */
typedef enum {
     SMEM_LION3_L2I_EPORT_TABLE_FIELDS_NA_MSG_TO_CPU_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_AUTO_LEARN_DIS
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_NA_STORM_PREV_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_NEW_SRC_ADDR_SECURITY_BREACH
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_VLAN_INGRESS_FILTERING
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_ACCEPT_FRAME_TYPE
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_UC_LOCAL_CMD
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_UNKNOWN_SRC_ADDR_CMD
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_PORT_PVLAN_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_PORT_VLAN_IS_TRUNK
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_PORT_PVLAN_TRG_EPORT_TRUNK_NUM
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_PORT_PVLAN_TRG_DEV
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_ALL_PKT_TO_PVLAN_UPLINK_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_IGMP_TRAP_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_ARP_BC_TRAP_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_EN_LEARN_ON_TRAP_IEEE_RSRV_MC
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_IEEE_RSVD_MC_TABLE_SEL
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_PORT_SOURCE_ID_FORCE_MODE
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_SRC_ID
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_ARP_MAC_SA_MIS_DROP_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_INGRESS_PORT_UNKNOWN_UC_FILTER_CMD
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_INGRESS_PORT_UNREG_MC_FILTER_CMD
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_INGRESS_PORT_BC_FILTER_CMD
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_INGRESS_EPORT_STP_STATE_MODE
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_INGRESS_EPORT_SPANNING_TREE_STATE
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_IPV4_CONTROL_TRAP_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_IPV6_CONTROL_TRAP_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_BC_UDP_TRAP_OR_MIRROR_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_EN_LEARN_ORIG_TAG1_VID
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_FDB_UC_IPV4_ROUTING_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_FDB_UC_IPV6_ROUTING_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_FDB_FCOE_ROUTING_EN
    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS_MOVED_MAC_SA_CMD

    ,SMEM_LION3_L2I_EPORT_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_L2I_EPORT_TABLE_FIELDS;

extern char * lion3L2iEPortFieldsTableNames[
    SMEM_LION3_L2I_EPORT_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3L2iEPortTableFieldsFormat[
    SMEM_LION3_L2I_EPORT_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of 'L2i ePort' table fields */
#define SMEM_LION3_L2I_EPORT_ENTRY_FIELD_GET(_devObjPtr,_descrPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_descrPtr->eArchExtInfo.bridgeIngressEPortTablePtr,_descrPtr->eArchExtInfo.localDevSrcEPort/* the eport */,fieldName,SKERNEL_TABLE_FORMAT_BRIDGE_INGRESS_EPORT_E)

/**************************************************/
/********** L2I UNIT END   ************************/
/**************************************************/

/**************************************************/
/********** FDB UNIT START ************************/
/**************************************************/

/* the fields of the (FDB) FDB table in Sip5 */
typedef enum {

    /* common fields (relevant for all entry types) */
     SMEM_LION3_FDB_FDB_TABLE_FIELDS_VALID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SKIP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_AGE
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_FDB_ENTRY_TYPE

    /* mac and mc specific fields */
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_FID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_MAC_ADDR
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DEV_ID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SOURCE_ID_5_0
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_IS_TRUNK
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DIP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SIP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_VIDX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_TRUNK_NUM
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_EPORT_NUM
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_USER_DEFINED
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_RESERVED_99_103
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SOURCE_ID_11_9
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_ACCESS_LEVEL
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_ACCESS_LEVEL
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SOURCE_ID_8_6
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_RESERVED_116_118
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_ORIG_VID1
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_IS_STATIC
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_MULTIPLE
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_CMD
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_CMD
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_ROUTE
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SP_UNKNOWN
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_QOS_PARAM_SET_IDX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_QOS_PARAM_SET_IDX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_APP_SPECIFIC_CPU_CODE
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_SA_LOOKUP_INGRESS_MIRROR_TO_ANALYZER
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_DA_LOOKUP_INGRESS_MIRROR_TO_ANALYZER

    /* ipv4 and fcoe routing fields */
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_VRF_ID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_SCOPE_CHECK
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DEST_SITE_ID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_FCOE_D_ID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV4_DIP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_DEC_TTL_OR_HOP_COUNT
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_BYPASS_TTL_OPTIONS_OR_HOP_EXTENSION
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_INGRESS_MIRROR_TO_ANALYZER_INDEX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_MARKING_EN
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_INDEX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_PRECEDENCE
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MODIFY_UP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MODIFY_DSCP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_COUNTER_SET_INDEX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ARP_BC_TRAP_MIRROR_EN
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_DIP_ACCESS_LEVEL
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ICMP_REDIRECT_EXCEPTION_MIRROR
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_MTU_INDEX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_USE_VIDX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_IS_TRUNK
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_TRUNK_ID
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_EPORT
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_EVIDX
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TRG_DEV
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_NEXT_HOP_EVLAN
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_START_OF_TUNNEL
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TUNNEL_TYPE
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TUNNEL_PTR
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_ARP_PTR

    /* ipv6 routing fields */
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP
    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_NH_DATA_BANK_NUM

    ,SMEM_LION3_FDB_FDB_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

    ,SMEM_SIP5_10_FDB_FDB_TABLE_FIELDS_UC_ROUTE_TS_IS_NAT = SMEM_LION3_FDB_FDB_TABLE_FIELDS___LAST_VALUE___E

    ,SMEM_SIP5_10_FDB_FDB_TABLE_FIELDS___LAST_VALUE___E



}SMEM_LION3_FDB_FDB_TABLE_FIELDS;

/* macro to shorten the calling code of (FDB) 'FDB' table fields - for GET field */
#define SMEM_LION3_FDB_FDB_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_FDB_E)

/* macro to shorten the calling code of (FDB) 'FDB' table fields - for SET field */
#define SMEM_LION3_FDB_FDB_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_FDB_E)

/* macro to shorten the calling code of (FDB) 'FDB' table field - MAC ADDR - for GET field */
#define SMEM_LION3_FDB_FDB_ENTRY_FIELD_MAC_ADDR_GET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                        \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].formatNamePtr,                              \
        _index,/* the index */                                          \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsNamePtr, \
        SMEM_LION3_FDB_FDB_TABLE_FIELDS_MAC_ADDR,_valueArr)

/* macro to shorten the calling code of (FDB) 'FDB' table field - MAC ADDR - for SET field */
#define SMEM_LION3_FDB_FDB_ENTRY_FIELD_MAC_ADDR_SET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Set(_devObjPtr,                           \
        _memPtr,                                                        \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].formatNamePtr,                              \
        _index,/* the index */                                          \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsNamePtr, \
        SMEM_LION3_FDB_FDB_TABLE_FIELDS_MAC_ADDR,_valueArr)

/* macro to shorten the calling code of (FDB) 'FDB' table field - IPV6 DIP - for GET field */
#define SMEM_LION3_FDB_FDB_ENTRY_FIELD_IPV6_DIP_GET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                        \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].formatNamePtr,                              \
        _index,/* the index */                                          \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsNamePtr, \
        SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP,_valueArr)

/* macro to shorten the calling code of (FDB) 'FDB' table field - IPV6 DIP - for SET field */
#define SMEM_LION3_FDB_FDB_ENTRY_FIELD_IPV6_DIP_SET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Set(_devObjPtr,                           \
        _memPtr,                                                        \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].formatNamePtr,                              \
        _index,/* the index */                                          \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_E].fieldsNamePtr, \
        SMEM_LION3_FDB_FDB_TABLE_FIELDS_UC_ROUTE_IPV6_DIP,_valueArr)


/* the fields of the (FDB) AU messages format in Sip5 */
typedef enum {
     SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MESSAGE_ID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MSG_TYPE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_FDB_ENTRY_TYPE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_VALID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SKIP
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_AGE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR_INDEX_8_0
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_CHAIN_TOO_LONG
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR_OFFSET
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_ENTRY_FOUND
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DEV_ID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_5_0
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DIP
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SIP
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_FID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_VIDX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_IS_TRUNK
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_EPORT_NUM
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_TRUNK_NUM
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_USER_DEFINED
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_RESERVED_109_113
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_11_9
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_ORIG_VID1
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DA_ACCESS_LEVEL
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SA_ACCESS_LEVEL
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SOURCE_ID_8_6
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_APP_SPECIFIC_CPU_CODE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SP_UNKNOWN
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SEARCH_TYPE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR_INDEX_20_9
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MULTIPLE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DA_ROUTE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SA_QOS_PARAM_SET_IDX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DA_QOS_PARAM_SET_IDX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_IS_STATIC
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DA_CMD
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SA_CMD
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_SA_LOOKUP_INGRESS_MIRROR_TO_ANALYZER
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_DA_LOOKUP_INGRESS_MIRROR_TO_ANALYZER
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_FDB_LOOKUP_KEY_MODE

    /* additions for the  format of : MAC NA moved update Message */
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_UP0
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_IS_MOVED
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_IS_TRUNK
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_EPORT
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_TRUNK_NUM
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_DEVICE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVED_OLD_SRC_ID

    /* additional fields : for FUTURE support of 'NA move Entry' */
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVE_ENTRY_ENABLE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_NA_MOVE_ENTRY_INDEX

    /* fields for FDB Routing */
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_MAC_ADDR_INDEX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_VRF_ID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_SCOPE_CHECK
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_FCOE_D_ID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV4_DIP
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DST_SITE_ID
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_DEC_TTL_OR_HOP_COUNT
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_BYPASS_TTL_OPTIONS_OR_HOP_EXTENSION
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_INGRESS_MIRROR_TO_ANALYZER_INDEX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_MARKING_EN
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_INDEX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_QOS_PROFILE_PRECEDENCE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_MODIFY_UP
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_MODIFY_DSCP
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_COUNTER_SET_INDEX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_ARP_BC_TRAP_MIRROR_EN
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_DIP_ACCESS_LEVEL
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_ICMP_REDIRECT_EXCEP_MIRROR_EN
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_MTU_INDEX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_USE_VIDX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IS_TRUNK
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_EVIDX
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TARGET_DEVICE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TRUNK_NUM
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_EPORT_NUM
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_NEXT_HOP_EVLAN
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TUNNEL_START
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TUNNEL_TYPE
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_ARP_PTR
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TUNNEL_PTR
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_0
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_1
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_2
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_IPV6_DIP_3
    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_NH_DATA_BANK_NUM

    ,SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

    ,SMEM_SIP5_10_FDB_AU_MSG_TABLE_FIELDS_UC_ROUTE_TS_IS_NAT = SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS___LAST_VALUE___E

    ,SMEM_SIP5_10_FDB_AU_MSG_TABLE_FIELDS___LAST_VALUE___E


}SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS;

/* macro to shorten the calling code of (FDB) 'AU MSG' fields - for GET field */
#define SMEM_LION3_FDB_AU_MSG_ENTRY_FIELD_GET(_devObjPtr,_memPtr,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,0xFFFFFFFF/* no read index for AU message */,fieldName,SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E)

/* macro to shorten the calling code of (FDB) 'AU MSG' fields - for SET field */
#define SMEM_LION3_FDB_AU_MSG_ENTRY_FIELD_SET(_devObjPtr,_memPtr,fieldName,_value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr, 0xFFFFFFFF/* no read index for AU message */,fieldName,_value,SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E)

/* macro to shorten the calling code of (FDB) 'AU MSG' field - MAC ADDR - for GET field */
#define SMEM_LION3_FDB_AU_MSG_ENTRY_FIELD_MAC_ADDR_GET(_devObjPtr,_memPtr,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                        \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E].formatNamePtr,                              \
        0xFFFFFFFF,/* no read index for AU message */                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E].fieldsNamePtr,       \
        SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR,_valueArr)

/* macro to shorten the calling code of (FDB) 'AU MSG' field - MAC ADDR - for SET field */
#define SMEM_LION3_FDB_AU_MSG_ENTRY_FIELD_MAC_ADDR_SET(_devObjPtr,_memPtr,_valueArr)       \
    snetFieldFromEntry_Any_Set(_devObjPtr,                           \
        _memPtr,                                                        \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E].formatNamePtr,                              \
        0xFFFFFFFF,/* no read index for AU message */                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_FDB_AU_MSG_E].fieldsNamePtr,       \
        SMEM_LION3_FDB_AU_MSG_TABLE_FIELDS_MAC_ADDR,_valueArr)



/**************************************************/
/********** FDB UNIT END   ************************/
/**************************************************/

/**************************************************/
/********** EQ UNIT START ************************/
/**************************************************/

/* the fields of the (EQ) E2PHY table in Sip5 */
typedef enum {
     SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_MTU_INDEX
    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_TARGET_IS_TRUNK
    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_USE_VIDX
    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_TARGET_TRUNK
    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_TARGET_VIDX
    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_TARGET_DEVICE
    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_TARGET_PHYSICAL_PORT

    ,SMEM_LION3_EQ_E2PHY_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_EQ_E2PHY_TABLE_FIELDS_ENT;

/**************************************************/
/********** EQ UNIT END   ************************/
/**************************************************/


/**************************************************/
/********** MLL UNIT START   **********************/
/**************************************************/

/* the fields of the (MLL) L2MLL entry format in Sip5 */
typedef enum {

     SMEM_LION3_L2_MLL_TABLE_FIELDS_LAST_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_BIND_TO_MLL_COUNTER_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MASK_BITMAP_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_USE_VIDX_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TARGET_IS_TRUNK_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TRG_EPORT_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TRG_TRUNK_ID_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_VIDX_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_UNKNOWN_UC_FILTER_ENABLE_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_UNREGISTERED_MC_FILTER_ENABLE_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_BC_FILTER_ENABLE_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TRG_DEV_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_ONE_PLUS_ONE_FILTERING_ENABLE_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TTL_THRESHOLD_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MESH_ID_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MC_LOCAL_SWITCHING_ENABLE_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MAX_HOP_COUNT_ENABLE_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MAX_OUTGOING_HOP_COUNT_0
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_RESERVED_1

    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_LAST_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_BIND_TO_MLL_COUNTER_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MASK_BITMAP_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_USE_VIDX_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TARGET_IS_TRUNK_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TRG_EPORT_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TRG_TRUNK_ID_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_VIDX_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_UNKNOWN_UC_FILTER_ENABLE_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_UNREGISTERED_MC_FILTER_ENABLE_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_BC_FILTER_ENABLE_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TRG_DEV_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_ONE_PLUS_ONE_FILTERING_ENABLE_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_TTL_THRESHOLD_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MESH_ID_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MC_LOCAL_SWITCHING_ENABLE_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MAX_HOP_COUNT_ENABLE_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_MAX_OUTGOING_HOP_COUNT_1
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_RESERVED_2

    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_ENTRY_SELECTOR
    ,SMEM_LION3_L2_MLL_TABLE_FIELDS_L2_NEXT_MLL_PTR

    ,SMEM_LION3_L2_MLL_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_L2_MLL_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of (MLL) 'L2_MLL' fields - for GET field */
#define SMEM_LION3_L2_MLL_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_L2_MLL_E)

/* the fields of the (MLL) L2MLL entry format in Sip5 */
typedef enum {

     SMEM_LION3_IP_MLL_TABLE_FIELDS_LAST_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_START_OF_TUNNEL_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_MLL_RPF_FAIL_CMD_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_MLL_EVID_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_USE_VIDX_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TARGET_IS_TRUNK_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_EVIDX_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TRG_EPORT_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TRG_TRUNK_ID_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_RESERVED_2
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TRG_DEV_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_EXCLUDE_SRC_VLAN_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TTL_THRESHOLD_0_OR_HOP_LIMIT_THRESHOLD_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TUNNEL_PTR_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TUNNEL_TYPE_0
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_LAST_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_START_OF_TUNNEL_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_MLL_RPF_FAIL_CMD_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_MLL_EVID_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_USE_VIDX_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TARGET_IS_TRUNK_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_EVIDX_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TRG_EPORT_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TRG_TRUNK_ID_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_RESERVED_3
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TRG_DEV_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_EXCLUDE_SRC_VLAN_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TTL_THRESHOLD_1_OR_HOP_LIMIT_THRESHOLD_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TUNNEL_PTR_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_TUNNEL_TYPE_1
    ,SMEM_LION3_IP_MLL_TABLE_FIELDS_NEXT_MLL_PTR

    ,SMEM_LION3_IP_MLL_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_IP_MLL_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of (MLL) 'IP_MLL' fields - for GET field */
#define SMEM_LION3_IP_MLL_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_IP_MLL_E)

/**************************************************/
/********** MLL UNIT END   ************************/
/**************************************************/

/**************************************************/
/********** PLR UNIT START ************************/
/**************************************************/
/* the fields of the (PLR) policer metering (IPLR0,1,EPLR) in Sip5 */
typedef enum{
     SMEM_LION3_PLR_METERING_TABLE_FIELDS_LAST_UPDATE_TIME0
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_LAST_UPDATE_TIME1
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_WRAP_AROUND_INDICATOR0
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_WRAP_AROUND_INDICATOR1
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BUCKET_SIZE0
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BUCKET_SIZE1
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_RATE_TYPE0
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_RATE_TYPE1
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_RATE0
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_RATE1
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_MAX_BURST_SIZE0
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_MAX_BURST_SIZE1
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_COLOR_MODE                            /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_POLICER_MODE                          /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_MG_COUNTERS_SET_EN                    /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BILLING_PTR                           /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BYTE_OR_PACKET_COUNTING_MODE          /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_PACKET_SIZE_MODE                      /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_TUNNEL_TERMINATION_PACKET_SIZE_MODE   /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INCLUDE_LAYER1_OVERHEAD               /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_DSA_TAG_COUNTING_MODE                 /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_TIMESTAMP_TAG_COUNTING_MODE           /* in sip5_15 moved to 'Metering Configuration Entry' */
    /* ingress only fields*/
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INGRESS_RED_CMD                       /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INGRESS_YELLOW_CMD                    /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INGRESS_GREEN_CMD                     /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INGRESS_MODIFY_DSCP                   /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INGRESS_MODIFY_UP                     /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_INGRESS_QOS_PROFILE                   /* in sip5_15 moved to 'Metering Configuration Entry' */
    /* egress only fields*/
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_REMARK_MODE                    /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_DROP_RED                       /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_EN_MODIFY_EXP                  /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_EN_MODIFY_DSCP                 /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_EN_MODIFY_TC                   /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_EN_MODIFY_UP                   /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_EN_MODIFY_DP                   /* in sip5_15 moved to 'Metering Configuration Entry' */
    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_EGRESS_EN_YELLOW_ECN_MARKING          /* in sip5_15 moved to 'Metering Configuration Entry' */

     /* sip5_15 new fields of token bucket entry */
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BUCKET0_RANK
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BUCKET1_RANK
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BUCKET0_COLOR
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_BUCKET1_COLOR
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_COUPLING_FLAG
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_COUPLING_FLAG0
     ,SMEM_LION3_PLR_METERING_TABLE_FIELDS_MAX_RATE_INDEX

    ,SMEM_LION3_PLR_METERING_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_PLR_METERING_TABLE_FIELDS_ENT;

extern char * lion3PlrMeteringFieldsTableNames[
    SMEM_LION3_PLR_METERING_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3PlrMeteringTableFieldsFormat[
    SMEM_LION3_PLR_METERING_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of (PLR) 'policer metering' fields - for GET field */
#define SMEM_LION3_PLR_METERING_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_PLR_METERING_E)

/* macro to shorten the calling code of (PLR) 'policer metering' fields - for SET field */
#define SMEM_LION3_PLR_METERING_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value,SKERNEL_TABLE_FORMAT_PLR_METERING_E)

/* the fields of the (PLR) policer Metering Configuration Entry (IPLR0,1,EPLR) in Sip5_15 */
typedef enum{
     SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_COLOR_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_POLICER_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_MG_COUNTERS_SET_EN_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_BILLING_PTR_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_BYTE_OR_PACKET_COUNTING_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_PACKET_SIZE_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_TUNNEL_TERMINATION_PACKET_SIZE_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INCLUDE_LAYER1_OVERHEAD_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_DSA_TAG_COUNTING_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_TIMESTAMP_TAG_COUNTING_MODE_E
    /* ingress only fields*/
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_RED_CMD_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_YELLOW_CMD_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_GREEN_CMD_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_MODIFY_DSCP_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_MODIFY_UP_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_QOS_PROFILE_E
    /* egress only fields*/
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_REMARK_MODE_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_DROP_RED_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_EXP_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_DSCP_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_TC_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_UP_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_MODIFY_DP_E
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_EN_YELLOW_ECN_MARKING_E

    /* field common to ingress and to egress */
    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_MEF_10_3_ENV_SIZE_E

    ,SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

    ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_GREEN_MIRROR_TO_ANALYZER_ENABLE_E =
          SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_YELLOW_MIRROR_TO_ANALYZER_ENABLE_E
    ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_INGRESS_RED_MIRROR_TO_ANALYZER_ENABLE_E

     ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_MEF_10_3_ENV_SIZE_E
     ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_GREEN_MIRROR_TO_ANALYZER_ENABLE_E
     ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_YELLOW_MIRROR_TO_ANALYZER_ENABLE_E
     ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS_EGRESS_RED_MIRROR_TO_ANALYZER_ENABLE_E

    ,SMEM_SIP6_PLR_METERING_CONFIG_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP5_15_PLR_METERING_CONFIG_TABLE_FIELDS_ENT;


/* macro to shorten the calling code of (PLR config) 'policer metering config' fields - for GET field */
#define SMEM_SIP5_15_PLR_METERING_CONFIG_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_PLR_METERING_CONFIG_E)

/* macro to shorten the calling code of (PLR config) 'policer metering config' fields - for SET field */
#define SMEM_SIP5_15_PLR_METERING_CONFIG_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value)   \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value,SKERNEL_TABLE_FORMAT_PLR_METERING_CONFIG_E)

/* the fields of the (PLR) policer billing (IPLR0,1,EPLR) in Sip5 */
typedef enum{
     SMEM_LION3_PLR_BILLING_TABLE_FIELDS_GREEN_COUNTER_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_YELLOW_COUNTER_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_RED_COUNTER_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_RESERVED_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_BILLING_COUNTERS_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_BILLING_COUNT_ALL_EN_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_LM_COUNTER_CAPTURE_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_GREEN_COUNTER_SNAPSHOT_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_GREEN_COUNTER_SNAPSHOT_VALID_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_PACKET_SIZE_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_TUNNEL_TERMINATION_PACKET_SIZE_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_INCLUDE_LAYER1_OVERHEAD_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_DSA_TAG_COUNTING_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_TIMESTAMP_TAG_COUNTING_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_RESERVED_1_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_COUNTER_MODE_E
    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS_RESERVED_2_E

    ,SMEM_LION3_PLR_BILLING_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_PLR_BILLING_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of (PLR) 'policer billing' fields - for GET field */
#define SMEM_LION3_PLR_BILLING_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_PLR_BILLING_E)

/* macro to shorten the calling code of (PLR) 'policer billing' fields - for SET field */
#define SMEM_LION3_PLR_BILLING_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value,SKERNEL_TABLE_FORMAT_PLR_BILLING_E)


/* macro to shorten the calling code of (PLR) 'policer billing' fields - for GET large fields */
#define SMEM_LION3_PLR_BILLING_ENTRY_LARGE_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                                      \
        _memPtr,                                                                \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_BILLING_E].formatNamePtr,                                  \
        _index,                                                                 \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_BILLING_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_BILLING_E].fieldsNamePtr,       \
        fieldName,_valueArr)

/* macro to shorten the calling code of (PLR) 'policer billing' fields - for SET large fields */
#define SMEM_LION3_PLR_BILLING_ENTRY_LARGE_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_valueArr)       \
    snetFieldFromEntry_Any_Set(_devObjPtr,                                      \
        _memPtr,                                                                \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_BILLING_E].formatNamePtr,                                  \
        _index,                                                                 \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_BILLING_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_BILLING_E].fieldsNamePtr,       \
        fieldName,_valueArr)



/* the fields of the (PLR) policer IPFIX (IPLR0,1,EPLR) in Sip5 */
typedef enum{
     SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_BYTE_COUNT_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_PACKET_COUNT_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_TIME_STAMP_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_SAMPLING_MODE_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_RANDOM_FLAG_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_LOG_SAMPLING_RANGE_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_SAMPLING_ACTION_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_CPU_SUB_CODE_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_SAMPLING_WINDOW_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_LAST_SAMPLED_VALUE_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_RANDOM_OFFSET_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_DROP_COUNTER_E
    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_COUNTER_MODE_E

    ,SMEM_LION3_PLR_IPFIX_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

    /* SIP 6_10 */
    /*If <Sampling Mode> = Disable*/
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_FIRST_PACKETS_COUNTER_E = SMEM_LION3_PLR_IPFIX_TABLE_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_NUMBER_OF_FIRST_PACKETS_TO_MIRROR_E
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_PHA_METADATA_MODE_E
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_FIRST_TIMESTAMP_VALID_E
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_FIRST_TIMESTAMP_E
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_LAST_PACKET_COMMAND_E
    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS_LAST_CPU_OR_DROP_CODE_E

    ,SMEM_SIP6_10_PLR_IPFIX_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

}SMEM_LION3_PLR_IPFIX_TABLE_FIELDS_ENT;

extern char * lion3PlrIpfixFieldsTableNames[
    SMEM_LION3_PLR_IPFIX_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3PlrIpfixTableFieldsFormat[
    SMEM_LION3_PLR_IPFIX_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of (PLR) 'policer Ipfix' fields - for GET field */
#define SMEM_LION3_PLR_IPFIX_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_PLR_IPFIX_E)

/* macro to shorten the calling code of (PLR) 'policer Ipfix' fields - for GET field */
#define SMEM_LION3_PLR_IPFIX_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,value,SKERNEL_TABLE_FORMAT_PLR_IPFIX_E)

/* macro to shorten the calling code of (PLR) 'policer Ipfix' fields - for GET large fields */
#define SMEM_LION3_PLR_IPFIX_ENTRY_LARGE_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                                      \
        _memPtr,                                                                \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_IPFIX_E].formatNamePtr,                                  \
        _index,                                                                 \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_IPFIX_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_IPFIX_E].fieldsNamePtr,       \
        fieldName,_valueArr)

/* macro to shorten the calling code of (PLR) 'policer Ipfix' fields - for SET large fields */
#define SMEM_LION3_PLR_IPFIX_ENTRY_LARGE_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_valueArr)       \
    snetFieldFromEntry_Any_Set(_devObjPtr,                                      \
        _memPtr,                                                                \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_IPFIX_E].formatNamePtr,                                  \
        _index,                                                                 \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_IPFIX_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_PLR_IPFIX_E].fieldsNamePtr,       \
        fieldName,_valueArr)


/* the fields of the (PLR) policer metering (IPLR0,1,EPLR):
     e attributes  (eport/evlan) table in Sip5 */
typedef enum {
     SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_METERING_ENABLE_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_COUNTING_ENABLE_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_POLICER_PTR_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_KNOWN_UNICAST_OFFSET_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_UNKNOWN_UNICAST_OFFSET_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_REGISTERED_MULTICAST_OFFSET_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_UNREGISTERED_MULTICAST_OFFSET_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_BROADCAST_OFFSET_E
    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_TCP_SYN_OFFSET_E

    ,SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS_ENT;

extern char * lion3PlrEAttributesFieldsTableNames[
    SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3PlrEAttributesTableFieldsFormat[
    SMEM_LION3_PLR_E_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of (PLR) 'e attributes  (eport/evlan)' fields - for GET field */
#define SMEM_LION3_PLR_E_ATTRIBUTES_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_PLR_E_ATTRIBUTES_E)

/* the fields of the (PLR) policer metering (IPLR0,1,EPLR):
     hierarchical table in Sip5 */
typedef enum {
    SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS_POLICER_PTR_E,
    SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS_METERING_ENABLE_E,
    SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS_COUNTING_ENABLE_E,

    SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS_ENT;

extern char * lion3PlrHierarchicalFieldsTableNames[
    SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3PlrHierarchicalTableFieldsFormat[
    SMEM_LION3_PLR_HIERARCHICAL_TABLE_FIELDS___LAST_VALUE___E];

/* macro to shorten the calling code of (PLR) 'hierarchical table' fields - for GET field */
#define SMEM_LION3_PLR_HIERARCHIAL_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_PLR_HIERARCHICAL_E)

/**************************************************/
/********** PLR UNIT END   ************************/
/**************************************************/

/**************************************************/
/********** HA UNIT START ************************/
/**************************************************/

/* the fields of the (HA) physical port table 1 in Sip5 */
typedef enum{
    SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_ROUTED_MAC_SA_MOD_EN
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_ROUTER_MAC_SA_ASSIGNMENT_MODE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PER_UP0_KEEP_VLAN1_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_IP_TUNNEL_LENGTH_OFFSET_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_EPCL_LOOKUP_CONFIGURATION_MODE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_EPCL_NON_TS_DATA_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_EPCL_TS_DATA_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_EPCL_FROM_CPU_DATA_PACKETS_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_EPCL_FROM_CPU_CONTROL_PACKETS_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PORT_GROUP
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PORT_LIST_BIT_VECTOR_OFFSET
    /* new in sip6.10 (Hawk) */
   ,SMEM_HAWK_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PCLID2_E       /*27..50*/
   ,SMEM_HAWK_HA_PHYSICAL_PORT_TABLE_1_FIELDS_SET_SRC_ID_E   /*51*/
   ,SMEM_HAWK_HA_PHYSICAL_PORT_TABLE_1_FIELDS_SRC_ID_E       /*52..57*/

    /* new in sip6.30 (Ironman) */
   ,SMEM_SIP6_30_HA_PHYSICAL_PORT_TABLE_1_FIELDS_SET_DESTINATION_EPG_E  /*58*/
   ,SMEM_SIP6_30_HA_PHYSICAL_PORT_TABLE_1_FIELDS_DESTINATION_EPG_E      /*59..70*/
   ,SMEM_SIP6_30_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PRP_TRAILER_ACTION_E   /*71..72*/
   ,SMEM_SIP6_30_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PRP_PADDING_SIZE_E     /*73..74*/
   ,SMEM_SIP6_30_HA_PHYSICAL_PORT_TABLE_1_FIELDS_PRP_BASE_LSDU_OFFSET_E /*75..80*/

   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_LION3_HA_PHYSICAL_PORT_TABLE_1_FIELDS_ENT;

/* macro to shorten the calling code of (HA) physical port table 1 fields - for GET field */
#define SMEM_LION3_HA_PHYSICAL_PORT_1_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName) \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_PHYSICAL_PORT_1_E)


/* macro to shorten the calling code of (HA) physical port table 2 fields - for GET field */
#define SMEM_LION3_HA_PHYSICAL_PORT_1_ENTRY_FIELD_AUTO_GET(_devObjPtr,_descrPtr,fieldName)  \
        SMEM_LION3_HA_PHYSICAL_PORT_1_ENTRY_FIELD_GET(devObjPtr,                            \
            _descrPtr->eArchExtInfo.haEgressPhyPort1TablePtr,                      \
            _descrPtr->eArchExtInfo.haEgressPhyPort1Table_index,                   \
            fieldName)


/* the fields of the (HA) physical port table 2 in Sip5 */
typedef enum{
    SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_CASCADE_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_EGRESS_DSA_TAG_TYPE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_SER_CHECK_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_DISABLE_CRC_ADDING
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_RETAIN_EXTERNAL_CRC
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_PACKET_ID_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_ROUTED_SRC_DEVICE_ID_PORT_MODE_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_SET_SOURCE_TO_LOCAL
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_LOCAL_DEVICE_NUMBER
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_LOCAL_SOURCE_ID
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_EPCL_TO_ANALYZER_PACKETS_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_EPCL_TO_CPU_PACKETS_PORT_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_PTP_TIMESTAMP_TAG_MODE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_INVALID_CRC_MODE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_TIMESTAMP_RECEPTION_EN
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_TRUNK_ID
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_FORCE_NEW_DSA_TO_CPU
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_FORCE_NEW_DSA_FORWARD_OR_FROM_CPU
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_PRE_PEND_TWO_BYTES_HEADER_EN
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_DSA_QOS_MODE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_REMOTE_PHYSICAL_PORT_MAP_ENABLE
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_REMOTE_PHYSICAL_PORT_NUMBER
   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_REMOTE_PHYSICAL_PORT_DEVICE_ID

   /* new in sip5_15 */
   ,SMEM_SIP5_15_HA_PHYSICAL_PORT_TABLE_2_FIELDS_TRANS_FWD_TO_4B_FROM_CPU_DSA
   ,SMEM_SIP5_15_HA_PHYSICAL_PORT_TABLE_2_FIELDS_TRANS_TO_ANALYZER_TO_4B_FROM_CPU_DSA
   ,SMEM_SIP5_15_HA_PHYSICAL_PORT_TABLE_2_FIELDS_TRANS_FROM_CPU_TO_4B_FROM_CPU_DSA

   /* new in sip5_20 */
   ,SMEM_SIP5_20_HA_PHYSICAL_PORT_TABLE_2_FIELDS_INSERT_HASH_INTO_FWD_EDSA_EN

   /* new in sip6_10 */
   ,SMEM_SIP6_10_HA_PHYSICAL_PORT_TABLE_2_FIELDS_PUSHED_TAG_VLAN_ID_E
   ,SMEM_SIP6_10_HA_PHYSICAL_PORT_TABLE_2_FIELDS_USE_PHYSICAL_PORT_PUSH_TAG_VID_EN_E

    /* new in sip6.30 (Ironman) */
   ,SMEM_SIP6_30_HA_PHYSICAL_PORT_TABLE_2_FIELDS_HSR_BASE_LSDU_OFFSET_E /*95..100*/

   ,SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_LION3_HA_PHYSICAL_PORT_TABLE_2_FIELDS_ENT;

/* macro to shorten the calling code of (HA) physical port table 2 fields - for GET field */
#define SMEM_LION3_HA_PHYSICAL_PORT_2_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName) \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_PHYSICAL_PORT_2_E)

/* macro to shorten the calling code of (HA) physical port table 2 fields - for GET field
    by indexing of 'egressPort' (descrPtr->eArchExtInfo.haEgressPhyPort2Table_index)
*/
#define SMEM_LION3_HA_PHYSICAL_PORT_2_ENTRY_FIELD_AUTO_GET(_devObjPtr,_descrPtr,fieldName)  \
        SMEM_LION3_HA_PHYSICAL_PORT_2_ENTRY_FIELD_GET(devObjPtr,                            \
            _descrPtr->eArchExtInfo.haEgressPhyPort2TablePtr,                      \
            _descrPtr->eArchExtInfo.haEgressPhyPort2Table_index,                   \
            fieldName)


/* macro to shorten the calling code of (HA) physical port table 2 fields - for GET field
    by indexing of 'srcPort'
*/
#define SMEM_LION3_HA_PHYSICAL_PORT_2_ENTRY_FIELD_BY_SRC_PORT_GET(_devObjPtr,srcPort,fieldName) \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,                                             \
        smemMemGet(_devObjPtr,SMEM_LION2_HA_PHYSICAL_PORT_2_ATTRIBUTES_TBL_MEM(_devObjPtr, srcPort)),\
        srcPort/* the physical port */,fieldName,SKERNEL_TABLE_FORMAT_HA_PHYSICAL_PORT_2_E)

/*********************************************************************************************************************/

/* the fields of the (HA) eport table 1 in Sip5 */
typedef enum{
    SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_VLAN_TRANS_EN
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_EGRESS_TAG0_TPID_INDEX
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_EGRESS_TAG1_TPID_INDEX
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_TS_HEADER_TPID_INDEX
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_TS_EXT
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_MPLS_PW_LABEL_PUSH_ENABLE
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_MPLS_PW_LABEL
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_MPLS_PW_LABEL_EXP
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_MPLS_PW_LABEL_TTL
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_PUSH_MPLS_FLOW_LABEL_ENABLE
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_FORCE_ARP_TS_EPORT_DECISION
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_TUNNEL_START
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_TS_POINTER
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ARP_POINTER
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_TS_PASSENGER_TYPE
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_MODIFY_MAC_SA
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_MODIFY_MAC_DA
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_TRILL_INTERFACE_ENABLE
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_KEEP_ORIGINAL_TAG0_TPID
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_KEEP_ORIGINAL_TAG1_TPID
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ENABLE_EGRESS_UP_MAPPING
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ENABLE_EGRESS_DSCP_MAPPING
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ENABLE_EGRESS_EXP_MAPPING
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ENABLE_EGRESS_TC_DP_MAPPING
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_QOS_MAPPING_TABLE_INDEX
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ROUTER_MAC_SA_INDEX
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_DP_TO_CFI_MAP_ENABLE
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_PUSH_SOURCE_BASED_MPLS_LABEL
   ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_PUSH_EVLAN_BASED_MPLS_LABEL
   ,SMEM_SIP6_HA_EPORT_TABLE_1_FIELDS_PHA_THREAD_NUMBER
   ,SMEM_SIP6_10_HA_EPORT_TABLE_1_FIELDS_NESTED_VLAN_EN

   ,SMEM_SIP6_30_HA_EPORT_TABLE_1_FIELDS_NESTED_VLAN_MODE_E     /*97..98*/
   ,SMEM_SIP6_30_HA_EPORT_TABLE_1_FIELDS_HSR_PRP_LAN_ID_E       /*99..102*/
   ,SMEM_SIP6_30_HA_EPORT_TABLE_1_FIELDS_L2NAT_ENABLE_E         /*103*/
   ,SMEM_SIP6_30_HA_EPORT_TABLE_1_FIELDS_NAT_PTR_E              /*104..119*/


  ,SMEM_LION3_HA_EPORT_TABLE_1_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_LION3_HA_EPORT_TABLE_1_FIELDS_ENT;

/* macro to shorten the calling code of (HA) ePort table 1 fields - for GET field */
#define SMEM_LION3_HA_EPORT_1_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_EGRESS_EPORT_1_E)

/* macro to shorten the calling code of (HA) ePort table 1 fields - for GET field */
#define SMEM_LION3_HA_EPORT_1_ENTRY_FIELD_AUTO_GET(_devObjPtr,_descrPtr,fieldName)  \
        SMEM_LION3_HA_EPORT_1_ENTRY_FIELD_GET(devObjPtr,                            \
            _descrPtr->eArchExtInfo.haEgressEPortAtt1TablePtr,                      \
            _descrPtr->eArchExtInfo.haEgressEPortAtt1Table_index,                   \
            fieldName)


/*********************************************************************************************************************/

/* the fields of the (HA) eport table 2 in Sip5 */
typedef enum{
    SMEM_LION3_HA_EPORT_TABLE_2_MIRROR_TO_ANALYZER_KEEP_TAGS
   ,SMEM_LION3_HA_EPORT_TABLE_2_TO_ANALYZER_VLAN_TAG_ADD_EN
   ,SMEM_LION3_HA_EPORT_TABLE_2_PUSH_VLAN_COMMAND
   ,SMEM_LION3_HA_EPORT_TABLE_2_PUSHED_TAG_TPID_SELECT
   ,SMEM_LION3_HA_EPORT_TABLE_2_PUSHED_TAG_VALUE
   ,SMEM_LION3_HA_EPORT_TABLE_2_UP_CFI_ASSIGNMENT_COMMAND
   ,SMEM_LION3_HA_EPORT_TABLE_2_UP
   ,SMEM_LION3_HA_EPORT_TABLE_2_CFI
   ,SMEM_LION3_HA_EPORT_TABLE_2_FORCE_E_TAG_IE_PID_TO_DEFAULT

   ,SMEM_LION3_HA_EPORT_TABLE_2_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_LION3_HA_EPORT_TABLE_2_FIELDS_ENT;

extern char * lion3HaEPort2FieldsTableNames[SMEM_LION3_HA_EPORT_TABLE_2_FIELDS____LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3HaEPort2TableFieldsFormat[SMEM_LION3_HA_EPORT_TABLE_2_FIELDS____LAST_VALUE___E];

/* macro to shorten the calling code of (HA) ePort table 2 fields - for GET field */
#define SMEM_LION3_HA_EPORT_2_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_EGRESS_EPORT_2_E)

/* macro to shorten the calling code of (HA) ePort table 1 fields - for GET field */
#define SMEM_LION3_HA_EPORT_2_ENTRY_FIELD_AUTO_GET(_devObjPtr,_descrPtr,fieldName)  \
        SMEM_LION3_HA_EPORT_2_ENTRY_FIELD_GET(devObjPtr,                            \
            _descrPtr->eArchExtInfo.haEgressEPortAtt2TablePtr,                      \
            _descrPtr->eArchExtInfo.haEgressEPortAtt2Table_index,                   \
            fieldName)


/*********************************************************************************************************************/

/* the fields of the (HA) tunnel start table in Sip5 */
typedef enum{
     SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TUNNEL_TYPE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UP_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UP
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TAG_ENABLE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_VID
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TTL
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RETAIN_INNER_CRC
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_B_SA_ASSIGN_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_GRE_KEY_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_PROTOCOL
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_NEXT_HOP_MAC_DA
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_GRE_PROTOCOL
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_1
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IPV4_GRE_KEY_1
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IP_PROTOCOL
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UDP_DST_PORT
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DSCP
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DSCP_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_FLOW_LABEL_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DF_FLAG
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_2
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RID
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_CAPWAP_FLAGS
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_OFFSET
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_FLAG
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IPV4_GRE_ENABLE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_IPV4_GRE_KEY_0
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_4
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TRILL_HEADER
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_LABEL1
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP1
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP1_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_NUMBER_OF_MPLS_LABELS
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_3
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SET_S_BIT
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SWAP_TTL_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_MPLS_MC_UPSTREAM_ASSIGNED_LABEL
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_7
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_LABEL2
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP2
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP2_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_PW_CONTROL_INDEX
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_5
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_LABEL3
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP3
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_EXP3_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_SID
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_UP_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_RESERVED_6
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_UP
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_DEI
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_DEI_MARKING_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_SID_ASSIGN_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_TAG_RES2
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_TAG_RES1
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_I_TAG_NCA
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_B_DA_ASSIGN_MODE
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_PROFILE_NUMBER
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_GRE_FLAGS_AND_VERSION
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_UDP_SRC_PORT
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DIP
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SIP
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DIP_IPV6
    ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SIP_IPV6

    /* new field in Bobcat B0 (sip5_10) , was not in sip5 */
   ,SMEM_SIP5_10_HA_TUNNEL_START_TABLE_FIELDS_MPLS_PW_EXP_MARKING_MODE

    ,SMEM_SIP5_15_HA_TUNNEL_START_TABLE_FIELDS_PUSH_ELI_AND_EL_AFTER_LABEL_1
    ,SMEM_SIP5_15_HA_TUNNEL_START_TABLE_FIELDS_PUSH_ELI_AND_EL_AFTER_LABEL_2
    ,SMEM_SIP5_15_HA_TUNNEL_START_TABLE_FIELDS_PUSH_ELI_AND_EL_AFTER_LABEL_3

    /* sip6 fields */
    ,SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_GENERIC_TS_TYPE
    ,SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_ETHERTYPE
    ,SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_DATA1
    ,SMEM_SIP6_HA_TUNNEL_START_TABLE_FIELDS_DATA2

   ,SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS____LAST_VALUE___E/* used for array size */

}SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of (HA) tunnel START fields - for GET field */
#define SMEM_LION3_HA_TUNNEL_START_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_TUNNEL_START_E)


/* macro to shorten the calling code of (HA) tunnel START table field - NEXT HOP MAC ADDR - for GET field */
#define SMEM_LION3_HA_TUNNEL_START_ENTRY_FIELD_NEXT_HOP_MAC_ADDR_GET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].formatNamePtr,                      \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsNamePtr, \
        SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_NEXT_HOP_MAC_DA,_valueArr)

/* macro to shorten the calling code of (HA) tunnel START table field - TRILL HEADER - for GET field */
#define SMEM_LION3_HA_TUNNEL_START_ENTRY_FIELD_TRILL_HEADER_GET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].formatNamePtr,                      \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsNamePtr, \
        SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_TRILL_HEADER,_valueArr)

/* macro to shorten the calling code of (HA) tunnel START table field - SIP_IPV6 - for GET field */
#define SMEM_LION3_HA_TUNNEL_START_ENTRY_FIELD_SIP_IPV6_GET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].formatNamePtr,                      \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsNamePtr, \
        SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_SIP_IPV6,_valueArr)

/* macro to shorten the calling code of (HA) tunnel START table field - DIP_IPV6 - for GET field */
#define SMEM_LION3_HA_TUNNEL_START_ENTRY_FIELD_DIP_IPV6_GET(_devObjPtr,_memPtr,_index,_valueArr)       \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].formatNamePtr,                      \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_TUNNEL_START_E].fieldsNamePtr, \
        SMEM_LION3_HA_TUNNEL_START_TABLE_FIELDS_DIP_IPV6,_valueArr)


/*********************************************************************************************************************/
/* the fields of the (HA) NAT44 table in Sip5 */
typedef enum{
     SMEM_LION3_HA_NAT44_TABLE_FIELDS_MAC_DA
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_MODIFY_DIP
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_NEW_DIP
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_MODIFY_SIP
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_NEW_SIP
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_MODIFY_TCP_UDP_DST_PORT
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_NEW_TCP_UDP_DST_PORT
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_MODIFY_TCP_UDP_SRC_PORT
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_NEW_TCP_UDP_SRC_PORT
    ,SMEM_SIP6_30_HA_NAT44_TABLE_FIELDS_NAT_SIP_PREFIX_LENGTH
    ,SMEM_SIP6_30_HA_NAT44_TABLE_FIELDS_NAT_DIP_PREFIX_LENGTH
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS_NAT_ENTRY_TYPE
    ,SMEM_LION3_HA_NAT44_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_LION3_HA_NAT44_TABLE_FIELDS_ENT;

extern char * lion3HaNat44FieldsTableNames[
    SMEM_LION3_HA_NAT44_TABLE_FIELDS____LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3HaNat44TableFieldsFormat[
    SMEM_LION3_HA_NAT44_TABLE_FIELDS____LAST_VALUE___E];

/* macro to shorten the calling code of (HA) NAT44 fields - for GET field */
#define SMEM_LION3_HA_NAT44_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_NAT44_E)


/* macro to shorten the calling code of (HA) NAT44 table field - MAC DA - for GET field */
#define SMEM_LION3_HA_NAT44_ENTRY_FIELD_MAC_DA_ADDR_GET(_devObjPtr,_memPtr,_index,_valueArr) \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT44_E].formatNamePtr, \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT44_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT44_E].fieldsNamePtr, \
        SMEM_LION3_HA_NAT44_TABLE_FIELDS_MAC_DA,_valueArr)


/*********************************************************************************************************************/
/* the fields of the (HA) NAT66 table in Sip5_15 */
typedef enum{
     SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_MAC_DA
    ,SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_MODIFY_COMMAND
    ,SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_ADDRESS
    ,SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_PREFIX_SIZE
    ,SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_RESERVED
    ,SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_NAT_ENTRY_TYPE
    ,SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_ENT;

extern char * sip5_15HaNat66FieldsTableNames[
    SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS____LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC sip5_15HaNat66TableFieldsFormat[
    SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS____LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC sip6HaNat66TableFieldsFormat[
    SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS____LAST_VALUE___E];

/* macro to shorten the calling code of (HA) NAT66 fields - for GET field */
#define SMEM_SIP5_15_HA_NAT66_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_NAT66_E)


/* macro to shorten the calling code of (HA) NAT66 table field - MAC DA - for GET field */
#define SMEM_SIP5_15_HA_NAT66_ENTRY_FIELD_MAC_DA_ADDR_GET(_devObjPtr,_memPtr,_index,_valueArr) \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT66_E].formatNamePtr, \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT66_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT66_E].fieldsNamePtr, \
        SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_MAC_DA,_valueArr)

/* macro to shorten the calling code of (HA) NAT66 table field - IPv6 ADDRESS - for GET field */
#define SMEM_SIP5_15_HA_NAT66_ENTRY_FIELD_IPV6_ADDR_GET(_devObjPtr,_memPtr,_index,_valueArr) \
    snetFieldFromEntry_Any_Get(_devObjPtr,                           \
        _memPtr,                                                     \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT66_E].formatNamePtr, \
        _index,/* the index */                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT66_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_NAT66_E].fieldsNamePtr, \
        SMEM_SIP5_15_HA_NAT66_TABLE_FIELDS_ADDRESS,_valueArr)



/*********************************************************************************************************************/
/* the fields of the ip tunnel start profile table in Sip5 */
typedef enum{
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_16_TEMPLATE_BYTES_FOR_8_BITS,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_HASH_CIRCULAR_SHIFT_LEFT,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_TEMPLATE_SIZE,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_UDP_SOURCE_PORT_MODE,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_SERVICE_ID_CIRCULAR_SHIFT_SIZE,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_MAC_DA_MODE,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_PROFILE_DIP_MODE,
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_CONTROL_WORD_INDEX,

    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS___LAST_VALUE___E /* used for array size */

} SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_ENT;

extern char * lion3HaGenericTsProfileFieldsTableNames[
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS___LAST_VALUE___E];

extern SNET_ENTRY_FORMAT_TABLE_STC lion3HaGenericTsProfileTableFieldsFormat[
    SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS___LAST_VALUE___E];


/* special macro for get one of ("16 byte templates * 8 bits") and each is 4 bits in HA_GENERIC_TS_PROFILE entry */
/* _templateByteId - 0..15 */
/* _templateBitId  - 0..8 */
#define SMEM_LION3_HA_GENERIC_TS_PROFILE_TEMPLATE_FIELD_GET(_devObjPtr,_entryPtr,_profile,_templateByteId,_templateBitId) \
    snetFieldFromEntry_subField_Get(_devObjPtr,                         \
        _entryPtr,                                                      \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_GENERIC_TS_PROFILE_E].formatNamePtr,                  \
        _profile,                                                       \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_GENERIC_TS_PROFILE_E].fieldsInfoPtr, \
        _devObjPtr->tableFormatInfo[SKERNEL_TABLE_FORMAT_HA_GENERIC_TS_PROFILE_E].fieldsNamePtr, \
        SMEM_LION3_HA_GENERIC_TS_PROFILE_TABLE_FIELDS_16_TEMPLATE_BYTES_FOR_8_BITS,       \
        (4 * ((_templateByteId)  * 8) + (_templateBitId*4)  ),/*start of sub field*/ \
        4)/*length of sub field*/

/* macro to shorten the calling code of (HA) generic tunnel start profile fields - for GET field */
#define SMEM_LION3_HA_GENERIC_TS_PROFILE_FIELD_GET(_devObjPtr,_memPtr,_profile,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_profile,fieldName,SKERNEL_TABLE_FORMAT_HA_GENERIC_TS_PROFILE_E)


/*********************************************************************************************************************/

/***********************************************/
/********** HA UNIT END ************************/
/***********************************************/

/***********************************************/
/********** EPCL UNIT start ********************/
/***********************************************/
/* the fields of the (EPCL) action table in Sip5 */
typedef enum {
     SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_COMMAND
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_DSCP_EXP
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_UP0
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_MODIFY_DSCP_EXP
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_ENABLE_MODIFY_UP0
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_BIND_TO_CNC_COUNTER
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_CNC_COUNTER_INDEX
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TAG1_VID_CMD
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_ENABLE_MODIFY_UP1
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TAG1_VID
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_UP1
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TAG0_VLAN_CMD
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TAG0_VID
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_COUNTER
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_BIND_TO_POLICER_METER
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_POLICER_INDEX
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_FLOW_ID
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_OAM_PROCESSING_ENABLE
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_OAM_PROFILE
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TIME_STAMP_ENABLE
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TIME_STAMP_OFFSET_INDEX
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_CHANNEL_TYPE_TO_OPCODE_MAPPING_EN
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_EPCL_RESERVED_ENABLE
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_EPCL_RESERVED
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS_TM_QUEUE_ID
    ,SMEM_LION3_EPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_PHA_METADATA_ID_ASSIGN_ENABLE =
          SMEM_LION3_EPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_PHA_METADATA_ID
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_PHA_THREAD_NUMBER_ASSIGN_ENABLE
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_PHA_THREAD_NUMBER
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_EGRESS_MIRRORING_MODE
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_EGRESS_ANALYZER_INDEX
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_CPU_CODE
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_LATENCY_MONITORING_PROFILE
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_LATENCY_MONITORING_ENABLE
    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS_DISABLE_CUT_THROUGH

    ,SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

    ,SMEM_SIP6_10_EPCL_ACTION_TABLE_FIELDS_IPFIX_EN = SMEM_SIP6_EPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E
    ,SMEM_SIP6_10_EPCL_ACTION_TABLE_FIELDS_PHA_METADATA_ID_PART2

    ,SMEM_SIP6_30_EPCL_ACTION_TABLE_FIELDS_EGRESS_CNC_INDEX_MODE
    ,SMEM_SIP6_30_EPCL_ACTION_TABLE_FIELDS_ENABLE_EGRESS_MAX_SDU_SIZE_CHECK
    ,SMEM_SIP6_30_EPCL_ACTION_TABLE_FIELDS_EGRESS_MAX_SDU_SIZE_PROFILE

    ,SMEM_SIP6_10_EPCL_ACTION_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_EPCL_ACTION_TABLE_FIELDS;

/* the fields of the EPCL Metadata fields in Sip5 */
typedef enum {
     SMEM_LION3_EPCL_META_DATA_FIELDS_PORT_LIST_TRG_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_TRUNK_ID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_LOCAL_DEV_SRC_EPORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ORIG_SRC_DEV_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ORIG_SRC_IS_TRUNK_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ORIG_SRC_EPORT_OR_TRUNK_ID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRG_PORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_TRG_PHY_PORT_VALID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_2_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_LOCAL_DEV_TRG_PHY_PORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRG_DEV_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRG_EPORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ASSIGN_TRG_EPORT_ATTRIBUTES_LOCALLY_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_SRC_PORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_USE_VIDX_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EVIDX_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_UDB_PACKET_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IP_LEGAL_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_L2_VALID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_ARP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_SRC_ID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_FILTER_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_FILTER_REGISTERED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_INCOMING_EGRESS_FILTER_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_4_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ETHERTYPE_OR_DSAPSSAP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_UNKNOWN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_L2_VALID_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_L2_ENCAPSULATION_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_BC_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ORIG_VID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EVLAN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG0_EXIST_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG1_EXIST_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG0_IS_OUTER_TAG_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG0_UP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG0_CFI_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG1_UP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG1_CFI_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TAG1_VID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EVB_OR_BPE_OR_RSPAN_TAG_SIZE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_5_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IP_PROTOCOL_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV4_SIP_OR_ARP_SIP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV4_DIP_OR_ARP_DIP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ROUTED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_IP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_IPV4_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_IPV6_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IP_LEGAL_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_ARP_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV4_FRAGMENTED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV4_OPTIONS_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_IP_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_IPV4_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_IPV6_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IP_LEGAL_2_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV6_EH_EXIST_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV6_EH_HOP_BY_HOP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IPV6_IS_ND_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_L4_VALID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TCP_OR_UDP_PORT_COMPARATORS_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_PTP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TIMESTAMP_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_INGRESS_TIMESTAMP_TAGGED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TIMESTAMP_TAGGED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_LM_COUNTER_OR_TIMESTAMP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_LM_COUNTER_INSERT_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PTP_U_FIELD_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PTP_TAI_SELECT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PTP_DOMAIN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PTP_TRIGGER_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PTP_MESSAGE_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_CONTROL_WORD_CHANNEL_TYPE_PROFILE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PTP_VERSION_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_OAM_PTP_OFFSET_INDEX_OR_PTP_OFFSET_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_LABEL_EXISTS_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_LABEL_VALUE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_6_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_DATA_AFTER_INNER_LABEL_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_7_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_SRC_TRG_OR_RX_SNIFF_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ANALYZER_TRG_EPORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ANALYZER_TRG_DEV_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ANALYZER_TRG_PHY_PORT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_SRC_TRG_TAG0_TAGGED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ANALYZER_IS_TRG_PHY_PORT_VALID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_8_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_MPLS_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PROTOCOL_AFTER_MPLS_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_NUMBER_OF_MPLS_LABELS_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_IS_TUNNELED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TUNNEL_START_PASSENGER_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_9_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_QOS_PROFILE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_QOS_MAPPING_TABLE_INDEX_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_FROM_CPU_DP_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PACKET_TC_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_UP_MAP_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_DSCP_MAP_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_EXP_MAP_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_TC_DP_MAP_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_DP2CFI_MAP_EN_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_INGRESS_BYTE_COUNT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_INCOMING_MTAG_CMD_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_MTAG_CMD_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_MARVELL_TAGGED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_EGRESS_MARVELL_TAGGED_EXTENDED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_ADD_CRC_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_NUM_OF_CRC_IN_EGRESS_BYTE_COUNT_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_INGRESS_MARVELL_TAGGED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_10_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRANSMITTED_DSA_TAG_WORD_0_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRANSMITTED_DSA_TAG_WORD_1_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRANSMITTED_DSA_TAG_WORD_2_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TRANSMITTED_DSA_TAG_WORD_3_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_FLOW_ID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_OUTER_PACKET_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_INNER_PACKET_TYPE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PACKET_CMD_DROP_OR_FORWARD_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TXQ_QUEUE_ID_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_PACKET_HASH_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_CPU_CODE_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_TWO_BYTE_HEADER_ADDED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_COPY_RESERVED_E
    ,SMEM_LION3_EPCL_META_DATA_FIELDS_RESERVED_11_E
    /* start bit 728 - new in BC3 */
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_ORIG_SRC_EPORT_OR_TRUNK_ID_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_729_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_TRG_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_732_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_LOCAL_DEV_TRG_PHY_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_734_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_TRG_EPORT_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_737_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_SRC_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_740_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_ANALYZER_TRG_EPORT_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_742_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_ANALYZER_TRG_PHY_PORT_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_TXQ_QUEUE_ID_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_FLOW_ID_EXTENSION_E
    ,SMEM_BOBCAT3_EPCL_META_DATA_FIELDS_RESERVED_748_E
    /* start bit 728 - new in Falcon (yes ... on bits of BC3 !) */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_SECOND_FRACTION_E              /* bits 728..759 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_TIMESTAMP_SECONDS_E            /* bits 760..807 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_PHA_THREAD_NUMBER_E            /* bits 808..815 */
    /* end at bit 815 */
    /* start Falcon bits that differ from BC3 and legacy devices */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_ORIG_SRC_EPORT_OR_TRUNK_ID_13_E/* bit  54 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_LOCAL_DEV_TRG_PHY_PORT_8_9_E   /* bits 89,90 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_TRG_PORT_8_9_E                 /* bits 92,93 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_TRG_EPORT_13_E                 /* bit  95 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_SR_END_NODE_E                  /* bit  175 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_ANALYZER_TRG_PHY_PORT_8_9_E    /* bits 458,459*/
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_ANALYZER_TRG_EPORT_13_E        /* bit  461*/
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_INGRESS_MARVELL_TAGGED_E       /* bit  517 (moved from 520) */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_QUEUE_GROUP_INDEX_0_7_E        /* bits 520..527 (instead of 'TXQ_QUEUE_ID') */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_QUEUE_GROUP_INDEX_8_9_E        /* bits 673,674  */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_QUEUE_OFFSET_E                 /* bits 676..679 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_SRC_PORT_8_9_E                 /* bits 680,681  */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_FLOW_ID_12_E                   /* bit  683 */
    ,SMEM_FALCON_EPCL_META_DATA_FIELDS_FULL_EGRESS_PACKET_COMMAND_E   /* bits 725..727 */

    /* End Falcon bits that differ from BC3 and legacy devices */

    /* SIP6_10 - new fields */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_FLOW_ID_16_E                     /* bit  668..671 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_EGRESS_TAG_STATE_E               /* bits 820..822 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_TAG0_SRC_TAGEED_E                /* bit  824      */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_TAG1_SRC_TAGEED_E                /* bit  825      */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_EGRESS_TAG0_EXIST_E              /* bit  826      */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_EGRESS_TAG1_EXIST_E              /* bit  827      */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_EGRESS_INNER_SPECIAL_TAGS_E      /* bits 828..830 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_EGRESS_MULTI_DEST_E              /* bit  831      */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_ORIGINAL_QUEUE_GROUP_INDEX_0_7_E /* bits 832..839 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_ORIGINAL_QUEUE_GROUP_INDEX_8_9_E /* bits 840..841 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_ORIGINAL_QUEUE_OFFSET_E          /* bits 842..845 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_ORIGINAL_QUEUE_FB_E              /* bits 848..853 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_RESERVED_854_E                   /* bits 854..855 */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_TCP_UDP_PORT_COMPARATORS_1_7_EXT_E /* bits 856 ..911  */
    ,SMEM_SIP_6_10_EPCL_META_DATA_FIELDS_PCLID2_E                           /* bits 912 ..935  */

    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_QCI_TIME_SLOT_PTR_E                /* bits 936 ..943  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_GATE_ID_E                          /* bits 944 ..952  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_GATE_STATE_E                       /* bits 953 ..954  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_PRP_CMD_E                          /* bits 955 ..956  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_REP_MLL_E                          /* bits 957 ..957  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_SRC_TRG_PHY_PORT_E                 /* bits 958 ..967  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_SRC_EPG_E                          /* bits 968 ..979  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_DST_EPG_E                          /* bits 980 ..991  */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_STREAM_ID_E                        /* bits 992 ..1007 */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_SRC_TRG_DEV_E                      /* bits 1008..1017 */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_FIRST_BUFFER_E                     /* bits 1018..1028 */
    ,SMEM_SIP_6_30_EPCL_META_DATA_FIELDS_RESERVED_1029_E                    /* bits 1029..1031 */


    ,SMEM_LION3_EPCL_META_DATA_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_LION3_EPCL_META_DATA_TABLE_FIELDS;

/***********************************************/
/********** EPCL UNIT END **********************/
/***********************************************/

/***********************************************/
/********** IPVX UNIT START ********************/
/***********************************************/

/* the fields of the (IPVx) next hop entry format in Sip5 */
typedef enum{
     SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_PACKET_CMD
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_BYPASS_TTL_OPTIONS_OR_HOP_EXTENSION
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_CPU_CODE_INDEX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_INGRESS_MIRROR_TO_ANALYZER_INDEX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_NEXT_HOP_VID1
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_QOS_PROFILE_PRECEDENCE
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_QOS_PROFILE_MARKING_EN
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_QOS_PROFILE_INDEX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MODIFY_DSCP
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MODIFY_UP
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_NEXT_HOP_EVLAN
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_USE_VIDX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_EVIDX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TARGET_IS_TRUNK
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TRG_TRUNK_ID
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TRG_EPORT
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TRG_DEV
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_DIP_ACCESS_LEVEL
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_SIP_ACCESS_LEVEL
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_START_OF_TUNNEL
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_ARP_PTR
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TUNNEL_PTR
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_RESERVED
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TS_IS_NAT
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_TUNNEL_TYPE
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_IPV6_DEST_SITE_ID
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_IPV6_SCOPE_CHECK
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_COUNTER_SET_INDEX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MTU_INDEX
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_ARP_BC_TRAP_MIRROR_EN
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_APP_SPECIFIC_CPU_CODE_EN
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_SIP_FILTER_EN
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_DEC_TTL_OR_HOP_COUNT
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_ICMP_REDIRECT_EXCEP_MIRROR

    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MC_RPF_EVLAN_MRST_ID
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MC_ING_VLAN_CHECK_FAIL_CMD
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MC_RPF_FAIL_CMD_MODE
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MC_INTERNAL_MLL_PTR
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_IPV6_MC_EXTERNAL_MLL_POINTER_MSBITS
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_MC_ING_VLAN_CHECK
    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_IPV6_MC_EXTERNAL_MLL_POINTER
    ,SMEM_SIP6_10_IPVX_NEXT_HOP_TABLE_FIELDS_TARGET_EPG

    ,SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP5_IPVX_NEXT_HOP_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of (IPvx) next hop - for GET field */
#define SMEM_SIP5_IPVX_NEXT_HOP_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_IPVX_ROUTER_NEXT_HOP_E)

/***********************************************/
/********** IPVX UNIT END **********************/
/***********************************************/

/***********************************************/
/********** EGF_QAG UNIT START *****************/
/***********************************************/

/* the fields of the EGF_QAG Port Source Attributes Table entry format in Sip5_20 */
typedef enum{
     SMEM_SIP5_20_EGF_QAG_PORT_SOURCE_ATTRIBUTES_TABLE_FIELDS_SOURCE_PHYSICAL_PORT_LOOPBACK_PROFILE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_SOURCE_ATTRIBUTES_TABLE_FIELDS_SOURCE_PHYSICAL_PORT_TC_PROFILE_E
    ,SMEM_SIP6_EGF_QAG_PORT_SOURCE_ATTRIBUTES_TABLE_FIELDS_SOURCE_PHYSICAL_PORT_SPEED_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_SOURCE_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

}SMEM_SIP5_20_EGF_QAG_PORT_SOURCE_ATTRIBUTES_TABLE_FIELDS_ENT;

#define SMEM_SIP5_20_EGF_QAG_PORT_SOURCE_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_EGF_QAG_PORT_SOURCE_ATTRIBUTES_E)

/* the fields of the EGF_QAG Target Port Mapper Table entry format in Sip6 */
/* the table is SIP5 table, bit contained one field only - port base       */
/* from SIP5_20 cider called Port Enq Attributes                           */
typedef enum{
     SMEM_SIP5_20_EGRESS_EGF_QAG_TARGET_PORT_MAPPER_TABLE_FIELDS_PORT_BASE_E
    ,SMEM_SIP6_EGRESS_EGF_QAG_TARGET_PORT_MAPPER_TABLE_FIELDS_PORT_SPEED_E
    ,SMEM_SIP5_20_EGRESS_EGF_QAG_TARGET_PORT_MAPPER_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

}SMEM_SIP6_EGRESS_EGF_QAG_TARGET_PORT_MAPPER_TABLE_FIELDS_ENT;

#define SMEM_SIP6_EGRESS_EGF_QAG_TARGET_PORT_MAPPER_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)  \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_EGF_QAG_TARGET_PORT_MAPPER_E)


/* the fields of the EGF_QAG Port Target Attributes Table format in Sip5_20 */
typedef enum{
     SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_TARGET_PHYSICAL_PORT_LOOPBACK_PROFILE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_TARGET_PHYSICAL_PORT_TC_PROFILE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_TARGET_PHYSICAL_PORT_EVLAN_MIRRORING_ENABLE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_USE_VLAN_TAG_1_FOR_TAG_STATE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_TARGET_PHYSICAL_PORT_ENQ_PROFILE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_LOOPBACK_ENQ_PROFILE_E
    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_LOOPBACK_PORT_E

    ,SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS___LAST_VALUE___E/* used for array size */

}SMEM_SIP5_20_EGF_QAG_PORT_TARGET_ATTRIBUTES_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of EGF_QAG target port entry - for GET field */
#define SMEM_SIP5_20_EGF_QAG_PORT_TARGET_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)                   \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_EGF_QAG_PORT_TARGET_ATTRIBUTES_E)


/* the fields of the EGF_QAG Cpu Code To Loopback Mapper Table */
typedef enum{
     SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_TABLE_FIELDS_LOOPBACK_PORT_E
    ,SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_TABLE_FIELDS_TXQ_PORT_E             /* < sip5.20 */
    ,SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_TABLE_FIELDS_LOOPBACK_ENQ_PROFILE_E /* >= sip5.20 */
    ,SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_TABLE_FIELDS_LOOPBACK_ENABLE_E

    ,SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_TABLE_FIELDS___LAST_VALUE___E /* used for array size */
} SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_TABLE_FIELDS_ENT;

#define SMEM_SIP5_EGF_QAG_CPU_CODE_TO_LB_MAPPER_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)           \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_EGF_QAG_CPU_CODE_TO_LB_MAPPER_E)

/**
* @internal smemLion3UnitDfxServerDummy function
* @endinternal
*
* @brief   Allocate address type specific dummy memories -- for the DFX unit
*
* @param[in] devObjPtr                - pointer to device memory object.
* @param[in,out] unitPtr                  - pointer to the unit chunk
*                                      unitBaseAddr        - unit base address
*
* @note Need to accept access to DFX address in Lion2 without fatal error.
*
*/
void smemLion3UnitDfxServerDummy
(
    IN SKERNEL_DEVICE_OBJECT * devObjPtr,
    INOUT SMEM_UNIT_CHUNKS_STC  * unitPtr
);

/**
* @internal smemLion3BindNonPpPerUnitActiveMem function
* @endinternal
*
* @brief   bind 'non PP' per unit active memory to the unit.
*         the memory spaces are : 'PEX' and 'DFX' (and 'MBUS')
* @param[in] devObjPtr                - pointer to device object.
* @param[in,out] devMemInfoPtr            - pointer to generic device memory object.
*/
void smemLion3BindNonPpPerUnitActiveMem
(
    IN SKERNEL_DEVICE_OBJECT * devObjPtr,
    INOUT SMEM_CHT_GENERIC_DEV_MEM_INFO  * devMemInfoPtr
);

/**
* @internal smemLion3UnitDfx function
* @endinternal
*
* @brief   Allocate address type specific memories -- for the DFX unit
*
* @param[in] devObjPtr                - pointer to device memory object.
* @param[in,out] unitPtr                  - pointer to the unit chunk
* @param[in] unitBaseAddr             - unit base address
*/
void smemLion3UnitDfx
(
    IN SKERNEL_DEVICE_OBJECT * devObjPtr,
    INOUT SMEM_UNIT_CHUNKS_STC  * unitPtr,
    IN GT_U32 unitBaseAddr
);
/**
* @internal smemLion3MemoriesInitTxq function
* @endinternal
*
* @brief   init the default values of tables - TXQ unit(s)
*
* @param[in] devObjPtr                - device object PTR.
*/
void smemLion3MemoriesInitTxq
(
    IN         SKERNEL_DEVICE_OBJECT * devObjPtr
);

/**
* @internal smemLion3TodFuncUpdate_ALL function
* @endinternal
*
* @brief   update all TAI units about the TOD function triggering
*
* @param[in] devObjPtr                - Device object PTR.
*/
void smemLion3TodFuncUpdate_ALL (
    IN  SKERNEL_DEVICE_OBJECT *devObjPtr
);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif  /* __smemLion3h */
