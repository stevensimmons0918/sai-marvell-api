/*!**************************************************RND Template version 4.1
 *!                 D A T A   T Y P E   D E F I N I T I O N
 *!==========================================================================
 *$ TITLE: Router Server - General definitions for PPC
 *!--------------------------------------------------------------------------
 *$ FILENAME:
 *!--------------------------------------------------------------------------
 *$ SYSTEM, SUBSYSTEM: Router Server, General definitions
 *!--------------------------------------------------------------------------
 *$ AUTHORS: Michael,BoazK,NimrodS,MickeyR,RazA
 *!--------------------------------------------------------------------------
 *$ LATEST UPDATE: 26-Dec-2011, 9:54 AM CREATION DATE: 29-Dec-94
 *! 31/Jan/2006, MickeyR: Replacing the PKD definition to PKDT, PKDR & PKDB
 *! 26-Dec-2011, RazA: changed preprocessor definition of WORKBENCH
 *!**************************************************************************
 *!
 *!**************************************************************************
 *!
 *$ GENERAL DESCRIPTION:
 *!
 *$ REMARKS:
 *!
 *!**************************************************************************
 *!*/

#define BYTE_ORDER  BIG_ENDIAN_MEM_FORMAT
#define STACK_ORDER STACK_FROM_HIGH_TO_LOW
#define SUPPORT_64_BIT        1

#define VxWorks               1

/*! Processor type definitions. */
typedef signed char         INT_8;
typedef signed short        INT_16;
typedef signed int          INT_32;
typedef long long           INT_64;

typedef unsigned char       UINT_8;
typedef unsigned short      UINT_16;
typedef unsigned long       UINT_32;
typedef unsigned long long  UINT_64;

/* Pointers typedef for arithmetic & logic operations */
typedef INT_32              INT_ARCH_PTR;
typedef UINT_32             UINT_ARCH_PTR;

#define FILE_HANDLE FILE *

/* #define PKD */
#define PKDT
#define PKDB
#define PKDR

#define ALIGNMENT_BOUNDARY  4L

#if defined(WORKBENCH) && defined(_GNU_TOOL)
 #define PRAGMA_NOALIGN  _Pragma ("pack(1)")
 #define PRAGMA_ALIGN    _Pragma ("pack(4)")
#else
 #define PRAGMA_NOALIGN  #pragma pack(1)
 #define PRAGMA_ALIGN    #pragma pack(4)
#endif /* WORKBENCH_31 */


#define PRAGMA_NOALIGN_COND
#define PRAGMA_ALIGN_COND

#define asm __asm__

